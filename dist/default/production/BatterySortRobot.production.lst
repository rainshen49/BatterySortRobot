

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Feb 23 23:18:47 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           ; Version 1.41
    34                           ; Generated 25/01/2017 GMT
    35                           ; 
    36                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F4620 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	mediumconst
    69  00FD78                     __pmediumconst:
    70                           	opt stack 0
    71  00FD78  00                 	db	0
    72  00FD79                     _dpowers:
    73                           	opt stack 0
    74  00FD79  0001               	dw	1
    75  00FD7B  000A               	dw	10
    76  00FD7D  0064               	dw	100
    77  00FD7F  03E8               	dw	1000
    78  00FD81  2710               	dw	10000
    79  00FD83                     __end_of_dpowers:
    80                           	opt stack 0
    81  0000                     _ADRESL	set	4035
    82  0000                     _ADRESH	set	4036
    83  0000                     _ADCON0bits	set	4034
    84  0000                     _PORTC	set	3970
    85  0000                     _CCPR2L	set	4027
    86  0000                     _CCPR1L	set	4030
    87  0000                     _TRISCbits	set	3988
    88  0000                     _PR2	set	4043
    89  0000                     _PORTB	set	3969
    90  0000                     _PORTBbits	set	3969
    91  0000                     _LATDbits	set	3980
    92  0000                     _INTCONbits	set	4082
    93  0000                     _CVRCON	set	4021
    94  0000                     _ADCON1	set	4033
    95  0000                     _ADCON0	set	4034
    96  0000                     _LATE	set	3981
    97  0000                     _LATD	set	3980
    98  0000                     _LATC	set	3979
    99  0000                     _LATB	set	3978
   100  0000                     _LATA	set	3977
   101  0000                     _TRISE	set	3990
   102  0000                     _TRISD	set	3989
   103  0000                     _TRISC	set	3988
   104  0000                     _TRISB	set	3987
   105  0000                     _TRISA	set	3986
   106  0000                     _ADON	set	32272
   107  0000                     _LATC3	set	31835
   108  0000                     _LATC1	set	31833
   109  0000                     _LATC0	set	31832
   110  0000                     _CCP2M0	set	32208
   111  0000                     _CCP2M1	set	32209
   112  0000                     _CCP2M2	set	32210
   113  0000                     _CCP2M3	set	32211
   114  0000                     _CCP2Y	set	32212
   115  0000                     _CCP2X	set	32213
   116  0000                     _CCP1Y	set	32236
   117  0000                     _CCP1X	set	32237
   118  0000                     _TMR2ON	set	32338
   119  0000                     _CCP1M0	set	32232
   120  0000                     _CCP1M1	set	32233
   121  0000                     _CCP1M2	set	32234
   122  0000                     _CCP1M3	set	32235
   123  0000                     _P1M0	set	32238
   124  0000                     _P1M1	set	32239
   125  0000                     _INT1IF	set	32640
   126  0000                     _INT1IE	set	32643
   127  0000                     _ADFM	set	32263
   128  0000                     _LATC2	set	31834
   129  00FD83  53                 	db	83	;'S'
   130  00FD84  6F                 	db	111	;'o'
   131  00FD85  72                 	db	114	;'r'
   132  00FD86  74                 	db	116	;'t'
   133  00FD87  69                 	db	105	;'i'
   134  00FD88  6E                 	db	110	;'n'
   135  00FD89  67                 	db	103	;'g'
   136  00FD8A  20                 	db	32
   137  00FD8B  43                 	db	67	;'C'
   138  00FD8C  6F                 	db	111	;'o'
   139  00FD8D  6D                 	db	109	;'m'
   140  00FD8E  70                 	db	112	;'p'
   141  00FD8F  6C                 	db	108	;'l'
   142  00FD90  65                 	db	101	;'e'
   143  00FD91  74                 	db	116	;'t'
   144  00FD92  65                 	db	101	;'e'
   145  00FD93  20                 	db	32
   146  00FD94  20                 	db	32
   147  00FD95  20                 	db	32
   148  00FD96  20                 	db	32
   149  00FD97  20                 	db	32
   150  00FD98  20                 	db	32
   151  00FD99  20                 	db	32
   152  00FD9A  20                 	db	32
   153  00FD9B  20                 	db	32
   154  00FD9C  20                 	db	32
   155  00FD9D  00                 	db	0
   156  00FD9E  50                 	db	80	;'P'
   157  00FD9F  72                 	db	114	;'r'
   158  00FDA0  65                 	db	101	;'e'
   159  00FDA1  73                 	db	115	;'s'
   160  00FDA2  73                 	db	115	;'s'
   161  00FDA3  20                 	db	32
   162  00FDA4  61                 	db	97	;'a'
   163  00FDA5  20                 	db	32
   164  00FDA6  6E                 	db	110	;'n'
   165  00FDA7  75                 	db	117	;'u'
   166  00FDA8  6D                 	db	109	;'m'
   167  00FDA9  62                 	db	98	;'b'
   168  00FDAA  65                 	db	101	;'e'
   169  00FDAB  72                 	db	114	;'r'
   170  00FDAC  20                 	db	32
   171  00FDAD  20                 	db	32
   172  00FDAE  20                 	db	32
   173  00FDAF  20                 	db	32
   174  00FDB0  20                 	db	32
   175  00FDB1  20                 	db	32
   176  00FDB2  20                 	db	32
   177  00FDB3  20                 	db	32
   178  00FDB4  20                 	db	32
   179  00FDB5  20                 	db	32
   180  00FDB6  00                 	db	0
   181  00FDB7  54                 	db	84	;'T'
   182  00FDB8  69                 	db	105	;'i'
   183  00FDB9  6D                 	db	109	;'m'
   184  00FDBA  65                 	db	101	;'e'
   185  00FDBB  20                 	db	32
   186  00FDBC  45                 	db	69	;'E'
   187  00FDBD  6C                 	db	108	;'l'
   188  00FDBE  61                 	db	97	;'a'
   189  00FDBF  70                 	db	112	;'p'
   190  00FDC0  73                 	db	115	;'s'
   191  00FDC1  65                 	db	101	;'e'
   192  00FDC2  64                 	db	100	;'d'
   193  00FDC3  3A                 	db	58	;':'
   194  00FDC4  20                 	db	32
   195  00FDC5  20                 	db	32
   196  00FDC6  20                 	db	32
   197  00FDC7  20                 	db	32
   198  00FDC8  20                 	db	32
   199  00FDC9  20                 	db	32
   200  00FDCA  20                 	db	32
   201  00FDCB  20                 	db	32
   202  00FDCC  20                 	db	32
   203  00FDCD  20                 	db	32
   204  00FDCE  00                 	db	0
   205  00FDCF  54                 	db	84	;'T'
   206  00FDD0  6F                 	db	111	;'o'
   207  00FDD1  74                 	db	116	;'t'
   208  00FDD2  61                 	db	97	;'a'
   209  00FDD3  6C                 	db	108	;'l'
   210  00FDD4  20                 	db	32
   211  00FDD5  53                 	db	83	;'S'
   212  00FDD6  6F                 	db	111	;'o'
   213  00FDD7  72                 	db	114	;'r'
   214  00FDD8  74                 	db	116	;'t'
   215  00FDD9  65                 	db	101	;'e'
   216  00FDDA  64                 	db	100	;'d'
   217  00FDDB  3A                 	db	58	;':'
   218  00FDDC  20                 	db	32
   219  00FDDD  20                 	db	32
   220  00FDDE  20                 	db	32
   221  00FDDF  20                 	db	32
   222  00FDE0  20                 	db	32
   223  00FDE1  20                 	db	32
   224  00FDE2  20                 	db	32
   225  00FDE3  20                 	db	32
   226  00FDE4  20                 	db	32
   227  00FDE5  20                 	db	32
   228  00FDE6  00                 	db	0
   229  00FDE7  46                 	db	70	;'F'
   230  00FDE8  6F                 	db	111	;'o'
   231  00FDE9  72                 	db	114	;'r'
   232  00FDEA  20                 	db	32
   233  00FDEB  6D                 	db	109	;'m'
   234  00FDEC  6F                 	db	111	;'o'
   235  00FDED  72                 	db	114	;'r'
   236  00FDEE  65                 	db	101	;'e'
   237  00FDEF  20                 	db	32
   238  00FDF0  69                 	db	105	;'i'
   239  00FDF1  6E                 	db	110	;'n'
   240  00FDF2  66                 	db	102	;'f'
   241  00FDF3  6F                 	db	111	;'o'
   242  00FDF4  20                 	db	32
   243  00FDF5  20                 	db	32
   244  00FDF6  20                 	db	32
   245  00FDF7  20                 	db	32
   246  00FDF8  20                 	db	32
   247  00FDF9  20                 	db	32
   248  00FDFA  20                 	db	32
   249  00FDFB  20                 	db	32
   250  00FDFC  20                 	db	32
   251  00FDFD  20                 	db	32
   252  00FDFE  00                 	db	0
   253  00FDFF                     STR_34:
   254  00FDFF  75                 	db	117	;'u'
   255  00FE00  6E                 	db	110	;'n'
   256  00FE01  63                 	db	99	;'c'
   257  00FE02  68                 	db	104	;'h'
   258  00FE03  61                 	db	97	;'a'
   259  00FE04  72                 	db	114	;'r'
   260  00FE05  67                 	db	103	;'g'
   261  00FE06  65                 	db	101	;'e'
   262  00FE07  64                 	db	100	;'d'
   263  00FE08  20                 	db	32
   264  00FE09  41                 	db	65	;'A'
   265  00FE0A  41                 	db	65	;'A'
   266  00FE0B  20                 	db	32
   267  00FE0C  20                 	db	32
   268  00FE0D  20                 	db	32
   269  00FE0E  20                 	db	32
   270  00FE0F  20                 	db	32
   271  00FE10  20                 	db	32
   272  00FE11  20                 	db	32
   273  00FE12  20                 	db	32
   274  00FE13  20                 	db	32
   275  00FE14  20                 	db	32
   276  00FE15  00                 	db	0
   277  00FE16                     STR_40:
   278  00FE16  75                 	db	117	;'u'
   279  00FE17  6E                 	db	110	;'n'
   280  00FE18  63                 	db	99	;'c'
   281  00FE19  68                 	db	104	;'h'
   282  00FE1A  61                 	db	97	;'a'
   283  00FE1B  72                 	db	114	;'r'
   284  00FE1C  67                 	db	103	;'g'
   285  00FE1D  65                 	db	101	;'e'
   286  00FE1E  64                 	db	100	;'d'
   287  00FE1F  20                 	db	32
   288  00FE20  39                 	db	57	;'9'
   289  00FE21  56                 	db	86	;'V'
   290  00FE22  20                 	db	32
   291  00FE23  20                 	db	32
   292  00FE24  20                 	db	32
   293  00FE25  20                 	db	32
   294  00FE26  20                 	db	32
   295  00FE27  20                 	db	32
   296  00FE28  20                 	db	32
   297  00FE29  20                 	db	32
   298  00FE2A  20                 	db	32
   299  00FE2B  20                 	db	32
   300  00FE2C  00                 	db	0
   301  00FE2D  73                 	db	115	;'s'
   302  00FE2E  6D                 	db	109	;'m'
   303  00FE2F  61                 	db	97	;'a'
   304  00FE30  6C                 	db	108	;'l'
   305  00FE31  6C                 	db	108	;'l'
   306  00FE32  4E                 	db	78	;'N'
   307  00FE33  6F                 	db	111	;'o'
   308  00FE34  73                 	db	115	;'s'
   309  00FE35  65                 	db	101	;'e'
   310  00FE36  20                 	db	32
   311  00FE37  74                 	db	116	;'t'
   312  00FE38  6F                 	db	111	;'o'
   313  00FE39  20                 	db	32
   314  00FE3A  20                 	db	32
   315  00FE3B  20                 	db	32
   316  00FE3C  20                 	db	32
   317  00FE3D  20                 	db	32
   318  00FE3E  20                 	db	32
   319  00FE3F  20                 	db	32
   320  00FE40  20                 	db	32
   321  00FE41  20                 	db	32
   322  00FE42  20                 	db	32
   323  00FE43  00                 	db	0
   324  00FE44  25                 	db	37
   325  00FE45  64                 	db	100	;'d'
   326  00FE46  20                 	db	32
   327  00FE47  62                 	db	98	;'b'
   328  00FE48  61                 	db	97	;'a'
   329  00FE49  74                 	db	116	;'t'
   330  00FE4A  74                 	db	116	;'t'
   331  00FE4B  65                 	db	101	;'e'
   332  00FE4C  72                 	db	114	;'r'
   333  00FE4D  69                 	db	105	;'i'
   334  00FE4E  65                 	db	101	;'e'
   335  00FE4F  73                 	db	115	;'s'
   336  00FE50  20                 	db	32
   337  00FE51  20                 	db	32
   338  00FE52  20                 	db	32
   339  00FE53  20                 	db	32
   340  00FE54  20                 	db	32
   341  00FE55  20                 	db	32
   342  00FE56  20                 	db	32
   343  00FE57  20                 	db	32
   344  00FE58  20                 	db	32
   345  00FE59  20                 	db	32
   346  00FE5A  00                 	db	0
   347  00FE5B                     STR_43:
   348  00FE5B  75                 	db	117	;'u'
   349  00FE5C  6E                 	db	110	;'n'
   350  00FE5D  63                 	db	99	;'c'
   351  00FE5E  68                 	db	104	;'h'
   352  00FE5F  61                 	db	97	;'a'
   353  00FE60  72                 	db	114	;'r'
   354  00FE61  67                 	db	103	;'g'
   355  00FE62  65                 	db	101	;'e'
   356  00FE63  64                 	db	100	;'d'
   357  00FE64  20                 	db	32
   358  00FE65  43                 	db	67	;'C'
   359  00FE66  20                 	db	32
   360  00FE67  20                 	db	32
   361  00FE68  20                 	db	32
   362  00FE69  20                 	db	32
   363  00FE6A  20                 	db	32
   364  00FE6B  20                 	db	32
   365  00FE6C  20                 	db	32
   366  00FE6D  20                 	db	32
   367  00FE6E  20                 	db	32
   368  00FE6F  20                 	db	32
   369  00FE70  00                 	db	0
   370  00FE71  52                 	db	82	;'R'
   371  00FE72  6F                 	db	111	;'o'
   372  00FE73  74                 	db	116	;'t'
   373  00FE74  61                 	db	97	;'a'
   374  00FE75  74                 	db	116	;'t'
   375  00FE76  69                 	db	105	;'i'
   376  00FE77  6E                 	db	110	;'n'
   377  00FE78  67                 	db	103	;'g'
   378  00FE79  20                 	db	32
   379  00FE7A  58                 	db	88	;'X'
   380  00FE7B  73                 	db	115	;'s'
   381  00FE7C  20                 	db	32
   382  00FE7D  20                 	db	32
   383  00FE7E  20                 	db	32
   384  00FE7F  20                 	db	32
   385  00FE80  20                 	db	32
   386  00FE81  20                 	db	32
   387  00FE82  20                 	db	32
   388  00FE83  20                 	db	32
   389  00FE84  20                 	db	32
   390  00FE85  20                 	db	32
   391  00FE86  00                 	db	0
   392  00FE87                     STR_4:
   393  00FE87  50                 	db	80	;'P'
   394  00FE88  72                 	db	114	;'r'
   395  00FE89  65                 	db	101	;'e'
   396  00FE8A  73                 	db	115	;'s'
   397  00FE8B  73                 	db	115	;'s'
   398  00FE8C  20                 	db	32
   399  00FE8D  53                 	db	83	;'S'
   400  00FE8E  74                 	db	116	;'t'
   401  00FE8F  61                 	db	97	;'a'
   402  00FE90  72                 	db	114	;'r'
   403  00FE91  74                 	db	116	;'t'
   404  00FE92  20                 	db	32
   405  00FE93  20                 	db	32
   406  00FE94  20                 	db	32
   407  00FE95  20                 	db	32
   408  00FE96  20                 	db	32
   409  00FE97  20                 	db	32
   410  00FE98  20                 	db	32
   411  00FE99  20                 	db	32
   412  00FE9A  20                 	db	32
   413  00FE9B  20                 	db	32
   414  00FE9C  00                 	db	0
   415  00FE9D  62                 	db	98	;'b'
   416  00FE9E  69                 	db	105	;'i'
   417  00FE9F  67                 	db	103	;'g'
   418  00FEA0  4E                 	db	78	;'N'
   419  00FEA1  6F                 	db	111	;'o'
   420  00FEA2  73                 	db	115	;'s'
   421  00FEA3  65                 	db	101	;'e'
   422  00FEA4  20                 	db	32
   423  00FEA5  74                 	db	116	;'t'
   424  00FEA6  6F                 	db	111	;'o'
   425  00FEA7  20                 	db	32
   426  00FEA8  20                 	db	32
   427  00FEA9  20                 	db	32
   428  00FEAA  20                 	db	32
   429  00FEAB  20                 	db	32
   430  00FEAC  20                 	db	32
   431  00FEAD  20                 	db	32
   432  00FEAE  20                 	db	32
   433  00FEAF  20                 	db	32
   434  00FEB0  20                 	db	32
   435  00FEB1  00                 	db	0
   436  00FEB2  55                 	db	85	;'U'
   437  00FEB3  6E                 	db	110	;'n'
   438  00FEB4  63                 	db	99	;'c'
   439  00FEB5  68                 	db	104	;'h'
   440  00FEB6  61                 	db	97	;'a'
   441  00FEB7  72                 	db	114	;'r'
   442  00FEB8  67                 	db	103	;'g'
   443  00FEB9  65                 	db	101	;'e'
   444  00FEBA  64                 	db	100	;'d'
   445  00FEBB  3A                 	db	58	;':'
   446  00FEBC  20                 	db	32
   447  00FEBD  20                 	db	32
   448  00FEBE  20                 	db	32
   449  00FEBF  20                 	db	32
   450  00FEC0  20                 	db	32
   451  00FEC1  20                 	db	32
   452  00FEC2  20                 	db	32
   453  00FEC3  20                 	db	32
   454  00FEC4  20                 	db	32
   455  00FEC5  20                 	db	32
   456  00FEC6  00                 	db	0
   457  00FEC7  41                 	db	65	;'A'
   458  00FEC8  41                 	db	65	;'A'
   459  00FEC9  20                 	db	32
   460  00FECA  53                 	db	83	;'S'
   461  00FECB  6F                 	db	111	;'o'
   462  00FECC  72                 	db	114	;'r'
   463  00FECD  74                 	db	116	;'t'
   464  00FECE  65                 	db	101	;'e'
   465  00FECF  64                 	db	100	;'d'
   466  00FED0  3A                 	db	58	;':'
   467  00FED1  20                 	db	32
   468  00FED2  20                 	db	32
   469  00FED3  20                 	db	32
   470  00FED4  20                 	db	32
   471  00FED5  20                 	db	32
   472  00FED6  20                 	db	32
   473  00FED7  20                 	db	32
   474  00FED8  20                 	db	32
   475  00FED9  20                 	db	32
   476  00FEDA  20                 	db	32
   477  00FEDB  00                 	db	0
   478  00FEDC  39                 	db	57	;'9'
   479  00FEDD  56                 	db	86	;'V'
   480  00FEDE  20                 	db	32
   481  00FEDF  53                 	db	83	;'S'
   482  00FEE0  6F                 	db	111	;'o'
   483  00FEE1  72                 	db	114	;'r'
   484  00FEE2  74                 	db	116	;'t'
   485  00FEE3  65                 	db	101	;'e'
   486  00FEE4  64                 	db	100	;'d'
   487  00FEE5  3A                 	db	58	;':'
   488  00FEE6  20                 	db	32
   489  00FEE7  20                 	db	32
   490  00FEE8  20                 	db	32
   491  00FEE9  20                 	db	32
   492  00FEEA  20                 	db	32
   493  00FEEB  20                 	db	32
   494  00FEEC  20                 	db	32
   495  00FEED  20                 	db	32
   496  00FEEE  20                 	db	32
   497  00FEEF  20                 	db	32
   498  00FEF0  00                 	db	0
   499  00FEF1  25                 	db	37
   500  00FEF2  64                 	db	100	;'d'
   501  00FEF3  20                 	db	32
   502  00FEF4  73                 	db	115	;'s'
   503  00FEF5  65                 	db	101	;'e'
   504  00FEF6  63                 	db	99	;'c'
   505  00FEF7  6F                 	db	111	;'o'
   506  00FEF8  6E                 	db	110	;'n'
   507  00FEF9  64                 	db	100	;'d'
   508  00FEFA  73                 	db	115	;'s'
   509  00FEFB  20                 	db	32
   510  00FEFC  20                 	db	32
   511  00FEFD  20                 	db	32
   512  00FEFE  20                 	db	32
   513  00FEFF  20                 	db	32
   514  00FF00  20                 	db	32
   515  00FF01  20                 	db	32
   516  00FF02  20                 	db	32
   517  00FF03  20                 	db	32
   518  00FF04  20                 	db	32
   519  00FF05  00                 	db	0
   520  00FF06  53                 	db	83	;'S'
   521  00FF07  6F                 	db	111	;'o'
   522  00FF08  72                 	db	114	;'r'
   523  00FF09  74                 	db	116	;'t'
   524  00FF0A  69                 	db	105	;'i'
   525  00FF0B  6E                 	db	110	;'n'
   526  00FF0C  67                 	db	103	;'g'
   527  00FF0D  2E                 	db	46
   528  00FF0E  2E                 	db	46
   529  00FF0F  2E                 	db	46
   530  00FF10  20                 	db	32
   531  00FF11  20                 	db	32
   532  00FF12  20                 	db	32
   533  00FF13  20                 	db	32
   534  00FF14  20                 	db	32
   535  00FF15  20                 	db	32
   536  00FF16  20                 	db	32
   537  00FF17  20                 	db	32
   538  00FF18  20                 	db	32
   539  00FF19  20                 	db	32
   540  00FF1A  00                 	db	0
   541  00FF1B                     STR_23:
   542  00FF1B  75                 	db	117	;'u'
   543  00FF1C  6E                 	db	110	;'n'
   544  00FF1D  63                 	db	99	;'c'
   545  00FF1E  68                 	db	104	;'h'
   546  00FF1F  61                 	db	97	;'a'
   547  00FF20  72                 	db	114	;'r'
   548  00FF21  67                 	db	103	;'g'
   549  00FF22  65                 	db	101	;'e'
   550  00FF23  64                 	db	100	;'d'
   551  00FF24  20                 	db	32
   552  00FF25  20                 	db	32
   553  00FF26  20                 	db	32
   554  00FF27  20                 	db	32
   555  00FF28  20                 	db	32
   556  00FF29  20                 	db	32
   557  00FF2A  20                 	db	32
   558  00FF2B  20                 	db	32
   559  00FF2C  20                 	db	32
   560  00FF2D  20                 	db	32
   561  00FF2E  00                 	db	0
   562  00FF2F  43                 	db	67	;'C'
   563  00FF30  20                 	db	32
   564  00FF31  53                 	db	83	;'S'
   565  00FF32  6F                 	db	111	;'o'
   566  00FF33  72                 	db	114	;'r'
   567  00FF34  74                 	db	116	;'t'
   568  00FF35  65                 	db	101	;'e'
   569  00FF36  64                 	db	100	;'d'
   570  00FF37  3A                 	db	58	;':'
   571  00FF38  20                 	db	32
   572  00FF39  20                 	db	32
   573  00FF3A  20                 	db	32
   574  00FF3B  20                 	db	32
   575  00FF3C  20                 	db	32
   576  00FF3D  20                 	db	32
   577  00FF3E  20                 	db	32
   578  00FF3F  20                 	db	32
   579  00FF40  20                 	db	32
   580  00FF41  20                 	db	32
   581  00FF42  00                 	db	0
   582  00FF43                     STR_5:
   583  00FF43  45                 	db	69	;'E'
   584  00FF44  6D                 	db	109	;'m'
   585  00FF45  65                 	db	101	;'e'
   586  00FF46  72                 	db	114	;'r'
   587  00FF47  67                 	db	103	;'g'
   588  00FF48  65                 	db	101	;'e'
   589  00FF49  6E                 	db	110	;'n'
   590  00FF4A  63                 	db	99	;'c'
   591  00FF4B  79                 	db	121	;'y'
   592  00FF4C  20                 	db	32
   593  00FF4D  20                 	db	32
   594  00FF4E  20                 	db	32
   595  00FF4F  20                 	db	32
   596  00FF50  20                 	db	32
   597  00FF51  20                 	db	32
   598  00FF52  20                 	db	32
   599  00FF53  20                 	db	32
   600  00FF54  20                 	db	32
   601  00FF55  20                 	db	32
   602  00FF56  00                 	db	0
   603  00FF57                     STR_3:
   604  00FF57  57                 	db	87	;'W'
   605  00FF58  65                 	db	101	;'e'
   606  00FF59  6C                 	db	108	;'l'
   607  00FF5A  63                 	db	99	;'c'
   608  00FF5B  6F                 	db	111	;'o'
   609  00FF5C  6D                 	db	109	;'m'
   610  00FF5D  65                 	db	101	;'e'
   611  00FF5E  21                 	db	33
   612  00FF5F  20                 	db	32
   613  00FF60  20                 	db	32
   614  00FF61  20                 	db	32
   615  00FF62  20                 	db	32
   616  00FF63  20                 	db	32
   617  00FF64  20                 	db	32
   618  00FF65  20                 	db	32
   619  00FF66  20                 	db	32
   620  00FF67  20                 	db	32
   621  00FF68  20                 	db	32
   622  00FF69  00                 	db	0
   623  00FF6A                     STR_30:
   624  00FF6A  53                 	db	83	;'S'
   625  00FF6B  74                 	db	116	;'t'
   626  00FF6C  6F                 	db	111	;'o'
   627  00FF6D  70                 	db	112	;'p'
   628  00FF6E  70                 	db	112	;'p'
   629  00FF6F  65                 	db	101	;'e'
   630  00FF70  64                 	db	100	;'d'
   631  00FF71  20                 	db	32
   632  00FF72  20                 	db	32
   633  00FF73  20                 	db	32
   634  00FF74  20                 	db	32
   635  00FF75  20                 	db	32
   636  00FF76  20                 	db	32
   637  00FF77  20                 	db	32
   638  00FF78  20                 	db	32
   639  00FF79  20                 	db	32
   640  00FF7A  20                 	db	32
   641  00FF7B  00                 	db	0
   642  00FF7C  6E                 	db	110	;'n'
   643  00FF7D  6F                 	db	111	;'o'
   644  00FF7E  20                 	db	32
   645  00FF7F  41                 	db	65	;'A'
   646  00FF80  41                 	db	65	;'A'
   647  00FF81  20                 	db	32
   648  00FF82  20                 	db	32
   649  00FF83  20                 	db	32
   650  00FF84  20                 	db	32
   651  00FF85  20                 	db	32
   652  00FF86  20                 	db	32
   653  00FF87  20                 	db	32
   654  00FF88  20                 	db	32
   655  00FF89  20                 	db	32
   656  00FF8A  20                 	db	32
   657  00FF8B  00                 	db	0
   658  00FF8C  25                 	db	37
   659  00FF8D  64                 	db	100	;'d'
   660  00FF8E  20                 	db	32
   661  00FF8F  72                 	db	114	;'r'
   662  00FF90  65                 	db	101	;'e'
   663  00FF91  63                 	db	99	;'c'
   664  00FF92  65                 	db	101	;'e'
   665  00FF93  69                 	db	105	;'i'
   666  00FF94  76                 	db	118	;'v'
   667  00FF95  65                 	db	101	;'e'
   668  00FF96  64                 	db	100	;'d'
   669  00FF97  20                 	db	32
   670  00FF98  20                 	db	32
   671  00FF99  20                 	db	32
   672  00FF9A  20                 	db	32
   673  00FF9B  00                 	db	0
   674  00FF9C                     STR_2:
   675  00FF9C  77                 	db	119	;'w'
   676  00FF9D  69                 	db	105	;'i'
   677  00FF9E  64                 	db	100	;'d'
   678  00FF9F  74                 	db	116	;'t'
   679  00FFA0  68                 	db	104	;'h'
   680  00FFA1  3A                 	db	58	;':'
   681  00FFA2  20                 	db	32
   682  00FFA3  25                 	db	37
   683  00FFA4  64                 	db	100	;'d'
   684  00FFA5  20                 	db	32
   685  00FFA6  75                 	db	117	;'u'
   686  00FFA7  73                 	db	115	;'s'
   687  00FFA8  20                 	db	32
   688  00FFA9  20                 	db	32
   689  00FFAA  20                 	db	32
   690  00FFAB  00                 	db	0
   691  00FFAC  6E                 	db	110	;'n'
   692  00FFAD  6F                 	db	111	;'o'
   693  00FFAE  20                 	db	32
   694  00FFAF  39                 	db	57	;'9'
   695  00FFB0  20                 	db	32
   696  00FFB1  20                 	db	32
   697  00FFB2  20                 	db	32
   698  00FFB3  20                 	db	32
   699  00FFB4  20                 	db	32
   700  00FFB5  20                 	db	32
   701  00FFB6  20                 	db	32
   702  00FFB7  20                 	db	32
   703  00FFB8  20                 	db	32
   704  00FFB9  20                 	db	32
   705  00FFBA  00                 	db	0
   706  00FFBB  41                 	db	65	;'A'
   707  00FFBC  41                 	db	65	;'A'
   708  00FFBD  3A                 	db	58	;':'
   709  00FFBE  20                 	db	32
   710  00FFBF  20                 	db	32
   711  00FFC0  20                 	db	32
   712  00FFC1  20                 	db	32
   713  00FFC2  20                 	db	32
   714  00FFC3  20                 	db	32
   715  00FFC4  20                 	db	32
   716  00FFC5  20                 	db	32
   717  00FFC6  20                 	db	32
   718  00FFC7  20                 	db	32
   719  00FFC8  00                 	db	0
   720  00FFC9  63                 	db	99	;'c'
   721  00FFCA  68                 	db	104	;'h'
   722  00FFCB  61                 	db	97	;'a'
   723  00FFCC  6E                 	db	110	;'n'
   724  00FFCD  6E                 	db	110	;'n'
   725  00FFCE  65                 	db	101	;'e'
   726  00FFCF  6C                 	db	108	;'l'
   727  00FFD0  20                 	db	32
   728  00FFD1  25                 	db	37
   729  00FFD2  64                 	db	100	;'d'
   730  00FFD3  20                 	db	32
   731  00FFD4  20                 	db	32
   732  00FFD5  20                 	db	32
   733  00FFD6  00                 	db	0
   734  00FFD7  56                 	db	86	;'V'
   735  00FFD8  33                 	db	51	;'3'
   736  00FFD9  20                 	db	32
   737  00FFDA  20                 	db	32
   738  00FFDB  20                 	db	32
   739  00FFDC  20                 	db	32
   740  00FFDD  20                 	db	32
   741  00FFDE  20                 	db	32
   742  00FFDF  20                 	db	32
   743  00FFE0  20                 	db	32
   744  00FFE1  20                 	db	32
   745  00FFE2  20                 	db	32
   746  00FFE3  00                 	db	0
   747  00FFE4  39                 	db	57	;'9'
   748  00FFE5  3A                 	db	58	;':'
   749  00FFE6  20                 	db	32
   750  00FFE7  20                 	db	32
   751  00FFE8  20                 	db	32
   752  00FFE9  20                 	db	32
   753  00FFEA  20                 	db	32
   754  00FFEB  20                 	db	32
   755  00FFEC  20                 	db	32
   756  00FFED  20                 	db	32
   757  00FFEE  20                 	db	32
   758  00FFEF  20                 	db	32
   759  00FFF0  00                 	db	0
   760  00FFF1                     STR_14:
   761  00FFF1  25                 	db	37
   762  00FFF2  64                 	db	100	;'d'
   763  00FFF3  20                 	db	32
   764  00FFF4  20                 	db	32
   765  00FFF5  20                 	db	32
   766  00FFF6  20                 	db	32
   767  00FFF7  20                 	db	32
   768  00FFF8  20                 	db	32
   769  00FFF9  20                 	db	32
   770  00FFFA  20                 	db	32
   771  00FFFB  20                 	db	32
   772  00FFFC  20                 	db	32
   773  00FFFD  00                 	db	0
   774  0000                     
   775                           ; #config settings
   776  00FFFE  00                 	db	0	; dummy byte at the end
   777  0000                     
   778                           	psect	cinit
   779  0005EA                     __pcinit:
   780                           	opt stack 0
   781  0005EA                     start_initialization:
   782                           	opt stack 0
   783  0005EA                     __initialization:
   784                           	opt stack 0
   785                           
   786                           ; Clear objects allocated to COMRAM (8 bytes)
   787  0005EA  EE00  F048         	lfsr	0,__pbssCOMRAM
   788  0005EE  0E08               	movlw	8
   789  0005F0                     clear_0:
   790  0005F0  6AEE               	clrf	postinc0,c
   791  0005F2  06E8               	decf	wreg,f,c
   792  0005F4  E1FD               	bnz	clear_0
   793  0005F6                     end_of_initialization:
   794                           	opt stack 0
   795  0005F6                     __end_of__initialization:
   796                           	opt stack 0
   797  0005F6  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   798  0005F8  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   799  0005FA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   800  0005FC  6EF8               	movwf	tblptru,c
   801  0005FE  0100               	movlb	0
   802  000600  EFE2  F002         	goto	_main	;jump to C main() function
   803                           tblptru	equ	0xFF8
   804                           postinc0	equ	0xFEE
   805                           wreg	equ	0xFE8
   806                           
   807                           	psect	bssCOMRAM
   808  000048                     __pbssCOMRAM:
   809                           	opt stack 0
   810  000048                     mainloop@F3208:
   811                           	opt stack 0
   812  000048                     	ds	8
   813                           tblptru	equ	0xFF8
   814                           postinc0	equ	0xFEE
   815                           wreg	equ	0xFE8
   816                           
   817                           	psect	cstackCOMRAM
   818  000001                     __pcstackCOMRAM:
   819                           	opt stack 0
   820  000001                     ?i2___lwdiv:
   821                           	opt stack 0
   822  000001                     i2lcdNibble@temp:
   823                           	opt stack 0
   824  000001                     i2___lwdiv@dividend:
   825                           	opt stack 0
   826                           
   827                           ; 2 bytes @ 0x0
   828  000001                     	ds	1
   829  000002                     i2lcdNibble@data:
   830                           	opt stack 0
   831                           
   832                           ; 1 bytes @ 0x1
   833  000002                     	ds	1
   834  000003                     i2lcdInst@data:
   835                           	opt stack 0
   836  000003                     i2putch@data:
   837                           	opt stack 0
   838  000003                     i2___lwdiv@divisor:
   839                           	opt stack 0
   840                           
   841                           ; 2 bytes @ 0x2
   842  000003                     	ds	2
   843  000005                     i2___lwdiv@quotient:
   844                           	opt stack 0
   845                           
   846                           ; 2 bytes @ 0x4
   847  000005                     	ds	2
   848  000007                     i2___lwdiv@counter:
   849                           	opt stack 0
   850                           
   851                           ; 1 bytes @ 0x6
   852  000007                     	ds	1
   853  000008                     ?i2___lwmod:
   854                           	opt stack 0
   855  000008                     i2___lwmod@dividend:
   856                           	opt stack 0
   857                           
   858                           ; 2 bytes @ 0x7
   859  000008                     	ds	2
   860  00000A                     i2___lwmod@divisor:
   861                           	opt stack 0
   862                           
   863                           ; 2 bytes @ 0x9
   864  00000A                     	ds	2
   865  00000C                     i2___lwmod@counter:
   866                           	opt stack 0
   867                           
   868                           ; 1 bytes @ 0xB
   869  00000C                     	ds	1
   870  00000D                     ?i2_printf:
   871                           	opt stack 0
   872  00000D                     i2printf@f:
   873                           	opt stack 0
   874                           
   875                           ; 2 bytes @ 0xC
   876  00000D                     	ds	2
   877  00000F                     ??i2_printf:
   878                           
   879                           ; 1 bytes @ 0xE
   880  00000F                     	ds	1
   881  000010                     i2printf@ap:
   882                           	opt stack 0
   883                           
   884                           ; 2 bytes @ 0xF
   885  000010                     	ds	2
   886  000012                     i2printf@flag:
   887                           	opt stack 0
   888                           
   889                           ; 1 bytes @ 0x11
   890  000012                     	ds	1
   891  000013                     i2printf@prec:
   892                           	opt stack 0
   893                           
   894                           ; 1 bytes @ 0x12
   895  000013                     	ds	1
   896  000014                     i2printf@val:
   897                           	opt stack 0
   898                           
   899                           ; 2 bytes @ 0x13
   900  000014                     	ds	2
   901  000016                     i2printf@c:
   902                           	opt stack 0
   903                           
   904                           ; 1 bytes @ 0x15
   905  000016                     	ds	1
   906  000017                     ??_keypressed:
   907                           
   908                           ; 1 bytes @ 0x16
   909  000017                     	ds	14
   910  000025                     keypressed@keypress:
   911                           	opt stack 0
   912                           
   913                           ; 1 bytes @ 0x24
   914  000025                     	ds	1
   915  000026                     ?_captureKeypad:
   916                           	opt stack 0
   917  000026                     ?___lwdiv:
   918                           	opt stack 0
   919  000026                     lcdNibble@temp:
   920                           	opt stack 0
   921  000026                     ___lwdiv@dividend:
   922                           	opt stack 0
   923                           
   924                           ; 2 bytes @ 0x25
   925  000026                     	ds	1
   926  000027                     lcdNibble@data:
   927                           	opt stack 0
   928                           
   929                           ; 1 bytes @ 0x26
   930  000027                     	ds	1
   931  000028                     lcdInst@data:
   932                           	opt stack 0
   933  000028                     putch@data:
   934                           	opt stack 0
   935  000028                     captureKeypad@keypress:
   936                           	opt stack 0
   937  000028                     ___lwdiv@divisor:
   938                           	opt stack 0
   939                           
   940                           ; 2 bytes @ 0x27
   941  000028                     	ds	1
   942  000029                     ??_initLCD:
   943                           
   944                           ; 1 bytes @ 0x28
   945  000029                     	ds	1
   946  00002A                     ___lwdiv@quotient:
   947                           	opt stack 0
   948                           
   949                           ; 2 bytes @ 0x29
   950  00002A                     	ds	2
   951  00002C                     ___lwdiv@counter:
   952                           	opt stack 0
   953                           
   954                           ; 1 bytes @ 0x2B
   955  00002C                     	ds	1
   956  00002D                     ?___lwmod:
   957                           	opt stack 0
   958  00002D                     ___lwmod@dividend:
   959                           	opt stack 0
   960                           
   961                           ; 2 bytes @ 0x2C
   962  00002D                     	ds	2
   963  00002F                     ___lwmod@divisor:
   964                           	opt stack 0
   965                           
   966                           ; 2 bytes @ 0x2E
   967  00002F                     	ds	2
   968  000031                     ___lwmod@counter:
   969                           	opt stack 0
   970                           
   971                           ; 1 bytes @ 0x30
   972  000031                     	ds	1
   973  000032                     ?_printf:
   974                           	opt stack 0
   975  000032                     printf@f:
   976                           	opt stack 0
   977                           
   978                           ; 2 bytes @ 0x31
   979  000032                     	ds	4
   980  000036                     ??_printf:
   981                           
   982                           ; 1 bytes @ 0x35
   983  000036                     	ds	1
   984  000037                     printf@ap:
   985                           	opt stack 0
   986                           
   987                           ; 2 bytes @ 0x36
   988  000037                     	ds	2
   989  000039                     printf@flag:
   990                           	opt stack 0
   991                           
   992                           ; 1 bytes @ 0x38
   993  000039                     	ds	1
   994  00003A                     printf@prec:
   995                           	opt stack 0
   996                           
   997                           ; 1 bytes @ 0x39
   998  00003A                     	ds	1
   999  00003B                     printf@val:
  1000                           	opt stack 0
  1001                           
  1002                           ; 2 bytes @ 0x3A
  1003  00003B                     	ds	2
  1004  00003D                     printf@c:
  1005                           	opt stack 0
  1006                           
  1007                           ; 1 bytes @ 0x3C
  1008  00003D                     	ds	1
  1009  00003E                     ??_simulate:
  1010                           
  1011                           ; 1 bytes @ 0x3D
  1012  00003E                     	ds	1
  1013  00003F                     simulate@onus:
  1014                           	opt stack 0
  1015                           
  1016                           ; 2 bytes @ 0x3E
  1017  00003F                     	ds	2
  1018  000041                     simulate@i:
  1019                           	opt stack 0
  1020                           
  1021                           ; 2 bytes @ 0x40
  1022  000041                     	ds	2
  1023  000043                     
  1024                           ; 2 bytes @ 0x42
  1025  000043                     	ds	2
  1026  000045                     
  1027                           ; 3 bytes @ 0x44
  1028  000045                     	ds	3
  1029  000048                     tblptru	equ	0xFF8
  1030                           postinc0	equ	0xFEE
  1031                           wreg	equ	0xFE8
  1032                           
  1033                           ; 1 bytes @ 0x47
  1034 ;;
  1035 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1036 ;;
  1037 ;; *************** function _main *****************
  1038 ;; Defined at:
  1039 ;;		line 159 in file "main.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;  argc            2   66[COMRAM] int 
  1042 ;;  argv            3   68[COMRAM] PTR PTR unsigned char 
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;		None
  1045 ;; Return value:  Size  Location     Type
  1046 ;;                  2   66[COMRAM] int 
  1047 ;; Registers used:
  1048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1049 ;; Tracked objects:
  1050 ;;		On entry : 0/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1054 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1057 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1058 ;;Total ram usage:        5 bytes
  1059 ;; Hardware stack levels required when called:    9
  1060 ;; This function calls:
  1061 ;;		_initialize
  1062 ;;		_printf
  1063 ;;		_simulate
  1064 ;; This function is called by:
  1065 ;;		Startup code after reset
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           	psect	text0
  1070  0005C4                     __ptext0:
  1071                           	opt stack 0
  1072  0005C4                     _main:
  1073                           	opt stack 22
  1074                           
  1075                           ;main.c: 160: initialize();
  1076                           
  1077                           ;incstack = 0
  1078  0005C4  ECC3  F002         	call	_initialize	;wreg free
  1079                           
  1080                           ;main.c: 163: printf((unsigned char *) "Welcome!          ");
  1081  0005C8  0E57               	movlw	low STR_3
  1082  0005CA  6E32               	movwf	printf@f,c
  1083  0005CC  0EFF               	movlw	high STR_3
  1084  0005CE  6E33               	movwf	printf@f+1,c
  1085  0005D0  EC09  F000         	call	_printf	;wreg free
  1086                           
  1087                           ;main.c: 173: printf("Press Start          ");
  1088  0005D4  0E87               	movlw	low STR_4
  1089  0005D6  6E32               	movwf	printf@f,c
  1090  0005D8  0EFE               	movlw	high STR_4
  1091  0005DA  6E33               	movwf	printf@f+1,c
  1092  0005DC  EC09  F000         	call	_printf	;wreg free
  1093                           
  1094                           ;main.c: 177: simulate();
  1095  0005E0  EC7B  F001         	call	_simulate	;wreg free
  1096  0005E4  00FF               	reset		;# 
  1097  0005E6  EF07  F000         	goto	start
  1098  0005EA                     __end_of_main:
  1099                           	opt stack 0
  1100                           tblptru	equ	0xFF8
  1101                           postinc0	equ	0xFEE
  1102                           wreg	equ	0xFE8
  1103                           
  1104 ;; *************** function _simulate *****************
  1105 ;; Defined at:
  1106 ;;		line 73 in file "main.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;		None
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;  i               2   64[COMRAM] int 
  1111 ;;  onus            2   62[COMRAM] int 
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  1    wreg      void 
  1114 ;; Registers used:
  1115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1122 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1123 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1124 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1125 ;;Total ram usage:        5 bytes
  1126 ;; Hardware stack levels used:    1
  1127 ;; Hardware stack levels required when called:    8
  1128 ;; This function calls:
  1129 ;;		_captureKeypad
  1130 ;;		_lcdInst
  1131 ;;		_printf
  1132 ;; This function is called by:
  1133 ;;		_main
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           	psect	text1
  1138  0002F6                     __ptext1:
  1139                           	opt stack 0
  1140  0002F6                     _simulate:
  1141                           	opt stack 22
  1142  0002F6                     
  1143                           ;main.c: 146: captureKeypad();
  1144  0002F6  EC02  F003         	call	_captureKeypad	;wreg free
  1145                           
  1146                           ;main.c: 147: int onus = 500;
  1147  0002FA  0E01               	movlw	1
  1148  0002FC  6E40               	movwf	simulate@onus+1,c
  1149  0002FE  0EF4               	movlw	244
  1150  000300  6E3F               	movwf	simulate@onus,c
  1151                           
  1152                           ;main.c: 148: lcdInst(0b10000000);;
  1153  000302  0E80               	movlw	128
  1154  000304  EC20  F003         	call	_lcdInst
  1155                           
  1156                           ;main.c: 149: printf("width: %d us   ", onus);
  1157  000308  0E9C               	movlw	low STR_2
  1158  00030A  6E32               	movwf	printf@f,c
  1159  00030C  0EFF               	movlw	high STR_2
  1160  00030E  6E33               	movwf	printf@f+1,c
  1161  000310  C03F  F034         	movff	simulate@onus,?_printf+2
  1162  000314  C040  F035         	movff	simulate@onus+1,?_printf+3
  1163  000318  EC09  F000         	call	_printf	;wreg free
  1164                           
  1165                           ;main.c: 150: for (int i = 0; i < 1000; i++) {
  1166  00031C  0E00               	movlw	0
  1167  00031E  6E42               	movwf	simulate@i+1,c
  1168  000320  0E00               	movlw	0
  1169  000322  6E41               	movwf	simulate@i,c
  1170  000324                     l2000:
  1171  000324  BE42               	btfsc	simulate@i+1,7,c
  1172  000326  D006               	goto	l85
  1173  000328  0EE8               	movlw	232
  1174  00032A  5C41               	subwf	simulate@i,w,c
  1175  00032C  0E03               	movlw	3
  1176  00032E  5842               	subwfb	simulate@i+1,w,c
  1177  000330  B0D8               	btfsc	status,0,c
  1178  000332  D7E1               	goto	l1990
  1179  000334                     l85:
  1180                           
  1181                           ;main.c: 151: LATC2 = 1 ^ LATC2;
  1182  000334  B48B               	btfsc	3979,2,c	;volatile
  1183  000336  D002               	goto	u1010
  1184  000338  848B               	bsf	3979,2,c	;volatile
  1185  00033A  D001               	goto	l2004
  1186  00033C                     u1010:
  1187  00033C  948B               	bcf	3979,2,c	;volatile
  1188  00033E                     l2004:
  1189                           
  1190                           ;main.c: 152: _delay((unsigned long)((1000)*(8000000/4000000.0)));
  1191  00033E  0E03               	movlw	3
  1192  000340  6E3E               	movwf	??_simulate& (0+255),c
  1193  000342  0E98               	movlw	152
  1194  000344                     u1277:
  1195  000344  2EE8               	decfsz	wreg,f,c
  1196  000346  D7FE               	bra	u1277
  1197  000348  2E3E               	decfsz	??_simulate& (0+255),f,c
  1198  00034A  D7FC               	bra	u1277
  1199                           
  1200                           ;main.c: 153: LATC2 = 1 ^ LATC2;
  1201  00034C  B48B               	btfsc	3979,2,c	;volatile
  1202  00034E  D002               	goto	u1030
  1203  000350  848B               	bsf	3979,2,c	;volatile
  1204  000352  D001               	goto	u1045
  1205  000354                     u1030:
  1206  000354  948B               	bcf	3979,2,c	;volatile
  1207  000356                     u1045:
  1208                           
  1209                           ;main.c: 154: _delay((unsigned long)((2000)*(8000000/4000000.0)));
  1210  000356  0E06               	movlw	6
  1211  000358  6E3E               	movwf	??_simulate& (0+255),c
  1212  00035A  0E30               	movlw	48
  1213  00035C                     u1287:
  1214  00035C  2EE8               	decfsz	wreg,f,c
  1215  00035E  D7FE               	bra	u1287
  1216  000360  2E3E               	decfsz	??_simulate& (0+255),f,c
  1217  000362  D7FC               	bra	u1287
  1218  000364  D000               	nop2	
  1219  000366  4A41               	infsnz	simulate@i,f,c
  1220  000368  2A42               	incf	simulate@i+1,f,c
  1221  00036A  D7DC               	goto	l2000
  1222  00036C                     __end_of_simulate:
  1223                           	opt stack 0
  1224                           tblptru	equ	0xFF8
  1225                           postinc0	equ	0xFEE
  1226                           wreg	equ	0xFE8
  1227                           status	equ	0xFD8
  1228                           
  1229 ;; *************** function _printf *****************
  1230 ;; Defined at:
  1231 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;  f               2   49[COMRAM] PTR const unsigned char 
  1234 ;;		 -> STR_43(22), STR_42(20), STR_41(15), STR_40(23), 
  1235 ;;		 -> STR_39(21), STR_38(14), STR_37(13), STR_36(13), 
  1236 ;;		 -> STR_35(16), STR_34(23), STR_33(21), STR_32(14), 
  1237 ;;		 -> STR_31(16), STR_30(18), STR_29(20), STR_28(13), 
  1238 ;;		 -> STR_27(23), STR_26(20), STR_25(13), STR_24(12), 
  1239 ;;		 -> STR_23(20), STR_22(21), STR_21(22), STR_20(13), 
  1240 ;;		 -> STR_19(21), STR_18(13), STR_17(21), STR_16(13), 
  1241 ;;		 -> STR_15(20), STR_14(13), STR_13(21), STR_12(23), 
  1242 ;;		 -> STR_11(24), STR_10(21), STR_9(24), STR_8(24), 
  1243 ;;		 -> STR_7(25), STR_6(27), STR_5(20), STR_4(22), 
  1244 ;;		 -> STR_3(19), STR_2(16), STR_1(21), 
  1245 ;; Auto vars:     Size  Location     Type
  1246 ;;  tmpval          4    0        struct .
  1247 ;;  cp              3    0        PTR const unsigned char 
  1248 ;;  val             2   58[COMRAM] unsigned int 
  1249 ;;  ap              2   54[COMRAM] PTR void [1]
  1250 ;;		 -> ?i2_printf(2), ?_printf(2), 
  1251 ;;  len             2    0        unsigned int 
  1252 ;;  c               1   60[COMRAM] char 
  1253 ;;  prec            1   57[COMRAM] char 
  1254 ;;  flag            1   56[COMRAM] unsigned char 
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  2   49[COMRAM] int 
  1257 ;; Registers used:
  1258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1264 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1265 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1266 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1267 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1268 ;;Total ram usage:       12 bytes
  1269 ;; Hardware stack levels used:    1
  1270 ;; Hardware stack levels required when called:    7
  1271 ;; This function calls:
  1272 ;;		___lwdiv
  1273 ;;		___lwmod
  1274 ;;		_putch
  1275 ;; This function is called by:
  1276 ;;		_simulate
  1277 ;;		_main
  1278 ;;		_mainloop
  1279 ;;		_showInfo
  1280 ;;		_moveXMotors
  1281 ;;		_moveBigNose
  1282 ;;		_moveSmallNose
  1283 ;;		_checkV
  1284 ;;		_checkAA
  1285 ;;		_checkC9V
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           	psect	text2
  1290  000012                     __ptext2:
  1291                           	opt stack 0
  1292  000012                     _printf:
  1293                           	opt stack 22
  1294                           
  1295                           ;doprnt.c: 466: va_list ap;
  1296                           ;doprnt.c: 499: signed char c;
  1297                           ;doprnt.c: 506: signed char prec;
  1298                           ;doprnt.c: 508: unsigned char flag;
  1299                           ;doprnt.c: 523: union {
  1300                           ;doprnt.c: 524: unsigned long vd;
  1301                           ;doprnt.c: 525: double integ;
  1302                           ;doprnt.c: 526: } tmpval;
  1303                           ;doprnt.c: 528: unsigned int val;
  1304                           ;doprnt.c: 529: unsigned len;
  1305                           ;doprnt.c: 530: const char * cp;
  1306                           ;doprnt.c: 533: *ap = __va_start();
  1307                           
  1308                           ;incstack = 0
  1309  000012  0E34               	movlw	low (?_printf+2)
  1310  000014  6E37               	movwf	printf@ap,c
  1311  000016  0E00               	movlw	high (?_printf+2)
  1312  000018  6E38               	movwf	printf@ap+1,c
  1313                           
  1314                           ;doprnt.c: 536: while(c = *f++) {
  1315  00001A  D082               	goto	l1922
  1316  00001C                     l1874:
  1317                           
  1318                           ;doprnt.c: 538: if(c != '%')
  1319  00001C  0E25               	movlw	37
  1320  00001E  183D               	xorwf	printf@c,w,c
  1321  000020  B4D8               	btfsc	status,2,c
  1322  000022  D004               	goto	l1878
  1323                           
  1324                           ;doprnt.c: 540: {
  1325                           ;doprnt.c: 541: (putch(c) );
  1326  000024  503D               	movf	printf@c,w,c
  1327  000026  EC1A  F003         	call	_putch
  1328                           
  1329                           ;doprnt.c: 542: continue;
  1330  00002A  D07A               	goto	l1922
  1331  00002C                     l1878:
  1332                           
  1333                           ;doprnt.c: 543: }
  1334                           ;doprnt.c: 548: flag = 0;
  1335  00002C  0E00               	movlw	0
  1336  00002E  6E39               	movwf	printf@flag,c
  1337                           
  1338                           ;doprnt.c: 635: switch(c = *f++) {
  1339  000030  D004               	goto	l1884
  1340  000032                     l1880:
  1341                           
  1342                           ;doprnt.c: 809: (putch(c) );
  1343  000032  503D               	movf	printf@c,w,c
  1344  000034  EC1A  F003         	call	_putch
  1345                           
  1346                           ;doprnt.c: 810: continue;
  1347  000038  D073               	goto	l1922
  1348  00003A                     l1884:
  1349  00003A  C032  FFF6         	movff	printf@f,tblptrl
  1350  00003E  C033  FFF7         	movff	printf@f+1,tblptrh
  1351  000042  4A32               	infsnz	printf@f,f,c
  1352  000044  2A33               	incf	printf@f+1,f,c
  1353  000046                     	if	0	;tblptru may be non-zero
  1354  000046                     	endif
  1355  000046                     	if	0	;tblptru may be non-zero
  1356  000046                     	endif
  1357  000046  0008               	tblrd		*
  1358  000048  CFF5 F03D          	movff	tablat,printf@c
  1359  00004C  503D               	movf	printf@c,w,c
  1360                           
  1361                           ; Switch size 1, requested type "space"
  1362                           ; Number of cases is 3, Range of values is 0 to 105
  1363                           ; switch strategies available:
  1364                           ; Name         Instructions Cycles
  1365                           ; simple_byte           10     6 (average)
  1366                           ;	Chosen strategy is simple_byte
  1367  00004E  0A00               	xorlw	0	; case 0
  1368  000050  B4D8               	btfsc	status,2,c
  1369  000052  0012               	return	
  1370  000054  0A64               	xorlw	100	; case 100
  1371  000056  B4D8               	btfsc	status,2,c
  1372  000058  D003               	goto	l1886
  1373  00005A  0A0D               	xorlw	13	; case 105
  1374  00005C  A4D8               	btfss	status,2,c
  1375  00005E  D7E9               	goto	l1880
  1376  000060                     l1886:
  1377                           
  1378                           ;doprnt.c: 1253: {
  1379                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1380  000060  C037  FFD9         	movff	printf@ap,fsr2l
  1381  000064  C038  FFDA         	movff	printf@ap+1,fsr2h
  1382  000068  CFDE F03B          	movff	postinc2,printf@val
  1383  00006C  CFDD F03C          	movff	postdec2,printf@val+1
  1384  000070  0E02               	movlw	2
  1385  000072  2637               	addwf	printf@ap,f,c
  1386  000074  0E00               	movlw	0
  1387  000076  2238               	addwfc	printf@ap+1,f,c
  1388                           
  1389                           ;doprnt.c: 1261: if((int)val < 0) {
  1390  000078  AE3C               	btfss	printf@val+1,7,c
  1391  00007A  D006               	goto	l1896
  1392                           
  1393                           ;doprnt.c: 1262: flag |= 0x03;
  1394  00007C  0E03               	movlw	3
  1395  00007E  1239               	iorwf	printf@flag,f,c
  1396                           
  1397                           ;doprnt.c: 1263: val = -val;
  1398  000080  6C3B               	negf	printf@val,c
  1399  000082  1E3C               	comf	printf@val+1,f,c
  1400  000084  B0D8               	btfsc	status,0,c
  1401  000086  2A3C               	incf	printf@val+1,f,c
  1402  000088                     l1896:
  1403                           
  1404                           ;doprnt.c: 1264: }
  1405                           ;doprnt.c: 1266: }
  1406                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1407  000088  0E01               	movlw	1
  1408  00008A  6E3D               	movwf	printf@c,c
  1409  00008C                     l1898:
  1410  00008C  0E05               	movlw	5
  1411  00008E  183D               	xorwf	printf@c,w,c
  1412  000090  B4D8               	btfsc	status,2,c
  1413  000092  D012               	goto	l1910
  1414                           
  1415                           ;doprnt.c: 1306: if(val < dpowers[c])
  1416  000094  503D               	movf	printf@c,w,c
  1417  000096  0D02               	mullw	2
  1418  000098  0E79               	movlw	low _dpowers
  1419  00009A  24F3               	addwf	prodl,w,c
  1420  00009C  6EF6               	movwf	tblptrl,c
  1421  00009E  0EFD               	movlw	high _dpowers
  1422  0000A0  20F4               	addwfc	prodh,w,c
  1423  0000A2  6EF7               	movwf	tblptrh,c
  1424  0000A4                     	if	0	;There are less than 3 active tblptr bytes
  1425  0000A4                     	endif
  1426  0000A4  0009               	tblrd		*+
  1427  0000A6  50F5               	movf	tablat,w,c
  1428  0000A8  5C3B               	subwf	printf@val,w,c
  1429  0000AA  0009               	tblrd		*+
  1430  0000AC  50F5               	movf	tablat,w,c
  1431  0000AE  583C               	subwfb	printf@val+1,w,c
  1432  0000B0  A0D8               	btfss	status,0,c
  1433  0000B2  D002               	goto	l1910
  1434                           
  1435                           ;doprnt.c: 1307: break;
  1436  0000B4  2A3D               	incf	printf@c,f,c
  1437  0000B6  D7EA               	goto	l1898
  1438  0000B8                     l1910:
  1439                           
  1440                           ;doprnt.c: 1422: {
  1441                           ;doprnt.c: 1438: if(flag & 0x03)
  1442  0000B8  C039  F036         	movff	printf@flag,??_printf
  1443  0000BC  0E03               	movlw	3
  1444  0000BE  1636               	andwf	??_printf,f,c
  1445  0000C0  B4D8               	btfsc	status,2,c
  1446  0000C2  D003               	goto	l1914
  1447                           
  1448                           ;doprnt.c: 1439: (putch('-') );
  1449  0000C4  0E2D               	movlw	45
  1450  0000C6  EC1A  F003         	call	_putch
  1451  0000CA                     l1914:
  1452                           
  1453                           ;doprnt.c: 1469: }
  1454                           ;doprnt.c: 1472: prec = c;
  1455  0000CA  C03D  F03A         	movff	printf@c,printf@prec
  1456                           
  1457                           ;doprnt.c: 1474: while(prec--) {
  1458  0000CE  D024               	goto	l1920
  1459  0000D0                     l1916:
  1460                           
  1461                           ;doprnt.c: 1478: {
  1462                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1463  0000D0  503A               	movf	printf@prec,w,c
  1464  0000D2  0D02               	mullw	2
  1465  0000D4  0E79               	movlw	low _dpowers
  1466  0000D6  24F3               	addwf	prodl,w,c
  1467  0000D8  6EF6               	movwf	tblptrl,c
  1468  0000DA  0EFD               	movlw	high _dpowers
  1469  0000DC  20F4               	addwfc	prodh,w,c
  1470  0000DE  6EF7               	movwf	tblptrh,c
  1471  0000E0                     	if	0	;There are less than 3 active tblptr bytes
  1472  0000E0                     	endif
  1473  0000E0  0009               	tblrd		*+
  1474  0000E2  CFF5 F028          	movff	tablat,___lwdiv@divisor
  1475  0000E6  000A               	tblrd		*-
  1476  0000E8  CFF5 F029          	movff	tablat,___lwdiv@divisor+1
  1477  0000EC  C03B  F026         	movff	printf@val,___lwdiv@dividend
  1478  0000F0  C03C  F027         	movff	printf@val+1,___lwdiv@dividend+1
  1479  0000F4  EC0C  F002         	call	___lwdiv	;wreg free
  1480  0000F8  C026  F02D         	movff	?___lwdiv,___lwmod@dividend
  1481  0000FC  C027  F02E         	movff	?___lwdiv+1,___lwmod@dividend+1
  1482  000100  0E00               	movlw	0
  1483  000102  6E30               	movwf	___lwmod@divisor+1,c
  1484  000104  0E0A               	movlw	10
  1485  000106  6E2F               	movwf	___lwmod@divisor,c
  1486  000108  EC81  F002         	call	___lwmod	;wreg free
  1487  00010C  502D               	movf	?___lwmod,w,c
  1488  00010E  0F30               	addlw	48
  1489  000110  6E3D               	movwf	printf@c,c
  1490                           
  1491                           ;doprnt.c: 1523: }
  1492                           ;doprnt.c: 1524: (putch(c) );
  1493  000112  503D               	movf	printf@c,w,c
  1494  000114  EC1A  F003         	call	_putch
  1495  000118                     l1920:
  1496  000118  063A               	decf	printf@prec,f,c
  1497  00011A  283A               	incf	printf@prec,w,c
  1498  00011C  A4D8               	btfss	status,2,c
  1499  00011E  D7D8               	goto	l1916
  1500  000120                     l1922:
  1501  000120  C032  FFF6         	movff	printf@f,tblptrl
  1502  000124  C033  FFF7         	movff	printf@f+1,tblptrh
  1503  000128  4A32               	infsnz	printf@f,f,c
  1504  00012A  2A33               	incf	printf@f+1,f,c
  1505  00012C                     	if	0	;tblptru may be non-zero
  1506  00012C                     	endif
  1507  00012C                     	if	0	;tblptru may be non-zero
  1508  00012C                     	endif
  1509  00012C  0008               	tblrd		*
  1510  00012E  CFF5 F03D          	movff	tablat,printf@c
  1511  000132  503D               	movf	printf@c,w,c
  1512  000134  B4D8               	btfsc	status,2,c
  1513  000136  0012               	return	
  1514  000138  D771               	goto	l1874
  1515  00013A                     __end_of_printf:
  1516                           	opt stack 0
  1517                           tblptru	equ	0xFF8
  1518                           tblptrh	equ	0xFF7
  1519                           tblptrl	equ	0xFF6
  1520                           tablat	equ	0xFF5
  1521                           prodh	equ	0xFF4
  1522                           prodl	equ	0xFF3
  1523                           postinc0	equ	0xFEE
  1524                           wreg	equ	0xFE8
  1525                           postinc2	equ	0xFDE
  1526                           postdec2	equ	0xFDD
  1527                           fsr2h	equ	0xFDA
  1528                           fsr2l	equ	0xFD9
  1529                           status	equ	0xFD8
  1530                           
  1531 ;; *************** function _putch *****************
  1532 ;; Defined at:
  1533 ;;		line 26 in file "lcd.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;  data            1    wreg     unsigned char 
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;  data            1   39[COMRAM] unsigned char 
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      void 
  1540 ;; Registers used:
  1541 ;;		wreg, status,2, status,0, cstack
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1548 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1550 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1551 ;;Total ram usage:        1 bytes
  1552 ;; Hardware stack levels used:    1
  1553 ;; Hardware stack levels required when called:    6
  1554 ;; This function calls:
  1555 ;;		_lcdNibble
  1556 ;; This function is called by:
  1557 ;;		_printf
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           	psect	text3
  1562  000634                     __ptext3:
  1563                           	opt stack 0
  1564  000634                     _putch:
  1565                           	opt stack 22
  1566                           
  1567                           ;incstack = 0
  1568                           ;putch@data stored from wreg
  1569  000634  6E28               	movwf	putch@data,c
  1570                           
  1571                           ;lcd.c: 27: LATDbits.LATD2 = 1;
  1572  000636  848C               	bsf	3980,2,c	;volatile
  1573                           
  1574                           ;lcd.c: 28: lcdNibble(data);
  1575  000638  5028               	movf	putch@data,w,c
  1576  00063A  ECB6  F001         	call	_lcdNibble
  1577  00063E  0012               	return		;funcret
  1578  000640                     __end_of_putch:
  1579                           	opt stack 0
  1580                           tblptru	equ	0xFF8
  1581                           tblptrh	equ	0xFF7
  1582                           tblptrl	equ	0xFF6
  1583                           tablat	equ	0xFF5
  1584                           prodh	equ	0xFF4
  1585                           prodl	equ	0xFF3
  1586                           postinc0	equ	0xFEE
  1587                           wreg	equ	0xFE8
  1588                           postinc2	equ	0xFDE
  1589                           postdec2	equ	0xFDD
  1590                           fsr2h	equ	0xFDA
  1591                           fsr2l	equ	0xFD9
  1592                           status	equ	0xFD8
  1593                           
  1594 ;; *************** function ___lwmod *****************
  1595 ;; Defined at:
  1596 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;  dividend        2   44[COMRAM] unsigned int 
  1599 ;;  divisor         2   46[COMRAM] unsigned int 
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;  counter         1   48[COMRAM] unsigned char 
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  2   44[COMRAM] unsigned int 
  1604 ;; Registers used:
  1605 ;;		wreg, status,2, status,0
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1611 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1612 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1614 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1615 ;;Total ram usage:        5 bytes
  1616 ;; Hardware stack levels used:    1
  1617 ;; Hardware stack levels required when called:    5
  1618 ;; This function calls:
  1619 ;;		Nothing
  1620 ;; This function is called by:
  1621 ;;		_printf
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           	psect	text4
  1626  000502                     __ptext4:
  1627                           	opt stack 0
  1628  000502                     ___lwmod:
  1629                           	opt stack 23
  1630                           
  1631                           ;incstack = 0
  1632  000502  502F               	movf	___lwmod@divisor,w,c
  1633  000504  1030               	iorwf	___lwmod@divisor+1,w,c
  1634  000506  B4D8               	btfsc	status,2,c
  1635  000508  D018               	goto	l811
  1636  00050A  0E01               	movlw	1
  1637  00050C  6E31               	movwf	___lwmod@counter,c
  1638  00050E  D004               	goto	l1820
  1639  000510                     l1818:
  1640  000510  90D8               	bcf	status,0,c
  1641  000512  362F               	rlcf	___lwmod@divisor,f,c
  1642  000514  3630               	rlcf	___lwmod@divisor+1,f,c
  1643  000516  2A31               	incf	___lwmod@counter,f,c
  1644  000518                     l1820:
  1645  000518  AE30               	btfss	___lwmod@divisor+1,7,c
  1646  00051A  D7FA               	goto	l1818
  1647  00051C                     l1822:
  1648  00051C  502F               	movf	___lwmod@divisor,w,c
  1649  00051E  5C2D               	subwf	___lwmod@dividend,w,c
  1650  000520  5030               	movf	___lwmod@divisor+1,w,c
  1651  000522  582E               	subwfb	___lwmod@dividend+1,w,c
  1652  000524  A0D8               	btfss	status,0,c
  1653  000526  D004               	goto	l1826
  1654  000528  502F               	movf	___lwmod@divisor,w,c
  1655  00052A  5E2D               	subwf	___lwmod@dividend,f,c
  1656  00052C  5030               	movf	___lwmod@divisor+1,w,c
  1657  00052E  5A2E               	subwfb	___lwmod@dividend+1,f,c
  1658  000530                     l1826:
  1659  000530  90D8               	bcf	status,0,c
  1660  000532  3230               	rrcf	___lwmod@divisor+1,f,c
  1661  000534  322F               	rrcf	___lwmod@divisor,f,c
  1662  000536  2E31               	decfsz	___lwmod@counter,f,c
  1663  000538  D7F1               	goto	l1822
  1664  00053A                     l811:
  1665  00053A  C02D  F02D         	movff	___lwmod@dividend,?___lwmod
  1666  00053E  C02E  F02E         	movff	___lwmod@dividend+1,?___lwmod+1
  1667  000542  0012               	return		;funcret
  1668  000544                     __end_of___lwmod:
  1669                           	opt stack 0
  1670                           tblptru	equ	0xFF8
  1671                           tblptrh	equ	0xFF7
  1672                           tblptrl	equ	0xFF6
  1673                           tablat	equ	0xFF5
  1674                           prodh	equ	0xFF4
  1675                           prodl	equ	0xFF3
  1676                           postinc0	equ	0xFEE
  1677                           wreg	equ	0xFE8
  1678                           postinc2	equ	0xFDE
  1679                           postdec2	equ	0xFDD
  1680                           fsr2h	equ	0xFDA
  1681                           fsr2l	equ	0xFD9
  1682                           status	equ	0xFD8
  1683                           
  1684 ;; *************** function ___lwdiv *****************
  1685 ;; Defined at:
  1686 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;  dividend        2   37[COMRAM] unsigned int 
  1689 ;;  divisor         2   39[COMRAM] unsigned int 
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;  quotient        2   41[COMRAM] unsigned int 
  1692 ;;  counter         1   43[COMRAM] unsigned char 
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  2   37[COMRAM] unsigned int 
  1695 ;; Registers used:
  1696 ;;		wreg, status,2, status,0
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1702 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1703 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1705 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1706 ;;Total ram usage:        7 bytes
  1707 ;; Hardware stack levels used:    1
  1708 ;; Hardware stack levels required when called:    5
  1709 ;; This function calls:
  1710 ;;		Nothing
  1711 ;; This function is called by:
  1712 ;;		_printf
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           	psect	text5
  1717  000418                     __ptext5:
  1718                           	opt stack 0
  1719  000418                     ___lwdiv:
  1720                           	opt stack 23
  1721                           
  1722                           ;incstack = 0
  1723  000418  0E00               	movlw	0
  1724  00041A  6E2B               	movwf	___lwdiv@quotient+1,c
  1725  00041C  0E00               	movlw	0
  1726  00041E  6E2A               	movwf	___lwdiv@quotient,c
  1727  000420  5028               	movf	___lwdiv@divisor,w,c
  1728  000422  1029               	iorwf	___lwdiv@divisor+1,w,c
  1729  000424  B4D8               	btfsc	status,2,c
  1730  000426  D01C               	goto	l801
  1731  000428  0E01               	movlw	1
  1732  00042A  6E2C               	movwf	___lwdiv@counter,c
  1733  00042C  D004               	goto	l1800
  1734  00042E                     l1798:
  1735  00042E  90D8               	bcf	status,0,c
  1736  000430  3628               	rlcf	___lwdiv@divisor,f,c
  1737  000432  3629               	rlcf	___lwdiv@divisor+1,f,c
  1738  000434  2A2C               	incf	___lwdiv@counter,f,c
  1739  000436                     l1800:
  1740  000436  AE29               	btfss	___lwdiv@divisor+1,7,c
  1741  000438  D7FA               	goto	l1798
  1742  00043A                     l1802:
  1743  00043A  90D8               	bcf	status,0,c
  1744  00043C  362A               	rlcf	___lwdiv@quotient,f,c
  1745  00043E  362B               	rlcf	___lwdiv@quotient+1,f,c
  1746  000440  5028               	movf	___lwdiv@divisor,w,c
  1747  000442  5C26               	subwf	___lwdiv@dividend,w,c
  1748  000444  5029               	movf	___lwdiv@divisor+1,w,c
  1749  000446  5827               	subwfb	___lwdiv@dividend+1,w,c
  1750  000448  A0D8               	btfss	status,0,c
  1751  00044A  D005               	goto	l1810
  1752  00044C  5028               	movf	___lwdiv@divisor,w,c
  1753  00044E  5E26               	subwf	___lwdiv@dividend,f,c
  1754  000450  5029               	movf	___lwdiv@divisor+1,w,c
  1755  000452  5A27               	subwfb	___lwdiv@dividend+1,f,c
  1756  000454  802A               	bsf	___lwdiv@quotient,0,c
  1757  000456                     l1810:
  1758  000456  90D8               	bcf	status,0,c
  1759  000458  3229               	rrcf	___lwdiv@divisor+1,f,c
  1760  00045A  3228               	rrcf	___lwdiv@divisor,f,c
  1761  00045C  2E2C               	decfsz	___lwdiv@counter,f,c
  1762  00045E  D7ED               	goto	l1802
  1763  000460                     l801:
  1764  000460  C02A  F026         	movff	___lwdiv@quotient,?___lwdiv
  1765  000464  C02B  F027         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1766  000468  0012               	return		;funcret
  1767  00046A                     __end_of___lwdiv:
  1768                           	opt stack 0
  1769                           tblptru	equ	0xFF8
  1770                           tblptrh	equ	0xFF7
  1771                           tblptrl	equ	0xFF6
  1772                           tablat	equ	0xFF5
  1773                           prodh	equ	0xFF4
  1774                           prodl	equ	0xFF3
  1775                           postinc0	equ	0xFEE
  1776                           wreg	equ	0xFE8
  1777                           postinc2	equ	0xFDE
  1778                           postdec2	equ	0xFDD
  1779                           fsr2h	equ	0xFDA
  1780                           fsr2l	equ	0xFD9
  1781                           status	equ	0xFD8
  1782                           
  1783 ;; *************** function _captureKeypad *****************
  1784 ;; Defined at:
  1785 ;;		line 3 in file "modules.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;		None
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;  keypress        1   39[COMRAM] unsigned char 
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  2   37[COMRAM] unsigned int 
  1792 ;; Registers used:
  1793 ;;		wreg, status,2, status,0
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1799 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1800 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1802 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1803 ;;Total ram usage:        3 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; Hardware stack levels required when called:    5
  1806 ;; This function calls:
  1807 ;;		Nothing
  1808 ;; This function is called by:
  1809 ;;		_simulate
  1810 ;;		_showInfo
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           	psect	text6
  1815  000604                     __ptext6:
  1816                           	opt stack 0
  1817  000604                     _captureKeypad:
  1818                           	opt stack 24
  1819  000604                     l138:
  1820  000604  A281               	btfss	3969,1,c	;volatile
  1821  000606  D7FE               	goto	l138
  1822                           
  1823                           ;modules.c: 5: unsigned char keypress = (PORTB & 0xF0) >> 4;
  1824  000608  3881               	swapf	3969,w,c	;volatile
  1825  00060A  0B0F               	andlw	15
  1826  00060C  0B0F               	andlw	15
  1827  00060E  6E28               	movwf	captureKeypad@keypress,c
  1828  000610                     l141:
  1829  000610  B281               	btfsc	3969,1,c	;volatile
  1830  000612  D7FE               	goto	l141
  1831                           
  1832                           ;modules.c: 7: INT1IF = 0;
  1833  000614  90F0               	bcf	intcon3,0,c	;volatile
  1834                           
  1835                           ;modules.c: 9: return keypress;
  1836  000616  C028  F026         	movff	captureKeypad@keypress,?_captureKeypad
  1837  00061A  6A27               	clrf	?_captureKeypad+1,c
  1838  00061C  0012               	return		;funcret
  1839  00061E                     __end_of_captureKeypad:
  1840                           	opt stack 0
  1841                           tblptru	equ	0xFF8
  1842                           tblptrh	equ	0xFF7
  1843                           tblptrl	equ	0xFF6
  1844                           tablat	equ	0xFF5
  1845                           prodh	equ	0xFF4
  1846                           prodl	equ	0xFF3
  1847                           intcon3	equ	0xFF0
  1848                           postinc0	equ	0xFEE
  1849                           wreg	equ	0xFE8
  1850                           postinc2	equ	0xFDE
  1851                           postdec2	equ	0xFDD
  1852                           fsr2h	equ	0xFDA
  1853                           fsr2l	equ	0xFD9
  1854                           status	equ	0xFD8
  1855                           
  1856 ;; *************** function _initialize *****************
  1857 ;; Defined at:
  1858 ;;		line 15 in file "main.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;		None
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;		None
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  1    wreg      void 
  1865 ;; Registers used:
  1866 ;;		wreg, status,2, status,0, cstack
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1876 ;;Total ram usage:        0 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    8
  1879 ;; This function calls:
  1880 ;;		_initLCD
  1881 ;;		_lcdInst
  1882 ;; This function is called by:
  1883 ;;		_main
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           	psect	text7
  1888  000586                     __ptext7:
  1889                           	opt stack 0
  1890  000586                     _initialize:
  1891                           	opt stack 22
  1892                           
  1893                           ;main.c: 16: TRISA = 0xFF;
  1894                           
  1895                           ;incstack = 0
  1896  000586  6892               	setf	3986,c	;volatile
  1897                           
  1898                           ;main.c: 17: TRISB = 0xFF;
  1899  000588  6893               	setf	3987,c	;volatile
  1900                           
  1901                           ;main.c: 18: TRISC = 0x00;
  1902  00058A  0E00               	movlw	0
  1903  00058C  6E94               	movwf	3988,c	;volatile
  1904                           
  1905                           ;main.c: 19: TRISD = 0x00;
  1906  00058E  0E00               	movlw	0
  1907  000590  6E95               	movwf	3989,c	;volatile
  1908                           
  1909                           ;main.c: 20: TRISE = 0x00;
  1910  000592  0E00               	movlw	0
  1911  000594  6E96               	movwf	3990,c	;volatile
  1912                           
  1913                           ;main.c: 22: LATA = 0x00;
  1914  000596  0E00               	movlw	0
  1915  000598  6E89               	movwf	3977,c	;volatile
  1916                           
  1917                           ;main.c: 23: LATB = 0x00;
  1918  00059A  0E00               	movlw	0
  1919  00059C  6E8A               	movwf	3978,c	;volatile
  1920                           
  1921                           ;main.c: 24: LATC = 0x00;
  1922  00059E  0E00               	movlw	0
  1923  0005A0  6E8B               	movwf	3979,c	;volatile
  1924                           
  1925                           ;main.c: 25: LATD = 0x00;
  1926  0005A2  0E00               	movlw	0
  1927  0005A4  6E8C               	movwf	3980,c	;volatile
  1928                           
  1929                           ;main.c: 26: LATE = 0x00;
  1930  0005A6  0E00               	movlw	0
  1931  0005A8  6E8D               	movwf	3981,c	;volatile
  1932                           
  1933                           ;main.c: 29: ADCON0 = 0x00;
  1934  0005AA  0E00               	movlw	0
  1935  0005AC  6EC2               	movwf	4034,c	;volatile
  1936                           
  1937                           ;main.c: 30: ADCON1 = 0x0B;
  1938  0005AE  0E0B               	movlw	11
  1939  0005B0  6EC1               	movwf	4033,c	;volatile
  1940                           
  1941                           ;main.c: 31: CVRCON = 0x00;
  1942  0005B2  0E00               	movlw	0
  1943  0005B4  6EB5               	movwf	4021,c	;volatile
  1944                           
  1945                           ;main.c: 32: ADFM = 1;
  1946  0005B6  8EC0               	bsf	4032,7,c	;volatile
  1947                           
  1948                           ;main.c: 34: initLCD();
  1949  0005B8  EC5E  F002         	call	_initLCD	;wreg free
  1950                           
  1951                           ;main.c: 36: lcdInst(0b10000000);;
  1952  0005BC  0E80               	movlw	128
  1953  0005BE  EC20  F003         	call	_lcdInst
  1954  0005C2  0012               	return		;funcret
  1955  0005C4                     __end_of_initialize:
  1956                           	opt stack 0
  1957                           tblptru	equ	0xFF8
  1958                           tblptrh	equ	0xFF7
  1959                           tblptrl	equ	0xFF6
  1960                           tablat	equ	0xFF5
  1961                           prodh	equ	0xFF4
  1962                           prodl	equ	0xFF3
  1963                           intcon3	equ	0xFF0
  1964                           postinc0	equ	0xFEE
  1965                           wreg	equ	0xFE8
  1966                           postinc2	equ	0xFDE
  1967                           postdec2	equ	0xFDD
  1968                           fsr2h	equ	0xFDA
  1969                           fsr2l	equ	0xFD9
  1970                           status	equ	0xFD8
  1971                           
  1972 ;; *************** function _initLCD *****************
  1973 ;; Defined at:
  1974 ;;		line 10 in file "lcd.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;		None
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;		None
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  1    wreg      void 
  1981 ;; Registers used:
  1982 ;;		wreg, status,2, status,0, cstack
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1990 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1991 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1992 ;;Total ram usage:        1 bytes
  1993 ;; Hardware stack levels used:    1
  1994 ;; Hardware stack levels required when called:    7
  1995 ;; This function calls:
  1996 ;;		_lcdInst
  1997 ;; This function is called by:
  1998 ;;		_initialize
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           	psect	text8
  2003  0004BC                     __ptext8:
  2004                           	opt stack 0
  2005  0004BC                     _initLCD:
  2006                           	opt stack 22
  2007                           
  2008                           ;lcd.c: 11: _delay((unsigned long)((15)*(8000000/4000.0)));
  2009                           
  2010                           ;incstack = 0
  2011  0004BC  0E27               	movlw	39
  2012  0004BE  6E29               	movwf	??_initLCD& (0+255),c
  2013  0004C0  0EF5               	movlw	245
  2014  0004C2                     u1297:
  2015  0004C2  2EE8               	decfsz	wreg,f,c
  2016  0004C4  D7FE               	bra	u1297
  2017  0004C6  2E29               	decfsz	??_initLCD& (0+255),f,c
  2018  0004C8  D7FC               	bra	u1297
  2019  0004CA  F000               	nop	
  2020                           
  2021                           ;lcd.c: 12: lcdInst(0b00110011);
  2022  0004CC  0E33               	movlw	51
  2023  0004CE  EC20  F003         	call	_lcdInst
  2024                           
  2025                           ;lcd.c: 13: lcdInst(0b00110010);
  2026  0004D2  0E32               	movlw	50
  2027  0004D4  EC20  F003         	call	_lcdInst
  2028                           
  2029                           ;lcd.c: 14: lcdInst(0b00101000);
  2030  0004D8  0E28               	movlw	40
  2031  0004DA  EC20  F003         	call	_lcdInst
  2032                           
  2033                           ;lcd.c: 15: lcdInst(0b00001111);
  2034  0004DE  0E0F               	movlw	15
  2035  0004E0  EC20  F003         	call	_lcdInst
  2036                           
  2037                           ;lcd.c: 16: lcdInst(0b00000110);
  2038  0004E4  0E06               	movlw	6
  2039  0004E6  EC20  F003         	call	_lcdInst
  2040                           
  2041                           ;lcd.c: 17: lcdInst(0b00000001);
  2042  0004EA  0E01               	movlw	1
  2043  0004EC  EC20  F003         	call	_lcdInst
  2044                           
  2045                           ;lcd.c: 18: _delay((unsigned long)((15)*(8000000/4000.0)));
  2046  0004F0  0E27               	movlw	39
  2047  0004F2  6E29               	movwf	??_initLCD& (0+255),c
  2048  0004F4  0EF5               	movlw	245
  2049  0004F6                     u1307:
  2050  0004F6  2EE8               	decfsz	wreg,f,c
  2051  0004F8  D7FE               	bra	u1307
  2052  0004FA  2E29               	decfsz	??_initLCD& (0+255),f,c
  2053  0004FC  D7FC               	bra	u1307
  2054  0004FE  F000               	nop	
  2055  000500  0012               	return		;funcret
  2056  000502                     __end_of_initLCD:
  2057                           	opt stack 0
  2058                           tblptru	equ	0xFF8
  2059                           tblptrh	equ	0xFF7
  2060                           tblptrl	equ	0xFF6
  2061                           tablat	equ	0xFF5
  2062                           prodh	equ	0xFF4
  2063                           prodl	equ	0xFF3
  2064                           intcon3	equ	0xFF0
  2065                           postinc0	equ	0xFEE
  2066                           wreg	equ	0xFE8
  2067                           postinc2	equ	0xFDE
  2068                           postdec2	equ	0xFDD
  2069                           fsr2h	equ	0xFDA
  2070                           fsr2l	equ	0xFD9
  2071                           status	equ	0xFD8
  2072                           
  2073 ;; *************** function _lcdInst *****************
  2074 ;; Defined at:
  2075 ;;		line 21 in file "lcd.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;  data            1    wreg     unsigned char 
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;  data            1   39[COMRAM] unsigned char 
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      void 
  2082 ;; Registers used:
  2083 ;;		wreg, status,2, status,0, cstack
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2090 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2092 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2093 ;;Total ram usage:        1 bytes
  2094 ;; Hardware stack levels used:    1
  2095 ;; Hardware stack levels required when called:    6
  2096 ;; This function calls:
  2097 ;;		_lcdNibble
  2098 ;; This function is called by:
  2099 ;;		_initialize
  2100 ;;		_simulate
  2101 ;;		_initLCD
  2102 ;;		___lcd_newline
  2103 ;;		_showInfo
  2104 ;;		_moveXMotors
  2105 ;;		_moveBigNose
  2106 ;;		_moveSmallNose
  2107 ;;		_checkAA
  2108 ;;		_checkC9V
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           	psect	text9
  2113  000640                     __ptext9:
  2114                           	opt stack 0
  2115  000640                     _lcdInst:
  2116                           	opt stack 23
  2117                           
  2118                           ;incstack = 0
  2119                           ;lcdInst@data stored from wreg
  2120  000640  6E28               	movwf	lcdInst@data,c
  2121                           
  2122                           ;lcd.c: 22: LATDbits.LATD2 = 0;
  2123  000642  948C               	bcf	3980,2,c	;volatile
  2124                           
  2125                           ;lcd.c: 23: lcdNibble(data);
  2126  000644  5028               	movf	lcdInst@data,w,c
  2127  000646  ECB6  F001         	call	_lcdNibble
  2128  00064A  0012               	return		;funcret
  2129  00064C                     __end_of_lcdInst:
  2130                           	opt stack 0
  2131                           tblptru	equ	0xFF8
  2132                           tblptrh	equ	0xFF7
  2133                           tblptrl	equ	0xFF6
  2134                           tablat	equ	0xFF5
  2135                           prodh	equ	0xFF4
  2136                           prodl	equ	0xFF3
  2137                           intcon3	equ	0xFF0
  2138                           postinc0	equ	0xFEE
  2139                           wreg	equ	0xFE8
  2140                           postinc2	equ	0xFDE
  2141                           postdec2	equ	0xFDD
  2142                           fsr2h	equ	0xFDA
  2143                           fsr2l	equ	0xFD9
  2144                           status	equ	0xFD8
  2145                           
  2146 ;; *************** function _lcdNibble *****************
  2147 ;; Defined at:
  2148 ;;		line 31 in file "lcd.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;  data            1    wreg     unsigned char 
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;  data            1   38[COMRAM] unsigned char 
  2153 ;;  temp            1   37[COMRAM] unsigned char 
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  1    wreg      void 
  2156 ;; Registers used:
  2157 ;;		wreg, status,2, status,0
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2164 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;Total ram usage:        2 bytes
  2168 ;; Hardware stack levels used:    1
  2169 ;; Hardware stack levels required when called:    5
  2170 ;; This function calls:
  2171 ;;		Nothing
  2172 ;; This function is called by:
  2173 ;;		_lcdInst
  2174 ;;		_putch
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text10
  2179  00036C                     __ptext10:
  2180                           	opt stack 0
  2181  00036C                     _lcdNibble:
  2182                           	opt stack 22
  2183                           
  2184                           ;incstack = 0
  2185                           ;lcdNibble@data stored from wreg
  2186  00036C  6E27               	movwf	lcdNibble@data,c
  2187                           
  2188                           ;lcd.c: 33: char temp = data & 0xF0;
  2189  00036E  5027               	movf	lcdNibble@data,w,c
  2190  000370  0BF0               	andlw	240
  2191  000372  6E26               	movwf	lcdNibble@temp,c
  2192                           
  2193                           ;lcd.c: 34: LATD = LATD & 0x0F;
  2194  000374  508C               	movf	3980,w,c	;volatile
  2195  000376  0B0F               	andlw	15
  2196  000378  6E8C               	movwf	3980,c	;volatile
  2197                           
  2198                           ;lcd.c: 35: LATD = temp | LATD;
  2199  00037A  5026               	movf	lcdNibble@temp,w,c
  2200  00037C  108C               	iorwf	3980,w,c	;volatile
  2201  00037E  6E8C               	movwf	3980,c	;volatile
  2202                           
  2203                           ;lcd.c: 37: LATDbits.LATD3 = 0;
  2204  000380  968C               	bcf	3980,3,c	;volatile
  2205                           
  2206                           ;lcd.c: 38: _delay((unsigned long)((25)*(8000000/4000000.0)));
  2207  000382  0E10               	movlw	16
  2208  000384                     u1317:
  2209  000384  2EE8               	decfsz	wreg,f,c
  2210  000386  D7FE               	bra	u1317
  2211  000388  D000               	nop2	
  2212                           
  2213                           ;lcd.c: 39: LATDbits.LATD3 = 1;
  2214  00038A  868C               	bsf	3980,3,c	;volatile
  2215                           
  2216                           ;lcd.c: 40: _delay((unsigned long)((25)*(8000000/4000000.0)));
  2217  00038C  0E10               	movlw	16
  2218  00038E                     u1327:
  2219  00038E  2EE8               	decfsz	wreg,f,c
  2220  000390  D7FE               	bra	u1327
  2221  000392  D000               	nop2	
  2222                           
  2223                           ;lcd.c: 42: data = data << 4;
  2224  000394  3827               	swapf	lcdNibble@data,w,c
  2225  000396  0BF0               	andlw	240
  2226  000398  6E27               	movwf	lcdNibble@data,c
  2227                           
  2228                           ;lcd.c: 44: temp = data & 0xF0;
  2229  00039A  5027               	movf	lcdNibble@data,w,c
  2230  00039C  0BF0               	andlw	240
  2231  00039E  6E26               	movwf	lcdNibble@temp,c
  2232                           
  2233                           ;lcd.c: 45: LATD = LATD & 0x0F;
  2234  0003A0  508C               	movf	3980,w,c	;volatile
  2235  0003A2  0B0F               	andlw	15
  2236  0003A4  6E8C               	movwf	3980,c	;volatile
  2237                           
  2238                           ;lcd.c: 46: LATD = temp | LATD;
  2239  0003A6  5026               	movf	lcdNibble@temp,w,c
  2240  0003A8  108C               	iorwf	3980,w,c	;volatile
  2241  0003AA  6E8C               	movwf	3980,c	;volatile
  2242                           
  2243                           ;lcd.c: 48: LATDbits.LATD3 = 0;
  2244  0003AC  968C               	bcf	3980,3,c	;volatile
  2245                           
  2246                           ;lcd.c: 49: _delay((unsigned long)((25)*(8000000/4000000.0)));
  2247  0003AE  0E10               	movlw	16
  2248  0003B0                     u1337:
  2249  0003B0  2EE8               	decfsz	wreg,f,c
  2250  0003B2  D7FE               	bra	u1337
  2251  0003B4  D000               	nop2	
  2252                           
  2253                           ;lcd.c: 50: LATDbits.LATD3 = 1;
  2254  0003B6  868C               	bsf	3980,3,c	;volatile
  2255                           
  2256                           ;lcd.c: 51: _delay((unsigned long)((25)*(8000000/4000000.0)));
  2257  0003B8  0E10               	movlw	16
  2258  0003BA                     u1347:
  2259  0003BA  2EE8               	decfsz	wreg,f,c
  2260  0003BC  D7FE               	bra	u1347
  2261  0003BE  D000               	nop2	
  2262  0003C0  0012               	return		;funcret
  2263  0003C2                     __end_of_lcdNibble:
  2264                           	opt stack 0
  2265                           tblptru	equ	0xFF8
  2266                           tblptrh	equ	0xFF7
  2267                           tblptrl	equ	0xFF6
  2268                           tablat	equ	0xFF5
  2269                           prodh	equ	0xFF4
  2270                           prodl	equ	0xFF3
  2271                           intcon3	equ	0xFF0
  2272                           postinc0	equ	0xFEE
  2273                           wreg	equ	0xFE8
  2274                           postinc2	equ	0xFDE
  2275                           postdec2	equ	0xFDD
  2276                           fsr2h	equ	0xFDA
  2277                           fsr2l	equ	0xFD9
  2278                           status	equ	0xFD8
  2279                           
  2280 ;; *************** function _keypressed *****************
  2281 ;; Defined at:
  2282 ;;		line 12 in file "modules.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;		None
  2285 ;; Auto vars:     Size  Location     Type
  2286 ;;  keypress        1   36[COMRAM] unsigned char 
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  1    wreg      void 
  2289 ;; Registers used:
  2290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2297 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2298 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2299 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2300 ;;Total ram usage:       15 bytes
  2301 ;; Hardware stack levels used:    1
  2302 ;; Hardware stack levels required when called:    4
  2303 ;; This function calls:
  2304 ;;		_stopMoving
  2305 ;;		i2_printf
  2306 ;; This function is called by:
  2307 ;;		Interrupt level 2
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           	psect	intcode
  2312  000008                     __pintcode:
  2313                           	opt stack 0
  2314  000008                     _keypressed:
  2315                           	opt stack 22
  2316                           
  2317                           ;incstack = 0
  2318  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2319  00000A  ED31  F001         	call	int_func,f	;refresh shadow registers
  2320                           tblptru	equ	0xFF8
  2321                           tblptrh	equ	0xFF7
  2322                           tblptrl	equ	0xFF6
  2323                           tablat	equ	0xFF5
  2324                           prodh	equ	0xFF4
  2325                           prodl	equ	0xFF3
  2326                           intcon3	equ	0xFF0
  2327                           postinc0	equ	0xFEE
  2328                           wreg	equ	0xFE8
  2329                           postinc2	equ	0xFDE
  2330                           postdec2	equ	0xFDD
  2331                           fsr2h	equ	0xFDA
  2332                           fsr2l	equ	0xFD9
  2333                           status	equ	0xFD8
  2334                           
  2335                           	psect	intcode_body
  2336  000262                     __pintcode_body:
  2337                           	opt stack 22
  2338  000262                     int_func:
  2339                           	opt stack 22
  2340  000262  0006               	pop		; remove dummy address from shadow register refresh
  2341  000264  CFFA F017          	movff	pclath,??_keypressed
  2342  000268  CFFB F018          	movff	pclatu,??_keypressed+1
  2343  00026C  CFE9 F019          	movff	fsr0l,??_keypressed+2
  2344  000270  CFEA F01A          	movff	fsr0h,??_keypressed+3
  2345  000274  CFE1 F01B          	movff	fsr1l,??_keypressed+4
  2346  000278  CFE2 F01C          	movff	fsr1h,??_keypressed+5
  2347  00027C  CFD9 F01D          	movff	fsr2l,??_keypressed+6
  2348  000280  CFDA F01E          	movff	fsr2h,??_keypressed+7
  2349  000284  CFF3 F01F          	movff	prodl,??_keypressed+8
  2350  000288  CFF4 F020          	movff	prodh,??_keypressed+9
  2351  00028C  CFF6 F021          	movff	tblptrl,??_keypressed+10
  2352  000290  CFF7 F022          	movff	tblptrh,??_keypressed+11
  2353  000294  CFF8 F023          	movff	tblptru,??_keypressed+12
  2354  000298  CFF5 F024          	movff	tablat,??_keypressed+13
  2355                           
  2356                           ;modules.c: 14: if (INT1IF) {
  2357  00029C  A0F0               	btfss	intcon3,0,c	;volatile
  2358  00029E  D00D               	goto	i2l148
  2359                           
  2360                           ;modules.c: 16: unsigned char keypress = (PORTB & 0xF0) >> 4;
  2361  0002A0  3881               	swapf	3969,w,c	;volatile
  2362  0002A2  0B0F               	andlw	15
  2363  0002A4  0B0F               	andlw	15
  2364  0002A6  6E25               	movwf	keypressed@keypress,c
  2365                           
  2366                           ;modules.c: 17: INT1IF = 0;
  2367  0002A8  90F0               	bcf	intcon3,0,c	;volatile
  2368                           
  2369                           ;modules.c: 18: printf("Emergency          ");
  2370  0002AA  0E43               	movlw	low STR_5
  2371  0002AC  6E0D               	movwf	i2printf@f,c
  2372  0002AE  0EFF               	movlw	high STR_5
  2373  0002B0  6E0E               	movwf	i2printf@f+1,c
  2374  0002B2  EC9D  F000         	call	i2_printf	;wreg free
  2375                           
  2376                           ;modules.c: 19: stopMoving();
  2377  0002B6  EC0F  F003         	call	_stopMoving	;wreg free
  2378  0002BA                     i2l148:
  2379  0002BA  C024  FFF5         	movff	??_keypressed+13,tablat
  2380  0002BE  C023  FFF8         	movff	??_keypressed+12,tblptru
  2381  0002C2  C022  FFF7         	movff	??_keypressed+11,tblptrh
  2382  0002C6  C021  FFF6         	movff	??_keypressed+10,tblptrl
  2383  0002CA  C020  FFF4         	movff	??_keypressed+9,prodh
  2384  0002CE  C01F  FFF3         	movff	??_keypressed+8,prodl
  2385  0002D2  C01E  FFDA         	movff	??_keypressed+7,fsr2h
  2386  0002D6  C01D  FFD9         	movff	??_keypressed+6,fsr2l
  2387  0002DA  C01C  FFE2         	movff	??_keypressed+5,fsr1h
  2388  0002DE  C01B  FFE1         	movff	??_keypressed+4,fsr1l
  2389  0002E2  C01A  FFEA         	movff	??_keypressed+3,fsr0h
  2390  0002E6  C019  FFE9         	movff	??_keypressed+2,fsr0l
  2391  0002EA  C018  FFFB         	movff	??_keypressed+1,pclatu
  2392  0002EE  C017  FFFA         	movff	??_keypressed,pclath
  2393  0002F2  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2394  0002F4  0011               	retfie		f
  2395  0002F6                     __end_of_keypressed:
  2396                           	opt stack 0
  2397                           pclatu	equ	0xFFB
  2398                           pclath	equ	0xFFA
  2399                           tblptru	equ	0xFF8
  2400                           tblptrh	equ	0xFF7
  2401                           tblptrl	equ	0xFF6
  2402                           tablat	equ	0xFF5
  2403                           prodh	equ	0xFF4
  2404                           prodl	equ	0xFF3
  2405                           intcon3	equ	0xFF0
  2406                           postinc0	equ	0xFEE
  2407                           fsr0h	equ	0xFEA
  2408                           fsr0l	equ	0xFE9
  2409                           wreg	equ	0xFE8
  2410                           fsr1h	equ	0xFE2
  2411                           fsr1l	equ	0xFE1
  2412                           postinc2	equ	0xFDE
  2413                           postdec2	equ	0xFDD
  2414                           fsr2h	equ	0xFDA
  2415                           fsr2l	equ	0xFD9
  2416                           status	equ	0xFD8
  2417                           
  2418 ;; *************** function _stopMoving *****************
  2419 ;; Defined at:
  2420 ;;		line 218 in file "motors.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;		None
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;		None
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  1    wreg      void 
  2427 ;; Registers used:
  2428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2438 ;;Total ram usage:        0 bytes
  2439 ;; Hardware stack levels used:    1
  2440 ;; Hardware stack levels required when called:    3
  2441 ;; This function calls:
  2442 ;;		i2_lcdInst
  2443 ;;		i2_printf
  2444 ;; This function is called by:
  2445 ;;		_keypressed
  2446 ;;		_mainloop
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450                           	psect	text12
  2451  00061E                     __ptext12:
  2452                           	opt stack 0
  2453  00061E                     _stopMoving:
  2454                           	opt stack 22
  2455                           
  2456                           ;motors.c: 219: (INTCONbits.GIE = 0);
  2457                           
  2458                           ;incstack = 0
  2459  00061E  9EF2               	bcf	intcon,7,c	;volatile
  2460                           
  2461                           ;motors.c: 220: lcdInst(0b10000000);;
  2462  000620  0E80               	movlw	128
  2463  000622  EC2C  F003         	call	i2_lcdInst
  2464                           
  2465                           ;motors.c: 221: printf("Stopped          ");
  2466  000626  0E6A               	movlw	low STR_30
  2467  000628  6E0D               	movwf	i2printf@f,c
  2468  00062A  0EFF               	movlw	high STR_30
  2469  00062C  6E0E               	movwf	i2printf@f+1,c
  2470  00062E  EC9D  F000         	call	i2_printf	;wreg free
  2471  000632                     i2l300:
  2472  000632  D7FF               	goto	i2l300
  2473  000634                     __end_of_stopMoving:
  2474                           	opt stack 0
  2475                           pclatu	equ	0xFFB
  2476                           pclath	equ	0xFFA
  2477                           tblptru	equ	0xFF8
  2478                           tblptrh	equ	0xFF7
  2479                           tblptrl	equ	0xFF6
  2480                           tablat	equ	0xFF5
  2481                           prodh	equ	0xFF4
  2482                           prodl	equ	0xFF3
  2483                           intcon	equ	0xFF2
  2484                           intcon3	equ	0xFF0
  2485                           postinc0	equ	0xFEE
  2486                           fsr0h	equ	0xFEA
  2487                           fsr0l	equ	0xFE9
  2488                           wreg	equ	0xFE8
  2489                           fsr1h	equ	0xFE2
  2490                           fsr1l	equ	0xFE1
  2491                           postinc2	equ	0xFDE
  2492                           postdec2	equ	0xFDD
  2493                           fsr2h	equ	0xFDA
  2494                           fsr2l	equ	0xFD9
  2495                           status	equ	0xFD8
  2496                           
  2497 ;; *************** function i2_printf *****************
  2498 ;; Defined at:
  2499 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;  f               2   12[COMRAM] PTR const unsigned char 
  2502 ;;		 -> STR_43(22), STR_42(20), STR_41(15), STR_40(23), 
  2503 ;;		 -> STR_39(21), STR_38(14), STR_37(13), STR_36(13), 
  2504 ;;		 -> STR_35(16), STR_34(23), STR_33(21), STR_32(14), 
  2505 ;;		 -> STR_31(16), STR_30(18), STR_29(20), STR_28(13), 
  2506 ;;		 -> STR_27(23), STR_26(20), STR_25(13), STR_24(12), 
  2507 ;;		 -> STR_23(20), STR_22(21), STR_21(22), STR_20(13), 
  2508 ;;		 -> STR_19(21), STR_18(13), STR_17(21), STR_16(13), 
  2509 ;;		 -> STR_15(20), STR_14(13), STR_13(21), STR_12(23), 
  2510 ;;		 -> STR_11(24), STR_10(21), STR_9(24), STR_8(24), 
  2511 ;;		 -> STR_7(25), STR_6(27), STR_5(20), STR_4(22), 
  2512 ;;		 -> STR_3(19), STR_2(16), STR_1(21), 
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;  printf          4    0        struct .
  2515 ;;  printf          3    0        PTR const unsigned char 
  2516 ;;  printf          2   19[COMRAM] unsigned int 
  2517 ;;  printf          2   15[COMRAM] PTR void [1]
  2518 ;;		 -> ?i2_printf(2), ?_printf(2), 
  2519 ;;  printf          2    0        unsigned int 
  2520 ;;  printf          1   21[COMRAM] char 
  2521 ;;  printf          1   18[COMRAM] char 
  2522 ;;  printf          1   17[COMRAM] unsigned char 
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  2   12[COMRAM] int 
  2525 ;; Registers used:
  2526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2532 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2533 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2534 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2535 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2536 ;;Total ram usage:       10 bytes
  2537 ;; Hardware stack levels used:    1
  2538 ;; Hardware stack levels required when called:    2
  2539 ;; This function calls:
  2540 ;;		i2___lwdiv
  2541 ;;		i2___lwmod
  2542 ;;		i2_putch
  2543 ;; This function is called by:
  2544 ;;		_keypressed
  2545 ;;		_stopMoving
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549                           	psect	text13
  2550  00013A                     __ptext13:
  2551                           	opt stack 0
  2552  00013A                     i2_printf:
  2553                           	opt stack 23
  2554                           
  2555                           ;doprnt.c: 466: va_list ap;
  2556                           ;doprnt.c: 499: signed char c;
  2557                           ;doprnt.c: 506: signed char prec;
  2558                           ;doprnt.c: 508: unsigned char flag;
  2559                           ;doprnt.c: 523: union {
  2560                           ;doprnt.c: 524: unsigned long vd;
  2561                           ;doprnt.c: 525: double integ;
  2562                           ;doprnt.c: 526: } tmpval;
  2563                           ;doprnt.c: 528: unsigned int val;
  2564                           ;doprnt.c: 529: unsigned len;
  2565                           ;doprnt.c: 530: const char * cp;
  2566                           ;doprnt.c: 533: *ap = __va_start();
  2567                           
  2568                           ;incstack = 0
  2569  00013A  0E0F               	movlw	low (?i2_printf+2)
  2570  00013C  6E10               	movwf	i2printf@ap,c
  2571  00013E  0E00               	movlw	high (?i2_printf+2)
  2572  000140  6E11               	movwf	i2printf@ap+1,c
  2573                           
  2574                           ;doprnt.c: 536: while(c = *f++) {
  2575  000142  D082               	goto	i2l1982
  2576  000144                     i2l1934:
  2577                           
  2578                           ;doprnt.c: 538: if(c != '%')
  2579  000144  0E25               	movlw	37
  2580  000146  1816               	xorwf	i2printf@c,w,c
  2581  000148  B4D8               	btfsc	status,2,c
  2582  00014A  D004               	goto	i2l1938
  2583                           
  2584                           ;doprnt.c: 540: {
  2585                           ;doprnt.c: 541: (putch(c) );
  2586  00014C  5016               	movf	i2printf@c,w,c
  2587  00014E  EC26  F003         	call	i2_putch
  2588                           
  2589                           ;doprnt.c: 542: continue;
  2590  000152  D07A               	goto	i2l1982
  2591  000154                     i2l1938:
  2592                           
  2593                           ;doprnt.c: 543: }
  2594                           ;doprnt.c: 548: flag = 0;
  2595  000154  0E00               	movlw	0
  2596  000156  6E12               	movwf	i2printf@flag,c
  2597                           
  2598                           ;doprnt.c: 635: switch(c = *f++) {
  2599  000158  D004               	goto	i2l1944
  2600  00015A                     i2l1940:
  2601                           
  2602                           ;doprnt.c: 809: (putch(c) );
  2603  00015A  5016               	movf	i2printf@c,w,c
  2604  00015C  EC26  F003         	call	i2_putch
  2605                           
  2606                           ;doprnt.c: 810: continue;
  2607  000160  D073               	goto	i2l1982
  2608  000162                     i2l1944:
  2609  000162  C00D  FFF6         	movff	i2printf@f,tblptrl
  2610  000166  C00E  FFF7         	movff	i2printf@f+1,tblptrh
  2611  00016A  4A0D               	infsnz	i2printf@f,f,c
  2612  00016C  2A0E               	incf	i2printf@f+1,f,c
  2613  00016E                     	if	0	;tblptru may be non-zero
  2614  00016E                     	endif
  2615  00016E                     	if	0	;tblptru may be non-zero
  2616  00016E                     	endif
  2617  00016E  0008               	tblrd		*
  2618  000170  CFF5 F016          	movff	tablat,i2printf@c
  2619  000174  5016               	movf	i2printf@c,w,c
  2620                           
  2621                           ; Switch size 1, requested type "space"
  2622                           ; Number of cases is 3, Range of values is 0 to 105
  2623                           ; switch strategies available:
  2624                           ; Name         Instructions Cycles
  2625                           ; simple_byte           10     6 (average)
  2626                           ;	Chosen strategy is simple_byte
  2627  000176  0A00               	xorlw	0	; case 0
  2628  000178  B4D8               	btfsc	status,2,c
  2629  00017A  0012               	return	
  2630  00017C  0A64               	xorlw	100	; case 100
  2631  00017E  B4D8               	btfsc	status,2,c
  2632  000180  D003               	goto	i2l1946
  2633  000182  0A0D               	xorlw	13	; case 105
  2634  000184  A4D8               	btfss	status,2,c
  2635  000186  D7E9               	goto	i2l1940
  2636  000188                     i2l1946:
  2637                           
  2638                           ;doprnt.c: 1253: {
  2639                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2640  000188  C010  FFD9         	movff	i2printf@ap,fsr2l
  2641  00018C  C011  FFDA         	movff	i2printf@ap+1,fsr2h
  2642  000190  CFDE F014          	movff	postinc2,i2printf@val
  2643  000194  CFDD F015          	movff	postdec2,i2printf@val+1
  2644  000198  0E02               	movlw	2
  2645  00019A  2610               	addwf	i2printf@ap,f,c
  2646  00019C  0E00               	movlw	0
  2647  00019E  2211               	addwfc	i2printf@ap+1,f,c
  2648                           
  2649                           ;doprnt.c: 1261: if((int)val < 0) {
  2650  0001A0  AE15               	btfss	i2printf@val+1,7,c
  2651  0001A2  D006               	goto	i2l1956
  2652                           
  2653                           ;doprnt.c: 1262: flag |= 0x03;
  2654  0001A4  0E03               	movlw	3
  2655  0001A6  1212               	iorwf	i2printf@flag,f,c
  2656                           
  2657                           ;doprnt.c: 1263: val = -val;
  2658  0001A8  6C14               	negf	i2printf@val,c
  2659  0001AA  1E15               	comf	i2printf@val+1,f,c
  2660  0001AC  B0D8               	btfsc	status,0,c
  2661  0001AE  2A15               	incf	i2printf@val+1,f,c
  2662  0001B0                     i2l1956:
  2663                           
  2664                           ;doprnt.c: 1264: }
  2665                           ;doprnt.c: 1266: }
  2666                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2667  0001B0  0E01               	movlw	1
  2668  0001B2  6E16               	movwf	i2printf@c,c
  2669  0001B4                     i2l1958:
  2670  0001B4  0E05               	movlw	5
  2671  0001B6  1816               	xorwf	i2printf@c,w,c
  2672  0001B8  B4D8               	btfsc	status,2,c
  2673  0001BA  D012               	goto	i2l1970
  2674                           
  2675                           ;doprnt.c: 1306: if(val < dpowers[c])
  2676  0001BC  5016               	movf	i2printf@c,w,c
  2677  0001BE  0D02               	mullw	2
  2678  0001C0  0E79               	movlw	low _dpowers
  2679  0001C2  24F3               	addwf	prodl,w,c
  2680  0001C4  6EF6               	movwf	tblptrl,c
  2681  0001C6  0EFD               	movlw	high _dpowers
  2682  0001C8  20F4               	addwfc	prodh,w,c
  2683  0001CA  6EF7               	movwf	tblptrh,c
  2684  0001CC                     	if	0	;There are less than 3 active tblptr bytes
  2685  0001CC                     	endif
  2686  0001CC  0009               	tblrd		*+
  2687  0001CE  50F5               	movf	tablat,w,c
  2688  0001D0  5C14               	subwf	i2printf@val,w,c
  2689  0001D2  0009               	tblrd		*+
  2690  0001D4  50F5               	movf	tablat,w,c
  2691  0001D6  5815               	subwfb	i2printf@val+1,w,c
  2692  0001D8  A0D8               	btfss	status,0,c
  2693  0001DA  D002               	goto	i2l1970
  2694                           
  2695                           ;doprnt.c: 1307: break;
  2696  0001DC  2A16               	incf	i2printf@c,f,c
  2697  0001DE  D7EA               	goto	i2l1958
  2698  0001E0                     i2l1970:
  2699                           
  2700                           ;doprnt.c: 1422: {
  2701                           ;doprnt.c: 1438: if(flag & 0x03)
  2702  0001E0  C012  F00F         	movff	i2printf@flag,??i2_printf
  2703  0001E4  0E03               	movlw	3
  2704  0001E6  160F               	andwf	??i2_printf,f,c
  2705  0001E8  B4D8               	btfsc	status,2,c
  2706  0001EA  D003               	goto	i2l1974
  2707                           
  2708                           ;doprnt.c: 1439: (putch('-') );
  2709  0001EC  0E2D               	movlw	45
  2710  0001EE  EC26  F003         	call	i2_putch
  2711  0001F2                     i2l1974:
  2712                           
  2713                           ;doprnt.c: 1469: }
  2714                           ;doprnt.c: 1472: prec = c;
  2715  0001F2  C016  F013         	movff	i2printf@c,i2printf@prec
  2716                           
  2717                           ;doprnt.c: 1474: while(prec--) {
  2718  0001F6  D024               	goto	i2l1980
  2719  0001F8                     i2l1976:
  2720                           
  2721                           ;doprnt.c: 1478: {
  2722                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2723  0001F8  5013               	movf	i2printf@prec,w,c
  2724  0001FA  0D02               	mullw	2
  2725  0001FC  0E79               	movlw	low _dpowers
  2726  0001FE  24F3               	addwf	prodl,w,c
  2727  000200  6EF6               	movwf	tblptrl,c
  2728  000202  0EFD               	movlw	high _dpowers
  2729  000204  20F4               	addwfc	prodh,w,c
  2730  000206  6EF7               	movwf	tblptrh,c
  2731  000208                     	if	0	;There are less than 3 active tblptr bytes
  2732  000208                     	endif
  2733  000208  0009               	tblrd		*+
  2734  00020A  CFF5 F003          	movff	tablat,i2___lwdiv@divisor
  2735  00020E  000A               	tblrd		*-
  2736  000210  CFF5 F004          	movff	tablat,i2___lwdiv@divisor+1
  2737  000214  C014  F001         	movff	i2printf@val,i2___lwdiv@dividend
  2738  000218  C015  F002         	movff	i2printf@val+1,i2___lwdiv@dividend+1
  2739  00021C  EC35  F002         	call	i2___lwdiv	;wreg free
  2740  000220  C001  F008         	movff	?i2___lwdiv,i2___lwmod@dividend
  2741  000224  C002  F009         	movff	?i2___lwdiv+1,i2___lwmod@dividend+1
  2742  000228  0E00               	movlw	0
  2743  00022A  6E0B               	movwf	i2___lwmod@divisor+1,c
  2744  00022C  0E0A               	movlw	10
  2745  00022E  6E0A               	movwf	i2___lwmod@divisor,c
  2746  000230  ECA2  F002         	call	i2___lwmod	;wreg free
  2747  000234  5008               	movf	?i2___lwmod,w,c
  2748  000236  0F30               	addlw	48
  2749  000238  6E16               	movwf	i2printf@c,c
  2750                           
  2751                           ;doprnt.c: 1523: }
  2752                           ;doprnt.c: 1524: (putch(c) );
  2753  00023A  5016               	movf	i2printf@c,w,c
  2754  00023C  EC26  F003         	call	i2_putch
  2755  000240                     i2l1980:
  2756  000240  0613               	decf	i2printf@prec,f,c
  2757  000242  2813               	incf	i2printf@prec,w,c
  2758  000244  A4D8               	btfss	status,2,c
  2759  000246  D7D8               	goto	i2l1976
  2760  000248                     i2l1982:
  2761  000248  C00D  FFF6         	movff	i2printf@f,tblptrl
  2762  00024C  C00E  FFF7         	movff	i2printf@f+1,tblptrh
  2763  000250  4A0D               	infsnz	i2printf@f,f,c
  2764  000252  2A0E               	incf	i2printf@f+1,f,c
  2765  000254                     	if	0	;tblptru may be non-zero
  2766  000254                     	endif
  2767  000254                     	if	0	;tblptru may be non-zero
  2768  000254                     	endif
  2769  000254  0008               	tblrd		*
  2770  000256  CFF5 F016          	movff	tablat,i2printf@c
  2771  00025A  5016               	movf	i2printf@c,w,c
  2772  00025C  B4D8               	btfsc	status,2,c
  2773  00025E  0012               	return	
  2774  000260  D771               	goto	i2l1934
  2775  000262                     __end_ofi2_printf:
  2776                           	opt stack 0
  2777                           pclatu	equ	0xFFB
  2778                           pclath	equ	0xFFA
  2779                           tblptru	equ	0xFF8
  2780                           tblptrh	equ	0xFF7
  2781                           tblptrl	equ	0xFF6
  2782                           tablat	equ	0xFF5
  2783                           prodh	equ	0xFF4
  2784                           prodl	equ	0xFF3
  2785                           intcon	equ	0xFF2
  2786                           intcon3	equ	0xFF0
  2787                           postinc0	equ	0xFEE
  2788                           fsr0h	equ	0xFEA
  2789                           fsr0l	equ	0xFE9
  2790                           wreg	equ	0xFE8
  2791                           fsr1h	equ	0xFE2
  2792                           fsr1l	equ	0xFE1
  2793                           postinc2	equ	0xFDE
  2794                           postdec2	equ	0xFDD
  2795                           fsr2h	equ	0xFDA
  2796                           fsr2l	equ	0xFD9
  2797                           status	equ	0xFD8
  2798                           
  2799 ;; *************** function i2_putch *****************
  2800 ;; Defined at:
  2801 ;;		line 26 in file "lcd.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;  data            1    wreg     unsigned char 
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;  data            1    2[COMRAM] unsigned char 
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  1    wreg      void 
  2808 ;; Registers used:
  2809 ;;		wreg, status,2, status,0, cstack
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2816 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2818 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2819 ;;Total ram usage:        1 bytes
  2820 ;; Hardware stack levels used:    1
  2821 ;; Hardware stack levels required when called:    1
  2822 ;; This function calls:
  2823 ;;		i2_lcdNibble
  2824 ;; This function is called by:
  2825 ;;		i2_printf
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           	psect	text14
  2830  00064C                     __ptext14:
  2831                           	opt stack 0
  2832  00064C                     i2_putch:
  2833                           	opt stack 23
  2834                           
  2835                           ;incstack = 0
  2836                           ;i2putch@data stored from wreg
  2837  00064C  6E03               	movwf	i2putch@data,c
  2838                           
  2839                           ;lcd.c: 27: LATDbits.LATD2 = 1;
  2840  00064E  848C               	bsf	3980,2,c	;volatile
  2841                           
  2842                           ;lcd.c: 28: lcdNibble(data);
  2843  000650  5003               	movf	i2putch@data,w,c
  2844  000652  ECE1  F001         	call	i2_lcdNibble
  2845  000656  0012               	return		;funcret
  2846  000658                     __end_ofi2_putch:
  2847                           	opt stack 0
  2848                           pclatu	equ	0xFFB
  2849                           pclath	equ	0xFFA
  2850                           tblptru	equ	0xFF8
  2851                           tblptrh	equ	0xFF7
  2852                           tblptrl	equ	0xFF6
  2853                           tablat	equ	0xFF5
  2854                           prodh	equ	0xFF4
  2855                           prodl	equ	0xFF3
  2856                           intcon	equ	0xFF2
  2857                           intcon3	equ	0xFF0
  2858                           postinc0	equ	0xFEE
  2859                           fsr0h	equ	0xFEA
  2860                           fsr0l	equ	0xFE9
  2861                           wreg	equ	0xFE8
  2862                           fsr1h	equ	0xFE2
  2863                           fsr1l	equ	0xFE1
  2864                           postinc2	equ	0xFDE
  2865                           postdec2	equ	0xFDD
  2866                           fsr2h	equ	0xFDA
  2867                           fsr2l	equ	0xFD9
  2868                           status	equ	0xFD8
  2869                           
  2870 ;; *************** function i2___lwmod *****************
  2871 ;; Defined at:
  2872 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;  dividend        2    7[COMRAM] unsigned int 
  2875 ;;  divisor         2    9[COMRAM] unsigned int 
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;  __lwmod         1   11[COMRAM] unsigned char 
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  2    7[COMRAM] unsigned int 
  2880 ;; Registers used:
  2881 ;;		wreg, status,2, status,0
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2887 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2888 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2890 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2891 ;;Total ram usage:        5 bytes
  2892 ;; Hardware stack levels used:    1
  2893 ;; This function calls:
  2894 ;;		Nothing
  2895 ;; This function is called by:
  2896 ;;		i2_printf
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           
  2900                           	psect	text15
  2901  000544                     __ptext15:
  2902                           	opt stack 0
  2903  000544                     i2___lwmod:
  2904                           	opt stack 24
  2905                           
  2906                           ;incstack = 0
  2907  000544  500A               	movf	i2___lwmod@divisor,w,c
  2908  000546  100B               	iorwf	i2___lwmod@divisor+1,w,c
  2909  000548  B4D8               	btfsc	status,2,c
  2910  00054A  D018               	goto	i2l811
  2911  00054C  0E01               	movlw	1
  2912  00054E  6E0C               	movwf	i2___lwmod@counter,c
  2913  000550  D004               	goto	i2l1862
  2914  000552                     i2l1860:
  2915  000552  90D8               	bcf	status,0,c
  2916  000554  360A               	rlcf	i2___lwmod@divisor,f,c
  2917  000556  360B               	rlcf	i2___lwmod@divisor+1,f,c
  2918  000558  2A0C               	incf	i2___lwmod@counter,f,c
  2919  00055A                     i2l1862:
  2920  00055A  AE0B               	btfss	i2___lwmod@divisor+1,7,c
  2921  00055C  D7FA               	goto	i2l1860
  2922  00055E                     i2l1864:
  2923  00055E  500A               	movf	i2___lwmod@divisor,w,c
  2924  000560  5C08               	subwf	i2___lwmod@dividend,w,c
  2925  000562  500B               	movf	i2___lwmod@divisor+1,w,c
  2926  000564  5809               	subwfb	i2___lwmod@dividend+1,w,c
  2927  000566  A0D8               	btfss	status,0,c
  2928  000568  D004               	goto	i2l1868
  2929  00056A  500A               	movf	i2___lwmod@divisor,w,c
  2930  00056C  5E08               	subwf	i2___lwmod@dividend,f,c
  2931  00056E  500B               	movf	i2___lwmod@divisor+1,w,c
  2932  000570  5A09               	subwfb	i2___lwmod@dividend+1,f,c
  2933  000572                     i2l1868:
  2934  000572  90D8               	bcf	status,0,c
  2935  000574  320B               	rrcf	i2___lwmod@divisor+1,f,c
  2936  000576  320A               	rrcf	i2___lwmod@divisor,f,c
  2937  000578  2E0C               	decfsz	i2___lwmod@counter,f,c
  2938  00057A  D7F1               	goto	i2l1864
  2939  00057C                     i2l811:
  2940  00057C  C008  F008         	movff	i2___lwmod@dividend,?i2___lwmod
  2941  000580  C009  F009         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  2942  000584  0012               	return		;funcret
  2943  000586                     __end_ofi2___lwmod:
  2944                           	opt stack 0
  2945                           pclatu	equ	0xFFB
  2946                           pclath	equ	0xFFA
  2947                           tblptru	equ	0xFF8
  2948                           tblptrh	equ	0xFF7
  2949                           tblptrl	equ	0xFF6
  2950                           tablat	equ	0xFF5
  2951                           prodh	equ	0xFF4
  2952                           prodl	equ	0xFF3
  2953                           intcon	equ	0xFF2
  2954                           intcon3	equ	0xFF0
  2955                           postinc0	equ	0xFEE
  2956                           fsr0h	equ	0xFEA
  2957                           fsr0l	equ	0xFE9
  2958                           wreg	equ	0xFE8
  2959                           fsr1h	equ	0xFE2
  2960                           fsr1l	equ	0xFE1
  2961                           postinc2	equ	0xFDE
  2962                           postdec2	equ	0xFDD
  2963                           fsr2h	equ	0xFDA
  2964                           fsr2l	equ	0xFD9
  2965                           status	equ	0xFD8
  2966                           
  2967 ;; *************** function i2___lwdiv *****************
  2968 ;; Defined at:
  2969 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;  dividend        2    0[COMRAM] unsigned int 
  2972 ;;  divisor         2    2[COMRAM] unsigned int 
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  2975 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  2    0[COMRAM] unsigned int 
  2978 ;; Registers used:
  2979 ;;		wreg, status,2, status,0
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2985 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2986 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2988 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2989 ;;Total ram usage:        7 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; This function calls:
  2992 ;;		Nothing
  2993 ;; This function is called by:
  2994 ;;		i2_printf
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           	psect	text16
  2999  00046A                     __ptext16:
  3000                           	opt stack 0
  3001  00046A                     i2___lwdiv:
  3002                           	opt stack 24
  3003                           
  3004                           ;incstack = 0
  3005  00046A  0E00               	movlw	0
  3006  00046C  6E06               	movwf	i2___lwdiv@quotient+1,c
  3007  00046E  0E00               	movlw	0
  3008  000470  6E05               	movwf	i2___lwdiv@quotient,c
  3009  000472  5003               	movf	i2___lwdiv@divisor,w,c
  3010  000474  1004               	iorwf	i2___lwdiv@divisor+1,w,c
  3011  000476  B4D8               	btfsc	status,2,c
  3012  000478  D01C               	goto	i2l801
  3013  00047A  0E01               	movlw	1
  3014  00047C  6E07               	movwf	i2___lwdiv@counter,c
  3015  00047E  D004               	goto	i2l1842
  3016  000480                     i2l1840:
  3017  000480  90D8               	bcf	status,0,c
  3018  000482  3603               	rlcf	i2___lwdiv@divisor,f,c
  3019  000484  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  3020  000486  2A07               	incf	i2___lwdiv@counter,f,c
  3021  000488                     i2l1842:
  3022  000488  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  3023  00048A  D7FA               	goto	i2l1840
  3024  00048C                     i2l1844:
  3025  00048C  90D8               	bcf	status,0,c
  3026  00048E  3605               	rlcf	i2___lwdiv@quotient,f,c
  3027  000490  3606               	rlcf	i2___lwdiv@quotient+1,f,c
  3028  000492  5003               	movf	i2___lwdiv@divisor,w,c
  3029  000494  5C01               	subwf	i2___lwdiv@dividend,w,c
  3030  000496  5004               	movf	i2___lwdiv@divisor+1,w,c
  3031  000498  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  3032  00049A  A0D8               	btfss	status,0,c
  3033  00049C  D005               	goto	i2l1852
  3034  00049E  5003               	movf	i2___lwdiv@divisor,w,c
  3035  0004A0  5E01               	subwf	i2___lwdiv@dividend,f,c
  3036  0004A2  5004               	movf	i2___lwdiv@divisor+1,w,c
  3037  0004A4  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  3038  0004A6  8005               	bsf	i2___lwdiv@quotient,0,c
  3039  0004A8                     i2l1852:
  3040  0004A8  90D8               	bcf	status,0,c
  3041  0004AA  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  3042  0004AC  3203               	rrcf	i2___lwdiv@divisor,f,c
  3043  0004AE  2E07               	decfsz	i2___lwdiv@counter,f,c
  3044  0004B0  D7ED               	goto	i2l1844
  3045  0004B2                     i2l801:
  3046  0004B2  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  3047  0004B6  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  3048  0004BA  0012               	return		;funcret
  3049  0004BC                     __end_ofi2___lwdiv:
  3050                           	opt stack 0
  3051                           pclatu	equ	0xFFB
  3052                           pclath	equ	0xFFA
  3053                           tblptru	equ	0xFF8
  3054                           tblptrh	equ	0xFF7
  3055                           tblptrl	equ	0xFF6
  3056                           tablat	equ	0xFF5
  3057                           prodh	equ	0xFF4
  3058                           prodl	equ	0xFF3
  3059                           intcon	equ	0xFF2
  3060                           intcon3	equ	0xFF0
  3061                           postinc0	equ	0xFEE
  3062                           fsr0h	equ	0xFEA
  3063                           fsr0l	equ	0xFE9
  3064                           wreg	equ	0xFE8
  3065                           fsr1h	equ	0xFE2
  3066                           fsr1l	equ	0xFE1
  3067                           postinc2	equ	0xFDE
  3068                           postdec2	equ	0xFDD
  3069                           fsr2h	equ	0xFDA
  3070                           fsr2l	equ	0xFD9
  3071                           status	equ	0xFD8
  3072                           
  3073 ;; *************** function i2_lcdInst *****************
  3074 ;; Defined at:
  3075 ;;		line 21 in file "lcd.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;  data            1    wreg     unsigned char 
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;  data            1    2[COMRAM] unsigned char 
  3080 ;; Return value:  Size  Location     Type
  3081 ;;                  1    wreg      void 
  3082 ;; Registers used:
  3083 ;;		wreg, status,2, status,0, cstack
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3090 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3092 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3093 ;;Total ram usage:        1 bytes
  3094 ;; Hardware stack levels used:    1
  3095 ;; Hardware stack levels required when called:    1
  3096 ;; This function calls:
  3097 ;;		i2_lcdNibble
  3098 ;; This function is called by:
  3099 ;;		_stopMoving
  3100 ;; This function uses a non-reentrant model
  3101 ;;
  3102                           
  3103                           	psect	text17
  3104  000658                     __ptext17:
  3105                           	opt stack 0
  3106  000658                     i2_lcdInst:
  3107                           	opt stack 23
  3108                           
  3109                           ;incstack = 0
  3110                           ;i2lcdInst@data stored from wreg
  3111  000658  6E03               	movwf	i2lcdInst@data,c
  3112                           
  3113                           ;lcd.c: 22: LATDbits.LATD2 = 0;
  3114  00065A  948C               	bcf	3980,2,c	;volatile
  3115                           
  3116                           ;lcd.c: 23: lcdNibble(data);
  3117  00065C  5003               	movf	i2lcdInst@data,w,c
  3118  00065E  ECE1  F001         	call	i2_lcdNibble
  3119  000662  0012               	return		;funcret
  3120  000664                     __end_ofi2_lcdInst:
  3121                           	opt stack 0
  3122                           pclatu	equ	0xFFB
  3123                           pclath	equ	0xFFA
  3124                           tblptru	equ	0xFF8
  3125                           tblptrh	equ	0xFF7
  3126                           tblptrl	equ	0xFF6
  3127                           tablat	equ	0xFF5
  3128                           prodh	equ	0xFF4
  3129                           prodl	equ	0xFF3
  3130                           intcon	equ	0xFF2
  3131                           intcon3	equ	0xFF0
  3132                           postinc0	equ	0xFEE
  3133                           fsr0h	equ	0xFEA
  3134                           fsr0l	equ	0xFE9
  3135                           wreg	equ	0xFE8
  3136                           fsr1h	equ	0xFE2
  3137                           fsr1l	equ	0xFE1
  3138                           postinc2	equ	0xFDE
  3139                           postdec2	equ	0xFDD
  3140                           fsr2h	equ	0xFDA
  3141                           fsr2l	equ	0xFD9
  3142                           status	equ	0xFD8
  3143                           
  3144 ;; *************** function i2_lcdNibble *****************
  3145 ;; Defined at:
  3146 ;;		line 31 in file "lcd.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;  data            1    wreg     unsigned char 
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;  data            1    1[COMRAM] unsigned char 
  3151 ;;  lcdNibble       1    0[COMRAM] unsigned char 
  3152 ;; Return value:  Size  Location     Type
  3153 ;;                  1    wreg      void 
  3154 ;; Registers used:
  3155 ;;		wreg, status,2, status,0
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3162 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3164 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3165 ;;Total ram usage:        2 bytes
  3166 ;; Hardware stack levels used:    1
  3167 ;; This function calls:
  3168 ;;		Nothing
  3169 ;; This function is called by:
  3170 ;;		i2_lcdInst
  3171 ;;		i2_putch
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           
  3175                           	psect	text18
  3176  0003C2                     __ptext18:
  3177                           	opt stack 0
  3178  0003C2                     i2_lcdNibble:
  3179                           	opt stack 23
  3180                           
  3181                           ;incstack = 0
  3182                           ;i2lcdNibble@data stored from wreg
  3183  0003C2  6E02               	movwf	i2lcdNibble@data,c
  3184                           
  3185                           ;lcd.c: 33: char temp = data & 0xF0;
  3186  0003C4  5002               	movf	i2lcdNibble@data,w,c
  3187  0003C6  0BF0               	andlw	240
  3188  0003C8  6E01               	movwf	i2lcdNibble@temp,c
  3189                           
  3190                           ;lcd.c: 34: LATD = LATD & 0x0F;
  3191  0003CA  508C               	movf	3980,w,c	;volatile
  3192  0003CC  0B0F               	andlw	15
  3193  0003CE  6E8C               	movwf	3980,c	;volatile
  3194                           
  3195                           ;lcd.c: 35: LATD = temp | LATD;
  3196  0003D0  5001               	movf	i2lcdNibble@temp,w,c
  3197  0003D2  108C               	iorwf	3980,w,c	;volatile
  3198  0003D4  6E8C               	movwf	3980,c	;volatile
  3199                           
  3200                           ;lcd.c: 37: LATDbits.LATD3 = 0;
  3201  0003D6  968C               	bcf	3980,3,c	;volatile
  3202                           
  3203                           ;lcd.c: 38: _delay((unsigned long)((25)*(8000000/4000000.0)));
  3204  0003D8  0E10               	movlw	16
  3205  0003DA                     i2u135_47:
  3206  0003DA  2EE8               	decfsz	wreg,f,c
  3207  0003DC  D7FE               	bra	i2u135_47
  3208  0003DE  D000               	nop2	
  3209                           
  3210                           ;lcd.c: 39: LATDbits.LATD3 = 1;
  3211  0003E0  868C               	bsf	3980,3,c	;volatile
  3212                           
  3213                           ;lcd.c: 40: _delay((unsigned long)((25)*(8000000/4000000.0)));
  3214  0003E2  0E10               	movlw	16
  3215  0003E4                     i2u136_47:
  3216  0003E4  2EE8               	decfsz	wreg,f,c
  3217  0003E6  D7FE               	bra	i2u136_47
  3218  0003E8  D000               	nop2	
  3219                           
  3220                           ;lcd.c: 42: data = data << 4;
  3221  0003EA  3802               	swapf	i2lcdNibble@data,w,c
  3222  0003EC  0BF0               	andlw	240
  3223  0003EE  6E02               	movwf	i2lcdNibble@data,c
  3224                           
  3225                           ;lcd.c: 44: temp = data & 0xF0;
  3226  0003F0  5002               	movf	i2lcdNibble@data,w,c
  3227  0003F2  0BF0               	andlw	240
  3228  0003F4  6E01               	movwf	i2lcdNibble@temp,c
  3229                           
  3230                           ;lcd.c: 45: LATD = LATD & 0x0F;
  3231  0003F6  508C               	movf	3980,w,c	;volatile
  3232  0003F8  0B0F               	andlw	15
  3233  0003FA  6E8C               	movwf	3980,c	;volatile
  3234                           
  3235                           ;lcd.c: 46: LATD = temp | LATD;
  3236  0003FC  5001               	movf	i2lcdNibble@temp,w,c
  3237  0003FE  108C               	iorwf	3980,w,c	;volatile
  3238  000400  6E8C               	movwf	3980,c	;volatile
  3239                           
  3240                           ;lcd.c: 48: LATDbits.LATD3 = 0;
  3241  000402  968C               	bcf	3980,3,c	;volatile
  3242                           
  3243                           ;lcd.c: 49: _delay((unsigned long)((25)*(8000000/4000000.0)));
  3244  000404  0E10               	movlw	16
  3245  000406                     i2u137_47:
  3246  000406  2EE8               	decfsz	wreg,f,c
  3247  000408  D7FE               	bra	i2u137_47
  3248  00040A  D000               	nop2	
  3249                           
  3250                           ;lcd.c: 50: LATDbits.LATD3 = 1;
  3251  00040C  868C               	bsf	3980,3,c	;volatile
  3252                           
  3253                           ;lcd.c: 51: _delay((unsigned long)((25)*(8000000/4000000.0)));
  3254  00040E  0E10               	movlw	16
  3255  000410                     i2u138_47:
  3256  000410  2EE8               	decfsz	wreg,f,c
  3257  000412  D7FE               	bra	i2u138_47
  3258  000414  D000               	nop2	
  3259  000416  0012               	return		;funcret
  3260  000418                     __end_ofi2_lcdNibble:
  3261                           	opt stack 0
  3262                           pclatu	equ	0xFFB
  3263                           pclath	equ	0xFFA
  3264                           tblptru	equ	0xFF8
  3265                           tblptrh	equ	0xFF7
  3266                           tblptrl	equ	0xFF6
  3267                           tablat	equ	0xFF5
  3268                           prodh	equ	0xFF4
  3269                           prodl	equ	0xFF3
  3270                           intcon	equ	0xFF2
  3271                           intcon3	equ	0xFF0
  3272                           postinc0	equ	0xFEE
  3273                           fsr0h	equ	0xFEA
  3274                           fsr0l	equ	0xFE9
  3275                           wreg	equ	0xFE8
  3276                           fsr1h	equ	0xFE2
  3277                           fsr1l	equ	0xFE1
  3278                           postinc2	equ	0xFDE
  3279                           postdec2	equ	0xFDD
  3280                           fsr2h	equ	0xFDA
  3281                           fsr2l	equ	0xFD9
  3282                           status	equ	0xFD8
  3283                           pclatu	equ	0xFFB
  3284                           pclath	equ	0xFFA
  3285                           tblptru	equ	0xFF8
  3286                           tblptrh	equ	0xFF7
  3287                           tblptrl	equ	0xFF6
  3288                           tablat	equ	0xFF5
  3289                           prodh	equ	0xFF4
  3290                           prodl	equ	0xFF3
  3291                           intcon	equ	0xFF2
  3292                           intcon3	equ	0xFF0
  3293                           postinc0	equ	0xFEE
  3294                           fsr0h	equ	0xFEA
  3295                           fsr0l	equ	0xFE9
  3296                           wreg	equ	0xFE8
  3297                           fsr1h	equ	0xFE2
  3298                           fsr1l	equ	0xFE1
  3299                           postinc2	equ	0xFDE
  3300                           postdec2	equ	0xFDD
  3301                           fsr2h	equ	0xFDA
  3302                           fsr2l	equ	0xFD9
  3303                           status	equ	0xFD8
  3304                           
  3305                           	psect	rparam
  3306  0000                     pclatu	equ	0xFFB
  3307                           pclath	equ	0xFFA
  3308                           tblptru	equ	0xFF8
  3309                           tblptrh	equ	0xFF7
  3310                           tblptrl	equ	0xFF6
  3311                           tablat	equ	0xFF5
  3312                           prodh	equ	0xFF4
  3313                           prodl	equ	0xFF3
  3314                           intcon	equ	0xFF2
  3315                           intcon3	equ	0xFF0
  3316                           postinc0	equ	0xFEE
  3317                           fsr0h	equ	0xFEA
  3318                           fsr0l	equ	0xFE9
  3319                           wreg	equ	0xFE8
  3320                           fsr1h	equ	0xFE2
  3321                           fsr1l	equ	0xFE1
  3322                           postinc2	equ	0xFDE
  3323                           postdec2	equ	0xFDD
  3324                           fsr2h	equ	0xFDA
  3325                           fsr2l	equ	0xFD9
  3326                           status	equ	0xFD8
  3327                           
  3328                           	psect	temp
  3329  000050                     btemp:
  3330                           	opt stack 0
  3331  000050                     	ds	1
  3332  0000                     int$flags	set	btemp
  3333                           pclatu	equ	0xFFB
  3334                           pclath	equ	0xFFA
  3335                           tblptru	equ	0xFF8
  3336                           tblptrh	equ	0xFF7
  3337                           tblptrl	equ	0xFF6
  3338                           tablat	equ	0xFF5
  3339                           prodh	equ	0xFF4
  3340                           prodl	equ	0xFF3
  3341                           intcon	equ	0xFF2
  3342                           intcon3	equ	0xFF0
  3343                           postinc0	equ	0xFEE
  3344                           fsr0h	equ	0xFEA
  3345                           fsr0l	equ	0xFE9
  3346                           wreg	equ	0xFE8
  3347                           fsr1h	equ	0xFE2
  3348                           fsr1l	equ	0xFE1
  3349                           postinc2	equ	0xFDE
  3350                           postdec2	equ	0xFDD
  3351                           fsr2h	equ	0xFDA
  3352                           fsr2l	equ	0xFD9
  3353                           status	equ	0xFD8


Data Sizes:
    Strings     635
    Constant    10
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     71      79
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_43(CODE[22]), STR_42(CODE[20]), STR_41(CODE[15]), STR_40(CODE[23]), 
		 -> STR_39(CODE[21]), STR_38(CODE[14]), STR_37(CODE[13]), STR_36(CODE[13]), 
		 -> STR_35(CODE[16]), STR_34(CODE[23]), STR_33(CODE[21]), STR_32(CODE[14]), 
		 -> STR_31(CODE[16]), STR_30(CODE[18]), STR_29(CODE[20]), STR_28(CODE[13]), 
		 -> STR_27(CODE[23]), STR_26(CODE[20]), STR_25(CODE[13]), STR_24(CODE[12]), 
		 -> STR_23(CODE[20]), STR_22(CODE[21]), STR_21(CODE[22]), STR_20(CODE[13]), 
		 -> STR_19(CODE[21]), STR_18(CODE[13]), STR_17(CODE[21]), STR_16(CODE[13]), 
		 -> STR_15(CODE[20]), STR_14(CODE[13]), STR_13(CODE[21]), STR_12(CODE[23]), 
		 -> STR_11(CODE[24]), STR_10(CODE[21]), STR_9(CODE[24]), STR_8(CODE[24]), 
		 -> STR_7(CODE[25]), STR_6(CODE[27]), STR_5(CODE[20]), STR_4(CODE[22]), 
		 -> STR_3(CODE[19]), STR_2(CODE[16]), STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(COMRAM[2]), ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_simulate
    _simulate->_printf
    _printf->___lwmod
    _putch->_lcdNibble
    ___lwmod->___lwdiv
    _initialize->_initLCD
    _initLCD->_lcdInst
    _lcdInst->_lcdNibble

Critical Paths under _keypressed in COMRAM

    _keypressed->i2_printf
    _stopMoving->i2_printf
    i2_printf->i2___lwmod
    i2_putch->i2_lcdNibble
    i2___lwmod->i2___lwdiv
    i2_lcdInst->i2_lcdNibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _keypressed in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _keypressed in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _keypressed in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _keypressed in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _keypressed in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _keypressed in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _keypressed in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _keypressed in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _keypressed in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _keypressed in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _keypressed in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _keypressed in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _keypressed in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _keypressed in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _keypressed in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _keypressed in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5    7912
                                             66 COMRAM     5     0      5
                         _initialize
                             _printf
                           _simulate
 ---------------------------------------------------------------------------------
 (1) _simulate                                             5     5      0    3957
                                             61 COMRAM     5     5      0
                      _captureKeypad
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              21    17      4    3775
                                             49 COMRAM    12     8      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      90
                                             39 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     287
                                             44 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     290
                                             37 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _captureKeypad                                        3     1      2      23
                                             37 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0     180
                            _initLCD
                            _lcdInst
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              1     1      0      90
                                             40 COMRAM     1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (2) _lcdInst                                              1     1      0      90
                                             39 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (4) _lcdNibble                                            2     2      0      75
                                             37 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _keypressed                                          15    15      0    2176
                                             22 COMRAM    15    15      0
                         _stopMoving
                           i2_printf
 ---------------------------------------------------------------------------------
 (6) _stopMoving                                           0     0      0    1155
                          i2_lcdInst
                           i2_printf
 ---------------------------------------------------------------------------------
 (6) i2_printf                                            19    17      2    1020
                                             12 COMRAM    10     8      2
                          i2___lwdiv
                          i2___lwmod
                            i2_putch
 ---------------------------------------------------------------------------------
 (7) i2_putch                                              1     1      0     135
                                              2 COMRAM     1     1      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (7) i2___lwmod                                            5     1      4     211
                                              7 COMRAM     5     1      4
                          i2___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) i2___lwdiv                                            7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) i2_lcdInst                                            1     1      0     135
                                              2 COMRAM     1     1      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (8) i2_lcdNibble                                          2     2      0     113
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize
     _initLCD
       _lcdInst
         _lcdNibble
     _lcdInst
       _lcdNibble
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _lcdNibble
   _simulate
     _captureKeypad
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
         _lcdNibble

 _keypressed (ROOT)
   _stopMoving
     i2_lcdInst
       i2_lcdNibble
     i2_printf
       i2___lwdiv
       i2___lwmod
         i2___lwdiv (ARG)
       i2_putch
         i2_lcdNibble
   i2_printf
     i2___lwdiv
     i2___lwmod
       i2___lwdiv (ARG)
     i2_putch
       i2_lcdNibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     47      4F       1       62.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4F      34        0.0%
DATA                 0      0      4F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Feb 23 23:18:47 2017

                     l85 0334       i2___lwdiv@dividend 0001              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000              __CFG_OSC$HS 000000                      l141 0610  
                    l138 0604                      l801 0460                      l811 053A  
           __CFG_CPB$OFF 000000                      _PR2 000FCB             __CFG_CPD$OFF 000000  
                    wreg 000FE8             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   l2000 0324                     l2004 033E                     l1800 0436  
                   l1810 0456                     l1802 043A                     l1820 0518  
                   l1822 051C                     l1910 00B8                     l1920 0118  
                   l1826 0530                     l1818 0510                     l1914 00CA  
                   l1922 0120                     l1916 00D0                     l1880 0032  
                   l1874 001C                     l1884 003A                     l1798 042E  
                   l1886 0060                     l1878 002C                     l1990 02F6  
                   l1896 0088                     l1898 008C                     _ADFM 007E07  
                   _ADON 007E10                     _P1M0 007DEE                     _P1M1 007DEF  
                   STR_1 FF06                     STR_2 FF9C                     STR_3 FF57  
                   STR_4 FE87                     STR_5 FF43                     STR_6 FD83  
                   STR_7 FD9E                     STR_8 FDE7                     STR_9 FDB7  
                   u1010 033C                     u1030 0354                     u1045 0356  
                   u1307 04F6                     u1317 0384                     _LATA 000F89  
                   _LATB 000F8A                     u1327 038E                     _LATC 000F8B  
                   _LATD 000F8C                     u1337 03B0                     _LATE 000F8D  
                   u1347 03BA                     u1277 0344                     u1287 035C  
                   u1297 04C2                     _main 05C4                     fsr0h 000FEA  
                   fsr1h 000FE2       i2___lwdiv@quotient 0005                     fsr2h 000FDA  
                   fsr0l 000FE9                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0050                     prodh 000FF4                     prodl 000FF3  
                   start 000E            __CFG_IESO$OFF 000000             simulate@onus 003F  
        __end_ofi2_putch 0658            __CFG_MCLRE$ON 000000             ___param_bank 000000  
            i2_lcdNibble 03C2                    ?_main 0043                    _CCP1X 007DED  
                  _CCP1Y 007DEC                    _CCP2X 007DD5                    _CCP2Y 007DD4  
                  STR_10 FEF1                    STR_11 FDCF                    STR_12 FE44  
                  STR_13 FEC7                    STR_21 FE71                    STR_14 FFF1  
                  STR_30 FF6A                    STR_22 FE9D                    STR_31 FF8C  
                  STR_15 FF2F                    STR_23 FF1B                    STR_32 FFBB  
                  STR_40 FE16                    STR_41 FFAC                    STR_17 FEDC  
                  STR_34 FDFF                    STR_35 FF7C                    STR_19 FEB2  
                  STR_43 FE5B                    STR_27 FE2D                    STR_36 FFD7  
                  STR_37 FFE4                    STR_38 FFC9                    _LATC0 007C58  
                  _LATC1 007C59                    _LATC2 007C5A                    _LATC3 007C5B  
        __end_of___lwdiv 046A          __end_of___lwmod 0544                    i2l300 0632  
                  i2l148 02BA                    i2l801 04B2                    i2l811 057C  
                  _PORTB 000F81                    _PORTC 000F82                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
        __end_of_lcdInst 064C           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
        __end_of_initLCD 0502           __CFG_EBTRB$OFF 000000          __end_of_dpowers FD83  
                  _putch 0634                    pclath 000FFA                    tablat 000FF5  
                  status 000FD8           __CFG_PBADEN$ON 000000         __end_ofi2_printf 0262  
     __size_ofi2___lwdiv 0052       __size_ofi2___lwmod 0042          __initialization 05EA  
     __size_ofi2_lcdInst 000C             __end_of_main 05EA               i2printf@ap 0010  
                 ??_main 0048            __activetblptr 000002                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _CCP1M0 007DE8                   _CCP1M1 007DE9  
                 _CCP1M2 007DEA                   _CCP1M3 007DEB                   _CCP2M0 007DD0  
                 _CCP2M1 007DD1                   _CCP2M2 007DD2                   _CCP2M3 007DD3  
                 _ADRESH 000FC4                   _ADRESL 000FC3                   _CCPR1L 000FBE  
                 _CCPR2L 000FBB          i2lcdNibble@data 0002                   ?_putch 0001  
        i2lcdNibble@temp 0001                   _INT1IE 007F83                   _INT1IF 007F80  
                 _CVRCON 000FB5                   i2l1840 0480                   i2l1842 0488  
                 i2l1852 04A8                   i2l1844 048C                   i2l1860 0552  
                 i2l1940 015A                   i2l1862 055A                   i2l1934 0144  
                 i2l1864 055E                   i2l1944 0162                   i2l1970 01E0  
                 i2l1946 0188                   i2l1938 0154                   i2l1868 0572  
                 i2l1980 0240                   i2l1956 01B0                   i2l1974 01F2  
                 i2l1958 01B4                   i2l1982 0248                   i2l1976 01F8  
              ??i2_putch 0003                   _TMR2ON 007E52           __CFG_XINST$OFF 000000  
  __end_of_captureKeypad 061E           __CFG_STVREN$ON 000000                ??___lwdiv 002A  
              ??___lwmod 0031                   clear_0 05F0                ??_lcdInst 0028  
                 _printf 0012                ??_initLCD 0029        __end_ofi2___lwdiv 04BC  
           __mediumconst FD78        __end_ofi2___lwmod 0586                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8         __end_of_simulate 036C  
      __end_ofi2_lcdInst 0664               __accesstop 0080  __end_of__initialization 05F6  
          ___rparam_used 000001       i2___lwmod@dividend 0008           __pcstackCOMRAM 0001  
          __end_of_putch 0640              i2printf@val 0014       __size_of_lcdNibble 0056  
            i2putch@data 0003                ?i2_printf 000D                  ??_putch 0028  
           ?i2_lcdNibble 0001                  ?_printf 0032               ??i2_printf 000F  
                i2_putch 064C        __end_of_lcdNibble 03C2                  __Hparam 0000  
                __Lparam 0000                ?_simulate 0001                  ___lwdiv 0418  
                ___lwmod 0502                  __pcinit 05EA                  __ramtop 1000  
             _initialize 0586                  _lcdInst 0640                  __ptext0 05C4  
                __ptext1 02F6                  __ptext2 0012                  __ptext3 0634  
                __ptext4 0502                  __ptext5 0418                  __ptext6 0604  
                __ptext7 0586                  __ptext8 04BC                  __ptext9 0640  
        __size_of_printf 0128                  _initLCD 04BC                  _dpowers FD79  
             _keypressed 0008           __pintcode_body 0262     end_of_initialization 05F6  
          __Lmediumconst FD78                  int_func 0262                  printf@c 003D  
                printf@f 0032                  postdec2 000FDD               ??_simulate 003E  
                postinc0 000FEE                  postinc2 000FDE                _PORTBbits 000F81  
              _TRISCbits 000F94        i2___lwdiv@divisor 0003                i2___lwdiv 046A  
              i2___lwmod 0544        i2___lwdiv@counter 0007                i2_lcdInst 0658  
             _stopMoving 061E     __size_ofi2_lcdNibble 0056            mainloop@F3208 0048  
            ?_initialize 0001            i2lcdInst@data 0003           __end_of_printf 013A  
           i2printf@flag 0012             i2printf@prec 0013      start_initialization 05EA  
            ?_keypressed 0001                i2printf@c 0016                i2printf@f 000D  
 __size_of_captureKeypad 001A               ?i2___lwdiv 0001               ?i2___lwmod 0008  
      __size_ofi2_printf 0128               ?i2_lcdInst 0001         __CFG_LPT1OSC$OFF 000000  
               ??_printf 0036              __pbssCOMRAM 0048        i2___lwmod@divisor 000A  
      i2___lwmod@counter 000C                 ?i2_putch 0001      __size_of_initialize 003E  
            ?_stopMoving 0001         ___lwdiv@dividend 0026        __CFG_CCP2MX$PORTC 000000  
          _captureKeypad 0604      __size_of_keypressed 02EE                __pintcode 0008  
          __pmediumconst FD78                _lcdNibble 036C                 ?___lwdiv 0026  
               ?___lwmod 002D        __size_of_simulate 0076                 ?_lcdInst 0001  
               ?_initLCD 0001         ___lwdiv@quotient 002A              ??i2___lwdiv 0005  
            ??i2___lwmod 000C           __size_of_putch 000C              ??i2_lcdInst 0003  
               _LATDbits 000F8C                 i2u135_47 03DA                 i2u136_47 03E4  
               i2u137_47 0406                 i2u138_47 0410           ?_captureKeypad 0026  
       __CFG_WDTPS$32768 000000               ?_lcdNibble 0001               _ADCON0bits 000FC2  
          lcdNibble@data 0027               printf@flag 0039            lcdNibble@temp 0026  
             printf@prec 003A      __size_of_stopMoving 0016                 i2_printf 013A  
  captureKeypad@keypress 0028         __size_ofi2_putch 000C       keypressed@keypress 0025  
               __Hrparam 0000                 __Lrparam 0000       __CFG_BOREN$SBORDIS 000000  
       __size_of___lwdiv 0052         __size_of___lwmod 0042             ??_initialize 002A  
       __size_of_lcdInst 000C         __size_of_initLCD 0046             ??_keypressed 0017  
        ___lwdiv@divisor 0028          ___lwdiv@counter 002C                 __ptext10 036C  
               __ptext12 061E                 __ptext13 013A                 __ptext14 064C  
               __ptext15 0544                 __ptext16 046A                 __ptext17 0658  
               __ptext18 03C2            __size_of_main 0026       __end_of_initialize 05C4  
        ??_captureKeypad 0028            ??i2_lcdNibble 0001              ??_lcdNibble 0026  
               _simulate 02F6       __end_of_keypressed 02F6                 int$flags 0050  
               main@argc 0043                 main@argv 0045                printf@val 003B  
              simulate@i 0041                putch@data 0028               _INTCONbits 000FF2  
               intlevel2 0000         ___lwmod@dividend 002D             ??_stopMoving 0017  
               printf@ap 0037              lcdInst@data 0028      __end_ofi2_lcdNibble 0418  
        ___lwmod@divisor 002F          ___lwmod@counter 0031       __end_of_stopMoving 0634  

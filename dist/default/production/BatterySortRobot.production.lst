

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Feb 13 17:01:14 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48  0000                     
    49                           ; Version 1.41
    50                           ; Generated 25/01/2017 GMT
    51                           ; 
    52                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F4620 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     
    84                           	psect	idataBANK1
    85  00135C                     __pidataBANK1:
    86                           	opt stack 0
    87                           
    88                           ;initializer for println@F3063
    89  00135C  20                 	db	32
    90  00135D  20                 	db	32
    91  00135E  20                 	db	32
    92  00135F  20                 	db	32
    93  001360  20                 	db	32
    94  001361  20                 	db	32
    95  001362  20                 	db	32
    96  001363  20                 	db	32
    97  001364  20                 	db	32
    98  001365  20                 	db	32
    99  001366  20                 	db	32
   100  001367  20                 	db	32
   101  001368  20                 	db	32
   102  001369  20                 	db	32
   103  00136A  20                 	db	32
   104  00136B  20                 	db	32
   105  00136C  20                 	db	32
   106  00136D  20                 	db	32
   107  00136E  20                 	db	32
   108  00136F  20                 	db	32
   109  001370  20                 	db	32
   110  001371  20                 	db	32
   111  001372  20                 	db	32
   112  001373  20                 	db	32
   113  001374  20                 	db	32
   114  001375  20                 	db	32
   115  001376  20                 	db	32
   116  001377  20                 	db	32
   117  001378  20                 	db	32
   118  001379  20                 	db	32
   119  00137A  20                 	db	32
   120  00137B  20                 	db	32
   121  00137C  20                 	db	32
   122  00137D  20                 	db	32
   123  00137E  20                 	db	32
   124  00137F  20                 	db	32
   125  001380  20                 	db	32
   126  001381  20                 	db	32
   127  001382  20                 	db	32
   128  001383  20                 	db	32
   129  001384  00                 	db	0
   130                           
   131                           	psect	mediumconst
   132  00FED8                     __pmediumconst:
   133                           	opt stack 0
   134  00FED8  00                 	db	0
   135  00FED9                     _dpowers:
   136                           	opt stack 0
   137  00FED9  0001               	dw	1
   138  00FEDB  000A               	dw	10
   139  00FEDD  0064               	dw	100
   140  00FEDF  03E8               	dw	1000
   141  00FEE1  2710               	dw	10000
   142  00FEE3                     __end_of_dpowers:
   143                           	opt stack 0
   144  0000                     _PORTB	set	3969
   145  0000                     _PORTBbits	set	3969
   146  0000                     _ADRESL	set	4035
   147  0000                     _ADRESH	set	4036
   148  0000                     _ADCON0bits	set	4034
   149  0000                     _LATDbits	set	3980
   150  0000                     _INTCONbits	set	4082
   151  0000                     _CVRCON	set	4021
   152  0000                     _ADCON1	set	4033
   153  0000                     _ADCON0	set	4034
   154  0000                     _LATE	set	3981
   155  0000                     _LATD	set	3980
   156  0000                     _LATC	set	3979
   157  0000                     _LATB	set	3978
   158  0000                     _LATA	set	3977
   159  0000                     _TRISE	set	3990
   160  0000                     _TRISD	set	3989
   161  0000                     _TRISC	set	3988
   162  0000                     _TRISB	set	3987
   163  0000                     _TRISA	set	3986
   164  0000                     _INT1IF	set	32640
   165  0000                     _ADON	set	32272
   166  0000                     _INT1IE	set	32643
   167  0000                     _ADFM	set	32263
   168  00FEE3                     STR_3:
   169  00FEE3  73                 	db	115	;'s'
   170  00FEE4  6F                 	db	111	;'o'
   171  00FEE5  72                 	db	114	;'r'
   172  00FEE6  74                 	db	116	;'t'
   173  00FEE7  65                 	db	101	;'e'
   174  00FEE8  64                 	db	100	;'d'
   175  00FEE9  20                 	db	32
   176  00FEEA  25                 	db	37
   177  00FEEB  64                 	db	100	;'d'
   178  00FEEC  2C                 	db	44
   179  00FEED  25                 	db	37
   180  00FEEE  64                 	db	100	;'d'
   181  00FEEF  2C                 	db	44
   182  00FEF0  25                 	db	37
   183  00FEF1  64                 	db	100	;'d'
   184  00FEF2  2C                 	db	44
   185  00FEF3  25                 	db	37
   186  00FEF4  64                 	db	100	;'d'
   187  00FEF5  00                 	db	0
   188  00FEF6  53                 	db	83	;'S'
   189  00FEF7  6F                 	db	111	;'o'
   190  00FEF8  72                 	db	114	;'r'
   191  00FEF9  74                 	db	116	;'t'
   192  00FEFA  69                 	db	105	;'i'
   193  00FEFB  6E                 	db	110	;'n'
   194  00FEFC  67                 	db	103	;'g'
   195  00FEFD  20                 	db	32
   196  00FEFE  43                 	db	67	;'C'
   197  00FEFF  6F                 	db	111	;'o'
   198  00FF00  6D                 	db	109	;'m'
   199  00FF01  70                 	db	112	;'p'
   200  00FF02  6C                 	db	108	;'l'
   201  00FF03  65                 	db	101	;'e'
   202  00FF04  74                 	db	116	;'t'
   203  00FF05  65                 	db	101	;'e'
   204  00FF06  00                 	db	0
   205  00FF07  50                 	db	80	;'P'
   206  00FF08  72                 	db	114	;'r'
   207  00FF09  65                 	db	101	;'e'
   208  00FF0A  73                 	db	115	;'s'
   209  00FF0B  73                 	db	115	;'s'
   210  00FF0C  20                 	db	32
   211  00FF0D  61                 	db	97	;'a'
   212  00FF0E  20                 	db	32
   213  00FF0F  6E                 	db	110	;'n'
   214  00FF10  75                 	db	117	;'u'
   215  00FF11  6D                 	db	109	;'m'
   216  00FF12  62                 	db	98	;'b'
   217  00FF13  65                 	db	101	;'e'
   218  00FF14  72                 	db	114	;'r'
   219  00FF15  00                 	db	0
   220  00FF16  54                 	db	84	;'T'
   221  00FF17  69                 	db	105	;'i'
   222  00FF18  6D                 	db	109	;'m'
   223  00FF19  65                 	db	101	;'e'
   224  00FF1A  20                 	db	32
   225  00FF1B  45                 	db	69	;'E'
   226  00FF1C  6C                 	db	108	;'l'
   227  00FF1D  61                 	db	97	;'a'
   228  00FF1E  70                 	db	112	;'p'
   229  00FF1F  73                 	db	115	;'s'
   230  00FF20  65                 	db	101	;'e'
   231  00FF21  64                 	db	100	;'d'
   232  00FF22  3A                 	db	58	;':'
   233  00FF23  00                 	db	0
   234  00FF24  54                 	db	84	;'T'
   235  00FF25  6F                 	db	111	;'o'
   236  00FF26  74                 	db	116	;'t'
   237  00FF27  61                 	db	97	;'a'
   238  00FF28  6C                 	db	108	;'l'
   239  00FF29  20                 	db	32
   240  00FF2A  53                 	db	83	;'S'
   241  00FF2B  6F                 	db	111	;'o'
   242  00FF2C  72                 	db	114	;'r'
   243  00FF2D  74                 	db	116	;'t'
   244  00FF2E  65                 	db	101	;'e'
   245  00FF2F  64                 	db	100	;'d'
   246  00FF30  3A                 	db	58	;':'
   247  00FF31  00                 	db	0
   248  00FF32  46                 	db	70	;'F'
   249  00FF33  6F                 	db	111	;'o'
   250  00FF34  72                 	db	114	;'r'
   251  00FF35  20                 	db	32
   252  00FF36  6D                 	db	109	;'m'
   253  00FF37  6F                 	db	111	;'o'
   254  00FF38  72                 	db	114	;'r'
   255  00FF39  65                 	db	101	;'e'
   256  00FF3A  20                 	db	32
   257  00FF3B  69                 	db	105	;'i'
   258  00FF3C  6E                 	db	110	;'n'
   259  00FF3D  66                 	db	102	;'f'
   260  00FF3E  6F                 	db	111	;'o'
   261  00FF3F  00                 	db	0
   262  00FF40                     STR_26:
   263  00FF40  75                 	db	117	;'u'
   264  00FF41  6E                 	db	110	;'n'
   265  00FF42  63                 	db	99	;'c'
   266  00FF43  68                 	db	104	;'h'
   267  00FF44  61                 	db	97	;'a'
   268  00FF45  72                 	db	114	;'r'
   269  00FF46  67                 	db	103	;'g'
   270  00FF47  65                 	db	101	;'e'
   271  00FF48  64                 	db	100	;'d'
   272  00FF49  20                 	db	32
   273  00FF4A  41                 	db	65	;'A'
   274  00FF4B  41                 	db	65	;'A'
   275  00FF4C  00                 	db	0
   276  00FF4D                     STR_32:
   277  00FF4D  75                 	db	117	;'u'
   278  00FF4E  6E                 	db	110	;'n'
   279  00FF4F  63                 	db	99	;'c'
   280  00FF50  68                 	db	104	;'h'
   281  00FF51  61                 	db	97	;'a'
   282  00FF52  72                 	db	114	;'r'
   283  00FF53  67                 	db	103	;'g'
   284  00FF54  65                 	db	101	;'e'
   285  00FF55  64                 	db	100	;'d'
   286  00FF56  20                 	db	32
   287  00FF57  39                 	db	57	;'9'
   288  00FF58  56                 	db	86	;'V'
   289  00FF59  00                 	db	0
   290  00FF5A  25                 	db	37
   291  00FF5B  64                 	db	100	;'d'
   292  00FF5C  20                 	db	32
   293  00FF5D  62                 	db	98	;'b'
   294  00FF5E  61                 	db	97	;'a'
   295  00FF5F  74                 	db	116	;'t'
   296  00FF60  74                 	db	116	;'t'
   297  00FF61  65                 	db	101	;'e'
   298  00FF62  72                 	db	114	;'r'
   299  00FF63  69                 	db	105	;'i'
   300  00FF64  65                 	db	101	;'e'
   301  00FF65  73                 	db	115	;'s'
   302  00FF66  00                 	db	0
   303  00FF67                     STR_35:
   304  00FF67  75                 	db	117	;'u'
   305  00FF68  6E                 	db	110	;'n'
   306  00FF69  63                 	db	99	;'c'
   307  00FF6A  68                 	db	104	;'h'
   308  00FF6B  61                 	db	97	;'a'
   309  00FF6C  72                 	db	114	;'r'
   310  00FF6D  67                 	db	103	;'g'
   311  00FF6E  65                 	db	101	;'e'
   312  00FF6F  64                 	db	100	;'d'
   313  00FF70  20                 	db	32
   314  00FF71  43                 	db	67	;'C'
   315  00FF72  00                 	db	0
   316  00FF73                     STR_23:
   317  00FF73  25                 	db	37
   318  00FF74  64                 	db	100	;'d'
   319  00FF75  20                 	db	32
   320  00FF76  72                 	db	114	;'r'
   321  00FF77  65                 	db	101	;'e'
   322  00FF78  63                 	db	99	;'c'
   323  00FF79  65                 	db	101	;'e'
   324  00FF7A  69                 	db	105	;'i'
   325  00FF7B  76                 	db	118	;'v'
   326  00FF7C  65                 	db	101	;'e'
   327  00FF7D  64                 	db	100	;'d'
   328  00FF7E  00                 	db	0
   329  00FF7F  55                 	db	85	;'U'
   330  00FF80  6E                 	db	110	;'n'
   331  00FF81  63                 	db	99	;'c'
   332  00FF82  68                 	db	104	;'h'
   333  00FF83  61                 	db	97	;'a'
   334  00FF84  72                 	db	114	;'r'
   335  00FF85  67                 	db	103	;'g'
   336  00FF86  65                 	db	101	;'e'
   337  00FF87  64                 	db	100	;'d'
   338  00FF88  3A                 	db	58	;':'
   339  00FF89  00                 	db	0
   340  00FF8A  41                 	db	65	;'A'
   341  00FF8B  41                 	db	65	;'A'
   342  00FF8C  20                 	db	32
   343  00FF8D  53                 	db	83	;'S'
   344  00FF8E  6F                 	db	111	;'o'
   345  00FF8F  72                 	db	114	;'r'
   346  00FF90  74                 	db	116	;'t'
   347  00FF91  65                 	db	101	;'e'
   348  00FF92  64                 	db	100	;'d'
   349  00FF93  3A                 	db	58	;':'
   350  00FF94  00                 	db	0
   351  00FF95  39                 	db	57	;'9'
   352  00FF96  56                 	db	86	;'V'
   353  00FF97  20                 	db	32
   354  00FF98  53                 	db	83	;'S'
   355  00FF99  6F                 	db	111	;'o'
   356  00FF9A  72                 	db	114	;'r'
   357  00FF9B  74                 	db	116	;'t'
   358  00FF9C  65                 	db	101	;'e'
   359  00FF9D  64                 	db	100	;'d'
   360  00FF9E  3A                 	db	58	;':'
   361  00FF9F  00                 	db	0
   362  00FFA0                     STR_30:
   363  00FFA0  63                 	db	99	;'c'
   364  00FFA1  68                 	db	104	;'h'
   365  00FFA2  61                 	db	97	;'a'
   366  00FFA3  6E                 	db	110	;'n'
   367  00FFA4  6E                 	db	110	;'n'
   368  00FFA5  65                 	db	101	;'e'
   369  00FFA6  6C                 	db	108	;'l'
   370  00FFA7  20                 	db	32
   371  00FFA8  25                 	db	37
   372  00FFA9  64                 	db	100	;'d'
   373  00FFAA  00                 	db	0
   374  00FFAB  25                 	db	37
   375  00FFAC  64                 	db	100	;'d'
   376  00FFAD  20                 	db	32
   377  00FFAE  73                 	db	115	;'s'
   378  00FFAF  65                 	db	101	;'e'
   379  00FFB0  63                 	db	99	;'c'
   380  00FFB1  6F                 	db	111	;'o'
   381  00FFB2  6E                 	db	110	;'n'
   382  00FFB3  64                 	db	100	;'d'
   383  00FFB4  73                 	db	115	;'s'
   384  00FFB5  00                 	db	0
   385  00FFB6                     STR_1:
   386  00FFB6  53                 	db	83	;'S'
   387  00FFB7  6F                 	db	111	;'o'
   388  00FFB8  72                 	db	114	;'r'
   389  00FFB9  74                 	db	116	;'t'
   390  00FFBA  69                 	db	105	;'i'
   391  00FFBB  6E                 	db	110	;'n'
   392  00FFBC  67                 	db	103	;'g'
   393  00FFBD  2E                 	db	46
   394  00FFBE  2E                 	db	46
   395  00FFBF  2E                 	db	46
   396  00FFC0  00                 	db	0
   397  00FFC1  43                 	db	67	;'C'
   398  00FFC2  20                 	db	32
   399  00FFC3  53                 	db	83	;'S'
   400  00FFC4  6F                 	db	111	;'o'
   401  00FFC5  72                 	db	114	;'r'
   402  00FFC6  74                 	db	116	;'t'
   403  00FFC7  65                 	db	101	;'e'
   404  00FFC8  64                 	db	100	;'d'
   405  00FFC9  3A                 	db	58	;':'
   406  00FFCA  00                 	db	0
   407  00FFCB                     STR_22:
   408  00FFCB  45                 	db	69	;'E'
   409  00FFCC  6D                 	db	109	;'m'
   410  00FFCD  65                 	db	101	;'e'
   411  00FFCE  72                 	db	114	;'r'
   412  00FFCF  67                 	db	103	;'g'
   413  00FFD0  65                 	db	101	;'e'
   414  00FFD1  6E                 	db	110	;'n'
   415  00FFD2  63                 	db	99	;'c'
   416  00FFD3  79                 	db	121	;'y'
   417  00FFD4  00                 	db	0
   418  00FFD5                     STR_4:
   419  00FFD5  57                 	db	87	;'W'
   420  00FFD6  65                 	db	101	;'e'
   421  00FFD7  6C                 	db	108	;'l'
   422  00FFD8  63                 	db	99	;'c'
   423  00FFD9  6F                 	db	111	;'o'
   424  00FFDA  6D                 	db	109	;'m'
   425  00FFDB  65                 	db	101	;'e'
   426  00FFDC  21                 	db	33
   427  00FFDD  00                 	db	0
   428  00FFDE                     STR_36:
   429  00FFDE  28                 	db	40
   430  00FFDF  6E                 	db	110	;'n'
   431  00FFE0  75                 	db	117	;'u'
   432  00FFE1  6C                 	db	108	;'l'
   433  00FFE2  6C                 	db	108	;'l'
   434  00FFE3  29                 	db	41
   435  00FFE4  00                 	db	0
   436  00FFE5  6E                 	db	110	;'n'
   437  00FFE6  6F                 	db	111	;'o'
   438  00FFE7  20                 	db	32
   439  00FFE8  41                 	db	65	;'A'
   440  00FFE9  41                 	db	65	;'A'
   441  00FFEA  00                 	db	0
   442  00FFEB                     STR_33:
   443  00FFEB  6E                 	db	110	;'n'
   444  00FFEC  6F                 	db	111	;'o'
   445  00FFED  20                 	db	32
   446  00FFEE  39                 	db	57	;'9'
   447  00FFEF  00                 	db	0
   448  00FFF0  41                 	db	65	;'A'
   449  00FFF1  41                 	db	65	;'A'
   450  00FFF2  3A                 	db	58	;':'
   451  00FFF3  00                 	db	0
   452  00FFF4                     STR_28:
   453  00FFF4  56                 	db	86	;'V'
   454  00FFF5  33                 	db	51	;'3'
   455  00FFF6  00                 	db	0
   456  00FFF7                     STR_29:
   457  00FFF7  39                 	db	57	;'9'
   458  00FFF8  3A                 	db	58	;':'
   459  00FFF9  00                 	db	0
   460  00FFFA                     STR_5:
   461  00FFFA  25                 	db	37
   462  00FFFB  73                 	db	115	;'s'
   463  00FFFC  00                 	db	0
   464  00FFFD  20                 	db	32
   465  00FFFE  00                 	db	0
   466  0000                     
   467                           ; #config settings
   468  00FFFF  00                 	db	0	; dummy byte at the end
   469  0000                     
   470                           	psect	cinit
   471  0012A0                     __pcinit:
   472                           	opt stack 0
   473  0012A0                     start_initialization:
   474                           	opt stack 0
   475  0012A0                     __initialization:
   476                           	opt stack 0
   477                           
   478                           ; Initialize objects allocated to BANK1 (41 bytes)
   479                           ; load TBLPTR registers with __pidataBANK1
   480  0012A0  0E5C               	movlw	low __pidataBANK1
   481  0012A2  6EF6               	movwf	tblptrl,c
   482  0012A4  0E13               	movlw	high __pidataBANK1
   483  0012A6  6EF7               	movwf	tblptrh,c
   484  0012A8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   485  0012AA  6EF8               	movwf	tblptru,c
   486  0012AC  EE01  F000         	lfsr	0,__pdataBANK1
   487  0012B0  EE10 F029          	lfsr	1,41
   488  0012B4                     copy_data0:
   489  0012B4  0009               	tblrd		*+
   490  0012B6  CFF5 FFEE          	movff	tablat,postinc0
   491  0012BA  50E5               	movf	postdec1,w,c
   492  0012BC  50E1               	movf	fsr1l,w,c
   493  0012BE  E1FA               	bnz	copy_data0
   494                           
   495                           ; Clear objects allocated to BANK0 (8 bytes)
   496  0012C0  EE00  F0EC         	lfsr	0,__pbssBANK0
   497  0012C4  0E08               	movlw	8
   498  0012C6                     clear_0:
   499  0012C6  6AEE               	clrf	postinc0,c
   500  0012C8  06E8               	decf	wreg,f,c
   501  0012CA  E1FD               	bnz	clear_0
   502                           
   503                           ; Clear objects allocated to COMRAM (8 bytes)
   504  0012CC  EE00  F059         	lfsr	0,__pbssCOMRAM
   505  0012D0  0E08               	movlw	8
   506  0012D2                     clear_1:
   507  0012D2  6AEE               	clrf	postinc0,c
   508  0012D4  06E8               	decf	wreg,f,c
   509  0012D6  E1FD               	bnz	clear_1
   510  0012D8                     end_of_initialization:
   511                           	opt stack 0
   512  0012D8                     __end_of__initialization:
   513                           	opt stack 0
   514  0012D8  9061               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   515  0012DA  9261               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   516  0012DC  0100               	movlb	0
   517  0012DE  EFB3  F007         	goto	_main	;jump to C main() function
   518                           tblptru	equ	0xFF8
   519                           tblptrh	equ	0xFF7
   520                           tblptrl	equ	0xFF6
   521                           tablat	equ	0xFF5
   522                           postinc0	equ	0xFEE
   523                           wreg	equ	0xFE8
   524                           postdec1	equ	0xFE5
   525                           fsr1l	equ	0xFE1
   526                           
   527                           	psect	bssCOMRAM
   528  000059                     __pbssCOMRAM:
   529                           	opt stack 0
   530  000059                     mainloop@F3183:
   531                           	opt stack 0
   532  000059                     	ds	8
   533                           tblptru	equ	0xFF8
   534                           tblptrh	equ	0xFF7
   535                           tblptrl	equ	0xFF6
   536                           tablat	equ	0xFF5
   537                           postinc0	equ	0xFEE
   538                           wreg	equ	0xFE8
   539                           postdec1	equ	0xFE5
   540                           fsr1l	equ	0xFE1
   541                           
   542                           	psect	bssBANK0
   543  0000EC                     __pbssBANK0:
   544                           	opt stack 0
   545  0000EC                     simulate@F3192:
   546                           	opt stack 0
   547  0000EC                     	ds	8
   548                           tblptru	equ	0xFF8
   549                           tblptrh	equ	0xFF7
   550                           tblptrl	equ	0xFF6
   551                           tablat	equ	0xFF5
   552                           postinc0	equ	0xFEE
   553                           wreg	equ	0xFE8
   554                           postdec1	equ	0xFE5
   555                           fsr1l	equ	0xFE1
   556                           
   557                           	psect	dataBANK1
   558  000100                     __pdataBANK1:
   559                           	opt stack 0
   560  000100                     println@F3063:
   561                           	opt stack 0
   562  000100                     	ds	41
   563                           tblptru	equ	0xFF8
   564                           tblptrh	equ	0xFF7
   565                           tblptrl	equ	0xFF6
   566                           tablat	equ	0xFF5
   567                           postinc0	equ	0xFEE
   568                           wreg	equ	0xFE8
   569                           postdec1	equ	0xFE5
   570                           fsr1l	equ	0xFE1
   571                           
   572                           	psect	cstackBANK0
   573  000080                     __pcstackBANK0:
   574                           	opt stack 0
   575  000080                     ?_captureKeypad:
   576                           	opt stack 0
   577  000080                     ?_AD:
   578                           	opt stack 0
   579  000080                     ?___lwdiv:
   580                           	opt stack 0
   581  000080                     ?___ftpack:
   582                           	opt stack 0
   583  000080                     lcdNibble@temp:
   584                           	opt stack 0
   585  000080                     moveBigNose@prev:
   586                           	opt stack 0
   587  000080                     moveSmallNose@prev:
   588                           	opt stack 0
   589  000080                     ___lwdiv@dividend:
   590                           	opt stack 0
   591  000080                     ___ftpack@arg:
   592                           	opt stack 0
   593                           
   594                           ; 3 bytes @ 0x0
   595  000080                     	ds	1
   596  000081                     lcdNibble@data:
   597                           	opt stack 0
   598                           
   599                           ; 1 bytes @ 0x1
   600  000081                     	ds	1
   601  000082                     ??_AD:
   602  000082                     lcdInst@data:
   603                           	opt stack 0
   604  000082                     putch@data:
   605                           	opt stack 0
   606  000082                     captureKeypad@keypress:
   607                           	opt stack 0
   608  000082                     moveBigNose@next:
   609                           	opt stack 0
   610  000082                     moveSmallNose@next:
   611                           	opt stack 0
   612  000082                     ___lwdiv@divisor:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0x2
   616  000082                     	ds	1
   617  000083                     ??_initLCD:
   618  000083                     ___ftpack@exp:
   619                           	opt stack 0
   620                           
   621                           ; 1 bytes @ 0x3
   622  000083                     	ds	1
   623  000084                     ??_moveSmallNose:
   624  000084                     ??_moveBigNose:
   625  000084                     AD@channel:
   626                           	opt stack 0
   627  000084                     ___ftpack@sign:
   628                           	opt stack 0
   629  000084                     ___lwdiv@quotient:
   630                           	opt stack 0
   631                           
   632                           ; 2 bytes @ 0x4
   633  000084                     	ds	1
   634  000085                     ??___ftpack:
   635                           
   636                           ; 1 bytes @ 0x5
   637  000085                     	ds	1
   638  000086                     ___lwdiv@counter:
   639                           	opt stack 0
   640                           
   641                           ; 1 bytes @ 0x6
   642  000086                     	ds	1
   643  000087                     ?___lwmod:
   644                           	opt stack 0
   645  000087                     ___lwmod@dividend:
   646                           	opt stack 0
   647                           
   648                           ; 2 bytes @ 0x7
   649  000087                     	ds	1
   650  000088                     ?___awtoft:
   651                           	opt stack 0
   652  000088                     ___awtoft@c:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0x8
   656  000088                     	ds	1
   657  000089                     ___lwmod@divisor:
   658                           	opt stack 0
   659                           
   660                           ; 2 bytes @ 0x9
   661  000089                     	ds	2
   662  00008B                     ___awtoft@sign:
   663                           	opt stack 0
   664  00008B                     ___lwmod@counter:
   665                           	opt stack 0
   666                           
   667                           ; 1 bytes @ 0xB
   668  00008B                     	ds	1
   669  00008C                     ?_printf:
   670                           	opt stack 0
   671  00008C                     ?___ftmul:
   672                           	opt stack 0
   673  00008C                     printf@f:
   674                           	opt stack 0
   675  00008C                     ___ftmul@f1:
   676                           	opt stack 0
   677                           
   678                           ; 3 bytes @ 0xC
   679  00008C                     	ds	3
   680  00008F                     ___ftmul@f2:
   681                           	opt stack 0
   682                           
   683                           ; 3 bytes @ 0xF
   684  00008F                     	ds	3
   685  000092                     ??___ftmul:
   686                           
   687                           ; 1 bytes @ 0x12
   688  000092                     	ds	3
   689  000095                     ___ftmul@exp:
   690                           	opt stack 0
   691                           
   692                           ; 1 bytes @ 0x15
   693  000095                     	ds	1
   694  000096                     ??_printf:
   695  000096                     ___ftmul@f3_as_product:
   696                           	opt stack 0
   697                           
   698                           ; 3 bytes @ 0x16
   699  000096                     	ds	1
   700  000097                     printf@flag:
   701                           	opt stack 0
   702                           
   703                           ; 1 bytes @ 0x17
   704  000097                     	ds	1
   705  000098                     printf@prec:
   706                           	opt stack 0
   707                           
   708                           ; 1 bytes @ 0x18
   709  000098                     	ds	1
   710  000099                     ___ftmul@cntr:
   711                           	opt stack 0
   712  000099                     printf@ap:
   713                           	opt stack 0
   714                           
   715                           ; 2 bytes @ 0x19
   716  000099                     	ds	1
   717  00009A                     ___ftmul@sign:
   718                           	opt stack 0
   719                           
   720                           ; 1 bytes @ 0x1A
   721  00009A                     	ds	1
   722  00009B                     ?___ftdiv:
   723                           	opt stack 0
   724  00009B                     printf@cp:
   725                           	opt stack 0
   726  00009B                     ___ftdiv@f1:
   727                           	opt stack 0
   728                           
   729                           ; 3 bytes @ 0x1B
   730  00009B                     	ds	2
   731  00009D                     printf@val:
   732                           	opt stack 0
   733                           
   734                           ; 2 bytes @ 0x1D
   735  00009D                     	ds	1
   736  00009E                     ___ftdiv@f2:
   737                           	opt stack 0
   738                           
   739                           ; 3 bytes @ 0x1E
   740  00009E                     	ds	1
   741  00009F                     printf@c:
   742                           	opt stack 0
   743                           
   744                           ; 1 bytes @ 0x1F
   745  00009F                     	ds	1
   746  0000A0                     println@data:
   747                           	opt stack 0
   748                           
   749                           ; 2 bytes @ 0x20
   750  0000A0                     	ds	1
   751  0000A1                     ??___ftdiv:
   752                           
   753                           ; 1 bytes @ 0x21
   754  0000A1                     	ds	1
   755  0000A2                     ??_println:
   756                           
   757                           ; 1 bytes @ 0x22
   758  0000A2                     	ds	2
   759  0000A4                     ___ftdiv@cntr:
   760                           	opt stack 0
   761  0000A4                     println@output:
   762                           	opt stack 0
   763                           
   764                           ; 41 bytes @ 0x24
   765  0000A4                     	ds	1
   766  0000A5                     ___ftdiv@f3:
   767                           	opt stack 0
   768                           
   769                           ; 3 bytes @ 0x25
   770  0000A5                     	ds	3
   771  0000A8                     ___ftdiv@exp:
   772                           	opt stack 0
   773                           
   774                           ; 1 bytes @ 0x28
   775  0000A8                     	ds	1
   776  0000A9                     ___ftdiv@sign:
   777                           	opt stack 0
   778                           
   779                           ; 1 bytes @ 0x29
   780  0000A9                     	ds	1
   781  0000AA                     ___ftge@ff1:
   782                           	opt stack 0
   783                           
   784                           ; 3 bytes @ 0x2A
   785  0000AA                     	ds	3
   786  0000AD                     ___ftge@ff2:
   787                           	opt stack 0
   788                           
   789                           ; 3 bytes @ 0x2D
   790  0000AD                     	ds	3
   791  0000B0                     ??___ftge:
   792                           
   793                           ; 1 bytes @ 0x30
   794  0000B0                     	ds	3
   795  0000B3                     ?_checkV:
   796                           	opt stack 0
   797  0000B3                     checkV@voltage:
   798                           	opt stack 0
   799                           
   800                           ; 2 bytes @ 0x33
   801  0000B3                     	ds	2
   802  0000B5                     checkV@max:
   803                           	opt stack 0
   804                           
   805                           ; 2 bytes @ 0x35
   806  0000B5                     	ds	2
   807  0000B7                     ??_checkV:
   808                           
   809                           ; 1 bytes @ 0x37
   810  0000B7                     	ds	22
   811  0000CD                     println@i:
   812                           	opt stack 0
   813                           
   814                           ; 2 bytes @ 0x4D
   815  0000CD                     	ds	2
   816  0000CF                     ?_checkC9V:
   817                           	opt stack 0
   818  0000CF                     checkC9V@sorted:
   819                           	opt stack 0
   820                           
   821                           ; 2 bytes @ 0x4F
   822  0000CF                     	ds	2
   823  0000D1                     ??_checkC9V:
   824                           
   825                           ; 1 bytes @ 0x51
   826  0000D1                     	ds	2
   827  0000D3                     _checkC9V$500:
   828                           	opt stack 0
   829                           
   830                           ; 2 bytes @ 0x53
   831  0000D3                     	ds	2
   832  0000D5                     checkC9V@i:
   833                           	opt stack 0
   834                           
   835                           ; 2 bytes @ 0x55
   836  0000D5                     	ds	2
   837  0000D7                     ??_simulate:
   838                           
   839                           ; 1 bytes @ 0x57
   840  0000D7                     	ds	2
   841  0000D9                     simulate@stop:
   842                           	opt stack 0
   843                           
   844                           ; 2 bytes @ 0x59
   845  0000D9                     	ds	2
   846  0000DB                     simulate@sorted:
   847                           	opt stack 0
   848                           
   849                           ; 8 bytes @ 0x5B
   850  0000DB                     	ds	8
   851  0000E3                     
   852                           ; 2 bytes @ 0x63
   853  0000E3                     	ds	2
   854  0000E5                     
   855                           ; 3 bytes @ 0x65
   856  0000E5                     	ds	3
   857  0000E8                     main@bigNose:
   858                           	opt stack 0
   859                           
   860                           ; 2 bytes @ 0x68
   861  0000E8                     	ds	2
   862  0000EA                     main@smallNose:
   863                           	opt stack 0
   864                           
   865                           ; 2 bytes @ 0x6A
   866  0000EA                     	ds	2
   867                           tblptru	equ	0xFF8
   868                           tblptrh	equ	0xFF7
   869                           tblptrl	equ	0xFF6
   870                           tablat	equ	0xFF5
   871                           postinc0	equ	0xFEE
   872                           wreg	equ	0xFE8
   873                           postdec1	equ	0xFE5
   874                           fsr1l	equ	0xFE1
   875                           
   876                           	psect	cstackCOMRAM
   877  000001                     __pcstackCOMRAM:
   878                           	opt stack 0
   879  000001                     ?i2___lwdiv:
   880                           	opt stack 0
   881  000001                     i2lcdNibble@temp:
   882                           	opt stack 0
   883  000001                     i2___lwdiv@dividend:
   884                           	opt stack 0
   885                           
   886                           ; 2 bytes @ 0x0
   887  000001                     	ds	1
   888  000002                     i2lcdNibble@data:
   889                           	opt stack 0
   890                           
   891                           ; 1 bytes @ 0x1
   892  000002                     	ds	1
   893  000003                     i2putch@data:
   894                           	opt stack 0
   895  000003                     i2___lwdiv@divisor:
   896                           	opt stack 0
   897                           
   898                           ; 2 bytes @ 0x2
   899  000003                     	ds	2
   900  000005                     i2___lwdiv@quotient:
   901                           	opt stack 0
   902                           
   903                           ; 2 bytes @ 0x4
   904  000005                     	ds	2
   905  000007                     i2___lwdiv@counter:
   906                           	opt stack 0
   907                           
   908                           ; 1 bytes @ 0x6
   909  000007                     	ds	1
   910  000008                     ?i2___lwmod:
   911                           	opt stack 0
   912  000008                     i2___lwmod@dividend:
   913                           	opt stack 0
   914                           
   915                           ; 2 bytes @ 0x7
   916  000008                     	ds	2
   917  00000A                     i2___lwmod@divisor:
   918                           	opt stack 0
   919                           
   920                           ; 2 bytes @ 0x9
   921  00000A                     	ds	2
   922  00000C                     i2___lwmod@counter:
   923                           	opt stack 0
   924                           
   925                           ; 1 bytes @ 0xB
   926  00000C                     	ds	1
   927  00000D                     ?i2_printf:
   928                           	opt stack 0
   929  00000D                     i2printf@f:
   930                           	opt stack 0
   931                           
   932                           ; 2 bytes @ 0xC
   933  00000D                     	ds	4
   934  000011                     ??i2_printf:
   935                           
   936                           ; 1 bytes @ 0x10
   937  000011                     	ds	1
   938  000012                     i2printf@flag:
   939                           	opt stack 0
   940                           
   941                           ; 1 bytes @ 0x11
   942  000012                     	ds	1
   943  000013                     i2printf@prec:
   944                           	opt stack 0
   945                           
   946                           ; 1 bytes @ 0x12
   947  000013                     	ds	1
   948  000014                     i2printf@ap:
   949                           	opt stack 0
   950                           
   951                           ; 2 bytes @ 0x13
   952  000014                     	ds	2
   953  000016                     i2printf@cp:
   954                           	opt stack 0
   955                           
   956                           ; 2 bytes @ 0x15
   957  000016                     	ds	2
   958  000018                     i2printf@val:
   959                           	opt stack 0
   960                           
   961                           ; 2 bytes @ 0x17
   962  000018                     	ds	2
   963  00001A                     i2printf@c:
   964                           	opt stack 0
   965                           
   966                           ; 1 bytes @ 0x19
   967  00001A                     	ds	1
   968  00001B                     i2println@data:
   969                           	opt stack 0
   970                           
   971                           ; 2 bytes @ 0x1A
   972  00001B                     	ds	2
   973  00001D                     ??i2_println:
   974                           
   975                           ; 1 bytes @ 0x1C
   976  00001D                     	ds	2
   977  00001F                     i2println@output:
   978                           	opt stack 0
   979                           
   980                           ; 41 bytes @ 0x1E
   981  00001F                     	ds	41
   982  000048                     i2println@i:
   983                           	opt stack 0
   984                           
   985                           ; 2 bytes @ 0x47
   986  000048                     	ds	2
   987  00004A                     ??_keypressed:
   988                           
   989                           ; 1 bytes @ 0x49
   990  00004A                     	ds	14
   991  000058                     keypressed@keypress:
   992                           	opt stack 0
   993                           
   994                           ; 1 bytes @ 0x57
   995  000058                     	ds	1
   996                           tblptru	equ	0xFF8
   997                           tblptrh	equ	0xFF7
   998                           tblptrl	equ	0xFF6
   999                           tablat	equ	0xFF5
  1000                           postinc0	equ	0xFEE
  1001                           wreg	equ	0xFE8
  1002                           postdec1	equ	0xFE5
  1003                           fsr1l	equ	0xFE1
  1004                           
  1005 ;;
  1006 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1007 ;;
  1008 ;; *************** function _main *****************
  1009 ;; Defined at:
  1010 ;;		line 112 in file "main.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;  argc            2   99[BANK0 ] int 
  1013 ;;  argv            3  101[BANK0 ] PTR PTR unsigned char 
  1014 ;; Auto vars:     Size  Location     Type
  1015 ;;  smallNose       2  106[BANK0 ] int 
  1016 ;;  bigNose         2  104[BANK0 ] int 
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  2   99[BANK0 ] int 
  1019 ;; Registers used:
  1020 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1026 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1027 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1029 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1030 ;;Total ram usage:        9 bytes
  1031 ;; Hardware stack levels required when called:   12
  1032 ;; This function calls:
  1033 ;;		_captureKeypad
  1034 ;;		_initialize
  1035 ;;		_moveBigNose
  1036 ;;		_moveSmallNose
  1037 ;;		_println
  1038 ;;		_simulate
  1039 ;; This function is called by:
  1040 ;;		Startup code after reset
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           	psect	text0
  1045  000F66                     __ptext0:
  1046                           	opt stack 0
  1047  000F66                     _main:
  1048                           	opt stack 19
  1049                           
  1050                           ;main.c: 113: initialize();
  1051                           
  1052                           ;incstack = 0
  1053  000F66  EC92  F009         	call	_initialize	;wreg free
  1054                           
  1055                           ;main.c: 115: println((unsigned char *) "Welcome!");
  1056  000F6A  0ED5               	movlw	low STR_4
  1057  000F6C  0100               	movlb	0	; () banked
  1058  000F6E  6FA0               	movwf	println@data& (0+255),b
  1059  000F70  0EFF               	movlw	high STR_4
  1060  000F72  0100               	movlb	0	; () banked
  1061  000F74  6FA1               	movwf	(println@data+1)& (0+255),b
  1062  000F76  EC61  F006         	call	_println	;wreg free
  1063                           
  1064                           ;main.c: 118: int bigNose = 0, smallNose = 0;
  1065  000F7A  0E00               	movlw	0
  1066  000F7C  0100               	movlb	0	; () banked
  1067  000F7E  6FE9               	movwf	(main@bigNose+1)& (0+255),b
  1068  000F80  0E00               	movlw	0
  1069  000F82  6FE8               	movwf	main@bigNose& (0+255),b
  1070                           
  1071                           ; BSR set to: 0
  1072  000F84  0E00               	movlw	0
  1073  000F86  0100               	movlb	0	; () banked
  1074  000F88  6FEB               	movwf	(main@smallNose+1)& (0+255),b
  1075  000F8A  0E00               	movlw	0
  1076  000F8C  6FEA               	movwf	main@smallNose& (0+255),b
  1077                           
  1078                           ; BSR set to: 0
  1079                           ;main.c: 119: moveBigNose(&bigNose, 0);
  1080  000F8E  0EE8               	movlw	low main@bigNose
  1081  000F90  0100               	movlb	0	; () banked
  1082  000F92  6F80               	movwf	moveBigNose@prev& (0+255),b
  1083  000F94  0E00               	movlw	high main@bigNose
  1084  000F96  0100               	movlb	0	; () banked
  1085  000F98  6F81               	movwf	(moveBigNose@prev+1)& (0+255),b
  1086  000F9A  0E00               	movlw	0
  1087  000F9C  0100               	movlb	0	; () banked
  1088  000F9E  6F83               	movwf	(moveBigNose@next+1)& (0+255),b
  1089  000FA0  0E00               	movlw	0
  1090  000FA2  6F82               	movwf	moveBigNose@next& (0+255),b
  1091  000FA4  EC75  F007         	call	_moveBigNose	;wreg free
  1092                           
  1093                           ;main.c: 120: moveSmallNose(&smallNose, 0);
  1094  000FA8  0EEA               	movlw	low main@smallNose
  1095  000FAA  0100               	movlb	0	; () banked
  1096  000FAC  6F80               	movwf	moveSmallNose@prev& (0+255),b
  1097  000FAE  0E00               	movlw	high main@smallNose
  1098  000FB0  0100               	movlb	0	; () banked
  1099  000FB2  6F81               	movwf	(moveSmallNose@prev+1)& (0+255),b
  1100  000FB4  0E00               	movlw	0
  1101  000FB6  0100               	movlb	0	; () banked
  1102  000FB8  6F83               	movwf	(moveSmallNose@next+1)& (0+255),b
  1103  000FBA  0E00               	movlw	0
  1104  000FBC  6F82               	movwf	moveSmallNose@next& (0+255),b
  1105  000FBE  EC37  F007         	call	_moveSmallNose	;wreg free
  1106  000FC2                     l2618:
  1107  000FC2  ECC3  F009         	call	_captureKeypad	;wreg free
  1108  000FC6  0E0F               	movlw	15
  1109  000FC8  0100               	movlb	0	; () banked
  1110  000FCA  1980               	xorwf	?_captureKeypad& (0+255),w,b
  1111  000FCC  0100               	movlb	0	; () banked
  1112  000FCE  1181               	iorwf	(?_captureKeypad+1)& (0+255),w,b
  1113  000FD0  A4D8               	btfss	status,2,c
  1114  000FD2  D7F7               	goto	l2618
  1115                           
  1116                           ; BSR set to: 0
  1117                           ;main.c: 125: simulate();
  1118                           
  1119                           ; BSR set to: 0
  1120  000FD4  EC91  F005         	call	_simulate	;wreg free
  1121  000FD8  00FF               	reset		;# 
  1122  000FDA  EF07  F000         	goto	start
  1123  000FDE                     __end_of_main:
  1124                           	opt stack 0
  1125                           tblptru	equ	0xFF8
  1126                           tblptrh	equ	0xFF7
  1127                           tblptrl	equ	0xFF6
  1128                           tablat	equ	0xFF5
  1129                           postinc0	equ	0xFEE
  1130                           wreg	equ	0xFE8
  1131                           postdec1	equ	0xFE5
  1132                           fsr1l	equ	0xFE1
  1133                           status	equ	0xFD8
  1134                           
  1135 ;; *************** function _simulate *****************
  1136 ;; Defined at:
  1137 ;;		line 94 in file "main.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;		None
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;  sorted          8   91[BANK0 ] int [4]
  1142 ;;  stop            2   89[BANK0 ] int 
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  1    wreg      void 
  1145 ;; Registers used:
  1146 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1153 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1155 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1156 ;;Total ram usage:       12 bytes
  1157 ;; Hardware stack levels used:    1
  1158 ;; Hardware stack levels required when called:   11
  1159 ;; This function calls:
  1160 ;;		_captureKeypad
  1161 ;;		_checkC9V
  1162 ;;		_printf
  1163 ;;		_println
  1164 ;; This function is called by:
  1165 ;;		_main
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           	psect	text1
  1170  000B22                     __ptext1:
  1171                           	opt stack 0
  1172  000B22                     _simulate:
  1173                           	opt stack 19
  1174                           
  1175                           ;main.c: 96: println("Sorting...");
  1176                           
  1177                           ;incstack = 0
  1178  000B22  0EB6               	movlw	low STR_1
  1179  000B24  0100               	movlb	0	; () banked
  1180  000B26  6FA0               	movwf	println@data& (0+255),b
  1181  000B28  0EFF               	movlw	high STR_1
  1182  000B2A  0100               	movlb	0	; () banked
  1183  000B2C  6FA1               	movwf	(println@data+1)& (0+255),b
  1184  000B2E  EC61  F006         	call	_println	;wreg free
  1185                           
  1186                           ;main.c: 97: int stop = 0;
  1187  000B32  0E00               	movlw	0
  1188  000B34  0100               	movlb	0	; () banked
  1189  000B36  6FDA               	movwf	(simulate@stop+1)& (0+255),b
  1190  000B38  0E00               	movlw	0
  1191  000B3A  6FD9               	movwf	simulate@stop& (0+255),b
  1192                           
  1193                           ; BSR set to: 0
  1194                           ;main.c: 98: int sorted[] = {0, 0, 0, 0};
  1195  000B3C  EE20  F0EC         	lfsr	2,simulate@F3192
  1196  000B40  EE10  F0DB         	lfsr	1,simulate@sorted
  1197  000B44  0E07               	movlw	7
  1198  000B46                     u1661:
  1199  000B46  CFDB FFE3          	movff	plusw2,plusw1
  1200  000B4A  06E8               	decf	wreg,f,c
  1201  000B4C  E2FC               	bc	u1661
  1202                           
  1203                           ;main.c: 100: while (!stop) {
  1204  000B4E  D036               	goto	l2458
  1205  000B50                     l2450:
  1206                           
  1207                           ; BSR set to: 0
  1208                           ;main.c: 101: captureKeypad();
  1209  000B50  ECC3  F009         	call	_captureKeypad	;wreg free
  1210                           
  1211                           ;main.c: 103: checkC9V(sorted);
  1212  000B54  0EDB               	movlw	low simulate@sorted
  1213  000B56  0100               	movlb	0	; () banked
  1214  000B58  6FCF               	movwf	checkC9V@sorted& (0+255),b
  1215  000B5A  0E00               	movlw	high simulate@sorted
  1216  000B5C  0100               	movlb	0	; () banked
  1217  000B5E  6FD0               	movwf	(checkC9V@sorted+1)& (0+255),b
  1218  000B60  EC09  F000         	call	_checkC9V	;wreg free
  1219                           
  1220                           ;main.c: 104: if (sorted[0] + sorted[1] + sorted[2] + sorted[3] >= 5) {
  1221  000B64  0100               	movlb	0	; () banked
  1222  000B66  51DF               	movf	(simulate@sorted+4)& (0+255),w,b
  1223  000B68  0100               	movlb	0	; () banked
  1224  000B6A  25DD               	addwf	(simulate@sorted+2)& (0+255),w,b
  1225  000B6C  0100               	movlb	0	; () banked
  1226  000B6E  6FD7               	movwf	??_simulate& (0+255),b
  1227  000B70  0100               	movlb	0	; () banked
  1228  000B72  51E0               	movf	(simulate@sorted+5)& (0+255),w,b
  1229  000B74  0100               	movlb	0	; () banked
  1230  000B76  21DE               	addwfc	(simulate@sorted+3)& (0+255),w,b
  1231  000B78  0100               	movlb	0	; () banked
  1232  000B7A  6FD8               	movwf	(??_simulate+1)& (0+255),b
  1233  000B7C  0100               	movlb	0	; () banked
  1234  000B7E  51E1               	movf	(simulate@sorted+6)& (0+255),w,b
  1235  000B80  0100               	movlb	0	; () banked
  1236  000B82  27D7               	addwf	??_simulate& (0+255),f,b
  1237  000B84  0100               	movlb	0	; () banked
  1238  000B86  51E2               	movf	(simulate@sorted+7)& (0+255),w,b
  1239  000B88  0100               	movlb	0	; () banked
  1240  000B8A  23D8               	addwfc	(??_simulate+1)& (0+255),f,b
  1241  000B8C  0100               	movlb	0	; () banked
  1242  000B8E  51DB               	movf	simulate@sorted& (0+255),w,b
  1243  000B90  0100               	movlb	0	; () banked
  1244  000B92  27D7               	addwf	??_simulate& (0+255),f,b
  1245  000B94  0100               	movlb	0	; () banked
  1246  000B96  51DC               	movf	(simulate@sorted+1)& (0+255),w,b
  1247  000B98  0100               	movlb	0	; () banked
  1248  000B9A  23D8               	addwfc	(??_simulate+1)& (0+255),f,b
  1249  000B9C  0100               	movlb	0	; () banked
  1250  000B9E  BFD8               	btfsc	(??_simulate+1)& (0+255),7,b
  1251  000BA0  D00D               	goto	l2458
  1252  000BA2  0100               	movlb	0	; () banked
  1253  000BA4  51D8               	movf	(??_simulate+1)& (0+255),w,b
  1254  000BA6  E105               	bnz	u1670
  1255  000BA8  0E05               	movlw	5
  1256  000BAA  0100               	movlb	0	; () banked
  1257  000BAC  5DD7               	subwf	??_simulate& (0+255),w,b
  1258  000BAE  A0D8               	btfss	status,0,c
  1259  000BB0  D005               	goto	l2458
  1260  000BB2                     u1670:
  1261                           
  1262                           ; BSR set to: 0
  1263                           ;main.c: 105: stop = 1;
  1264  000BB2  0E00               	movlw	0
  1265  000BB4  0100               	movlb	0	; () banked
  1266  000BB6  6FDA               	movwf	(simulate@stop+1)& (0+255),b
  1267  000BB8  0E01               	movlw	1
  1268  000BBA  6FD9               	movwf	simulate@stop& (0+255),b
  1269  000BBC                     l2458:
  1270                           
  1271                           ; BSR set to: 0
  1272  000BBC  0100               	movlb	0	; () banked
  1273  000BBE  51D9               	movf	simulate@stop& (0+255),w,b
  1274  000BC0  0100               	movlb	0	; () banked
  1275  000BC2  11DA               	iorwf	(simulate@stop+1)& (0+255),w,b
  1276  000BC4  B4D8               	btfsc	status,2,c
  1277  000BC6  D7C4               	goto	l2450
  1278                           
  1279                           ; BSR set to: 0
  1280                           ;main.c: 106: }
  1281                           ;main.c: 107: }
  1282                           ;main.c: 108: printf("sorted %d,%d,%d,%d",sorted[0],sorted[1],sorted[2],sorted[3]);
  1283                           
  1284                           ; BSR set to: 0
  1285  000BC8  0EE3               	movlw	low STR_3
  1286  000BCA  0100               	movlb	0	; () banked
  1287  000BCC  6F8C               	movwf	printf@f& (0+255),b
  1288  000BCE  0EFE               	movlw	high STR_3
  1289  000BD0  0100               	movlb	0	; () banked
  1290  000BD2  6F8D               	movwf	(printf@f+1)& (0+255),b
  1291  000BD4  C0DB  F08E         	movff	simulate@sorted,?_printf+2
  1292  000BD8  C0DC  F08F         	movff	simulate@sorted+1,?_printf+3
  1293  000BDC  C0DD  F090         	movff	simulate@sorted+2,?_printf+4
  1294  000BE0  C0DE  F091         	movff	simulate@sorted+3,?_printf+5
  1295  000BE4  C0DF  F092         	movff	simulate@sorted+4,?_printf+6
  1296  000BE8  C0E0  F093         	movff	simulate@sorted+5,?_printf+7
  1297  000BEC  C0E1  F094         	movff	simulate@sorted+6,?_printf+8
  1298  000BF0  C0E2  F095         	movff	simulate@sorted+7,?_printf+9
  1299  000BF4  EC68  F001         	call	_printf	;wreg free
  1300  000BF8                     l86:
  1301  000BF8  D7FF               	goto	l86
  1302  000BFA                     __end_of_simulate:
  1303                           	opt stack 0
  1304                           tblptru	equ	0xFF8
  1305                           tblptrh	equ	0xFF7
  1306                           tblptrl	equ	0xFF6
  1307                           tablat	equ	0xFF5
  1308                           postinc0	equ	0xFEE
  1309                           wreg	equ	0xFE8
  1310                           postdec1	equ	0xFE5
  1311                           plusw1	equ	0xFE3
  1312                           fsr1l	equ	0xFE1
  1313                           plusw2	equ	0xFDB
  1314                           status	equ	0xFD8
  1315                           
  1316 ;; *************** function _checkC9V *****************
  1317 ;; Defined at:
  1318 ;;		line 174 in file "modules.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;  sorted          2   79[BANK0 ] PTR int 
  1321 ;;		 -> simulate@sorted(8), mainloop@sorted(8), 
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;  i               2   85[BANK0 ] int 
  1324 ;; Return value:  Size  Location     Type
  1325 ;;                  2   79[BANK0 ] int 
  1326 ;; Registers used:
  1327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1333 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1334 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1335 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1336 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1337 ;;Total ram usage:        8 bytes
  1338 ;; Hardware stack levels used:    1
  1339 ;; Hardware stack levels required when called:   10
  1340 ;; This function calls:
  1341 ;;		_AD
  1342 ;;		_checkV
  1343 ;;		_lcdInst
  1344 ;;		_printf
  1345 ;;		_println
  1346 ;; This function is called by:
  1347 ;;		_simulate
  1348 ;;		_mainloop
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text2
  1353  000012                     __ptext2:
  1354                           	opt stack 0
  1355  000012                     _checkC9V:
  1356                           	opt stack 19
  1357                           
  1358                           ;modules.c: 177: LATE = 0b1000;
  1359                           
  1360                           ;incstack = 0
  1361  000012  0E08               	movlw	8
  1362  000014  6E8D               	movwf	3981,c	;volatile
  1363                           
  1364                           ;modules.c: 178: println("V3");
  1365  000016  0EF4               	movlw	low STR_28
  1366  000018  0100               	movlb	0	; () banked
  1367  00001A  6FA0               	movwf	println@data& (0+255),b
  1368  00001C  0EFF               	movlw	high STR_28
  1369  00001E  0100               	movlb	0	; () banked
  1370  000020  6FA1               	movwf	(println@data+1)& (0+255),b
  1371  000022  EC61  F006         	call	_println	;wreg free
  1372                           
  1373                           ;modules.c: 179: switch (checkV(AD(3), 1.5)) {
  1374  000026  D12E               	goto	l2374
  1375  000028                     l2298:
  1376                           
  1377                           ;modules.c: 181: println("9:");
  1378  000028  0EF7               	movlw	low STR_29
  1379  00002A  0100               	movlb	0	; () banked
  1380  00002C  6FA0               	movwf	println@data& (0+255),b
  1381  00002E  0EFF               	movlw	high STR_29
  1382  000030  0100               	movlb	0	; () banked
  1383  000032  6FA1               	movwf	(println@data+1)& (0+255),b
  1384  000034  EC61  F006         	call	_println	;wreg free
  1385                           
  1386                           ;modules.c: 182: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1387  000038  0E0B               	movlw	11
  1388  00003A  0100               	movlb	0	; () banked
  1389  00003C  6FD2               	movwf	(??_checkC9V+1)& (0+255),b
  1390  00003E  0E26               	movlw	38
  1391  000040  0100               	movlb	0	; () banked
  1392  000042  6FD1               	movwf	??_checkC9V& (0+255),b
  1393  000044  0E5D               	movlw	93
  1394  000046                     u1777:
  1395  000046  2EE8               	decfsz	wreg,f,c
  1396  000048  D7FE               	bra	u1777
  1397  00004A  2FD1               	decfsz	??_checkC9V& (0+255),f,b
  1398  00004C  D7FC               	bra	u1777
  1399  00004E  2FD2               	decfsz	(??_checkC9V+1)& (0+255),f,b
  1400  000050  D7FA               	bra	u1777
  1401  000052  D000               	nop2	
  1402                           
  1403                           ;modules.c: 184: int i = 1;
  1404  000054  0E00               	movlw	0
  1405  000056  0100               	movlb	0	; () banked
  1406  000058  6FD6               	movwf	(checkC9V@i+1)& (0+255),b
  1407  00005A  0E01               	movlw	1
  1408  00005C  6FD5               	movwf	checkC9V@i& (0+255),b
  1409                           
  1410                           ; BSR set to: 0
  1411  00005E  0100               	movlb	0	; () banked
  1412  000060  BFD6               	btfsc	(checkC9V@i+1)& (0+255),7,b
  1413  000062  D00A               	goto	l2308
  1414  000064  0100               	movlb	0	; () banked
  1415  000066  51D6               	movf	(checkC9V@i+1)& (0+255),w,b
  1416  000068  E106               	bnz	u1530
  1417  00006A  0E03               	movlw	3
  1418  00006C  0100               	movlb	0	; () banked
  1419  00006E  5DD5               	subwf	checkC9V@i& (0+255),w,b
  1420  000070  B0D8               	btfsc	status,0,c
  1421  000072  D0B4               	goto	l242
  1422  000074  D001               	goto	l2308
  1423  000076                     u1530:
  1424                           
  1425                           ; BSR set to: 0
  1426  000076  D0B2               	goto	l242
  1427  000078                     l2308:
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;modules.c: 187: printf("channel %d", i);
  1431  000078  0EA0               	movlw	low STR_30
  1432  00007A  0100               	movlb	0	; () banked
  1433  00007C  6F8C               	movwf	printf@f& (0+255),b
  1434  00007E  0EFF               	movlw	high STR_30
  1435  000080  0100               	movlb	0	; () banked
  1436  000082  6F8D               	movwf	(printf@f+1)& (0+255),b
  1437  000084  C0D5  F08E         	movff	checkC9V@i,?_printf+2
  1438  000088  C0D6  F08F         	movff	checkC9V@i+1,?_printf+3
  1439  00008C  EC68  F001         	call	_printf	;wreg free
  1440                           
  1441                           ;modules.c: 188: lcdInst(0b10000000);;
  1442  000090  0E80               	movlw	128
  1443  000092  ECDA  F009         	call	_lcdInst
  1444                           
  1445                           ;modules.c: 189: _delay((unsigned long)((900)*(8000000/4000.0)));
  1446  000096  0E0A               	movlw	10
  1447  000098  0100               	movlb	0	; () banked
  1448  00009A  6FD2               	movwf	(??_checkC9V+1)& (0+255),b
  1449  00009C  0E22               	movlw	34
  1450  00009E  0100               	movlb	0	; () banked
  1451  0000A0  6FD1               	movwf	??_checkC9V& (0+255),b
  1452  0000A2  0EA1               	movlw	161
  1453  0000A4                     u1787:
  1454  0000A4  2EE8               	decfsz	wreg,f,c
  1455  0000A6  D7FE               	bra	u1787
  1456  0000A8  2FD1               	decfsz	??_checkC9V& (0+255),f,b
  1457  0000AA  D7FC               	bra	u1787
  1458  0000AC  2FD2               	decfsz	(??_checkC9V+1)& (0+255),f,b
  1459  0000AE  D7FA               	bra	u1787
  1460                           
  1461                           ;modules.c: 190: LATE = i == 1 ? 0 : 0b0110;
  1462  0000B0  0100               	movlb	0	; () banked
  1463  0000B2  05D5               	decf	checkC9V@i& (0+255),w,b
  1464  0000B4  0100               	movlb	0	; () banked
  1465  0000B6  11D6               	iorwf	(checkC9V@i+1)& (0+255),w,b
  1466  0000B8  B4D8               	btfsc	status,2,c
  1467  0000BA  D005               	goto	l2318
  1468                           
  1469                           ; BSR set to: 0
  1470  0000BC  0E00               	movlw	0
  1471  0000BE  0100               	movlb	0	; () banked
  1472  0000C0  6FD4               	movwf	(_checkC9V$500+1)& (0+255),b
  1473  0000C2  0E06               	movlw	6
  1474  0000C4  D004               	goto	L1
  1475  0000C6                     l2318:
  1476                           
  1477                           ; BSR set to: 0
  1478  0000C6  0E00               	movlw	0
  1479  0000C8  0100               	movlb	0	; () banked
  1480  0000CA  6FD4               	movwf	(_checkC9V$500+1)& (0+255),b
  1481  0000CC  0E00               	movlw	0
  1482  0000CE                     L1:
  1483  0000CE  6FD3               	movwf	_checkC9V$500& (0+255),b
  1484                           
  1485                           ; BSR set to: 0
  1486                           
  1487                           ; BSR set to: 0
  1488  0000D0  C0D3  FF8D         	movff	_checkC9V$500,3981	;volatile
  1489                           
  1490                           ;modules.c: 191: switch (checkV(AD(i), 3.6)) {
  1491  0000D4  D055               	goto	l2346
  1492  0000D6                     l2322:
  1493                           
  1494                           ; BSR set to: 0
  1495                           ;modules.c: 193: println("charged 9V");
  1496  0000D6  0E4F               	movlw	low (STR_32+2)
  1497  0000D8  0100               	movlb	0	; () banked
  1498  0000DA  6FA0               	movwf	println@data& (0+255),b
  1499  0000DC  0EFF               	movlw	high (STR_32+2)
  1500  0000DE  0100               	movlb	0	; () banked
  1501  0000E0  6FA1               	movwf	(println@data+1)& (0+255),b
  1502  0000E2  EC61  F006         	call	_println	;wreg free
  1503                           
  1504                           ;modules.c: 194: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1505  0000E6  0E0B               	movlw	11
  1506  0000E8  0100               	movlb	0	; () banked
  1507  0000EA  6FD2               	movwf	(??_checkC9V+1)& (0+255),b
  1508  0000EC  0E26               	movlw	38
  1509  0000EE  0100               	movlb	0	; () banked
  1510  0000F0  6FD1               	movwf	??_checkC9V& (0+255),b
  1511  0000F2  0E5D               	movlw	93
  1512  0000F4                     u1797:
  1513  0000F4  2EE8               	decfsz	wreg,f,c
  1514  0000F6  D7FE               	bra	u1797
  1515  0000F8  2FD1               	decfsz	??_checkC9V& (0+255),f,b
  1516  0000FA  D7FC               	bra	u1797
  1517  0000FC  2FD2               	decfsz	(??_checkC9V+1)& (0+255),f,b
  1518  0000FE  D7FA               	bra	u1797
  1519  000100  D000               	nop2	
  1520                           
  1521                           ;modules.c: 195: sorted[2]++;
  1522  000102  0100               	movlb	0	; () banked
  1523  000104  EE20 F004          	lfsr	2,4
  1524  000108  51CF               	movf	checkC9V@sorted& (0+255),w,b
  1525  00010A  26D9               	addwf	fsr2l,f,c
  1526  00010C  51D0               	movf	(checkC9V@sorted+1)& (0+255),w,b
  1527  00010E  22DA               	addwfc	fsr2h,f,c
  1528  000110  2ADE               	incf	postinc2,f,c
  1529  000112  0E00               	movlw	0
  1530  000114  22DD               	addwfc	postdec2,f,c
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;modules.c: 196: return 2;
  1534  000116  0E00               	movlw	0
  1535  000118  0100               	movlb	0	; () banked
  1536  00011A  6FD0               	movwf	(?_checkC9V+1)& (0+255),b
  1537  00011C  0E02               	movlw	2
  1538  00011E  6FCF               	movwf	?_checkC9V& (0+255),b
  1539                           
  1540                           ; BSR set to: 0
  1541  000120  0012               	return	
  1542  000122                     l2332:
  1543                           
  1544                           ; BSR set to: 0
  1545                           ;modules.c: 198: println("uncharged 9V");
  1546  000122  0E4D               	movlw	low STR_32
  1547  000124  0100               	movlb	0	; () banked
  1548  000126  6FA0               	movwf	println@data& (0+255),b
  1549  000128  0EFF               	movlw	high STR_32
  1550  00012A  0100               	movlb	0	; () banked
  1551  00012C  6FA1               	movwf	(println@data+1)& (0+255),b
  1552  00012E  EC61  F006         	call	_println	;wreg free
  1553                           
  1554                           ;modules.c: 199: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1555  000132  0E0B               	movlw	11
  1556  000134  0100               	movlb	0	; () banked
  1557  000136  6FD2               	movwf	(??_checkC9V+1)& (0+255),b
  1558  000138  0E26               	movlw	38
  1559  00013A  0100               	movlb	0	; () banked
  1560  00013C  6FD1               	movwf	??_checkC9V& (0+255),b
  1561  00013E  0E5D               	movlw	93
  1562  000140                     u1807:
  1563  000140  2EE8               	decfsz	wreg,f,c
  1564  000142  D7FE               	bra	u1807
  1565  000144  2FD1               	decfsz	??_checkC9V& (0+255),f,b
  1566  000146  D7FC               	bra	u1807
  1567  000148  2FD2               	decfsz	(??_checkC9V+1)& (0+255),f,b
  1568  00014A  D7FA               	bra	u1807
  1569  00014C  D000               	nop2	
  1570                           
  1571                           ;modules.c: 200: sorted[3]++;
  1572  00014E  0100               	movlb	0	; () banked
  1573  000150  EE20 F006          	lfsr	2,6
  1574  000154  51CF               	movf	checkC9V@sorted& (0+255),w,b
  1575  000156  26D9               	addwf	fsr2l,f,c
  1576  000158  51D0               	movf	(checkC9V@sorted+1)& (0+255),w,b
  1577  00015A  22DA               	addwfc	fsr2h,f,c
  1578  00015C  2ADE               	incf	postinc2,f,c
  1579  00015E  0E00               	movlw	0
  1580  000160  22DD               	addwfc	postdec2,f,c
  1581                           
  1582                           ; BSR set to: 0
  1583                           ;modules.c: 201: return 0;
  1584  000162  0E00               	movlw	0
  1585  000164  0100               	movlb	0	; () banked
  1586  000166  6FD0               	movwf	(?_checkC9V+1)& (0+255),b
  1587  000168  0E00               	movlw	0
  1588  00016A  6FCF               	movwf	?_checkC9V& (0+255),b
  1589                           
  1590                           ; BSR set to: 0
  1591  00016C  0012               	return	
  1592  00016E                     l2342:
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;modules.c: 203: println("no 9");
  1596  00016E  0EEB               	movlw	low STR_33
  1597  000170  0100               	movlb	0	; () banked
  1598  000172  6FA0               	movwf	println@data& (0+255),b
  1599  000174  0EFF               	movlw	high STR_33
  1600  000176  0100               	movlb	0	; () banked
  1601  000178  6FA1               	movwf	(println@data+1)& (0+255),b
  1602  00017A  EC61  F006         	call	_println	;wreg free
  1603                           
  1604                           ;modules.c: 205: }
  1605                           
  1606                           ;modules.c: 204: continue;
  1607  00017E  D024               	goto	l2348
  1608  000180                     l2346:
  1609  000180  0100               	movlb	0	; () banked
  1610  000182  51D5               	movf	checkC9V@i& (0+255),w,b
  1611  000184  ECE4  F008         	call	_AD
  1612  000188  C080  F0B3         	movff	?_AD,checkV@voltage
  1613  00018C  C081  F0B4         	movff	?_AD+1,checkV@voltage+1
  1614  000190  0E00               	movlw	0
  1615  000192  0100               	movlb	0	; () banked
  1616  000194  6FB6               	movwf	(checkV@max+1)& (0+255),b
  1617  000196  0E03               	movlw	3
  1618  000198  6FB5               	movwf	checkV@max& (0+255),b
  1619  00019A  EC1A  F005         	call	_checkV	;wreg free
  1620                           
  1621                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  1622                           ; Switch size 1, requested type "space"
  1623                           ; Number of cases is 2, Range of values is 0 to 255
  1624                           ; switch strategies available:
  1625                           ; Name         Instructions Cycles
  1626                           ; simple_byte            7     4 (average)
  1627                           ;	Chosen strategy is simple_byte
  1628  00019E  0100               	movlb	0	; () banked
  1629  0001A0  51B4               	movf	(?_checkV+1)& (0+255),w,b
  1630  0001A2  0A00               	xorlw	0	; case 0
  1631  0001A4  B4D8               	btfsc	status,2,c
  1632  0001A6  D004               	goto	l2710
  1633  0001A8  0AFF               	xorlw	255	; case 255
  1634  0001AA  B4D8               	btfsc	status,2,c
  1635  0001AC  D007               	goto	l2712
  1636  0001AE  D7DF               	goto	l2342
  1637  0001B0                     l2710:
  1638                           
  1639                           ; BSR set to: 0
  1640                           ; Switch size 1, requested type "space"
  1641                           ; Number of cases is 1, Range of values is 1 to 1
  1642                           ; switch strategies available:
  1643                           ; Name         Instructions Cycles
  1644                           ; simple_byte            4     3 (average)
  1645                           ;	Chosen strategy is simple_byte
  1646  0001B0  0100               	movlb	0	; () banked
  1647  0001B2  51B3               	movf	?_checkV& (0+255),w,b
  1648  0001B4  0A01               	xorlw	1	; case 1
  1649  0001B6  B4D8               	btfsc	status,2,c
  1650  0001B8  D78E               	goto	l2322
  1651  0001BA  D7D9               	goto	l2342
  1652  0001BC                     l2712:
  1653                           
  1654                           ; BSR set to: 0
  1655                           ; Switch size 1, requested type "space"
  1656                           ; Number of cases is 1, Range of values is 255 to 255
  1657                           ; switch strategies available:
  1658                           ; Name         Instructions Cycles
  1659                           ; simple_byte            4     3 (average)
  1660                           ;	Chosen strategy is simple_byte
  1661  0001BC  0100               	movlb	0	; () banked
  1662  0001BE  51B3               	movf	?_checkV& (0+255),w,b
  1663  0001C0  0AFF               	xorlw	255	; case 255
  1664  0001C2  B4D8               	btfsc	status,2,c
  1665  0001C4  D7AE               	goto	l2332
  1666  0001C6  D7D3               	goto	l2342
  1667  0001C8                     l2348:
  1668  0001C8  0100               	movlb	0	; () banked
  1669  0001CA  4BD5               	infsnz	checkC9V@i& (0+255),f,b
  1670  0001CC  2BD6               	incf	(checkC9V@i+1)& (0+255),f,b
  1671                           
  1672                           ; BSR set to: 0
  1673  0001CE  0100               	movlb	0	; () banked
  1674  0001D0  BFD6               	btfsc	(checkC9V@i+1)& (0+255),7,b
  1675  0001D2  D752               	goto	l2308
  1676  0001D4  0100               	movlb	0	; () banked
  1677  0001D6  51D6               	movf	(checkC9V@i+1)& (0+255),w,b
  1678  0001D8  E101               	bnz	u1550
  1679  0001DA  D747               	goto	L2
  1680  0001DC                     u1550:
  1681  0001DC                     l242:
  1682                           
  1683                           ; BSR set to: 0
  1684                           ;modules.c: 206: }
  1685                           ;modules.c: 207: return -1;
  1686  0001DC  0100               	movlb	0	; () banked
  1687  0001DE  69CF               	setf	?_checkC9V& (0+255),b
  1688  0001E0  69D0               	setf	(?_checkC9V+1)& (0+255),b
  1689  0001E2  0012               	return	
  1690  0001E4                     l2352:
  1691                           
  1692                           ; BSR set to: 0
  1693                           ;modules.c: 210: println("charged C");
  1694  0001E4  0E69               	movlw	low (STR_35+2)
  1695  0001E6  0100               	movlb	0	; () banked
  1696  0001E8  6FA0               	movwf	println@data& (0+255),b
  1697  0001EA  0EFF               	movlw	high (STR_35+2)
  1698  0001EC  0100               	movlb	0	; () banked
  1699  0001EE  6FA1               	movwf	(println@data+1)& (0+255),b
  1700  0001F0  EC61  F006         	call	_println	;wreg free
  1701                           
  1702                           ;modules.c: 211: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1703  0001F4  0E0B               	movlw	11
  1704  0001F6  0100               	movlb	0	; () banked
  1705  0001F8  6FD2               	movwf	(??_checkC9V+1)& (0+255),b
  1706  0001FA  0E26               	movlw	38
  1707  0001FC  0100               	movlb	0	; () banked
  1708  0001FE  6FD1               	movwf	??_checkC9V& (0+255),b
  1709  000200  0E5D               	movlw	93
  1710  000202                     u1817:
  1711  000202  2EE8               	decfsz	wreg,f,c
  1712  000204  D7FE               	bra	u1817
  1713  000206  2FD1               	decfsz	??_checkC9V& (0+255),f,b
  1714  000208  D7FC               	bra	u1817
  1715  00020A  2FD2               	decfsz	(??_checkC9V+1)& (0+255),f,b
  1716  00020C  D7FA               	bra	u1817
  1717  00020E  D000               	nop2	
  1718                           
  1719                           ;modules.c: 212: sorted[1]++;
  1720  000210  0100               	movlb	0	; () banked
  1721  000212  EE20 F002          	lfsr	2,2
  1722  000216  51CF               	movf	checkC9V@sorted& (0+255),w,b
  1723  000218  26D9               	addwf	fsr2l,f,c
  1724  00021A  51D0               	movf	(checkC9V@sorted+1)& (0+255),w,b
  1725  00021C  22DA               	addwfc	fsr2h,f,c
  1726  00021E  2ADE               	incf	postinc2,f,c
  1727  000220  0E00               	movlw	0
  1728  000222  22DD               	addwfc	postdec2,f,c
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;modules.c: 213: return 1;
  1732  000224  0E00               	movlw	0
  1733  000226  0100               	movlb	0	; () banked
  1734  000228  6FD0               	movwf	(?_checkC9V+1)& (0+255),b
  1735  00022A  0E01               	movlw	1
  1736  00022C  6FCF               	movwf	?_checkC9V& (0+255),b
  1737                           
  1738                           ; BSR set to: 0
  1739  00022E  0012               	return	
  1740  000230                     l2362:
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;modules.c: 215: println("uncharged C");
  1744  000230  0E67               	movlw	low STR_35
  1745  000232  0100               	movlb	0	; () banked
  1746  000234  6FA0               	movwf	println@data& (0+255),b
  1747  000236  0EFF               	movlw	high STR_35
  1748  000238  0100               	movlb	0	; () banked
  1749  00023A  6FA1               	movwf	(println@data+1)& (0+255),b
  1750  00023C  EC61  F006         	call	_println	;wreg free
  1751                           
  1752                           ;modules.c: 216: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1753  000240  0E0B               	movlw	11
  1754  000242  0100               	movlb	0	; () banked
  1755  000244  6FD2               	movwf	(??_checkC9V+1)& (0+255),b
  1756  000246  0E26               	movlw	38
  1757  000248  0100               	movlb	0	; () banked
  1758  00024A  6FD1               	movwf	??_checkC9V& (0+255),b
  1759  00024C  0E5D               	movlw	93
  1760  00024E                     u1827:
  1761  00024E  2EE8               	decfsz	wreg,f,c
  1762  000250  D7FE               	bra	u1827
  1763  000252  2FD1               	decfsz	??_checkC9V& (0+255),f,b
  1764  000254  D7FC               	bra	u1827
  1765  000256  2FD2               	decfsz	(??_checkC9V+1)& (0+255),f,b
  1766  000258  D7FA               	bra	u1827
  1767  00025A  D000               	nop2	
  1768                           
  1769                           ;modules.c: 217: sorted[3]++;
  1770  00025C  0100               	movlb	0	; () banked
  1771  00025E  EE20 F006          	lfsr	2,6
  1772  000262  51CF               	movf	checkC9V@sorted& (0+255),w,b
  1773  000264  26D9               	addwf	fsr2l,f,c
  1774  000266  51D0               	movf	(checkC9V@sorted+1)& (0+255),w,b
  1775  000268  22DA               	addwfc	fsr2h,f,c
  1776  00026A  2ADE               	incf	postinc2,f,c
  1777  00026C  0E00               	movlw	0
  1778  00026E  22DD               	addwfc	postdec2,f,c
  1779                           
  1780                           ; BSR set to: 0
  1781                           ;modules.c: 218: return 0;
  1782  000270  0E00               	movlw	0
  1783  000272  0100               	movlb	0	; () banked
  1784  000274  6FD0               	movwf	(?_checkC9V+1)& (0+255),b
  1785  000276  0E00               	movlw	0
  1786  000278  6FCF               	movwf	?_checkC9V& (0+255),b
  1787                           
  1788                           ; BSR set to: 0
  1789  00027A  0012               	return	
  1790  00027C                     l256:
  1791                           
  1792                           ; BSR set to: 0
  1793                           ;modules.c: 220: return -1;
  1794  00027C  0100               	movlb	0	; () banked
  1795  00027E  69CF               	setf	?_checkC9V& (0+255),b
  1796  000280  69D0               	setf	(?_checkC9V+1)& (0+255),b
  1797                           
  1798                           ; BSR set to: 0
  1799                           ;modules.c: 221: }
  1800  000282  0012               	return	
  1801  000284                     l2374:
  1802  000284  0E03               	movlw	3
  1803  000286  ECE4  F008         	call	_AD
  1804  00028A  C080  F0B3         	movff	?_AD,checkV@voltage
  1805  00028E  C081  F0B4         	movff	?_AD+1,checkV@voltage+1
  1806  000292  0E00               	movlw	0
  1807  000294  0100               	movlb	0	; () banked
  1808  000296  6FB6               	movwf	(checkV@max+1)& (0+255),b
  1809  000298  0E01               	movlw	1
  1810  00029A  6FB5               	movwf	checkV@max& (0+255),b
  1811  00029C  EC1A  F005         	call	_checkV	;wreg free
  1812                           
  1813                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  1814                           ; Switch size 1, requested type "space"
  1815                           ; Number of cases is 2, Range of values is 0 to 255
  1816                           ; switch strategies available:
  1817                           ; Name         Instructions Cycles
  1818                           ; simple_byte            7     4 (average)
  1819                           ;	Chosen strategy is simple_byte
  1820  0002A0  0100               	movlb	0	; () banked
  1821  0002A2  51B4               	movf	(?_checkV+1)& (0+255),w,b
  1822  0002A4  0A00               	xorlw	0	; case 0
  1823  0002A6  B4D8               	btfsc	status,2,c
  1824  0002A8  D004               	goto	l2714
  1825  0002AA  0AFF               	xorlw	255	; case 255
  1826  0002AC  B4D8               	btfsc	status,2,c
  1827  0002AE  D00A               	goto	l2716
  1828  0002B0  D7E5               	goto	l256
  1829  0002B2                     l2714:
  1830                           
  1831                           ; BSR set to: 0
  1832                           ; Switch size 1, requested type "space"
  1833                           ; Number of cases is 2, Range of values is 0 to 1
  1834                           ; switch strategies available:
  1835                           ; Name         Instructions Cycles
  1836                           ; simple_byte            7     4 (average)
  1837                           ;	Chosen strategy is simple_byte
  1838  0002B2  0100               	movlb	0	; () banked
  1839  0002B4  51B3               	movf	?_checkV& (0+255),w,b
  1840  0002B6  0A00               	xorlw	0	; case 0
  1841  0002B8  B4D8               	btfsc	status,2,c
  1842  0002BA  D6B6               	goto	l2298
  1843  0002BC  0A01               	xorlw	1	; case 1
  1844  0002BE  B4D8               	btfsc	status,2,c
  1845  0002C0  D791               	goto	l2352
  1846  0002C2  D7DC               	goto	l256
  1847  0002C4                     l2716:
  1848                           
  1849                           ; BSR set to: 0
  1850                           ; Switch size 1, requested type "space"
  1851                           ; Number of cases is 1, Range of values is 255 to 255
  1852                           ; switch strategies available:
  1853                           ; Name         Instructions Cycles
  1854                           ; simple_byte            4     3 (average)
  1855                           ;	Chosen strategy is simple_byte
  1856  0002C4  0100               	movlb	0	; () banked
  1857  0002C6  51B3               	movf	?_checkV& (0+255),w,b
  1858  0002C8  0AFF               	xorlw	255	; case 255
  1859  0002CA  B4D8               	btfsc	status,2,c
  1860  0002CC  D7B1               	goto	l2362
  1861  0002CE  D7D6               	goto	l256
  1862  0002D0                     __end_of_checkC9V:
  1863                           	opt stack 0
  1864                           tblptru	equ	0xFF8
  1865                           tblptrh	equ	0xFF7
  1866                           tblptrl	equ	0xFF6
  1867                           tablat	equ	0xFF5
  1868                           postinc0	equ	0xFEE
  1869                           wreg	equ	0xFE8
  1870                           postdec1	equ	0xFE5
  1871                           plusw1	equ	0xFE3
  1872                           fsr1l	equ	0xFE1
  1873                           postinc2	equ	0xFDE
  1874                           postdec2	equ	0xFDD
  1875                           plusw2	equ	0xFDB
  1876                           fsr2h	equ	0xFDA
  1877                           fsr2l	equ	0xFD9
  1878                           status	equ	0xFD8
  1879                           
  1880 ;; *************** function _println *****************
  1881 ;; Defined at:
  1882 ;;		line 21 in file "modules.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;  data            2   32[BANK0 ] PTR unsigned char 
  1885 ;;		 -> STR_35(12), STR_34(10), STR_33(5), STR_32(13), 
  1886 ;;		 -> STR_31(11), STR_29(3), STR_28(3), STR_27(6), 
  1887 ;;		 -> STR_26(13), STR_25(11), STR_24(4), STR_22(10), 
  1888 ;;		 -> STR_20(11), STR_18(11), STR_16(10), STR_14(11), 
  1889 ;;		 -> STR_12(14), STR_10(14), STR_9(14), STR_8(15), 
  1890 ;;		 -> STR_7(2), STR_6(17), STR_4(9), STR_2(11), 
  1891 ;;		 -> STR_1(11), 
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;  output         41   36[BANK0 ] unsigned char [41]
  1894 ;;  i               2   77[BANK0 ] int 
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  1    wreg      void 
  1897 ;; Registers used:
  1898 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1904 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1905 ;;      Locals:         0      43       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1906 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1907 ;;      Totals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1908 ;;Total ram usage:       47 bytes
  1909 ;; Hardware stack levels used:    1
  1910 ;; Hardware stack levels required when called:    9
  1911 ;; This function calls:
  1912 ;;		_printf
  1913 ;; This function is called by:
  1914 ;;		_simulate
  1915 ;;		_main
  1916 ;;		_checkC9V
  1917 ;;		_mainloop
  1918 ;;		_showInfo
  1919 ;;		_checkAA
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923                           	psect	text3
  1924  000CC2                     __ptext3:
  1925                           	opt stack 0
  1926  000CC2                     _println:
  1927                           	opt stack 20
  1928                           
  1929                           ;modules.c: 22: int i = 0;
  1930                           
  1931                           ; BSR set to: 0
  1932                           ;incstack = 0
  1933  000CC2  0E00               	movlw	0
  1934  000CC4  0100               	movlb	0	; () banked
  1935  000CC6  6FCE               	movwf	(println@i+1)& (0+255),b
  1936  000CC8  0E00               	movlw	0
  1937  000CCA  6FCD               	movwf	println@i& (0+255),b
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;modules.c: 23: char output[] = "                                        ";
  1941  000CCC  EE21  F000         	lfsr	2,println@F3063
  1942  000CD0  EE10  F0A4         	lfsr	1,println@output
  1943  000CD4  0E28               	movlw	40
  1944  000CD6                     u1361:
  1945  000CD6  CFDB FFE3          	movff	plusw2,plusw1
  1946  000CDA  06E8               	decf	wreg,f,c
  1947  000CDC  E2FC               	bc	u1361
  1948                           
  1949                           ;modules.c: 24: while (data[i] != '\0') {
  1950  000CDE  D01F               	goto	l2176
  1951  000CE0                     l2172:
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;modules.c: 25: output[i] = data[i++];
  1955  000CE0  0100               	movlb	0	; () banked
  1956  000CE2  51CD               	movf	println@i& (0+255),w,b
  1957  000CE4  0100               	movlb	0	; () banked
  1958  000CE6  25A0               	addwf	println@data& (0+255),w,b
  1959  000CE8  0100               	movlb	0	; () banked
  1960  000CEA  6FA2               	movwf	??_println& (0+255),b
  1961  000CEC  0100               	movlb	0	; () banked
  1962  000CEE  51CE               	movf	(println@i+1)& (0+255),w,b
  1963  000CF0  0100               	movlb	0	; () banked
  1964  000CF2  21A1               	addwfc	(println@data+1)& (0+255),w,b
  1965  000CF4  0100               	movlb	0	; () banked
  1966  000CF6  6FA3               	movwf	(??_println+1)& (0+255),b
  1967  000CF8  C0A2  FFF6         	movff	??_println,tblptrl
  1968  000CFC  C0A3  FFF7         	movff	??_println+1,tblptrh
  1969  000D00                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1970  000D00  6AF8               	clrf	tblptru,c
  1971  000D02                     	endif
  1972  000D02                     	if	0	;tblptru may be non-zero
  1973  000D02                     	endif
  1974  000D02  0EA4               	movlw	low println@output
  1975  000D04  0100               	movlb	0	; () banked
  1976  000D06  25CD               	addwf	println@i& (0+255),w,b
  1977  000D08  6ED9               	movwf	fsr2l,c
  1978  000D0A  0E00               	movlw	high println@output
  1979  000D0C  0100               	movlb	0	; () banked
  1980  000D0E  21CE               	addwfc	(println@i+1)& (0+255),w,b
  1981  000D10  6EDA               	movwf	fsr2h,c
  1982  000D12  0008               	tblrd		*
  1983  000D14  CFF5 FFDF          	movff	tablat,indf2
  1984                           
  1985                           ; BSR set to: 0
  1986  000D18  0100               	movlb	0	; () banked
  1987  000D1A  4BCD               	infsnz	println@i& (0+255),f,b
  1988  000D1C  2BCE               	incf	(println@i+1)& (0+255),f,b
  1989  000D1E                     l2176:
  1990                           
  1991                           ; BSR set to: 0
  1992  000D1E  0100               	movlb	0	; () banked
  1993  000D20  51CD               	movf	println@i& (0+255),w,b
  1994  000D22  0100               	movlb	0	; () banked
  1995  000D24  25A0               	addwf	println@data& (0+255),w,b
  1996  000D26  0100               	movlb	0	; () banked
  1997  000D28  6FA2               	movwf	??_println& (0+255),b
  1998  000D2A  0100               	movlb	0	; () banked
  1999  000D2C  51CE               	movf	(println@i+1)& (0+255),w,b
  2000  000D2E  0100               	movlb	0	; () banked
  2001  000D30  21A1               	addwfc	(println@data+1)& (0+255),w,b
  2002  000D32  0100               	movlb	0	; () banked
  2003  000D34  6FA3               	movwf	(??_println+1)& (0+255),b
  2004  000D36  C0A2  FFF6         	movff	??_println,tblptrl
  2005  000D3A  C0A3  FFF7         	movff	??_println+1,tblptrh
  2006  000D3E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2007  000D3E  6AF8               	clrf	tblptru,c
  2008  000D40                     	endif
  2009  000D40                     	if	0	;tblptru may be non-zero
  2010  000D40                     	endif
  2011  000D40  0008               	tblrd		*
  2012  000D42  50F5               	movf	tablat,w,c
  2013  000D44  0900               	iorlw	0
  2014  000D46  A4D8               	btfss	status,2,c
  2015  000D48  D7CB               	goto	l2172
  2016                           
  2017                           ; BSR set to: 0
  2018                           ;modules.c: 26: }
  2019                           ;modules.c: 27: printf("%s", output);
  2020                           
  2021                           ; BSR set to: 0
  2022  000D4A  0EFA               	movlw	low STR_5
  2023  000D4C  0100               	movlb	0	; () banked
  2024  000D4E  6F8C               	movwf	printf@f& (0+255),b
  2025  000D50  0EFF               	movlw	high STR_5
  2026  000D52  0100               	movlb	0	; () banked
  2027  000D54  6F8D               	movwf	(printf@f+1)& (0+255),b
  2028  000D56  0EA4               	movlw	low println@output
  2029  000D58  0100               	movlb	0	; () banked
  2030  000D5A  6F8E               	movwf	(?_printf+2)& (0+255),b
  2031  000D5C  0E00               	movlw	high println@output
  2032  000D5E  0100               	movlb	0	; () banked
  2033  000D60  6F8F               	movwf	(?_printf+3)& (0+255),b
  2034  000D62  EC68  F001         	call	_printf	;wreg free
  2035  000D66  0012               	return		;funcret
  2036  000D68                     __end_of_println:
  2037                           	opt stack 0
  2038                           tblptru	equ	0xFF8
  2039                           tblptrh	equ	0xFF7
  2040                           tblptrl	equ	0xFF6
  2041                           tablat	equ	0xFF5
  2042                           postinc0	equ	0xFEE
  2043                           wreg	equ	0xFE8
  2044                           postdec1	equ	0xFE5
  2045                           plusw1	equ	0xFE3
  2046                           fsr1l	equ	0xFE1
  2047                           indf2	equ	0xFDF
  2048                           postinc2	equ	0xFDE
  2049                           postdec2	equ	0xFDD
  2050                           plusw2	equ	0xFDB
  2051                           fsr2h	equ	0xFDA
  2052                           fsr2l	equ	0xFD9
  2053                           status	equ	0xFD8
  2054                           
  2055 ;; *************** function _checkV *****************
  2056 ;; Defined at:
  2057 ;;		line 136 in file "modules.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  voltage         2   51[BANK0 ] int 
  2060 ;;  max             2   53[BANK0 ] int 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;		None
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  2   51[BANK0 ] int 
  2065 ;; Registers used:
  2066 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2072 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2074 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2075 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2076 ;;Total ram usage:        6 bytes
  2077 ;; Hardware stack levels used:    1
  2078 ;; Hardware stack levels required when called:    9
  2079 ;; This function calls:
  2080 ;;		___awtoft
  2081 ;;		___ftdiv
  2082 ;;		___ftge
  2083 ;;		___ftmul
  2084 ;;		_lcdInst
  2085 ;;		_printf
  2086 ;; This function is called by:
  2087 ;;		_checkC9V
  2088 ;;		_checkAA
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           	psect	text4
  2093  000A34                     __ptext4:
  2094                           	opt stack 0
  2095  000A34                     _checkV:
  2096                           	opt stack 19
  2097                           
  2098                           ;modules.c: 138: printf("%d received",voltage);
  2099                           
  2100                           ;incstack = 0
  2101  000A34  0E73               	movlw	low STR_23
  2102  000A36  0100               	movlb	0	; () banked
  2103  000A38  6F8C               	movwf	printf@f& (0+255),b
  2104  000A3A  0EFF               	movlw	high STR_23
  2105  000A3C  0100               	movlb	0	; () banked
  2106  000A3E  6F8D               	movwf	(printf@f+1)& (0+255),b
  2107  000A40  C0B3  F08E         	movff	checkV@voltage,?_printf+2
  2108  000A44  C0B4  F08F         	movff	checkV@voltage+1,?_printf+3
  2109  000A48  EC68  F001         	call	_printf	;wreg free
  2110                           
  2111                           ;modules.c: 139: lcdInst(0b10000000);;
  2112  000A4C  0E80               	movlw	128
  2113  000A4E  ECDA  F009         	call	_lcdInst
  2114                           
  2115                           ;modules.c: 140: _delay((unsigned long)((1000)*(8000000/4000.0)));
  2116  000A52  0E0B               	movlw	11
  2117  000A54  0100               	movlb	0	; () banked
  2118  000A56  6FB8               	movwf	(??_checkV+1)& (0+255),b
  2119  000A58  0E26               	movlw	38
  2120  000A5A  0100               	movlb	0	; () banked
  2121  000A5C  6FB7               	movwf	??_checkV& (0+255),b
  2122  000A5E  0E5D               	movlw	93
  2123  000A60                     u1837:
  2124  000A60  2EE8               	decfsz	wreg,f,c
  2125  000A62  D7FE               	bra	u1837
  2126  000A64  2FB7               	decfsz	??_checkV& (0+255),f,b
  2127  000A66  D7FC               	bra	u1837
  2128  000A68  2FB8               	decfsz	(??_checkV+1)& (0+255),f,b
  2129  000A6A  D7FA               	bra	u1837
  2130  000A6C  D000               	nop2	
  2131                           
  2132                           ;modules.c: 141: if (voltage > 1023 * 4 / 5) {
  2133  000A6E  0100               	movlb	0	; () banked
  2134  000A70  BFB4               	btfsc	(checkV@voltage+1)& (0+255),7,b
  2135  000A72  D00E               	goto	l2208
  2136  000A74  0E33               	movlw	51
  2137  000A76  0100               	movlb	0	; () banked
  2138  000A78  5DB3               	subwf	checkV@voltage& (0+255),w,b
  2139  000A7A  0E03               	movlw	3
  2140  000A7C  0100               	movlb	0	; () banked
  2141  000A7E  59B4               	subwfb	(checkV@voltage+1)& (0+255),w,b
  2142  000A80  A0D8               	btfss	status,0,c
  2143  000A82  D006               	goto	l2208
  2144                           
  2145                           ; BSR set to: 0
  2146                           ;modules.c: 142: return 0;
  2147  000A84  0E00               	movlw	0
  2148  000A86  0100               	movlb	0	; () banked
  2149  000A88  6FB4               	movwf	(?_checkV+1)& (0+255),b
  2150  000A8A  0E00               	movlw	0
  2151  000A8C  6FB3               	movwf	?_checkV& (0+255),b
  2152                           
  2153                           ; BSR set to: 0
  2154                           ;modules.c: 143: } else if (voltage > 0.85 * 1023 * max / 5) {
  2155                           
  2156                           ; BSR set to: 0
  2157  000A8E  0012               	return	
  2158  000A90                     l2208:
  2159                           
  2160                           ; BSR set to: 0
  2161  000A90  0E00               	movlw	0
  2162  000A92  0100               	movlb	0	; () banked
  2163  000A94  6F9E               	movwf	___ftdiv@f2& (0+255),b
  2164  000A96  0EA0               	movlw	160
  2165  000A98  0100               	movlb	0	; () banked
  2166  000A9A  6F9F               	movwf	(___ftdiv@f2+1)& (0+255),b
  2167  000A9C  0E40               	movlw	64
  2168  000A9E  0100               	movlb	0	; () banked
  2169  000AA0  6FA0               	movwf	(___ftdiv@f2+2)& (0+255),b
  2170  000AA2  0E63               	movlw	99
  2171  000AA4  0100               	movlb	0	; () banked
  2172  000AA6  6F8F               	movwf	___ftmul@f2& (0+255),b
  2173  000AA8  0E59               	movlw	89
  2174  000AAA  0100               	movlb	0	; () banked
  2175  000AAC  6F90               	movwf	(___ftmul@f2+1)& (0+255),b
  2176  000AAE  0E44               	movlw	68
  2177  000AB0  0100               	movlb	0	; () banked
  2178  000AB2  6F91               	movwf	(___ftmul@f2+2)& (0+255),b
  2179  000AB4  C0B5  F088         	movff	checkV@max,___awtoft@c
  2180  000AB8  C0B6  F089         	movff	checkV@max+1,___awtoft@c+1
  2181  000ABC  EC2E  F009         	call	___awtoft	;wreg free
  2182  000AC0  C088  F08C         	movff	?___awtoft,___ftmul@f1
  2183  000AC4  C089  F08D         	movff	?___awtoft+1,___ftmul@f1+1
  2184  000AC8  C08A  F08E         	movff	?___awtoft+2,___ftmul@f1+2
  2185  000ACC  EC3F  F003         	call	___ftmul	;wreg free
  2186  000AD0  C08C  F09B         	movff	?___ftmul,___ftdiv@f1
  2187  000AD4  C08D  F09C         	movff	?___ftmul+1,___ftdiv@f1+1
  2188  000AD8  C08E  F09D         	movff	?___ftmul+2,___ftdiv@f1+2
  2189  000ADC  ECEE  F003         	call	___ftdiv	;wreg free
  2190  000AE0  C09B  F0AA         	movff	?___ftdiv,___ftge@ff1
  2191  000AE4  C09C  F0AB         	movff	?___ftdiv+1,___ftge@ff1+1
  2192  000AE8  C09D  F0AC         	movff	?___ftdiv+2,___ftge@ff1+2
  2193  000AEC  C0B3  F088         	movff	checkV@voltage,___awtoft@c
  2194  000AF0  C0B4  F089         	movff	checkV@voltage+1,___awtoft@c+1
  2195  000AF4  EC2E  F009         	call	___awtoft	;wreg free
  2196  000AF8  C088  F0AD         	movff	?___awtoft,___ftge@ff2
  2197  000AFC  C089  F0AE         	movff	?___awtoft+1,___ftge@ff2+1
  2198  000B00  C08A  F0AF         	movff	?___awtoft+2,___ftge@ff2+2
  2199  000B04  ECFD  F005         	call	___ftge	;wreg free
  2200  000B08  0100               	movlb	0	; () banked
  2201  000B0A  B0D8               	btfsc	status,0,c
  2202  000B0C  D006               	goto	l226
  2203                           
  2204                           ; BSR set to: 0
  2205                           ;modules.c: 144: return 1;
  2206  000B0E  0E00               	movlw	0
  2207  000B10  0100               	movlb	0	; () banked
  2208  000B12  6FB4               	movwf	(?_checkV+1)& (0+255),b
  2209  000B14  0E01               	movlw	1
  2210  000B16  6FB3               	movwf	?_checkV& (0+255),b
  2211                           
  2212                           ; BSR set to: 0
  2213                           ;modules.c: 145: } else {
  2214                           
  2215                           ; BSR set to: 0
  2216  000B18  0012               	return	
  2217  000B1A                     l226:
  2218                           
  2219                           ; BSR set to: 0
  2220                           ;modules.c: 146: return -1;
  2221  000B1A  0100               	movlb	0	; () banked
  2222  000B1C  69B3               	setf	?_checkV& (0+255),b
  2223  000B1E  69B4               	setf	(?_checkV+1)& (0+255),b
  2224                           
  2225                           ; BSR set to: 0
  2226  000B20  0012               	return	
  2227  000B22                     __end_of_checkV:
  2228                           	opt stack 0
  2229                           tblptru	equ	0xFF8
  2230                           tblptrh	equ	0xFF7
  2231                           tblptrl	equ	0xFF6
  2232                           tablat	equ	0xFF5
  2233                           postinc0	equ	0xFEE
  2234                           wreg	equ	0xFE8
  2235                           postdec1	equ	0xFE5
  2236                           plusw1	equ	0xFE3
  2237                           fsr1l	equ	0xFE1
  2238                           indf2	equ	0xFDF
  2239                           postinc2	equ	0xFDE
  2240                           postdec2	equ	0xFDD
  2241                           plusw2	equ	0xFDB
  2242                           fsr2h	equ	0xFDA
  2243                           fsr2l	equ	0xFD9
  2244                           status	equ	0xFD8
  2245                           
  2246 ;; *************** function _printf *****************
  2247 ;; Defined at:
  2248 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;  f               2   12[BANK0 ] PTR const unsigned char 
  2251 ;;		 -> STR_30(11), STR_23(12), STR_21(3), STR_19(3), 
  2252 ;;		 -> STR_17(3), STR_15(3), STR_13(13), STR_11(11), 
  2253 ;;		 -> STR_5(3), STR_3(19), 
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  tmpval          4    0        struct .
  2256 ;;  val             2   29[BANK0 ] unsigned int 
  2257 ;;  cp              2   27[BANK0 ] PTR const unsigned char 
  2258 ;;		 -> STR_36(7), println@output(41), 
  2259 ;;  ap              2   25[BANK0 ] PTR void [1]
  2260 ;;		 -> ?i2_printf(2), ?_printf(2), 
  2261 ;;  len             2    0        unsigned int 
  2262 ;;  c               1   31[BANK0 ] char 
  2263 ;;  prec            1   24[BANK0 ] char 
  2264 ;;  flag            1   23[BANK0 ] unsigned char 
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  2   12[BANK0 ] int 
  2267 ;; Registers used:
  2268 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2274 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2275 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2276 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2277 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2278 ;;Total ram usage:       20 bytes
  2279 ;; Hardware stack levels used:    1
  2280 ;; Hardware stack levels required when called:    8
  2281 ;; This function calls:
  2282 ;;		___lwdiv
  2283 ;;		___lwmod
  2284 ;;		_putch
  2285 ;; This function is called by:
  2286 ;;		_simulate
  2287 ;;		_println
  2288 ;;		_checkV
  2289 ;;		_checkC9V
  2290 ;;		_showInfo
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294                           	psect	text5
  2295  0002D0                     __ptext5:
  2296                           	opt stack 0
  2297  0002D0                     _printf:
  2298                           	opt stack 20
  2299                           
  2300                           ;doprnt.c: 466: va_list ap;
  2301                           ;doprnt.c: 499: signed char c;
  2302                           ;doprnt.c: 506: signed char prec;
  2303                           ;doprnt.c: 508: unsigned char flag;
  2304                           ;doprnt.c: 523: union {
  2305                           ;doprnt.c: 524: unsigned long vd;
  2306                           ;doprnt.c: 525: double integ;
  2307                           ;doprnt.c: 526: } tmpval;
  2308                           ;doprnt.c: 528: unsigned int val;
  2309                           ;doprnt.c: 529: unsigned len;
  2310                           ;doprnt.c: 530: const char * cp;
  2311                           ;doprnt.c: 533: *ap = __va_start();
  2312                           
  2313                           ; BSR set to: 0
  2314                           ;incstack = 0
  2315  0002D0  0E8E               	movlw	low (?_printf+2)
  2316  0002D2  0100               	movlb	0	; () banked
  2317  0002D4  6F99               	movwf	printf@ap& (0+255),b
  2318  0002D6  0E00               	movlw	high (?_printf+2)
  2319  0002D8  0100               	movlb	0	; () banked
  2320  0002DA  6F9A               	movwf	(printf@ap+1)& (0+255),b
  2321                           
  2322                           ;doprnt.c: 536: while(c = *f++) {
  2323  0002DC  D0E5               	goto	l1996
  2324  0002DE                     l1936:
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;doprnt.c: 538: if(c != '%')
  2328  0002DE  0E25               	movlw	37
  2329  0002E0  0100               	movlb	0	; () banked
  2330  0002E2  199F               	xorwf	printf@c& (0+255),w,b
  2331  0002E4  B4D8               	btfsc	status,2,c
  2332  0002E6  D005               	goto	l1940
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;doprnt.c: 540: {
  2336                           ;doprnt.c: 541: (putch(c) );
  2337  0002E8  0100               	movlb	0	; () banked
  2338  0002EA  519F               	movf	printf@c& (0+255),w,b
  2339  0002EC  ECD2  F009         	call	_putch
  2340                           
  2341                           ;doprnt.c: 542: continue;
  2342  0002F0  D0DB               	goto	l1996
  2343  0002F2                     l1940:
  2344                           
  2345                           ;doprnt.c: 543: }
  2346                           ;doprnt.c: 548: flag = 0;
  2347  0002F2  0E00               	movlw	0
  2348  0002F4  0100               	movlb	0	; () banked
  2349  0002F6  6F97               	movwf	printf@flag& (0+255),b
  2350                           
  2351                           ;doprnt.c: 635: switch(c = *f++) {
  2352  0002F8  D045               	goto	l1958
  2353  0002FA                     l1942:
  2354                           
  2355                           ; BSR set to: 0
  2356                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  2357  0002FA  C099  FFD9         	movff	printf@ap,fsr2l
  2358  0002FE  C09A  FFDA         	movff	printf@ap+1,fsr2h
  2359  000302  CFDE F09B          	movff	postinc2,printf@cp
  2360  000306  CFDD F09C          	movff	postdec2,printf@cp+1
  2361                           
  2362                           ; BSR set to: 0
  2363  00030A  0E02               	movlw	2
  2364  00030C  0100               	movlb	0	; () banked
  2365  00030E  2799               	addwf	printf@ap& (0+255),f,b
  2366  000310  0E00               	movlw	0
  2367  000312  239A               	addwfc	(printf@ap+1)& (0+255),f,b
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;doprnt.c: 740: if(!cp)
  2371  000314  0100               	movlb	0	; () banked
  2372  000316  519B               	movf	printf@cp& (0+255),w,b
  2373  000318  0100               	movlb	0	; () banked
  2374  00031A  119C               	iorwf	(printf@cp+1)& (0+255),w,b
  2375  00031C  A4D8               	btfss	status,2,c
  2376  00031E  D01D               	goto	l1954
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;doprnt.c: 741: cp = "(null)";
  2380  000320  0EDE               	movlw	low STR_36
  2381  000322  0100               	movlb	0	; () banked
  2382  000324  6F9B               	movwf	printf@cp& (0+255),b
  2383  000326  0EFF               	movlw	high STR_36
  2384  000328  0100               	movlb	0	; () banked
  2385  00032A  6F9C               	movwf	(printf@cp+1)& (0+255),b
  2386                           
  2387                           ; BSR set to: 0
  2388                           ;doprnt.c: 777: while(*cp)
  2389  00032C  D016               	goto	l1954
  2390  00032E                     l1950:
  2391                           
  2392                           ;doprnt.c: 778: (putch(*cp++) );
  2393  00032E  C09B  FFF6         	movff	printf@cp,tblptrl
  2394  000332  C09C  FFF7         	movff	printf@cp+1,tblptrh
  2395  000336  0E00               	movlw	low (__mediumconst shr (0+16))
  2396  000338  6EF8               	movwf	tblptru,c
  2397  00033A  0E0F               	movlw	(high __ramtop+-1)
  2398  00033C  64F7               	cpfsgt	tblptrh,c
  2399  00033E  D003               	bra	u1057
  2400  000340  0008               	tblrd		*
  2401  000342  50F5               	movf	tablat,w,c
  2402  000344  D005               	bra	u1050
  2403  000346                     u1057:
  2404  000346  CFF6 FFE9          	movff	tblptrl,fsr0l
  2405  00034A  CFF7 FFEA          	movff	tblptrh,fsr0h
  2406  00034E  50EF               	movf	indf0,w,c
  2407  000350                     u1050:
  2408  000350  ECD2  F009         	call	_putch
  2409  000354  0100               	movlb	0	; () banked
  2410  000356  4B9B               	infsnz	printf@cp& (0+255),f,b
  2411  000358  2B9C               	incf	(printf@cp+1)& (0+255),f,b
  2412  00035A                     l1954:
  2413                           
  2414                           ; BSR set to: 0
  2415  00035A  C09B  FFF6         	movff	printf@cp,tblptrl
  2416  00035E  C09C  FFF7         	movff	printf@cp+1,tblptrh
  2417  000362  0E00               	movlw	low (__mediumconst shr (0+16))
  2418  000364  6EF8               	movwf	tblptru,c
  2419  000366  0E0F               	movlw	(high __ramtop+-1)
  2420  000368  64F7               	cpfsgt	tblptrh,c
  2421  00036A  D003               	bra	u1067
  2422  00036C  0008               	tblrd		*
  2423  00036E  50F5               	movf	tablat,w,c
  2424  000370  D005               	bra	u1060
  2425  000372                     u1067:
  2426  000372  CFF6 FFE9          	movff	tblptrl,fsr0l
  2427  000376  CFF7 FFEA          	movff	tblptrh,fsr0h
  2428  00037A  50EF               	movf	indf0,w,c
  2429  00037C                     u1060:
  2430  00037C  0900               	iorlw	0
  2431  00037E  B4D8               	btfsc	status,2,c
  2432  000380  D093               	goto	l1996
  2433  000382  D7D5               	goto	l1950
  2434  000384                     l1958:
  2435  000384  C08C  FFF6         	movff	printf@f,tblptrl
  2436  000388  C08D  FFF7         	movff	printf@f+1,tblptrh
  2437  00038C  0100               	movlb	0	; () banked
  2438  00038E  4B8C               	infsnz	printf@f& (0+255),f,b
  2439  000390  2B8D               	incf	(printf@f+1)& (0+255),f,b
  2440  000392                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2441  000392  6AF8               	clrf	tblptru,c
  2442  000394                     	endif
  2443  000394                     	if	0	;tblptru may be non-zero
  2444  000394                     	endif
  2445  000394  0008               	tblrd		*
  2446  000396  CFF5 F09F          	movff	tablat,printf@c
  2447  00039A  0100               	movlb	0	; () banked
  2448  00039C  519F               	movf	printf@c& (0+255),w,b
  2449                           
  2450                           ; Switch size 1, requested type "space"
  2451                           ; Number of cases is 4, Range of values is 0 to 115
  2452                           ; switch strategies available:
  2453                           ; Name         Instructions Cycles
  2454                           ; simple_byte           13     7 (average)
  2455                           ;	Chosen strategy is simple_byte
  2456  00039E  0A00               	xorlw	0	; case 0
  2457  0003A0  B4D8               	btfsc	status,2,c
  2458  0003A2  0012               	return	
  2459  0003A4  0A64               	xorlw	100	; case 100
  2460  0003A6  B4D8               	btfsc	status,2,c
  2461  0003A8  D007               	goto	l1960
  2462  0003AA  0A0D               	xorlw	13	; case 105
  2463  0003AC  B4D8               	btfsc	status,2,c
  2464  0003AE  D004               	goto	l1960
  2465  0003B0  0A1A               	xorlw	26	; case 115
  2466  0003B2  B4D8               	btfsc	status,2,c
  2467  0003B4  D7A2               	goto	l1942
  2468  0003B6  D078               	goto	l1996
  2469  0003B8                     l1960:
  2470                           
  2471                           ;doprnt.c: 1253: {
  2472                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2473  0003B8  C099  FFD9         	movff	printf@ap,fsr2l
  2474  0003BC  C09A  FFDA         	movff	printf@ap+1,fsr2h
  2475  0003C0  CFDE F09D          	movff	postinc2,printf@val
  2476  0003C4  CFDD F09E          	movff	postdec2,printf@val+1
  2477  0003C8  0E02               	movlw	2
  2478  0003CA  0100               	movlb	0	; () banked
  2479  0003CC  2799               	addwf	printf@ap& (0+255),f,b
  2480  0003CE  0E00               	movlw	0
  2481  0003D0  239A               	addwfc	(printf@ap+1)& (0+255),f,b
  2482                           
  2483                           ; BSR set to: 0
  2484                           ;doprnt.c: 1261: if((int)val < 0) {
  2485  0003D2  0100               	movlb	0	; () banked
  2486  0003D4  AF9E               	btfss	(printf@val+1)& (0+255),7,b
  2487  0003D6  D008               	goto	l1970
  2488                           
  2489                           ; BSR set to: 0
  2490                           ;doprnt.c: 1262: flag |= 0x03;
  2491  0003D8  0E03               	movlw	3
  2492  0003DA  0100               	movlb	0	; () banked
  2493  0003DC  1397               	iorwf	printf@flag& (0+255),f,b
  2494                           
  2495                           ; BSR set to: 0
  2496                           ;doprnt.c: 1263: val = -val;
  2497  0003DE  0100               	movlb	0	; () banked
  2498  0003E0  6D9D               	negf	printf@val& (0+255),b
  2499  0003E2  1F9E               	comf	(printf@val+1)& (0+255),f,b
  2500  0003E4  B0D8               	btfsc	status,0,c
  2501  0003E6  2B9E               	incf	(printf@val+1)& (0+255),f,b
  2502  0003E8                     l1970:
  2503                           
  2504                           ; BSR set to: 0
  2505                           ;doprnt.c: 1264: }
  2506                           ;doprnt.c: 1266: }
  2507                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2508  0003E8  0E01               	movlw	1
  2509  0003EA  0100               	movlb	0	; () banked
  2510  0003EC  6F9F               	movwf	printf@c& (0+255),b
  2511  0003EE                     l1972:
  2512                           
  2513                           ; BSR set to: 0
  2514  0003EE  0E05               	movlw	5
  2515  0003F0  0100               	movlb	0	; () banked
  2516  0003F2  199F               	xorwf	printf@c& (0+255),w,b
  2517  0003F4  B4D8               	btfsc	status,2,c
  2518  0003F6  D019               	goto	l1984
  2519                           
  2520                           ; BSR set to: 0
  2521                           ;doprnt.c: 1306: if(val < dpowers[c])
  2522                           
  2523                           ; BSR set to: 0
  2524                           
  2525                           ; BSR set to: 0
  2526  0003F8  0100               	movlb	0	; () banked
  2527  0003FA  519F               	movf	printf@c& (0+255),w,b
  2528  0003FC  0D02               	mullw	2
  2529  0003FE  0ED9               	movlw	low _dpowers
  2530  000400  24F3               	addwf	prodl,w,c
  2531  000402  6EF6               	movwf	tblptrl,c
  2532  000404  0EFE               	movlw	high _dpowers
  2533  000406  20F4               	addwfc	prodh,w,c
  2534  000408  6EF7               	movwf	tblptrh,c
  2535  00040A                     	if	1	;There are 3 active tblptr bytes
  2536  00040A  6AF8               	clrf	tblptru,c
  2537  00040C  0E00               	movlw	low (__mediumconst shr (0+16))
  2538  00040E  22F8               	addwfc	tblptru,f,c
  2539  000410                     	endif
  2540  000410  0009               	tblrd		*+
  2541  000412  50F5               	movf	tablat,w,c
  2542  000414  0100               	movlb	0	; () banked
  2543  000416  5D9D               	subwf	printf@val& (0+255),w,b
  2544  000418  0009               	tblrd		*+
  2545  00041A  50F5               	movf	tablat,w,c
  2546  00041C  0100               	movlb	0	; () banked
  2547  00041E  599E               	subwfb	(printf@val+1)& (0+255),w,b
  2548  000420  A0D8               	btfss	status,0,c
  2549  000422  D003               	goto	l1984
  2550                           
  2551                           ; BSR set to: 0
  2552                           
  2553                           ; BSR set to: 0
  2554                           
  2555                           ; BSR set to: 0
  2556                           ;doprnt.c: 1307: break;
  2557  000424  0100               	movlb	0	; () banked
  2558  000426  2B9F               	incf	printf@c& (0+255),f,b
  2559  000428  D7E2               	goto	l1972
  2560  00042A                     l1984:
  2561                           
  2562                           ; BSR set to: 0
  2563                           ;doprnt.c: 1422: {
  2564                           ;doprnt.c: 1438: if(flag & 0x03)
  2565  00042A  C097  F096         	movff	printf@flag,??_printf
  2566  00042E  0E03               	movlw	3
  2567  000430  0100               	movlb	0	; () banked
  2568  000432  1796               	andwf	??_printf& (0+255),f,b
  2569  000434  B4D8               	btfsc	status,2,c
  2570  000436  D003               	goto	l1988
  2571                           
  2572                           ; BSR set to: 0
  2573                           ;doprnt.c: 1439: (putch('-') );
  2574  000438  0E2D               	movlw	45
  2575  00043A  ECD2  F009         	call	_putch
  2576  00043E                     l1988:
  2577                           
  2578                           ;doprnt.c: 1469: }
  2579                           ;doprnt.c: 1472: prec = c;
  2580  00043E  C09F  F098         	movff	printf@c,printf@prec
  2581                           
  2582                           ;doprnt.c: 1474: while(prec--) {
  2583  000442  D02C               	goto	l1994
  2584  000444                     l1990:
  2585                           
  2586                           ;doprnt.c: 1478: {
  2587                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2588  000444  0100               	movlb	0	; () banked
  2589  000446  5198               	movf	printf@prec& (0+255),w,b
  2590  000448  0D02               	mullw	2
  2591  00044A  0ED9               	movlw	low _dpowers
  2592  00044C  24F3               	addwf	prodl,w,c
  2593  00044E  6EF6               	movwf	tblptrl,c
  2594  000450  0EFE               	movlw	high _dpowers
  2595  000452  20F4               	addwfc	prodh,w,c
  2596  000454  6EF7               	movwf	tblptrh,c
  2597  000456                     	if	1	;There are 3 active tblptr bytes
  2598  000456  6AF8               	clrf	tblptru,c
  2599  000458  0E00               	movlw	low (__mediumconst shr (0+16))
  2600  00045A  22F8               	addwfc	tblptru,f,c
  2601  00045C                     	endif
  2602  00045C  0009               	tblrd		*+
  2603  00045E  CFF5 F082          	movff	tablat,___lwdiv@divisor
  2604  000462  000A               	tblrd		*-
  2605  000464  CFF5 F083          	movff	tablat,___lwdiv@divisor+1
  2606  000468  C09D  F080         	movff	printf@val,___lwdiv@dividend
  2607  00046C  C09E  F081         	movff	printf@val+1,___lwdiv@dividend+1
  2608  000470  ECEF  F007         	call	___lwdiv	;wreg free
  2609  000474  C080  F087         	movff	?___lwdiv,___lwmod@dividend
  2610  000478  C081  F088         	movff	?___lwdiv+1,___lwmod@dividend+1
  2611  00047C  0E00               	movlw	0
  2612  00047E  0100               	movlb	0	; () banked
  2613  000480  6F8A               	movwf	(___lwmod@divisor+1)& (0+255),b
  2614  000482  0E0A               	movlw	10
  2615  000484  6F89               	movwf	___lwmod@divisor& (0+255),b
  2616  000486  EC5F  F008         	call	___lwmod	;wreg free
  2617  00048A  0100               	movlb	0	; () banked
  2618  00048C  5187               	movf	?___lwmod& (0+255),w,b
  2619  00048E  0F30               	addlw	48
  2620  000490  0100               	movlb	0	; () banked
  2621  000492  6F9F               	movwf	printf@c& (0+255),b
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;doprnt.c: 1523: }
  2625                           ;doprnt.c: 1524: (putch(c) );
  2626  000494  0100               	movlb	0	; () banked
  2627  000496  519F               	movf	printf@c& (0+255),w,b
  2628  000498  ECD2  F009         	call	_putch
  2629  00049C                     l1994:
  2630  00049C  0100               	movlb	0	; () banked
  2631  00049E  0798               	decf	printf@prec& (0+255),f,b
  2632  0004A0  0100               	movlb	0	; () banked
  2633  0004A2  2998               	incf	printf@prec& (0+255),w,b
  2634  0004A4  A4D8               	btfss	status,2,c
  2635  0004A6  D7CE               	goto	l1990
  2636  0004A8                     l1996:
  2637  0004A8  C08C  FFF6         	movff	printf@f,tblptrl
  2638  0004AC  C08D  FFF7         	movff	printf@f+1,tblptrh
  2639  0004B0  0100               	movlb	0	; () banked
  2640  0004B2  4B8C               	infsnz	printf@f& (0+255),f,b
  2641  0004B4  2B8D               	incf	(printf@f+1)& (0+255),f,b
  2642  0004B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2643  0004B6  6AF8               	clrf	tblptru,c
  2644  0004B8                     	endif
  2645  0004B8                     	if	0	;tblptru may be non-zero
  2646  0004B8                     	endif
  2647  0004B8  0008               	tblrd		*
  2648  0004BA  CFF5 F09F          	movff	tablat,printf@c
  2649  0004BE  0100               	movlb	0	; () banked
  2650  0004C0  519F               	movf	printf@c& (0+255),w,b
  2651  0004C2  B4D8               	btfsc	status,2,c
  2652  0004C4  0012               	return	
  2653  0004C6  D70B               	goto	l1936
  2654  0004C8                     __end_of_printf:
  2655                           	opt stack 0
  2656                           tblptru	equ	0xFF8
  2657                           tblptrh	equ	0xFF7
  2658                           tblptrl	equ	0xFF6
  2659                           tablat	equ	0xFF5
  2660                           prodh	equ	0xFF4
  2661                           prodl	equ	0xFF3
  2662                           indf0	equ	0xFEF
  2663                           postinc0	equ	0xFEE
  2664                           fsr0h	equ	0xFEA
  2665                           fsr0l	equ	0xFE9
  2666                           wreg	equ	0xFE8
  2667                           postdec1	equ	0xFE5
  2668                           plusw1	equ	0xFE3
  2669                           fsr1l	equ	0xFE1
  2670                           indf2	equ	0xFDF
  2671                           postinc2	equ	0xFDE
  2672                           postdec2	equ	0xFDD
  2673                           plusw2	equ	0xFDB
  2674                           fsr2h	equ	0xFDA
  2675                           fsr2l	equ	0xFD9
  2676                           status	equ	0xFD8
  2677                           
  2678 ;; *************** function _putch *****************
  2679 ;; Defined at:
  2680 ;;		line 31 in file "lcd.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;  data            1    wreg     unsigned char 
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;  data            1    2[BANK0 ] unsigned char 
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  1    wreg      void 
  2687 ;; Registers used:
  2688 ;;		wreg, status,2, status,0, cstack
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2695 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2697 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2698 ;;Total ram usage:        1 bytes
  2699 ;; Hardware stack levels used:    1
  2700 ;; Hardware stack levels required when called:    7
  2701 ;; This function calls:
  2702 ;;		_lcdNibble
  2703 ;; This function is called by:
  2704 ;;		_printf
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           	psect	text6
  2709  0013A4                     __ptext6:
  2710                           	opt stack 0
  2711  0013A4                     _putch:
  2712                           	opt stack 20
  2713                           
  2714                           ; BSR set to: 0
  2715                           ;incstack = 0
  2716                           ;putch@data stored from wreg
  2717  0013A4  0100               	movlb	0	; () banked
  2718  0013A6  6F82               	movwf	putch@data& (0+255),b
  2719                           
  2720                           ;lcd.c: 32: LATDbits.LATD2 = 1;
  2721  0013A8  848C               	bsf	3980,2,c	;volatile
  2722                           
  2723                           ;lcd.c: 33: lcdNibble(data);
  2724  0013AA  0100               	movlb	0	; () banked
  2725  0013AC  5182               	movf	putch@data& (0+255),w,b
  2726  0013AE  EC2B  F008         	call	_lcdNibble
  2727  0013B2  0012               	return		;funcret
  2728  0013B4                     __end_of_putch:
  2729                           	opt stack 0
  2730                           tblptru	equ	0xFF8
  2731                           tblptrh	equ	0xFF7
  2732                           tblptrl	equ	0xFF6
  2733                           tablat	equ	0xFF5
  2734                           prodh	equ	0xFF4
  2735                           prodl	equ	0xFF3
  2736                           indf0	equ	0xFEF
  2737                           postinc0	equ	0xFEE
  2738                           fsr0h	equ	0xFEA
  2739                           fsr0l	equ	0xFE9
  2740                           wreg	equ	0xFE8
  2741                           postdec1	equ	0xFE5
  2742                           plusw1	equ	0xFE3
  2743                           fsr1l	equ	0xFE1
  2744                           indf2	equ	0xFDF
  2745                           postinc2	equ	0xFDE
  2746                           postdec2	equ	0xFDD
  2747                           plusw2	equ	0xFDB
  2748                           fsr2h	equ	0xFDA
  2749                           fsr2l	equ	0xFD9
  2750                           status	equ	0xFD8
  2751                           
  2752 ;; *************** function ___lwmod *****************
  2753 ;; Defined at:
  2754 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  2755 ;; Parameters:    Size  Location     Type
  2756 ;;  dividend        2    7[BANK0 ] unsigned int 
  2757 ;;  divisor         2    9[BANK0 ] unsigned int 
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;  counter         1   11[BANK0 ] unsigned char 
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  2    7[BANK0 ] unsigned int 
  2762 ;; Registers used:
  2763 ;;		wreg, status,2, status,0
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2769 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2770 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2772 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2773 ;;Total ram usage:        5 bytes
  2774 ;; Hardware stack levels used:    1
  2775 ;; Hardware stack levels required when called:    6
  2776 ;; This function calls:
  2777 ;;		Nothing
  2778 ;; This function is called by:
  2779 ;;		_printf
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           	psect	text7
  2784  0010BE                     __ptext7:
  2785                           	opt stack 0
  2786  0010BE                     ___lwmod:
  2787                           	opt stack 21
  2788                           
  2789                           ;incstack = 0
  2790  0010BE  0100               	movlb	0	; () banked
  2791  0010C0  5189               	movf	___lwmod@divisor& (0+255),w,b
  2792  0010C2  0100               	movlb	0	; () banked
  2793  0010C4  118A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  2794  0010C6  B4D8               	btfsc	status,2,c
  2795  0010C8  D026               	goto	l705
  2796                           
  2797                           ; BSR set to: 0
  2798  0010CA  0E01               	movlw	1
  2799  0010CC  0100               	movlb	0	; () banked
  2800  0010CE  6F8B               	movwf	___lwmod@counter& (0+255),b
  2801  0010D0  D006               	goto	l1906
  2802  0010D2                     l1904:
  2803                           
  2804                           ; BSR set to: 0
  2805  0010D2  0100               	movlb	0	; () banked
  2806  0010D4  90D8               	bcf	status,0,c
  2807  0010D6  3789               	rlcf	___lwmod@divisor& (0+255),f,b
  2808  0010D8  378A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2809  0010DA  0100               	movlb	0	; () banked
  2810  0010DC  2B8B               	incf	___lwmod@counter& (0+255),f,b
  2811  0010DE                     l1906:
  2812                           
  2813                           ; BSR set to: 0
  2814  0010DE  0100               	movlb	0	; () banked
  2815  0010E0  AF8A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2816  0010E2  D7F7               	goto	l1904
  2817  0010E4                     l1908:
  2818                           
  2819                           ; BSR set to: 0
  2820  0010E4  0100               	movlb	0	; () banked
  2821  0010E6  5189               	movf	___lwmod@divisor& (0+255),w,b
  2822  0010E8  0100               	movlb	0	; () banked
  2823  0010EA  5D87               	subwf	___lwmod@dividend& (0+255),w,b
  2824  0010EC  0100               	movlb	0	; () banked
  2825  0010EE  518A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2826  0010F0  0100               	movlb	0	; () banked
  2827  0010F2  5988               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2828  0010F4  A0D8               	btfss	status,0,c
  2829  0010F6  D008               	goto	l1912
  2830                           
  2831                           ; BSR set to: 0
  2832  0010F8  0100               	movlb	0	; () banked
  2833  0010FA  5189               	movf	___lwmod@divisor& (0+255),w,b
  2834  0010FC  0100               	movlb	0	; () banked
  2835  0010FE  5F87               	subwf	___lwmod@dividend& (0+255),f,b
  2836  001100  0100               	movlb	0	; () banked
  2837  001102  518A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2838  001104  0100               	movlb	0	; () banked
  2839  001106  5B88               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2840  001108                     l1912:
  2841                           
  2842                           ; BSR set to: 0
  2843  001108  0100               	movlb	0	; () banked
  2844  00110A  90D8               	bcf	status,0,c
  2845  00110C  338A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2846  00110E  3389               	rrcf	___lwmod@divisor& (0+255),f,b
  2847                           
  2848                           ; BSR set to: 0
  2849  001110  0100               	movlb	0	; () banked
  2850  001112  2F8B               	decfsz	___lwmod@counter& (0+255),f,b
  2851  001114  D7E7               	goto	l1908
  2852  001116                     l705:
  2853                           
  2854                           ; BSR set to: 0
  2855  001116  C087  F087         	movff	___lwmod@dividend,?___lwmod
  2856  00111A  C088  F088         	movff	___lwmod@dividend+1,?___lwmod+1
  2857                           
  2858                           ; BSR set to: 0
  2859  00111E  0012               	return		;funcret
  2860  001120                     __end_of___lwmod:
  2861                           	opt stack 0
  2862                           tblptru	equ	0xFF8
  2863                           tblptrh	equ	0xFF7
  2864                           tblptrl	equ	0xFF6
  2865                           tablat	equ	0xFF5
  2866                           prodh	equ	0xFF4
  2867                           prodl	equ	0xFF3
  2868                           indf0	equ	0xFEF
  2869                           postinc0	equ	0xFEE
  2870                           fsr0h	equ	0xFEA
  2871                           fsr0l	equ	0xFE9
  2872                           wreg	equ	0xFE8
  2873                           postdec1	equ	0xFE5
  2874                           plusw1	equ	0xFE3
  2875                           fsr1l	equ	0xFE1
  2876                           indf2	equ	0xFDF
  2877                           postinc2	equ	0xFDE
  2878                           postdec2	equ	0xFDD
  2879                           plusw2	equ	0xFDB
  2880                           fsr2h	equ	0xFDA
  2881                           fsr2l	equ	0xFD9
  2882                           status	equ	0xFD8
  2883                           
  2884 ;; *************** function ___lwdiv *****************
  2885 ;; Defined at:
  2886 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;  dividend        2    0[BANK0 ] unsigned int 
  2889 ;;  divisor         2    2[BANK0 ] unsigned int 
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;  quotient        2    4[BANK0 ] unsigned int 
  2892 ;;  counter         1    6[BANK0 ] unsigned char 
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  2    0[BANK0 ] unsigned int 
  2895 ;; Registers used:
  2896 ;;		wreg, status,2, status,0
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2902 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2903 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2905 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2906 ;;Total ram usage:        7 bytes
  2907 ;; Hardware stack levels used:    1
  2908 ;; Hardware stack levels required when called:    6
  2909 ;; This function calls:
  2910 ;;		Nothing
  2911 ;; This function is called by:
  2912 ;;		_printf
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916                           	psect	text8
  2917  000FDE                     __ptext8:
  2918                           	opt stack 0
  2919  000FDE                     ___lwdiv:
  2920                           	opt stack 21
  2921                           
  2922                           ; BSR set to: 0
  2923                           ;incstack = 0
  2924  000FDE  0E00               	movlw	0
  2925  000FE0  0100               	movlb	0	; () banked
  2926  000FE2  6F85               	movwf	(___lwdiv@quotient+1)& (0+255),b
  2927  000FE4  0E00               	movlw	0
  2928  000FE6  6F84               	movwf	___lwdiv@quotient& (0+255),b
  2929                           
  2930                           ; BSR set to: 0
  2931  000FE8  0100               	movlb	0	; () banked
  2932  000FEA  5182               	movf	___lwdiv@divisor& (0+255),w,b
  2933  000FEC  0100               	movlb	0	; () banked
  2934  000FEE  1183               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  2935  000FF0  B4D8               	btfsc	status,2,c
  2936  000FF2  D02C               	goto	l695
  2937                           
  2938                           ; BSR set to: 0
  2939  000FF4  0E01               	movlw	1
  2940  000FF6  0100               	movlb	0	; () banked
  2941  000FF8  6F86               	movwf	___lwdiv@counter& (0+255),b
  2942  000FFA  D006               	goto	l1886
  2943  000FFC                     l1884:
  2944                           
  2945                           ; BSR set to: 0
  2946  000FFC  0100               	movlb	0	; () banked
  2947  000FFE  90D8               	bcf	status,0,c
  2948  001000  3782               	rlcf	___lwdiv@divisor& (0+255),f,b
  2949  001002  3783               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  2950  001004  0100               	movlb	0	; () banked
  2951  001006  2B86               	incf	___lwdiv@counter& (0+255),f,b
  2952  001008                     l1886:
  2953                           
  2954                           ; BSR set to: 0
  2955  001008  0100               	movlb	0	; () banked
  2956  00100A  AF83               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  2957  00100C  D7F7               	goto	l1884
  2958  00100E                     l1888:
  2959                           
  2960                           ; BSR set to: 0
  2961  00100E  0100               	movlb	0	; () banked
  2962  001010  90D8               	bcf	status,0,c
  2963  001012  3784               	rlcf	___lwdiv@quotient& (0+255),f,b
  2964  001014  3785               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  2965                           
  2966                           ; BSR set to: 0
  2967  001016  0100               	movlb	0	; () banked
  2968  001018  5182               	movf	___lwdiv@divisor& (0+255),w,b
  2969  00101A  0100               	movlb	0	; () banked
  2970  00101C  5D80               	subwf	___lwdiv@dividend& (0+255),w,b
  2971  00101E  0100               	movlb	0	; () banked
  2972  001020  5183               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2973  001022  0100               	movlb	0	; () banked
  2974  001024  5981               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  2975  001026  A0D8               	btfss	status,0,c
  2976  001028  D00A               	goto	l1896
  2977                           
  2978                           ; BSR set to: 0
  2979  00102A  0100               	movlb	0	; () banked
  2980  00102C  5182               	movf	___lwdiv@divisor& (0+255),w,b
  2981  00102E  0100               	movlb	0	; () banked
  2982  001030  5F80               	subwf	___lwdiv@dividend& (0+255),f,b
  2983  001032  0100               	movlb	0	; () banked
  2984  001034  5183               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2985  001036  0100               	movlb	0	; () banked
  2986  001038  5B81               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  2987                           
  2988                           ; BSR set to: 0
  2989  00103A  0100               	movlb	0	; () banked
  2990  00103C  8184               	bsf	___lwdiv@quotient& (0+255),0,b
  2991  00103E                     l1896:
  2992                           
  2993                           ; BSR set to: 0
  2994  00103E  0100               	movlb	0	; () banked
  2995  001040  90D8               	bcf	status,0,c
  2996  001042  3383               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  2997  001044  3382               	rrcf	___lwdiv@divisor& (0+255),f,b
  2998                           
  2999                           ; BSR set to: 0
  3000  001046  0100               	movlb	0	; () banked
  3001  001048  2F86               	decfsz	___lwdiv@counter& (0+255),f,b
  3002  00104A  D7E1               	goto	l1888
  3003  00104C                     l695:
  3004                           
  3005                           ; BSR set to: 0
  3006  00104C  C084  F080         	movff	___lwdiv@quotient,?___lwdiv
  3007  001050  C085  F081         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3008                           
  3009                           ; BSR set to: 0
  3010  001054  0012               	return		;funcret
  3011  001056                     __end_of___lwdiv:
  3012                           	opt stack 0
  3013                           tblptru	equ	0xFF8
  3014                           tblptrh	equ	0xFF7
  3015                           tblptrl	equ	0xFF6
  3016                           tablat	equ	0xFF5
  3017                           prodh	equ	0xFF4
  3018                           prodl	equ	0xFF3
  3019                           indf0	equ	0xFEF
  3020                           postinc0	equ	0xFEE
  3021                           fsr0h	equ	0xFEA
  3022                           fsr0l	equ	0xFE9
  3023                           wreg	equ	0xFE8
  3024                           postdec1	equ	0xFE5
  3025                           plusw1	equ	0xFE3
  3026                           fsr1l	equ	0xFE1
  3027                           indf2	equ	0xFDF
  3028                           postinc2	equ	0xFDE
  3029                           postdec2	equ	0xFDD
  3030                           plusw2	equ	0xFDB
  3031                           fsr2h	equ	0xFDA
  3032                           fsr2l	equ	0xFD9
  3033                           status	equ	0xFD8
  3034                           
  3035 ;; *************** function ___ftmul *****************
  3036 ;; Defined at:
  3037 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;  f1              3   12[BANK0 ] float 
  3040 ;;  f2              3   15[BANK0 ] float 
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;  f3_as_produc    3   22[BANK0 ] unsigned um
  3043 ;;  sign            1   26[BANK0 ] unsigned char 
  3044 ;;  cntr            1   25[BANK0 ] unsigned char 
  3045 ;;  exp             1   21[BANK0 ] unsigned char 
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  3   12[BANK0 ] float 
  3048 ;; Registers used:
  3049 ;;		wreg, status,2, status,0, cstack
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3055 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3056 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3057 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3058 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3059 ;;Total ram usage:       15 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; Hardware stack levels required when called:    7
  3062 ;; This function calls:
  3063 ;;		___ftpack
  3064 ;; This function is called by:
  3065 ;;		_checkV
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           	psect	text9
  3070  00067E                     __ptext9:
  3071                           	opt stack 0
  3072  00067E                     ___ftmul:
  3073                           	opt stack 20
  3074                           
  3075                           ; BSR set to: 0
  3076                           ;incstack = 0
  3077  00067E  C08E  F092         	movff	___ftmul@f1+2,??___ftmul
  3078  000682  0100               	movlb	0	; () banked
  3079  000684  6B93               	clrf	(??___ftmul+1)& (0+255),b
  3080  000686  6B94               	clrf	(??___ftmul+2)& (0+255),b
  3081  000688  0100               	movlb	0	; () banked
  3082  00068A  358D               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  3083  00068C  0100               	movlb	0	; () banked
  3084  00068E  3792               	rlcf	??___ftmul& (0+255),f,b
  3085  000690  E301               	bnc	u1201
  3086  000692  8193               	bsf	(??___ftmul+1)& (0+255),0,b
  3087  000694                     u1201:
  3088  000694  0100               	movlb	0	; () banked
  3089  000696  5192               	movf	??___ftmul& (0+255),w,b
  3090  000698  0100               	movlb	0	; () banked
  3091  00069A  6F95               	movwf	___ftmul@exp& (0+255),b
  3092  00069C  0100               	movlb	0	; () banked
  3093  00069E  5195               	movf	___ftmul@exp& (0+255),w,b
  3094  0006A0  A4D8               	btfss	status,2,c
  3095  0006A2  D00A               	goto	l2054
  3096                           
  3097                           ; BSR set to: 0
  3098  0006A4  0E00               	movlw	0
  3099  0006A6  0100               	movlb	0	; () banked
  3100  0006A8  6F8C               	movwf	?___ftmul& (0+255),b
  3101  0006AA  0E00               	movlw	0
  3102  0006AC  0100               	movlb	0	; () banked
  3103  0006AE  6F8D               	movwf	(?___ftmul+1)& (0+255),b
  3104  0006B0  0E00               	movlw	0
  3105  0006B2  0100               	movlb	0	; () banked
  3106  0006B4  6F8E               	movwf	(?___ftmul+2)& (0+255),b
  3107                           
  3108                           ; BSR set to: 0
  3109  0006B6  0012               	return	
  3110  0006B8                     l2054:
  3111                           
  3112                           ; BSR set to: 0
  3113  0006B8  C091  F092         	movff	___ftmul@f2+2,??___ftmul
  3114  0006BC  0100               	movlb	0	; () banked
  3115  0006BE  6B93               	clrf	(??___ftmul+1)& (0+255),b
  3116  0006C0  6B94               	clrf	(??___ftmul+2)& (0+255),b
  3117  0006C2  0100               	movlb	0	; () banked
  3118  0006C4  3590               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  3119  0006C6  0100               	movlb	0	; () banked
  3120  0006C8  3792               	rlcf	??___ftmul& (0+255),f,b
  3121  0006CA  E301               	bnc	u1221
  3122  0006CC  8193               	bsf	(??___ftmul+1)& (0+255),0,b
  3123  0006CE                     u1221:
  3124  0006CE  0100               	movlb	0	; () banked
  3125  0006D0  5192               	movf	??___ftmul& (0+255),w,b
  3126  0006D2  0100               	movlb	0	; () banked
  3127  0006D4  6F9A               	movwf	___ftmul@sign& (0+255),b
  3128  0006D6  0100               	movlb	0	; () banked
  3129  0006D8  519A               	movf	___ftmul@sign& (0+255),w,b
  3130  0006DA  A4D8               	btfss	status,2,c
  3131  0006DC  D00A               	goto	l2060
  3132                           
  3133                           ; BSR set to: 0
  3134  0006DE  0E00               	movlw	0
  3135  0006E0  0100               	movlb	0	; () banked
  3136  0006E2  6F8C               	movwf	?___ftmul& (0+255),b
  3137  0006E4  0E00               	movlw	0
  3138  0006E6  0100               	movlb	0	; () banked
  3139  0006E8  6F8D               	movwf	(?___ftmul+1)& (0+255),b
  3140  0006EA  0E00               	movlw	0
  3141  0006EC  0100               	movlb	0	; () banked
  3142  0006EE  6F8E               	movwf	(?___ftmul+2)& (0+255),b
  3143                           
  3144                           ; BSR set to: 0
  3145  0006F0  0012               	return	
  3146  0006F2                     l2060:
  3147                           
  3148                           ; BSR set to: 0
  3149  0006F2  0100               	movlb	0	; () banked
  3150  0006F4  519A               	movf	___ftmul@sign& (0+255),w,b
  3151  0006F6  0F7B               	addlw	123
  3152  0006F8  0100               	movlb	0	; () banked
  3153  0006FA  2795               	addwf	___ftmul@exp& (0+255),f,b
  3154                           
  3155                           ; BSR set to: 0
  3156  0006FC  C08E  F09A         	movff	___ftmul@f1+2,___ftmul@sign
  3157  000700  0100               	movlb	0	; () banked
  3158  000702  5191               	movf	(___ftmul@f2+2)& (0+255),w,b
  3159  000704  0100               	movlb	0	; () banked
  3160  000706  1B9A               	xorwf	___ftmul@sign& (0+255),f,b
  3161  000708  0E80               	movlw	128
  3162  00070A  0100               	movlb	0	; () banked
  3163  00070C  179A               	andwf	___ftmul@sign& (0+255),f,b
  3164                           
  3165                           ; BSR set to: 0
  3166  00070E  0100               	movlb	0	; () banked
  3167  000710  8F8D               	bsf	(___ftmul@f1+1)& (0+255),7,b
  3168                           
  3169                           ; BSR set to: 0
  3170  000712  0100               	movlb	0	; () banked
  3171  000714  8F90               	bsf	(___ftmul@f2+1)& (0+255),7,b
  3172                           
  3173                           ; BSR set to: 0
  3174  000716  0EFF               	movlw	255
  3175  000718  0100               	movlb	0	; () banked
  3176  00071A  178F               	andwf	___ftmul@f2& (0+255),f,b
  3177  00071C  0EFF               	movlw	255
  3178  00071E  0100               	movlb	0	; () banked
  3179  000720  1790               	andwf	(___ftmul@f2+1)& (0+255),f,b
  3180  000722  0E00               	movlw	0
  3181  000724  0100               	movlb	0	; () banked
  3182  000726  1791               	andwf	(___ftmul@f2+2)& (0+255),f,b
  3183                           
  3184                           ; BSR set to: 0
  3185  000728  0E00               	movlw	0
  3186  00072A  0100               	movlb	0	; () banked
  3187  00072C  6F96               	movwf	___ftmul@f3_as_product& (0+255),b
  3188  00072E  0E00               	movlw	0
  3189  000730  0100               	movlb	0	; () banked
  3190  000732  6F97               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  3191  000734  0E00               	movlw	0
  3192  000736  0100               	movlb	0	; () banked
  3193  000738  6F98               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  3194                           
  3195                           ; BSR set to: 0
  3196  00073A  0E07               	movlw	7
  3197  00073C  0100               	movlb	0	; () banked
  3198  00073E  6F99               	movwf	___ftmul@cntr& (0+255),b
  3199  000740                     l2074:
  3200                           
  3201                           ; BSR set to: 0
  3202  000740  0100               	movlb	0	; () banked
  3203  000742  A18C               	btfss	___ftmul@f1& (0+255),0,b
  3204  000744  D00C               	goto	l2078
  3205                           
  3206                           ; BSR set to: 0
  3207  000746  0100               	movlb	0	; () banked
  3208  000748  518F               	movf	___ftmul@f2& (0+255),w,b
  3209  00074A  0100               	movlb	0	; () banked
  3210  00074C  2796               	addwf	___ftmul@f3_as_product& (0+255),f,b
  3211  00074E  0100               	movlb	0	; () banked
  3212  000750  5190               	movf	(___ftmul@f2+1)& (0+255),w,b
  3213  000752  0100               	movlb	0	; () banked
  3214  000754  2397               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  3215  000756  0100               	movlb	0	; () banked
  3216  000758  5191               	movf	(___ftmul@f2+2)& (0+255),w,b
  3217  00075A  0100               	movlb	0	; () banked
  3218  00075C  2398               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  3219  00075E                     l2078:
  3220                           
  3221                           ; BSR set to: 0
  3222  00075E  0100               	movlb	0	; () banked
  3223  000760  90D8               	bcf	status,0,c
  3224  000762  338E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  3225  000764  338D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  3226  000766  338C               	rrcf	___ftmul@f1& (0+255),f,b
  3227  000768  0100               	movlb	0	; () banked
  3228  00076A  90D8               	bcf	status,0,c
  3229  00076C  378F               	rlcf	___ftmul@f2& (0+255),f,b
  3230  00076E  3790               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  3231  000770  3791               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  3232                           
  3233                           ; BSR set to: 0
  3234  000772  0100               	movlb	0	; () banked
  3235  000774  2F99               	decfsz	___ftmul@cntr& (0+255),f,b
  3236  000776  D7E4               	goto	l2074
  3237                           
  3238                           ; BSR set to: 0
  3239                           
  3240                           ; BSR set to: 0
  3241  000778  0E09               	movlw	9
  3242  00077A  0100               	movlb	0	; () banked
  3243  00077C  6F99               	movwf	___ftmul@cntr& (0+255),b
  3244  00077E                     l2084:
  3245                           
  3246                           ; BSR set to: 0
  3247  00077E  0100               	movlb	0	; () banked
  3248  000780  A18C               	btfss	___ftmul@f1& (0+255),0,b
  3249  000782  D00C               	goto	l2088
  3250                           
  3251                           ; BSR set to: 0
  3252  000784  0100               	movlb	0	; () banked
  3253  000786  518F               	movf	___ftmul@f2& (0+255),w,b
  3254  000788  0100               	movlb	0	; () banked
  3255  00078A  2796               	addwf	___ftmul@f3_as_product& (0+255),f,b
  3256  00078C  0100               	movlb	0	; () banked
  3257  00078E  5190               	movf	(___ftmul@f2+1)& (0+255),w,b
  3258  000790  0100               	movlb	0	; () banked
  3259  000792  2397               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  3260  000794  0100               	movlb	0	; () banked
  3261  000796  5191               	movf	(___ftmul@f2+2)& (0+255),w,b
  3262  000798  0100               	movlb	0	; () banked
  3263  00079A  2398               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  3264  00079C                     l2088:
  3265                           
  3266                           ; BSR set to: 0
  3267  00079C  0100               	movlb	0	; () banked
  3268  00079E  90D8               	bcf	status,0,c
  3269  0007A0  338E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  3270  0007A2  338D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  3271  0007A4  338C               	rrcf	___ftmul@f1& (0+255),f,b
  3272  0007A6  0100               	movlb	0	; () banked
  3273  0007A8  90D8               	bcf	status,0,c
  3274  0007AA  3398               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  3275  0007AC  3397               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  3276  0007AE  3396               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  3277                           
  3278                           ; BSR set to: 0
  3279  0007B0  0100               	movlb	0	; () banked
  3280  0007B2  2F99               	decfsz	___ftmul@cntr& (0+255),f,b
  3281  0007B4  D7E4               	goto	l2084
  3282                           
  3283                           ; BSR set to: 0
  3284                           
  3285                           ; BSR set to: 0
  3286  0007B6  C096  F080         	movff	___ftmul@f3_as_product,___ftpack@arg
  3287  0007BA  C097  F081         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3288  0007BE  C098  F082         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3289  0007C2  C095  F083         	movff	___ftmul@exp,___ftpack@exp
  3290  0007C6  C09A  F084         	movff	___ftmul@sign,___ftpack@sign
  3291  0007CA  EC94  F004         	call	___ftpack	;wreg free
  3292  0007CE  C080  F08C         	movff	?___ftpack,?___ftmul
  3293  0007D2  C081  F08D         	movff	?___ftpack+1,?___ftmul+1
  3294  0007D6  C082  F08E         	movff	?___ftpack+2,?___ftmul+2
  3295  0007DA  0012               	return	
  3296  0007DC                     __end_of___ftmul:
  3297                           	opt stack 0
  3298                           tblptru	equ	0xFF8
  3299                           tblptrh	equ	0xFF7
  3300                           tblptrl	equ	0xFF6
  3301                           tablat	equ	0xFF5
  3302                           prodh	equ	0xFF4
  3303                           prodl	equ	0xFF3
  3304                           indf0	equ	0xFEF
  3305                           postinc0	equ	0xFEE
  3306                           fsr0h	equ	0xFEA
  3307                           fsr0l	equ	0xFE9
  3308                           wreg	equ	0xFE8
  3309                           postdec1	equ	0xFE5
  3310                           plusw1	equ	0xFE3
  3311                           fsr1l	equ	0xFE1
  3312                           indf2	equ	0xFDF
  3313                           postinc2	equ	0xFDE
  3314                           postdec2	equ	0xFDD
  3315                           plusw2	equ	0xFDB
  3316                           fsr2h	equ	0xFDA
  3317                           fsr2l	equ	0xFD9
  3318                           status	equ	0xFD8
  3319                           
  3320 ;; *************** function ___ftge *****************
  3321 ;; Defined at:
  3322 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftge.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;  ff1             3   42[BANK0 ] float 
  3325 ;;  ff2             3   45[BANK0 ] float 
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;		None
  3328 ;; Return value:  Size  Location     Type
  3329 ;;		None               void
  3330 ;; Registers used:
  3331 ;;		wreg, status,2, status,0
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3337 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3339 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3340 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3341 ;;Total ram usage:        9 bytes
  3342 ;; Hardware stack levels used:    1
  3343 ;; Hardware stack levels required when called:    6
  3344 ;; This function calls:
  3345 ;;		Nothing
  3346 ;; This function is called by:
  3347 ;;		_checkV
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           	psect	text10
  3352  000BFA                     __ptext10:
  3353                           	opt stack 0
  3354  000BFA                     ___ftge:
  3355                           	opt stack 21
  3356                           
  3357                           ;incstack = 0
  3358  000BFA  0100               	movlb	0	; () banked
  3359  000BFC  AFAC               	btfss	(___ftge@ff1+2)& (0+255),7,b
  3360  000BFE  D01D               	goto	l2112
  3361                           
  3362                           ; BSR set to: 0
  3363  000C00  C0AA  F0B0         	movff	___ftge@ff1,??___ftge
  3364  000C04  C0AB  F0B1         	movff	___ftge@ff1+1,??___ftge+1
  3365  000C08  C0AC  F0B2         	movff	___ftge@ff1+2,??___ftge+2
  3366  000C0C  0100               	movlb	0	; () banked
  3367  000C0E  1FB0               	comf	??___ftge& (0+255),f,b
  3368  000C10  1FB1               	comf	(??___ftge+1)& (0+255),f,b
  3369  000C12  1FB2               	comf	(??___ftge+2)& (0+255),f,b
  3370  000C14  2BB0               	incf	??___ftge& (0+255),f,b
  3371  000C16  0E00               	movlw	0
  3372  000C18  23B1               	addwfc	(??___ftge+1)& (0+255),f,b
  3373  000C1A  23B2               	addwfc	(??___ftge+2)& (0+255),f,b
  3374  000C1C  0E00               	movlw	0
  3375  000C1E  0100               	movlb	0	; () banked
  3376  000C20  25B0               	addwf	??___ftge& (0+255),w,b
  3377  000C22  0100               	movlb	0	; () banked
  3378  000C24  6FAA               	movwf	___ftge@ff1& (0+255),b
  3379  000C26  0E00               	movlw	0
  3380  000C28  0100               	movlb	0	; () banked
  3381  000C2A  21B1               	addwfc	(??___ftge+1)& (0+255),w,b
  3382  000C2C  0100               	movlb	0	; () banked
  3383  000C2E  6FAB               	movwf	(___ftge@ff1+1)& (0+255),b
  3384  000C30  0E80               	movlw	128
  3385  000C32  0100               	movlb	0	; () banked
  3386  000C34  21B2               	addwfc	(??___ftge+2)& (0+255),w,b
  3387  000C36  0100               	movlb	0	; () banked
  3388  000C38  6FAC               	movwf	(___ftge@ff1+2)& (0+255),b
  3389  000C3A                     l2112:
  3390                           
  3391                           ; BSR set to: 0
  3392  000C3A  0100               	movlb	0	; () banked
  3393  000C3C  AFAF               	btfss	(___ftge@ff2+2)& (0+255),7,b
  3394  000C3E  D01D               	goto	l2116
  3395                           
  3396                           ; BSR set to: 0
  3397  000C40  C0AD  F0B0         	movff	___ftge@ff2,??___ftge
  3398  000C44  C0AE  F0B1         	movff	___ftge@ff2+1,??___ftge+1
  3399  000C48  C0AF  F0B2         	movff	___ftge@ff2+2,??___ftge+2
  3400  000C4C  0100               	movlb	0	; () banked
  3401  000C4E  1FB0               	comf	??___ftge& (0+255),f,b
  3402  000C50  1FB1               	comf	(??___ftge+1)& (0+255),f,b
  3403  000C52  1FB2               	comf	(??___ftge+2)& (0+255),f,b
  3404  000C54  2BB0               	incf	??___ftge& (0+255),f,b
  3405  000C56  0E00               	movlw	0
  3406  000C58  23B1               	addwfc	(??___ftge+1)& (0+255),f,b
  3407  000C5A  23B2               	addwfc	(??___ftge+2)& (0+255),f,b
  3408  000C5C  0E00               	movlw	0
  3409  000C5E  0100               	movlb	0	; () banked
  3410  000C60  25B0               	addwf	??___ftge& (0+255),w,b
  3411  000C62  0100               	movlb	0	; () banked
  3412  000C64  6FAD               	movwf	___ftge@ff2& (0+255),b
  3413  000C66  0E00               	movlw	0
  3414  000C68  0100               	movlb	0	; () banked
  3415  000C6A  21B1               	addwfc	(??___ftge+1)& (0+255),w,b
  3416  000C6C  0100               	movlb	0	; () banked
  3417  000C6E  6FAE               	movwf	(___ftge@ff2+1)& (0+255),b
  3418  000C70  0E80               	movlw	128
  3419  000C72  0100               	movlb	0	; () banked
  3420  000C74  21B2               	addwfc	(??___ftge+2)& (0+255),w,b
  3421  000C76  0100               	movlb	0	; () banked
  3422  000C78  6FAF               	movwf	(___ftge@ff2+2)& (0+255),b
  3423  000C7A                     l2116:
  3424                           
  3425                           ; BSR set to: 0
  3426  000C7A  0E00               	movlw	0
  3427  000C7C  0100               	movlb	0	; () banked
  3428  000C7E  1BAA               	xorwf	___ftge@ff1& (0+255),f,b
  3429  000C80  0E00               	movlw	0
  3430  000C82  0100               	movlb	0	; () banked
  3431  000C84  1BAB               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  3432  000C86  0E80               	movlw	128
  3433  000C88  0100               	movlb	0	; () banked
  3434  000C8A  1BAC               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  3435                           
  3436                           ; BSR set to: 0
  3437  000C8C  0E00               	movlw	0
  3438  000C8E  0100               	movlb	0	; () banked
  3439  000C90  1BAD               	xorwf	___ftge@ff2& (0+255),f,b
  3440  000C92  0E00               	movlw	0
  3441  000C94  0100               	movlb	0	; () banked
  3442  000C96  1BAE               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  3443  000C98  0E80               	movlw	128
  3444  000C9A  0100               	movlb	0	; () banked
  3445  000C9C  1BAF               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  3446  000C9E  0100               	movlb	0	; () banked
  3447  000CA0  51AD               	movf	___ftge@ff2& (0+255),w,b
  3448  000CA2  0100               	movlb	0	; () banked
  3449  000CA4  5DAA               	subwf	___ftge@ff1& (0+255),w,b
  3450  000CA6  0100               	movlb	0	; () banked
  3451  000CA8  51AE               	movf	(___ftge@ff2+1)& (0+255),w,b
  3452  000CAA  0100               	movlb	0	; () banked
  3453  000CAC  59AB               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  3454  000CAE  0100               	movlb	0	; () banked
  3455  000CB0  51AF               	movf	(___ftge@ff2+2)& (0+255),w,b
  3456  000CB2  0100               	movlb	0	; () banked
  3457  000CB4  59AC               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  3458  000CB6  B0D8               	btfsc	status,0,c
  3459  000CB8  D002               	goto	l2122
  3460                           
  3461                           ; BSR set to: 0
  3462  000CBA  90D8               	bcf	status,0,c
  3463  000CBC  0012               	return	
  3464  000CBE                     l2122:
  3465                           
  3466                           ; BSR set to: 0
  3467  000CBE  80D8               	bsf	status,0,c
  3468                           
  3469                           ; BSR set to: 0
  3470  000CC0  0012               	return	
  3471  000CC2                     __end_of___ftge:
  3472                           	opt stack 0
  3473                           tblptru	equ	0xFF8
  3474                           tblptrh	equ	0xFF7
  3475                           tblptrl	equ	0xFF6
  3476                           tablat	equ	0xFF5
  3477                           prodh	equ	0xFF4
  3478                           prodl	equ	0xFF3
  3479                           indf0	equ	0xFEF
  3480                           postinc0	equ	0xFEE
  3481                           fsr0h	equ	0xFEA
  3482                           fsr0l	equ	0xFE9
  3483                           wreg	equ	0xFE8
  3484                           postdec1	equ	0xFE5
  3485                           plusw1	equ	0xFE3
  3486                           fsr1l	equ	0xFE1
  3487                           indf2	equ	0xFDF
  3488                           postinc2	equ	0xFDE
  3489                           postdec2	equ	0xFDD
  3490                           plusw2	equ	0xFDB
  3491                           fsr2h	equ	0xFDA
  3492                           fsr2l	equ	0xFD9
  3493                           status	equ	0xFD8
  3494                           
  3495 ;; *************** function ___ftdiv *****************
  3496 ;; Defined at:
  3497 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;  f1              3   27[BANK0 ] float 
  3500 ;;  f2              3   30[BANK0 ] float 
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;  f3              3   37[BANK0 ] float 
  3503 ;;  sign            1   41[BANK0 ] unsigned char 
  3504 ;;  exp             1   40[BANK0 ] unsigned char 
  3505 ;;  cntr            1   36[BANK0 ] unsigned char 
  3506 ;; Return value:  Size  Location     Type
  3507 ;;                  3   27[BANK0 ] float 
  3508 ;; Registers used:
  3509 ;;		wreg, status,2, status,0, cstack
  3510 ;; Tracked objects:
  3511 ;;		On entry : 0/0
  3512 ;;		On exit  : 0/0
  3513 ;;		Unchanged: 0/0
  3514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3515 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3516 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3517 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3518 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3519 ;;Total ram usage:       15 bytes
  3520 ;; Hardware stack levels used:    1
  3521 ;; Hardware stack levels required when called:    7
  3522 ;; This function calls:
  3523 ;;		___ftpack
  3524 ;; This function is called by:
  3525 ;;		_checkV
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           
  3529                           	psect	text11
  3530  0007DC                     __ptext11:
  3531                           	opt stack 0
  3532  0007DC                     ___ftdiv:
  3533                           	opt stack 20
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;incstack = 0
  3537  0007DC  C09D  F0A1         	movff	___ftdiv@f1+2,??___ftdiv
  3538  0007E0  0100               	movlb	0	; () banked
  3539  0007E2  6BA2               	clrf	(??___ftdiv+1)& (0+255),b
  3540  0007E4  6BA3               	clrf	(??___ftdiv+2)& (0+255),b
  3541  0007E6  0100               	movlb	0	; () banked
  3542  0007E8  359C               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  3543  0007EA  0100               	movlb	0	; () banked
  3544  0007EC  37A1               	rlcf	??___ftdiv& (0+255),f,b
  3545  0007EE  E301               	bnc	u1151
  3546  0007F0  81A2               	bsf	(??___ftdiv+1)& (0+255),0,b
  3547  0007F2                     u1151:
  3548  0007F2  0100               	movlb	0	; () banked
  3549  0007F4  51A1               	movf	??___ftdiv& (0+255),w,b
  3550  0007F6  0100               	movlb	0	; () banked
  3551  0007F8  6FA8               	movwf	___ftdiv@exp& (0+255),b
  3552  0007FA  0100               	movlb	0	; () banked
  3553  0007FC  51A8               	movf	___ftdiv@exp& (0+255),w,b
  3554  0007FE  A4D8               	btfss	status,2,c
  3555  000800  D00A               	goto	l2008
  3556                           
  3557                           ; BSR set to: 0
  3558  000802  0E00               	movlw	0
  3559  000804  0100               	movlb	0	; () banked
  3560  000806  6F9B               	movwf	?___ftdiv& (0+255),b
  3561  000808  0E00               	movlw	0
  3562  00080A  0100               	movlb	0	; () banked
  3563  00080C  6F9C               	movwf	(?___ftdiv+1)& (0+255),b
  3564  00080E  0E00               	movlw	0
  3565  000810  0100               	movlb	0	; () banked
  3566  000812  6F9D               	movwf	(?___ftdiv+2)& (0+255),b
  3567                           
  3568                           ; BSR set to: 0
  3569  000814  0012               	return	
  3570  000816                     l2008:
  3571                           
  3572                           ; BSR set to: 0
  3573  000816  C0A0  F0A1         	movff	___ftdiv@f2+2,??___ftdiv
  3574  00081A  0100               	movlb	0	; () banked
  3575  00081C  6BA2               	clrf	(??___ftdiv+1)& (0+255),b
  3576  00081E  6BA3               	clrf	(??___ftdiv+2)& (0+255),b
  3577  000820  0100               	movlb	0	; () banked
  3578  000822  359F               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  3579  000824  0100               	movlb	0	; () banked
  3580  000826  37A1               	rlcf	??___ftdiv& (0+255),f,b
  3581  000828  E301               	bnc	u1171
  3582  00082A  81A2               	bsf	(??___ftdiv+1)& (0+255),0,b
  3583  00082C                     u1171:
  3584  00082C  0100               	movlb	0	; () banked
  3585  00082E  51A1               	movf	??___ftdiv& (0+255),w,b
  3586  000830  0100               	movlb	0	; () banked
  3587  000832  6FA9               	movwf	___ftdiv@sign& (0+255),b
  3588  000834  0100               	movlb	0	; () banked
  3589  000836  51A9               	movf	___ftdiv@sign& (0+255),w,b
  3590  000838  A4D8               	btfss	status,2,c
  3591  00083A  D00A               	goto	l2014
  3592                           
  3593                           ; BSR set to: 0
  3594  00083C  0E00               	movlw	0
  3595  00083E  0100               	movlb	0	; () banked
  3596  000840  6F9B               	movwf	?___ftdiv& (0+255),b
  3597  000842  0E00               	movlw	0
  3598  000844  0100               	movlb	0	; () banked
  3599  000846  6F9C               	movwf	(?___ftdiv+1)& (0+255),b
  3600  000848  0E00               	movlw	0
  3601  00084A  0100               	movlb	0	; () banked
  3602  00084C  6F9D               	movwf	(?___ftdiv+2)& (0+255),b
  3603                           
  3604                           ; BSR set to: 0
  3605  00084E  0012               	return	
  3606  000850                     l2014:
  3607                           
  3608                           ; BSR set to: 0
  3609  000850  0E00               	movlw	0
  3610  000852  0100               	movlb	0	; () banked
  3611  000854  6FA5               	movwf	___ftdiv@f3& (0+255),b
  3612  000856  0E00               	movlw	0
  3613  000858  0100               	movlb	0	; () banked
  3614  00085A  6FA6               	movwf	(___ftdiv@f3+1)& (0+255),b
  3615  00085C  0E00               	movlw	0
  3616  00085E  0100               	movlb	0	; () banked
  3617  000860  6FA7               	movwf	(___ftdiv@f3+2)& (0+255),b
  3618                           
  3619                           ; BSR set to: 0
  3620  000862  0100               	movlb	0	; () banked
  3621  000864  51A9               	movf	___ftdiv@sign& (0+255),w,b
  3622  000866  0F89               	addlw	137
  3623  000868  0100               	movlb	0	; () banked
  3624  00086A  5FA8               	subwf	___ftdiv@exp& (0+255),f,b
  3625                           
  3626                           ; BSR set to: 0
  3627  00086C  C09D  F0A9         	movff	___ftdiv@f1+2,___ftdiv@sign
  3628                           
  3629                           ; BSR set to: 0
  3630  000870  0100               	movlb	0	; () banked
  3631  000872  51A0               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3632  000874  0100               	movlb	0	; () banked
  3633  000876  1BA9               	xorwf	___ftdiv@sign& (0+255),f,b
  3634                           
  3635                           ; BSR set to: 0
  3636  000878  0E80               	movlw	128
  3637  00087A  0100               	movlb	0	; () banked
  3638  00087C  17A9               	andwf	___ftdiv@sign& (0+255),f,b
  3639                           
  3640                           ; BSR set to: 0
  3641  00087E  0100               	movlb	0	; () banked
  3642  000880  8F9C               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  3643                           
  3644                           ; BSR set to: 0
  3645  000882  0EFF               	movlw	255
  3646  000884  0100               	movlb	0	; () banked
  3647  000886  179B               	andwf	___ftdiv@f1& (0+255),f,b
  3648  000888  0EFF               	movlw	255
  3649  00088A  0100               	movlb	0	; () banked
  3650  00088C  179C               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  3651  00088E  0E00               	movlw	0
  3652  000890  0100               	movlb	0	; () banked
  3653  000892  179D               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  3654                           
  3655                           ; BSR set to: 0
  3656  000894  0100               	movlb	0	; () banked
  3657  000896  8F9F               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  3658                           
  3659                           ; BSR set to: 0
  3660  000898  0EFF               	movlw	255
  3661  00089A  0100               	movlb	0	; () banked
  3662  00089C  179E               	andwf	___ftdiv@f2& (0+255),f,b
  3663  00089E  0EFF               	movlw	255
  3664  0008A0  0100               	movlb	0	; () banked
  3665  0008A2  179F               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  3666  0008A4  0E00               	movlw	0
  3667  0008A6  0100               	movlb	0	; () banked
  3668  0008A8  17A0               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  3669                           
  3670                           ; BSR set to: 0
  3671  0008AA  0E18               	movlw	24
  3672  0008AC  0100               	movlb	0	; () banked
  3673  0008AE  6FA4               	movwf	___ftdiv@cntr& (0+255),b
  3674  0008B0                     l2034:
  3675                           
  3676                           ; BSR set to: 0
  3677  0008B0  0100               	movlb	0	; () banked
  3678  0008B2  90D8               	bcf	status,0,c
  3679  0008B4  37A5               	rlcf	___ftdiv@f3& (0+255),f,b
  3680  0008B6  37A6               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  3681  0008B8  37A7               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  3682                           
  3683                           ; BSR set to: 0
  3684  0008BA  0100               	movlb	0	; () banked
  3685  0008BC  519E               	movf	___ftdiv@f2& (0+255),w,b
  3686  0008BE  0100               	movlb	0	; () banked
  3687  0008C0  5D9B               	subwf	___ftdiv@f1& (0+255),w,b
  3688  0008C2  0100               	movlb	0	; () banked
  3689  0008C4  519F               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3690  0008C6  0100               	movlb	0	; () banked
  3691  0008C8  599C               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  3692  0008CA  0100               	movlb	0	; () banked
  3693  0008CC  51A0               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3694  0008CE  0100               	movlb	0	; () banked
  3695  0008D0  599D               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  3696  0008D2  A0D8               	btfss	status,0,c
  3697  0008D4  D00E               	goto	l575
  3698                           
  3699                           ; BSR set to: 0
  3700  0008D6  0100               	movlb	0	; () banked
  3701  0008D8  519E               	movf	___ftdiv@f2& (0+255),w,b
  3702  0008DA  0100               	movlb	0	; () banked
  3703  0008DC  5F9B               	subwf	___ftdiv@f1& (0+255),f,b
  3704  0008DE  0100               	movlb	0	; () banked
  3705  0008E0  519F               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3706  0008E2  0100               	movlb	0	; () banked
  3707  0008E4  5B9C               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  3708  0008E6  0100               	movlb	0	; () banked
  3709  0008E8  51A0               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3710  0008EA  0100               	movlb	0	; () banked
  3711  0008EC  5B9D               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  3712                           
  3713                           ; BSR set to: 0
  3714  0008EE  0100               	movlb	0	; () banked
  3715  0008F0  81A5               	bsf	___ftdiv@f3& (0+255),0,b
  3716  0008F2                     l575:
  3717                           
  3718                           ; BSR set to: 0
  3719  0008F2  0100               	movlb	0	; () banked
  3720  0008F4  90D8               	bcf	status,0,c
  3721  0008F6  379B               	rlcf	___ftdiv@f1& (0+255),f,b
  3722  0008F8  379C               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  3723  0008FA  379D               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  3724                           
  3725                           ; BSR set to: 0
  3726  0008FC  0100               	movlb	0	; () banked
  3727  0008FE  2FA4               	decfsz	___ftdiv@cntr& (0+255),f,b
  3728  000900  D7D7               	goto	l2034
  3729                           
  3730                           ; BSR set to: 0
  3731                           
  3732                           ; BSR set to: 0
  3733  000902  C0A5  F080         	movff	___ftdiv@f3,___ftpack@arg
  3734  000906  C0A6  F081         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3735  00090A  C0A7  F082         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3736  00090E  C0A8  F083         	movff	___ftdiv@exp,___ftpack@exp
  3737  000912  C0A9  F084         	movff	___ftdiv@sign,___ftpack@sign
  3738  000916  EC94  F004         	call	___ftpack	;wreg free
  3739  00091A  C080  F09B         	movff	?___ftpack,?___ftdiv
  3740  00091E  C081  F09C         	movff	?___ftpack+1,?___ftdiv+1
  3741  000922  C082  F09D         	movff	?___ftpack+2,?___ftdiv+2
  3742  000926  0012               	return	
  3743  000928                     __end_of___ftdiv:
  3744                           	opt stack 0
  3745                           tblptru	equ	0xFF8
  3746                           tblptrh	equ	0xFF7
  3747                           tblptrl	equ	0xFF6
  3748                           tablat	equ	0xFF5
  3749                           prodh	equ	0xFF4
  3750                           prodl	equ	0xFF3
  3751                           indf0	equ	0xFEF
  3752                           postinc0	equ	0xFEE
  3753                           fsr0h	equ	0xFEA
  3754                           fsr0l	equ	0xFE9
  3755                           wreg	equ	0xFE8
  3756                           postdec1	equ	0xFE5
  3757                           plusw1	equ	0xFE3
  3758                           fsr1l	equ	0xFE1
  3759                           indf2	equ	0xFDF
  3760                           postinc2	equ	0xFDE
  3761                           postdec2	equ	0xFDD
  3762                           plusw2	equ	0xFDB
  3763                           fsr2h	equ	0xFDA
  3764                           fsr2l	equ	0xFD9
  3765                           status	equ	0xFD8
  3766                           
  3767 ;; *************** function ___awtoft *****************
  3768 ;; Defined at:
  3769 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awtoft.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;  c               2    8[BANK0 ] int 
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;  sign            1   11[BANK0 ] unsigned char 
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  3    8[BANK0 ] float 
  3776 ;; Registers used:
  3777 ;;		wreg, status,2, status,0, cstack
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3783 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3784 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3786 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3787 ;;Total ram usage:        4 bytes
  3788 ;; Hardware stack levels used:    1
  3789 ;; Hardware stack levels required when called:    7
  3790 ;; This function calls:
  3791 ;;		___ftpack
  3792 ;; This function is called by:
  3793 ;;		_checkV
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           	psect	text12
  3798  00125C                     __ptext12:
  3799                           	opt stack 0
  3800  00125C                     ___awtoft:
  3801                           	opt stack 20
  3802                           
  3803                           ;incstack = 0
  3804  00125C  0E00               	movlw	0
  3805  00125E  0100               	movlb	0	; () banked
  3806  001260  6F8B               	movwf	___awtoft@sign& (0+255),b
  3807                           
  3808                           ; BSR set to: 0
  3809  001262  0100               	movlb	0	; () banked
  3810  001264  AF89               	btfss	(___awtoft@c+1)& (0+255),7,b
  3811  001266  D008               	goto	l2104
  3812                           
  3813                           ; BSR set to: 0
  3814  001268  0100               	movlb	0	; () banked
  3815  00126A  6D88               	negf	___awtoft@c& (0+255),b
  3816  00126C  1F89               	comf	(___awtoft@c+1)& (0+255),f,b
  3817  00126E  B0D8               	btfsc	status,0,c
  3818  001270  2B89               	incf	(___awtoft@c+1)& (0+255),f,b
  3819                           
  3820                           ; BSR set to: 0
  3821  001272  0E01               	movlw	1
  3822  001274  0100               	movlb	0	; () banked
  3823  001276  6F8B               	movwf	___awtoft@sign& (0+255),b
  3824  001278                     l2104:
  3825                           
  3826                           ; BSR set to: 0
  3827  001278  C088  F080         	movff	___awtoft@c,___ftpack@arg
  3828  00127C  C089  F081         	movff	___awtoft@c+1,___ftpack@arg+1
  3829  001280  0100               	movlb	0	; () banked
  3830  001282  6B82               	clrf	(___ftpack@arg+2)& (0+255),b
  3831  001284  0E8E               	movlw	142
  3832  001286  0100               	movlb	0	; () banked
  3833  001288  6F83               	movwf	___ftpack@exp& (0+255),b
  3834  00128A  C08B  F084         	movff	___awtoft@sign,___ftpack@sign
  3835  00128E  EC94  F004         	call	___ftpack	;wreg free
  3836  001292  C080  F088         	movff	?___ftpack,?___awtoft
  3837  001296  C081  F089         	movff	?___ftpack+1,?___awtoft+1
  3838  00129A  C082  F08A         	movff	?___ftpack+2,?___awtoft+2
  3839  00129E  0012               	return	
  3840  0012A0                     __end_of___awtoft:
  3841                           	opt stack 0
  3842                           tblptru	equ	0xFF8
  3843                           tblptrh	equ	0xFF7
  3844                           tblptrl	equ	0xFF6
  3845                           tablat	equ	0xFF5
  3846                           prodh	equ	0xFF4
  3847                           prodl	equ	0xFF3
  3848                           indf0	equ	0xFEF
  3849                           postinc0	equ	0xFEE
  3850                           fsr0h	equ	0xFEA
  3851                           fsr0l	equ	0xFE9
  3852                           wreg	equ	0xFE8
  3853                           postdec1	equ	0xFE5
  3854                           plusw1	equ	0xFE3
  3855                           fsr1l	equ	0xFE1
  3856                           indf2	equ	0xFDF
  3857                           postinc2	equ	0xFDE
  3858                           postdec2	equ	0xFDD
  3859                           plusw2	equ	0xFDB
  3860                           fsr2h	equ	0xFDA
  3861                           fsr2l	equ	0xFD9
  3862                           status	equ	0xFD8
  3863                           
  3864 ;; *************** function ___ftpack *****************
  3865 ;; Defined at:
  3866 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
  3867 ;; Parameters:    Size  Location     Type
  3868 ;;  arg             3    0[BANK0 ] unsigned um
  3869 ;;  exp             1    3[BANK0 ] unsigned char 
  3870 ;;  sign            1    4[BANK0 ] unsigned char 
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;		None
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  3    0[BANK0 ] float 
  3875 ;; Registers used:
  3876 ;;		wreg, status,2, status,0
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3882 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3884 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3885 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3886 ;;Total ram usage:        8 bytes
  3887 ;; Hardware stack levels used:    1
  3888 ;; Hardware stack levels required when called:    6
  3889 ;; This function calls:
  3890 ;;		Nothing
  3891 ;; This function is called by:
  3892 ;;		___awtoft
  3893 ;;		___ftdiv
  3894 ;;		___ftmul
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           	psect	text13
  3899  000928                     __ptext13:
  3900                           	opt stack 0
  3901  000928                     ___ftpack:
  3902                           	opt stack 20
  3903                           
  3904                           ;incstack = 0
  3905  000928  0100               	movlb	0	; () banked
  3906  00092A  5183               	movf	___ftpack@exp& (0+255),w,b
  3907  00092C  0100               	movlb	0	; () banked
  3908  00092E  B4D8               	btfsc	status,2,c
  3909  000930  D008               	goto	l1846
  3910                           
  3911                           ; BSR set to: 0
  3912  000932  0100               	movlb	0	; () banked
  3913  000934  5180               	movf	___ftpack@arg& (0+255),w,b
  3914  000936  0100               	movlb	0	; () banked
  3915  000938  1181               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  3916  00093A  0100               	movlb	0	; () banked
  3917  00093C  1182               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  3918  00093E  A4D8               	btfss	status,2,c
  3919  000940  D011               	goto	l1852
  3920  000942                     l1846:
  3921                           
  3922                           ; BSR set to: 0
  3923  000942  0E00               	movlw	0
  3924  000944  0100               	movlb	0	; () banked
  3925  000946  6F80               	movwf	?___ftpack& (0+255),b
  3926  000948  0E00               	movlw	0
  3927  00094A  0100               	movlb	0	; () banked
  3928  00094C  6F81               	movwf	(?___ftpack+1)& (0+255),b
  3929  00094E  0E00               	movlw	0
  3930  000950  0100               	movlb	0	; () banked
  3931  000952  6F82               	movwf	(?___ftpack+2)& (0+255),b
  3932                           
  3933                           ; BSR set to: 0
  3934  000954  0012               	return	
  3935  000956                     l1850:
  3936                           
  3937                           ; BSR set to: 0
  3938  000956  0100               	movlb	0	; () banked
  3939  000958  2B83               	incf	___ftpack@exp& (0+255),f,b
  3940  00095A  0100               	movlb	0	; () banked
  3941  00095C  90D8               	bcf	status,0,c
  3942  00095E  3382               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  3943  000960  3381               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  3944  000962  3380               	rrcf	___ftpack@arg& (0+255),f,b
  3945  000964                     l1852:
  3946                           
  3947                           ; BSR set to: 0
  3948  000964  0E00               	movlw	0
  3949  000966  0100               	movlb	0	; () banked
  3950  000968  1580               	andwf	___ftpack@arg& (0+255),w,b
  3951  00096A  0100               	movlb	0	; () banked
  3952  00096C  6F85               	movwf	??___ftpack& (0+255),b
  3953  00096E  0E00               	movlw	0
  3954  000970  0100               	movlb	0	; () banked
  3955  000972  1581               	andwf	(___ftpack@arg+1)& (0+255),w,b
  3956  000974  0100               	movlb	0	; () banked
  3957  000976  6F86               	movwf	(??___ftpack+1)& (0+255),b
  3958  000978  0EFE               	movlw	254
  3959  00097A  0100               	movlb	0	; () banked
  3960  00097C  1582               	andwf	(___ftpack@arg+2)& (0+255),w,b
  3961  00097E  0100               	movlb	0	; () banked
  3962  000980  6F87               	movwf	(??___ftpack+2)& (0+255),b
  3963  000982  0100               	movlb	0	; () banked
  3964  000984  5185               	movf	??___ftpack& (0+255),w,b
  3965  000986  0100               	movlb	0	; () banked
  3966  000988  1186               	iorwf	(??___ftpack+1)& (0+255),w,b
  3967  00098A  0100               	movlb	0	; () banked
  3968  00098C  1187               	iorwf	(??___ftpack+2)& (0+255),w,b
  3969  00098E  B4D8               	btfsc	status,2,c
  3970  000990  D011               	goto	l1858
  3971  000992  D7E1               	goto	l1850
  3972  000994                     l1854:
  3973                           
  3974                           ; BSR set to: 0
  3975  000994  0100               	movlb	0	; () banked
  3976  000996  2B83               	incf	___ftpack@exp& (0+255),f,b
  3977                           
  3978                           ; BSR set to: 0
  3979  000998  0E01               	movlw	1
  3980  00099A  0100               	movlb	0	; () banked
  3981  00099C  2780               	addwf	___ftpack@arg& (0+255),f,b
  3982  00099E  0E00               	movlw	0
  3983  0009A0  0100               	movlb	0	; () banked
  3984  0009A2  2381               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  3985  0009A4  0E00               	movlw	0
  3986  0009A6  0100               	movlb	0	; () banked
  3987  0009A8  2382               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  3988  0009AA  0100               	movlb	0	; () banked
  3989  0009AC  90D8               	bcf	status,0,c
  3990  0009AE  3382               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  3991  0009B0  3381               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  3992  0009B2  3380               	rrcf	___ftpack@arg& (0+255),f,b
  3993  0009B4                     l1858:
  3994                           
  3995                           ; BSR set to: 0
  3996  0009B4  0E00               	movlw	0
  3997  0009B6  0100               	movlb	0	; () banked
  3998  0009B8  1580               	andwf	___ftpack@arg& (0+255),w,b
  3999  0009BA  0100               	movlb	0	; () banked
  4000  0009BC  6F85               	movwf	??___ftpack& (0+255),b
  4001  0009BE  0E00               	movlw	0
  4002  0009C0  0100               	movlb	0	; () banked
  4003  0009C2  1581               	andwf	(___ftpack@arg+1)& (0+255),w,b
  4004  0009C4  0100               	movlb	0	; () banked
  4005  0009C6  6F86               	movwf	(??___ftpack+1)& (0+255),b
  4006  0009C8  0EFF               	movlw	255
  4007  0009CA  0100               	movlb	0	; () banked
  4008  0009CC  1582               	andwf	(___ftpack@arg+2)& (0+255),w,b
  4009  0009CE  0100               	movlb	0	; () banked
  4010  0009D0  6F87               	movwf	(??___ftpack+2)& (0+255),b
  4011  0009D2  0100               	movlb	0	; () banked
  4012  0009D4  5185               	movf	??___ftpack& (0+255),w,b
  4013  0009D6  0100               	movlb	0	; () banked
  4014  0009D8  1186               	iorwf	(??___ftpack+1)& (0+255),w,b
  4015  0009DA  0100               	movlb	0	; () banked
  4016  0009DC  1187               	iorwf	(??___ftpack+2)& (0+255),w,b
  4017  0009DE  B4D8               	btfsc	status,2,c
  4018  0009E0  D008               	goto	l1862
  4019  0009E2  D7D8               	goto	l1854
  4020  0009E4                     l1860:
  4021                           
  4022                           ; BSR set to: 0
  4023  0009E4  0100               	movlb	0	; () banked
  4024  0009E6  0783               	decf	___ftpack@exp& (0+255),f,b
  4025  0009E8  0100               	movlb	0	; () banked
  4026  0009EA  90D8               	bcf	status,0,c
  4027  0009EC  3780               	rlcf	___ftpack@arg& (0+255),f,b
  4028  0009EE  3781               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  4029  0009F0  3782               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  4030  0009F2                     l1862:
  4031                           
  4032                           ; BSR set to: 0
  4033  0009F2  0100               	movlb	0	; () banked
  4034  0009F4  BF81               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  4035  0009F6  D004               	goto	l517
  4036                           
  4037                           ; BSR set to: 0
  4038  0009F8  0E02               	movlw	2
  4039  0009FA  0100               	movlb	0	; () banked
  4040  0009FC  6183               	cpfslt	___ftpack@exp& (0+255),b
  4041  0009FE  D7F2               	goto	l1860
  4042  000A00                     l517:
  4043                           
  4044                           ; BSR set to: 0
  4045  000A00  0100               	movlb	0	; () banked
  4046  000A02  B183               	btfsc	___ftpack@exp& (0+255),0,b
  4047  000A04  D002               	goto	l1868
  4048                           
  4049                           ; BSR set to: 0
  4050  000A06  0100               	movlb	0	; () banked
  4051  000A08  9F81               	bcf	(___ftpack@arg+1)& (0+255),7,b
  4052  000A0A                     l1868:
  4053                           
  4054                           ; BSR set to: 0
  4055  000A0A  0100               	movlb	0	; () banked
  4056  000A0C  90D8               	bcf	status,0,c
  4057  000A0E  3383               	rrcf	___ftpack@exp& (0+255),f,b
  4058  000A10  0100               	movlb	0	; () banked
  4059  000A12  5183               	movf	___ftpack@exp& (0+255),w,b
  4060  000A14  0100               	movlb	0	; () banked
  4061  000A16  1382               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  4062                           
  4063                           ; BSR set to: 0
  4064  000A18  0100               	movlb	0	; () banked
  4065  000A1A  5184               	movf	___ftpack@sign& (0+255),w,b
  4066  000A1C  0100               	movlb	0	; () banked
  4067  000A1E  B4D8               	btfsc	status,2,c
  4068  000A20  D002               	goto	l1874
  4069                           
  4070                           ; BSR set to: 0
  4071  000A22  0100               	movlb	0	; () banked
  4072  000A24  8F82               	bsf	(___ftpack@arg+2)& (0+255),7,b
  4073  000A26                     l1874:
  4074                           
  4075                           ; BSR set to: 0
  4076  000A26  C080  F080         	movff	___ftpack@arg,?___ftpack
  4077  000A2A  C081  F081         	movff	___ftpack@arg+1,?___ftpack+1
  4078  000A2E  C082  F082         	movff	___ftpack@arg+2,?___ftpack+2
  4079  000A32  0012               	return	
  4080  000A34                     __end_of___ftpack:
  4081                           	opt stack 0
  4082                           tblptru	equ	0xFF8
  4083                           tblptrh	equ	0xFF7
  4084                           tblptrl	equ	0xFF6
  4085                           tablat	equ	0xFF5
  4086                           prodh	equ	0xFF4
  4087                           prodl	equ	0xFF3
  4088                           indf0	equ	0xFEF
  4089                           postinc0	equ	0xFEE
  4090                           fsr0h	equ	0xFEA
  4091                           fsr0l	equ	0xFE9
  4092                           wreg	equ	0xFE8
  4093                           postdec1	equ	0xFE5
  4094                           plusw1	equ	0xFE3
  4095                           fsr1l	equ	0xFE1
  4096                           indf2	equ	0xFDF
  4097                           postinc2	equ	0xFDE
  4098                           postdec2	equ	0xFDD
  4099                           plusw2	equ	0xFDB
  4100                           fsr2h	equ	0xFDA
  4101                           fsr2l	equ	0xFD9
  4102                           status	equ	0xFD8
  4103                           
  4104 ;; *************** function _AD *****************
  4105 ;; Defined at:
  4106 ;;		line 10 in file "modules.c"
  4107 ;; Parameters:    Size  Location     Type
  4108 ;;  channel         1    wreg     unsigned char 
  4109 ;; Auto vars:     Size  Location     Type
  4110 ;;  channel         1    4[BANK0 ] unsigned char 
  4111 ;; Return value:  Size  Location     Type
  4112 ;;                  2    0[BANK0 ] int 
  4113 ;; Registers used:
  4114 ;;		wreg, status,2, status,0, cstack
  4115 ;; Tracked objects:
  4116 ;;		On entry : 0/0
  4117 ;;		On exit  : 0/0
  4118 ;;		Unchanged: 0/0
  4119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4120 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4121 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4122 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4123 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4124 ;;Total ram usage:        5 bytes
  4125 ;; Hardware stack levels used:    1
  4126 ;; Hardware stack levels required when called:    6
  4127 ;; This function calls:
  4128 ;;		Nothing
  4129 ;; This function is called by:
  4130 ;;		_checkC9V
  4131 ;;		_checkAA
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135                           	psect	text14
  4136  0011C8                     __ptext14:
  4137                           	opt stack 0
  4138  0011C8                     _AD:
  4139                           	opt stack 22
  4140                           
  4141                           ; BSR set to: 0
  4142                           ;incstack = 0
  4143                           ;AD@channel stored from wreg
  4144  0011C8  0100               	movlb	0	; () banked
  4145  0011CA  6F84               	movwf	AD@channel& (0+255),b
  4146                           
  4147                           ;modules.c: 12: ADCON0 = ((channel << 2));
  4148  0011CC  0100               	movlb	0	; () banked
  4149  0011CE  4584               	rlncf	AD@channel& (0+255),w,b
  4150  0011D0  46E8               	rlncf	wreg,f,c
  4151  0011D2  0BFC               	andlw	252
  4152  0011D4  6EC2               	movwf	4034,c	;volatile
  4153                           
  4154                           ; BSR set to: 0
  4155                           ;modules.c: 13: ADON = 1;
  4156  0011D6  80C2               	bsf	4034,0,c	;volatile
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;modules.c: 14: ADCON0bits.GO = 1;
  4160  0011D8  82C2               	bsf	4034,1,c	;volatile
  4161                           
  4162                           ;modules.c: 15: while (ADCON0bits.GO_NOT_DONE) {
  4163  0011DA  D009               	goto	l2188
  4164  0011DC                     l2186:
  4165                           
  4166                           ;modules.c: 16: _delay((unsigned long)((10)*(8000000/4000.0)));
  4167  0011DC  0E1A               	movlw	26
  4168  0011DE  0100               	movlb	0	; () banked
  4169  0011E0  6F82               	movwf	??_AD& (0+255),b
  4170  0011E2  0EF8               	movlw	248
  4171  0011E4                     u1847:
  4172  0011E4  2EE8               	decfsz	wreg,f,c
  4173  0011E6  D7FE               	bra	u1847
  4174  0011E8  2F82               	decfsz	??_AD& (0+255),f,b
  4175  0011EA  D7FC               	bra	u1847
  4176  0011EC  F000               	nop	
  4177  0011EE                     l2188:
  4178  0011EE  B2C2               	btfsc	4034,1,c	;volatile
  4179  0011F0  D7F5               	goto	l2186
  4180                           
  4181                           ;modules.c: 17: }
  4182                           ;modules.c: 18: return (ADRESH << 8) | ADRESL;
  4183  0011F2  50C3               	movf	4035,w,c	;volatile
  4184  0011F4  CFC4 F082          	movff	4036,??_AD	;volatile
  4185  0011F8  0100               	movlb	0	; () banked
  4186  0011FA  6B83               	clrf	(??_AD+1)& (0+255),b
  4187  0011FC  C082  F083         	movff	??_AD,??_AD+1
  4188  001200  0100               	movlb	0	; () banked
  4189  001202  6B82               	clrf	??_AD& (0+255),b
  4190  001204  0100               	movlb	0	; () banked
  4191  001206  1182               	iorwf	??_AD& (0+255),w,b
  4192  001208  0100               	movlb	0	; () banked
  4193  00120A  6F80               	movwf	?_AD& (0+255),b
  4194  00120C  0100               	movlb	0	; () banked
  4195  00120E  5183               	movf	(??_AD+1)& (0+255),w,b
  4196  001210  0100               	movlb	0	; () banked
  4197  001212  6F81               	movwf	(?_AD+1)& (0+255),b
  4198  001214  0012               	return	
  4199  001216                     __end_of_AD:
  4200                           	opt stack 0
  4201                           tblptru	equ	0xFF8
  4202                           tblptrh	equ	0xFF7
  4203                           tblptrl	equ	0xFF6
  4204                           tablat	equ	0xFF5
  4205                           prodh	equ	0xFF4
  4206                           prodl	equ	0xFF3
  4207                           indf0	equ	0xFEF
  4208                           postinc0	equ	0xFEE
  4209                           fsr0h	equ	0xFEA
  4210                           fsr0l	equ	0xFE9
  4211                           wreg	equ	0xFE8
  4212                           postdec1	equ	0xFE5
  4213                           plusw1	equ	0xFE3
  4214                           fsr1l	equ	0xFE1
  4215                           indf2	equ	0xFDF
  4216                           postinc2	equ	0xFDE
  4217                           postdec2	equ	0xFDD
  4218                           plusw2	equ	0xFDB
  4219                           fsr2h	equ	0xFDA
  4220                           fsr2l	equ	0xFD9
  4221                           status	equ	0xFD8
  4222                           
  4223 ;; *************** function _captureKeypad *****************
  4224 ;; Defined at:
  4225 ;;		line 30 in file "modules.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;		None
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;  keypress        1    2[BANK0 ] unsigned char 
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  2    0[BANK0 ] int 
  4232 ;; Registers used:
  4233 ;;		wreg, status,2, status,0
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4239 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4240 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4242 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4243 ;;Total ram usage:        3 bytes
  4244 ;; Hardware stack levels used:    1
  4245 ;; Hardware stack levels required when called:    6
  4246 ;; This function calls:
  4247 ;;		Nothing
  4248 ;; This function is called by:
  4249 ;;		_simulate
  4250 ;;		_main
  4251 ;;		_showInfo
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254                           
  4255                           	psect	text15
  4256  001386                     __ptext15:
  4257                           	opt stack 0
  4258  001386                     _captureKeypad:
  4259                           	opt stack 23
  4260  001386                     l162:
  4261  001386  A281               	btfss	3969,1,c	;volatile
  4262  001388  D7FE               	goto	l162
  4263                           
  4264                           ;modules.c: 32: unsigned char keypress = (PORTB & 0xF0) >> 4;
  4265  00138A  3881               	swapf	3969,w,c	;volatile
  4266  00138C  0B0F               	andlw	15
  4267  00138E  0B0F               	andlw	15
  4268  001390  0100               	movlb	0	; () banked
  4269  001392  6F82               	movwf	captureKeypad@keypress& (0+255),b
  4270  001394                     l165:
  4271  001394  B281               	btfsc	3969,1,c	;volatile
  4272  001396  D7FE               	goto	l165
  4273                           
  4274                           ;modules.c: 34: INT1IF = 0;
  4275  001398  90F0               	bcf	intcon3,0,c	;volatile
  4276                           
  4277                           ;modules.c: 35: return keypress;
  4278  00139A  C082  F080         	movff	captureKeypad@keypress,?_captureKeypad
  4279  00139E  0100               	movlb	0	; () banked
  4280  0013A0  6B81               	clrf	(?_captureKeypad+1)& (0+255),b
  4281                           
  4282                           ; BSR set to: 0
  4283  0013A2  0012               	return		;funcret
  4284  0013A4                     __end_of_captureKeypad:
  4285                           	opt stack 0
  4286                           tblptru	equ	0xFF8
  4287                           tblptrh	equ	0xFF7
  4288                           tblptrl	equ	0xFF6
  4289                           tablat	equ	0xFF5
  4290                           prodh	equ	0xFF4
  4291                           prodl	equ	0xFF3
  4292                           intcon3	equ	0xFF0
  4293                           indf0	equ	0xFEF
  4294                           postinc0	equ	0xFEE
  4295                           fsr0h	equ	0xFEA
  4296                           fsr0l	equ	0xFE9
  4297                           wreg	equ	0xFE8
  4298                           postdec1	equ	0xFE5
  4299                           plusw1	equ	0xFE3
  4300                           fsr1l	equ	0xFE1
  4301                           indf2	equ	0xFDF
  4302                           postinc2	equ	0xFDE
  4303                           postdec2	equ	0xFDD
  4304                           plusw2	equ	0xFDB
  4305                           fsr2h	equ	0xFDA
  4306                           fsr2l	equ	0xFD9
  4307                           status	equ	0xFD8
  4308                           
  4309 ;; *************** function _moveSmallNose *****************
  4310 ;; Defined at:
  4311 ;;		line 115 in file "modules.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;  prev            2    0[BANK0 ] PTR int 
  4314 ;;		 -> main@smallNose(2), 
  4315 ;;  next            2    2[BANK0 ] int 
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;		None
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  1    wreg      void 
  4320 ;; Registers used:
  4321 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4327 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4329 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4330 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4331 ;;Total ram usage:        7 bytes
  4332 ;; Hardware stack levels used:    1
  4333 ;; Hardware stack levels required when called:    6
  4334 ;; This function calls:
  4335 ;;		Nothing
  4336 ;; This function is called by:
  4337 ;;		_main
  4338 ;;		_mainloop
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342                           	psect	text16
  4343  000E6E                     __ptext16:
  4344                           	opt stack 0
  4345  000E6E                     _moveSmallNose:
  4346                           	opt stack 24
  4347                           
  4348                           ;modules.c: 118: if (*prev == next)return;
  4349                           
  4350                           ; BSR set to: 0
  4351                           ;incstack = 0
  4352  000E6E  C080  FFD9         	movff	moveSmallNose@prev,fsr2l
  4353  000E72  C081  FFDA         	movff	moveSmallNose@prev+1,fsr2h
  4354  000E76  0100               	movlb	0	; () banked
  4355  000E78  5182               	movf	moveSmallNose@next& (0+255),w,b
  4356  000E7A  18DE               	xorwf	postinc2,w,c
  4357  000E7C  E10B               	bnz	l2422
  4358  000E7E  0100               	movlb	0	; () banked
  4359  000E80  5183               	movf	(moveSmallNose@next+1)& (0+255),w,b
  4360  000E82  18DE               	xorwf	postinc2,w,c
  4361  000E84  B4D8               	btfsc	status,2,c
  4362  000E86  0012               	return	
  4363  000E88  D005               	goto	l2422
  4364  000E8A                     l2420:
  4365                           
  4366                           ; BSR set to: 0
  4367                           ;modules.c: 121: *prev++;
  4368  000E8A  0E02               	movlw	2
  4369  000E8C  0100               	movlb	0	; () banked
  4370  000E8E  2780               	addwf	moveSmallNose@prev& (0+255),f,b
  4371  000E90  0E00               	movlw	0
  4372  000E92  2381               	addwfc	(moveSmallNose@prev+1)& (0+255),f,b
  4373  000E94                     l2422:
  4374                           
  4375                           ; BSR set to: 0
  4376  000E94  C080  FFD9         	movff	moveSmallNose@prev,fsr2l
  4377  000E98  C081  FFDA         	movff	moveSmallNose@prev+1,fsr2h
  4378  000E9C  0100               	movlb	0	; () banked
  4379  000E9E  5182               	movf	moveSmallNose@next& (0+255),w,b
  4380  000EA0  5CDE               	subwf	postinc2,w,c
  4381  000EA2  50DE               	movf	postinc2,w,c
  4382  000EA4  0A80               	xorlw	128
  4383  000EA6  0100               	movlb	0	; () banked
  4384  000EA8  6F86               	movwf	(??_moveSmallNose+2)& (0+255),b
  4385  000EAA  0100               	movlb	0	; () banked
  4386  000EAC  5183               	movf	(moveSmallNose@next+1)& (0+255),w,b
  4387  000EAE  0A80               	xorlw	128
  4388  000EB0  0100               	movlb	0	; () banked
  4389  000EB2  5986               	subwfb	(??_moveSmallNose+2)& (0+255),w,b
  4390  000EB4  B0D8               	btfsc	status,0,c
  4391  000EB6  D006               	goto	l2426
  4392  000EB8  D7E8               	goto	l2420
  4393  000EBA                     l2424:
  4394                           
  4395                           ; BSR set to: 0
  4396                           ;modules.c: 125: *prev--;
  4397  000EBA  0E02               	movlw	2
  4398  000EBC  0100               	movlb	0	; () banked
  4399  000EBE  5F80               	subwf	moveSmallNose@prev& (0+255),f,b
  4400  000EC0  0E00               	movlw	0
  4401  000EC2  5B81               	subwfb	(moveSmallNose@prev+1)& (0+255),f,b
  4402  000EC4                     l2426:
  4403                           
  4404                           ; BSR set to: 0
  4405  000EC4  C080  FFD9         	movff	moveSmallNose@prev,fsr2l
  4406  000EC8  C081  FFDA         	movff	moveSmallNose@prev+1,fsr2h
  4407  000ECC  50DE               	movf	postinc2,w,c
  4408  000ECE  0100               	movlb	0	; () banked
  4409  000ED0  5D82               	subwf	moveSmallNose@next& (0+255),w,b
  4410  000ED2  0100               	movlb	0	; () banked
  4411  000ED4  5183               	movf	(moveSmallNose@next+1)& (0+255),w,b
  4412  000ED6  0A80               	xorlw	128
  4413  000ED8  0100               	movlb	0	; () banked
  4414  000EDA  6F86               	movwf	(??_moveSmallNose+2)& (0+255),b
  4415  000EDC  50DE               	movf	postinc2,w,c
  4416  000EDE  0A80               	xorlw	128
  4417  000EE0  0100               	movlb	0	; () banked
  4418  000EE2  5986               	subwfb	(??_moveSmallNose+2)& (0+255),w,b
  4419  000EE4  B0D8               	btfsc	status,0,c
  4420  000EE6  0012               	return	
  4421  000EE8  D7E8               	goto	l2424
  4422  000EEA                     __end_of_moveSmallNose:
  4423                           	opt stack 0
  4424                           tblptru	equ	0xFF8
  4425                           tblptrh	equ	0xFF7
  4426                           tblptrl	equ	0xFF6
  4427                           tablat	equ	0xFF5
  4428                           prodh	equ	0xFF4
  4429                           prodl	equ	0xFF3
  4430                           intcon3	equ	0xFF0
  4431                           indf0	equ	0xFEF
  4432                           postinc0	equ	0xFEE
  4433                           fsr0h	equ	0xFEA
  4434                           fsr0l	equ	0xFE9
  4435                           wreg	equ	0xFE8
  4436                           postdec1	equ	0xFE5
  4437                           plusw1	equ	0xFE3
  4438                           fsr1l	equ	0xFE1
  4439                           indf2	equ	0xFDF
  4440                           postinc2	equ	0xFDE
  4441                           postdec2	equ	0xFDD
  4442                           plusw2	equ	0xFDB
  4443                           fsr2h	equ	0xFDA
  4444                           fsr2l	equ	0xFD9
  4445                           status	equ	0xFD8
  4446                           
  4447 ;; *************** function _moveBigNose *****************
  4448 ;; Defined at:
  4449 ;;		line 101 in file "modules.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;  prev            2    0[BANK0 ] PTR int 
  4452 ;;		 -> main@bigNose(2), 
  4453 ;;  next            2    2[BANK0 ] int 
  4454 ;; Auto vars:     Size  Location     Type
  4455 ;;		None
  4456 ;; Return value:  Size  Location     Type
  4457 ;;                  1    wreg      void 
  4458 ;; Registers used:
  4459 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4460 ;; Tracked objects:
  4461 ;;		On entry : 0/0
  4462 ;;		On exit  : 0/0
  4463 ;;		Unchanged: 0/0
  4464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4465 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4467 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4468 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4469 ;;Total ram usage:        7 bytes
  4470 ;; Hardware stack levels used:    1
  4471 ;; Hardware stack levels required when called:    6
  4472 ;; This function calls:
  4473 ;;		Nothing
  4474 ;; This function is called by:
  4475 ;;		_main
  4476 ;;		_mainloop
  4477 ;; This function uses a non-reentrant model
  4478 ;;
  4479                           
  4480                           	psect	text17
  4481  000EEA                     __ptext17:
  4482                           	opt stack 0
  4483  000EEA                     _moveBigNose:
  4484                           	opt stack 24
  4485                           
  4486                           ;modules.c: 104: if (*prev == next)return;
  4487                           
  4488                           ; BSR set to: 0
  4489                           ;incstack = 0
  4490  000EEA  C080  FFD9         	movff	moveBigNose@prev,fsr2l
  4491  000EEE  C081  FFDA         	movff	moveBigNose@prev+1,fsr2h
  4492  000EF2  0100               	movlb	0	; () banked
  4493  000EF4  5182               	movf	moveBigNose@next& (0+255),w,b
  4494  000EF6  18DE               	xorwf	postinc2,w,c
  4495  000EF8  E10B               	bnz	l2434
  4496  000EFA  0100               	movlb	0	; () banked
  4497  000EFC  5183               	movf	(moveBigNose@next+1)& (0+255),w,b
  4498  000EFE  18DE               	xorwf	postinc2,w,c
  4499  000F00  B4D8               	btfsc	status,2,c
  4500  000F02  0012               	return	
  4501  000F04  D005               	goto	l2434
  4502  000F06                     l2432:
  4503                           
  4504                           ; BSR set to: 0
  4505                           ;modules.c: 107: *prev++;
  4506  000F06  0E02               	movlw	2
  4507  000F08  0100               	movlb	0	; () banked
  4508  000F0A  2780               	addwf	moveBigNose@prev& (0+255),f,b
  4509  000F0C  0E00               	movlw	0
  4510  000F0E  2381               	addwfc	(moveBigNose@prev+1)& (0+255),f,b
  4511  000F10                     l2434:
  4512                           
  4513                           ; BSR set to: 0
  4514  000F10  C080  FFD9         	movff	moveBigNose@prev,fsr2l
  4515  000F14  C081  FFDA         	movff	moveBigNose@prev+1,fsr2h
  4516  000F18  0100               	movlb	0	; () banked
  4517  000F1A  5182               	movf	moveBigNose@next& (0+255),w,b
  4518  000F1C  5CDE               	subwf	postinc2,w,c
  4519  000F1E  50DE               	movf	postinc2,w,c
  4520  000F20  0A80               	xorlw	128
  4521  000F22  0100               	movlb	0	; () banked
  4522  000F24  6F86               	movwf	(??_moveBigNose+2)& (0+255),b
  4523  000F26  0100               	movlb	0	; () banked
  4524  000F28  5183               	movf	(moveBigNose@next+1)& (0+255),w,b
  4525  000F2A  0A80               	xorlw	128
  4526  000F2C  0100               	movlb	0	; () banked
  4527  000F2E  5986               	subwfb	(??_moveBigNose+2)& (0+255),w,b
  4528  000F30  B0D8               	btfsc	status,0,c
  4529  000F32  D006               	goto	l2438
  4530  000F34  D7E8               	goto	l2432
  4531  000F36                     l2436:
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;modules.c: 111: *prev--;
  4535  000F36  0E02               	movlw	2
  4536  000F38  0100               	movlb	0	; () banked
  4537  000F3A  5F80               	subwf	moveBigNose@prev& (0+255),f,b
  4538  000F3C  0E00               	movlw	0
  4539  000F3E  5B81               	subwfb	(moveBigNose@prev+1)& (0+255),f,b
  4540  000F40                     l2438:
  4541                           
  4542                           ; BSR set to: 0
  4543  000F40  C080  FFD9         	movff	moveBigNose@prev,fsr2l
  4544  000F44  C081  FFDA         	movff	moveBigNose@prev+1,fsr2h
  4545  000F48  50DE               	movf	postinc2,w,c
  4546  000F4A  0100               	movlb	0	; () banked
  4547  000F4C  5D82               	subwf	moveBigNose@next& (0+255),w,b
  4548  000F4E  0100               	movlb	0	; () banked
  4549  000F50  5183               	movf	(moveBigNose@next+1)& (0+255),w,b
  4550  000F52  0A80               	xorlw	128
  4551  000F54  0100               	movlb	0	; () banked
  4552  000F56  6F86               	movwf	(??_moveBigNose+2)& (0+255),b
  4553  000F58  50DE               	movf	postinc2,w,c
  4554  000F5A  0A80               	xorlw	128
  4555  000F5C  0100               	movlb	0	; () banked
  4556  000F5E  5986               	subwfb	(??_moveBigNose+2)& (0+255),w,b
  4557  000F60  B0D8               	btfsc	status,0,c
  4558  000F62  0012               	return	
  4559  000F64  D7E8               	goto	l2436
  4560  000F66                     __end_of_moveBigNose:
  4561                           	opt stack 0
  4562                           tblptru	equ	0xFF8
  4563                           tblptrh	equ	0xFF7
  4564                           tblptrl	equ	0xFF6
  4565                           tablat	equ	0xFF5
  4566                           prodh	equ	0xFF4
  4567                           prodl	equ	0xFF3
  4568                           intcon3	equ	0xFF0
  4569                           indf0	equ	0xFEF
  4570                           postinc0	equ	0xFEE
  4571                           fsr0h	equ	0xFEA
  4572                           fsr0l	equ	0xFE9
  4573                           wreg	equ	0xFE8
  4574                           postdec1	equ	0xFE5
  4575                           plusw1	equ	0xFE3
  4576                           fsr1l	equ	0xFE1
  4577                           indf2	equ	0xFDF
  4578                           postinc2	equ	0xFDE
  4579                           postdec2	equ	0xFDD
  4580                           plusw2	equ	0xFDB
  4581                           fsr2h	equ	0xFDA
  4582                           fsr2l	equ	0xFD9
  4583                           status	equ	0xFD8
  4584                           
  4585 ;; *************** function _initialize *****************
  4586 ;; Defined at:
  4587 ;;		line 19 in file "main.c"
  4588 ;; Parameters:    Size  Location     Type
  4589 ;;		None
  4590 ;; Auto vars:     Size  Location     Type
  4591 ;;		None
  4592 ;; Return value:  Size  Location     Type
  4593 ;;                  1    wreg      void 
  4594 ;; Registers used:
  4595 ;;		wreg, status,2, status,0, cstack
  4596 ;; Tracked objects:
  4597 ;;		On entry : 0/0
  4598 ;;		On exit  : 0/0
  4599 ;;		Unchanged: 0/0
  4600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4605 ;;Total ram usage:        0 bytes
  4606 ;; Hardware stack levels used:    1
  4607 ;; Hardware stack levels required when called:    9
  4608 ;; This function calls:
  4609 ;;		_initLCD
  4610 ;; This function is called by:
  4611 ;;		_main
  4612 ;; This function uses a non-reentrant model
  4613 ;;
  4614                           
  4615                           	psect	text18
  4616  001324                     __ptext18:
  4617                           	opt stack 0
  4618  001324                     _initialize:
  4619                           	opt stack 21
  4620                           
  4621                           ;main.c: 20: TRISA = 0xFF;
  4622                           
  4623                           ; BSR set to: 0
  4624                           ;incstack = 0
  4625  001324  6892               	setf	3986,c	;volatile
  4626                           
  4627                           ;main.c: 21: TRISB = 0xFF;
  4628  001326  6893               	setf	3987,c	;volatile
  4629                           
  4630                           ;main.c: 22: TRISC = 0x00;
  4631  001328  0E00               	movlw	0
  4632  00132A  6E94               	movwf	3988,c	;volatile
  4633                           
  4634                           ;main.c: 23: TRISD = 0x00;
  4635  00132C  0E00               	movlw	0
  4636  00132E  6E95               	movwf	3989,c	;volatile
  4637                           
  4638                           ;main.c: 24: TRISE = 0x00;
  4639  001330  0E00               	movlw	0
  4640  001332  6E96               	movwf	3990,c	;volatile
  4641                           
  4642                           ;main.c: 26: LATA = 0x00;
  4643  001334  0E00               	movlw	0
  4644  001336  6E89               	movwf	3977,c	;volatile
  4645                           
  4646                           ;main.c: 27: LATB = 0x00;
  4647  001338  0E00               	movlw	0
  4648  00133A  6E8A               	movwf	3978,c	;volatile
  4649                           
  4650                           ;main.c: 28: LATC = 0x00;
  4651  00133C  0E00               	movlw	0
  4652  00133E  6E8B               	movwf	3979,c	;volatile
  4653                           
  4654                           ;main.c: 29: LATD = 0x00;
  4655  001340  0E00               	movlw	0
  4656  001342  6E8C               	movwf	3980,c	;volatile
  4657                           
  4658                           ;main.c: 30: LATE = 0x00;
  4659  001344  0E00               	movlw	0
  4660  001346  6E8D               	movwf	3981,c	;volatile
  4661                           
  4662                           ;main.c: 33: ADCON0 = 0x00;
  4663  001348  0E00               	movlw	0
  4664  00134A  6EC2               	movwf	4034,c	;volatile
  4665                           
  4666                           ;main.c: 34: ADCON1 = 0x0B;
  4667  00134C  0E0B               	movlw	11
  4668  00134E  6EC1               	movwf	4033,c	;volatile
  4669                           
  4670                           ;main.c: 35: CVRCON = 0x00;
  4671  001350  0E00               	movlw	0
  4672  001352  6EB5               	movwf	4021,c	;volatile
  4673                           
  4674                           ;main.c: 36: ADFM = 1;
  4675  001354  8EC0               	bsf	4032,7,c	;volatile
  4676                           
  4677                           ;main.c: 38: initLCD();
  4678  001356  EC0B  F009         	call	_initLCD	;wreg free
  4679  00135A  0012               	return		;funcret
  4680  00135C                     __end_of_initialize:
  4681                           	opt stack 0
  4682                           tblptru	equ	0xFF8
  4683                           tblptrh	equ	0xFF7
  4684                           tblptrl	equ	0xFF6
  4685                           tablat	equ	0xFF5
  4686                           prodh	equ	0xFF4
  4687                           prodl	equ	0xFF3
  4688                           intcon3	equ	0xFF0
  4689                           indf0	equ	0xFEF
  4690                           postinc0	equ	0xFEE
  4691                           fsr0h	equ	0xFEA
  4692                           fsr0l	equ	0xFE9
  4693                           wreg	equ	0xFE8
  4694                           postdec1	equ	0xFE5
  4695                           plusw1	equ	0xFE3
  4696                           fsr1l	equ	0xFE1
  4697                           indf2	equ	0xFDF
  4698                           postinc2	equ	0xFDE
  4699                           postdec2	equ	0xFDD
  4700                           plusw2	equ	0xFDB
  4701                           fsr2h	equ	0xFDA
  4702                           fsr2l	equ	0xFD9
  4703                           status	equ	0xFD8
  4704                           
  4705 ;; *************** function _initLCD *****************
  4706 ;; Defined at:
  4707 ;;		line 15 in file "lcd.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;		None
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;		None
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  1    wreg      void 
  4714 ;; Registers used:
  4715 ;;		wreg, status,2, status,0, cstack
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4723 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4724 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4725 ;;Total ram usage:        1 bytes
  4726 ;; Hardware stack levels used:    1
  4727 ;; Hardware stack levels required when called:    8
  4728 ;; This function calls:
  4729 ;;		_lcdInst
  4730 ;; This function is called by:
  4731 ;;		_initialize
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734                           
  4735                           	psect	text19
  4736  001216                     __ptext19:
  4737                           	opt stack 0
  4738  001216                     _initLCD:
  4739                           	opt stack 21
  4740                           
  4741                           ;lcd.c: 16: _delay((unsigned long)((15)*(8000000/4000.0)));
  4742                           
  4743                           ;incstack = 0
  4744  001216  0E27               	movlw	39
  4745  001218  0100               	movlb	0	; () banked
  4746  00121A  6F83               	movwf	??_initLCD& (0+255),b
  4747  00121C  0EF5               	movlw	245
  4748  00121E                     u1857:
  4749  00121E  2EE8               	decfsz	wreg,f,c
  4750  001220  D7FE               	bra	u1857
  4751  001222  2F83               	decfsz	??_initLCD& (0+255),f,b
  4752  001224  D7FC               	bra	u1857
  4753                           
  4754                           ;lcd.c: 17: lcdInst(0b00110011);
  4755  001226  0E33               	movlw	51
  4756  001228  ECDA  F009         	call	_lcdInst
  4757                           
  4758                           ;lcd.c: 18: lcdInst(0b00110010);
  4759  00122C  0E32               	movlw	50
  4760  00122E  ECDA  F009         	call	_lcdInst
  4761                           
  4762                           ;lcd.c: 19: lcdInst(0b00101000);
  4763  001232  0E28               	movlw	40
  4764  001234  ECDA  F009         	call	_lcdInst
  4765                           
  4766                           ;lcd.c: 20: lcdInst(0b00001111);
  4767  001238  0E0F               	movlw	15
  4768  00123A  ECDA  F009         	call	_lcdInst
  4769                           
  4770                           ;lcd.c: 21: lcdInst(0b00000110);
  4771  00123E  0E06               	movlw	6
  4772  001240  ECDA  F009         	call	_lcdInst
  4773                           
  4774                           ;lcd.c: 22: lcdInst(0b00000001);
  4775  001244  0E01               	movlw	1
  4776  001246  ECDA  F009         	call	_lcdInst
  4777                           
  4778                           ;lcd.c: 23: _delay((unsigned long)((15)*(8000000/4000.0)));
  4779  00124A  0E27               	movlw	39
  4780  00124C  0100               	movlb	0	; () banked
  4781  00124E  6F83               	movwf	??_initLCD& (0+255),b
  4782  001250  0EF5               	movlw	245
  4783  001252                     u1867:
  4784  001252  2EE8               	decfsz	wreg,f,c
  4785  001254  D7FE               	bra	u1867
  4786  001256  2F83               	decfsz	??_initLCD& (0+255),f,b
  4787  001258  D7FC               	bra	u1867
  4788  00125A  0012               	return		;funcret
  4789  00125C                     __end_of_initLCD:
  4790                           	opt stack 0
  4791                           tblptru	equ	0xFF8
  4792                           tblptrh	equ	0xFF7
  4793                           tblptrl	equ	0xFF6
  4794                           tablat	equ	0xFF5
  4795                           prodh	equ	0xFF4
  4796                           prodl	equ	0xFF3
  4797                           intcon3	equ	0xFF0
  4798                           indf0	equ	0xFEF
  4799                           postinc0	equ	0xFEE
  4800                           fsr0h	equ	0xFEA
  4801                           fsr0l	equ	0xFE9
  4802                           wreg	equ	0xFE8
  4803                           postdec1	equ	0xFE5
  4804                           plusw1	equ	0xFE3
  4805                           fsr1l	equ	0xFE1
  4806                           indf2	equ	0xFDF
  4807                           postinc2	equ	0xFDE
  4808                           postdec2	equ	0xFDD
  4809                           plusw2	equ	0xFDB
  4810                           fsr2h	equ	0xFDA
  4811                           fsr2l	equ	0xFD9
  4812                           status	equ	0xFD8
  4813                           
  4814 ;; *************** function _lcdInst *****************
  4815 ;; Defined at:
  4816 ;;		line 26 in file "lcd.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;  data            1    wreg     unsigned char 
  4819 ;; Auto vars:     Size  Location     Type
  4820 ;;  data            1    2[BANK0 ] unsigned char 
  4821 ;; Return value:  Size  Location     Type
  4822 ;;                  1    wreg      void 
  4823 ;; Registers used:
  4824 ;;		wreg, status,2, status,0, cstack
  4825 ;; Tracked objects:
  4826 ;;		On entry : 0/0
  4827 ;;		On exit  : 0/0
  4828 ;;		Unchanged: 0/0
  4829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4831 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4833 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4834 ;;Total ram usage:        1 bytes
  4835 ;; Hardware stack levels used:    1
  4836 ;; Hardware stack levels required when called:    7
  4837 ;; This function calls:
  4838 ;;		_lcdNibble
  4839 ;; This function is called by:
  4840 ;;		_initLCD
  4841 ;;		_checkV
  4842 ;;		_checkC9V
  4843 ;;		_checkAA
  4844 ;; This function uses a non-reentrant model
  4845 ;;
  4846                           
  4847                           	psect	text20
  4848  0013B4                     __ptext20:
  4849                           	opt stack 0
  4850  0013B4                     _lcdInst:
  4851                           	opt stack 21
  4852                           
  4853                           ;incstack = 0
  4854                           ;lcdInst@data stored from wreg
  4855  0013B4  0100               	movlb	0	; () banked
  4856  0013B6  6F82               	movwf	lcdInst@data& (0+255),b
  4857                           
  4858                           ;lcd.c: 27: LATDbits.LATD2 = 0;
  4859  0013B8  948C               	bcf	3980,2,c	;volatile
  4860                           
  4861                           ;lcd.c: 28: lcdNibble(data);
  4862  0013BA  0100               	movlb	0	; () banked
  4863  0013BC  5182               	movf	lcdInst@data& (0+255),w,b
  4864  0013BE  EC2B  F008         	call	_lcdNibble
  4865  0013C2  0012               	return		;funcret
  4866  0013C4                     __end_of_lcdInst:
  4867                           	opt stack 0
  4868                           tblptru	equ	0xFF8
  4869                           tblptrh	equ	0xFF7
  4870                           tblptrl	equ	0xFF6
  4871                           tablat	equ	0xFF5
  4872                           prodh	equ	0xFF4
  4873                           prodl	equ	0xFF3
  4874                           intcon3	equ	0xFF0
  4875                           indf0	equ	0xFEF
  4876                           postinc0	equ	0xFEE
  4877                           fsr0h	equ	0xFEA
  4878                           fsr0l	equ	0xFE9
  4879                           wreg	equ	0xFE8
  4880                           postdec1	equ	0xFE5
  4881                           plusw1	equ	0xFE3
  4882                           fsr1l	equ	0xFE1
  4883                           indf2	equ	0xFDF
  4884                           postinc2	equ	0xFDE
  4885                           postdec2	equ	0xFDD
  4886                           plusw2	equ	0xFDB
  4887                           fsr2h	equ	0xFDA
  4888                           fsr2l	equ	0xFD9
  4889                           status	equ	0xFD8
  4890                           
  4891 ;; *************** function _lcdNibble *****************
  4892 ;; Defined at:
  4893 ;;		line 36 in file "lcd.c"
  4894 ;; Parameters:    Size  Location     Type
  4895 ;;  data            1    wreg     unsigned char 
  4896 ;; Auto vars:     Size  Location     Type
  4897 ;;  data            1    1[BANK0 ] unsigned char 
  4898 ;;  temp            1    0[BANK0 ] unsigned char 
  4899 ;; Return value:  Size  Location     Type
  4900 ;;                  1    wreg      void 
  4901 ;; Registers used:
  4902 ;;		wreg, status,2, status,0
  4903 ;; Tracked objects:
  4904 ;;		On entry : 0/0
  4905 ;;		On exit  : 0/0
  4906 ;;		Unchanged: 0/0
  4907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4909 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4911 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4912 ;;Total ram usage:        2 bytes
  4913 ;; Hardware stack levels used:    1
  4914 ;; Hardware stack levels required when called:    6
  4915 ;; This function calls:
  4916 ;;		Nothing
  4917 ;; This function is called by:
  4918 ;;		_lcdInst
  4919 ;;		_putch
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           	psect	text21
  4924  001056                     __ptext21:
  4925                           	opt stack 0
  4926  001056                     _lcdNibble:
  4927                           	opt stack 20
  4928                           
  4929                           ;incstack = 0
  4930                           ;lcdNibble@data stored from wreg
  4931  001056  0100               	movlb	0	; () banked
  4932  001058  6F81               	movwf	lcdNibble@data& (0+255),b
  4933                           
  4934                           ;lcd.c: 38: char temp = data & 0xF0;
  4935  00105A  0100               	movlb	0	; () banked
  4936  00105C  5181               	movf	lcdNibble@data& (0+255),w,b
  4937  00105E  0BF0               	andlw	240
  4938  001060  0100               	movlb	0	; () banked
  4939  001062  6F80               	movwf	lcdNibble@temp& (0+255),b
  4940                           
  4941                           ;lcd.c: 39: LATD = LATD & 0x0F;
  4942  001064  508C               	movf	3980,w,c	;volatile
  4943  001066  0B0F               	andlw	15
  4944  001068  6E8C               	movwf	3980,c	;volatile
  4945                           
  4946                           ;lcd.c: 40: LATD = temp | LATD;
  4947  00106A  0100               	movlb	0	; () banked
  4948  00106C  5180               	movf	lcdNibble@temp& (0+255),w,b
  4949  00106E  108C               	iorwf	3980,w,c	;volatile
  4950  001070  6E8C               	movwf	3980,c	;volatile
  4951                           
  4952                           ; BSR set to: 0
  4953                           ;lcd.c: 42: LATDbits.LATD3 = 0;
  4954  001072  968C               	bcf	3980,3,c	;volatile
  4955                           
  4956                           ; BSR set to: 0
  4957                           ;lcd.c: 43: _delay((unsigned long)((25)*(8000000/4000000.0)));
  4958  001074  0E10               	movlw	16
  4959  001076                     u1877:
  4960  001076  2EE8               	decfsz	wreg,f,c
  4961  001078  D7FE               	bra	u1877
  4962  00107A  D000               	nop2	
  4963                           
  4964                           ;lcd.c: 44: LATDbits.LATD3 = 1;
  4965  00107C  868C               	bsf	3980,3,c	;volatile
  4966                           
  4967                           ;lcd.c: 45: _delay((unsigned long)((25)*(8000000/4000000.0)));
  4968  00107E  0E10               	movlw	16
  4969  001080                     u1887:
  4970  001080  2EE8               	decfsz	wreg,f,c
  4971  001082  D7FE               	bra	u1887
  4972  001084  D000               	nop2	
  4973                           
  4974                           ;lcd.c: 47: data = data << 4;
  4975  001086  0100               	movlb	0	; () banked
  4976  001088  3981               	swapf	lcdNibble@data& (0+255),w,b
  4977  00108A  0BF0               	andlw	240
  4978  00108C  0100               	movlb	0	; () banked
  4979  00108E  6F81               	movwf	lcdNibble@data& (0+255),b
  4980                           
  4981                           ;lcd.c: 49: temp = data & 0xF0;
  4982  001090  0100               	movlb	0	; () banked
  4983  001092  5181               	movf	lcdNibble@data& (0+255),w,b
  4984  001094  0BF0               	andlw	240
  4985  001096  0100               	movlb	0	; () banked
  4986  001098  6F80               	movwf	lcdNibble@temp& (0+255),b
  4987                           
  4988                           ;lcd.c: 50: LATD = LATD & 0x0F;
  4989  00109A  508C               	movf	3980,w,c	;volatile
  4990  00109C  0B0F               	andlw	15
  4991  00109E  6E8C               	movwf	3980,c	;volatile
  4992                           
  4993                           ;lcd.c: 51: LATD = temp | LATD;
  4994  0010A0  0100               	movlb	0	; () banked
  4995  0010A2  5180               	movf	lcdNibble@temp& (0+255),w,b
  4996  0010A4  108C               	iorwf	3980,w,c	;volatile
  4997  0010A6  6E8C               	movwf	3980,c	;volatile
  4998                           
  4999                           ; BSR set to: 0
  5000                           ;lcd.c: 53: LATDbits.LATD3 = 0;
  5001  0010A8  968C               	bcf	3980,3,c	;volatile
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;lcd.c: 54: _delay((unsigned long)((25)*(8000000/4000000.0)));
  5005  0010AA  0E10               	movlw	16
  5006  0010AC                     u1897:
  5007  0010AC  2EE8               	decfsz	wreg,f,c
  5008  0010AE  D7FE               	bra	u1897
  5009  0010B0  D000               	nop2	
  5010                           
  5011                           ;lcd.c: 55: LATDbits.LATD3 = 1;
  5012  0010B2  868C               	bsf	3980,3,c	;volatile
  5013                           
  5014                           ;lcd.c: 56: _delay((unsigned long)((25)*(8000000/4000000.0)));
  5015  0010B4  0E10               	movlw	16
  5016  0010B6                     u1907:
  5017  0010B6  2EE8               	decfsz	wreg,f,c
  5018  0010B8  D7FE               	bra	u1907
  5019  0010BA  D000               	nop2	
  5020  0010BC  0012               	return		;funcret
  5021  0010BE                     __end_of_lcdNibble:
  5022                           	opt stack 0
  5023                           tblptru	equ	0xFF8
  5024                           tblptrh	equ	0xFF7
  5025                           tblptrl	equ	0xFF6
  5026                           tablat	equ	0xFF5
  5027                           prodh	equ	0xFF4
  5028                           prodl	equ	0xFF3
  5029                           intcon3	equ	0xFF0
  5030                           indf0	equ	0xFEF
  5031                           postinc0	equ	0xFEE
  5032                           fsr0h	equ	0xFEA
  5033                           fsr0l	equ	0xFE9
  5034                           wreg	equ	0xFE8
  5035                           postdec1	equ	0xFE5
  5036                           plusw1	equ	0xFE3
  5037                           fsr1l	equ	0xFE1
  5038                           indf2	equ	0xFDF
  5039                           postinc2	equ	0xFDE
  5040                           postdec2	equ	0xFDD
  5041                           plusw2	equ	0xFDB
  5042                           fsr2h	equ	0xFDA
  5043                           fsr2l	equ	0xFD9
  5044                           status	equ	0xFD8
  5045                           
  5046 ;; *************** function _keypressed *****************
  5047 ;; Defined at:
  5048 ;;		line 38 in file "modules.c"
  5049 ;; Parameters:    Size  Location     Type
  5050 ;;		None
  5051 ;; Auto vars:     Size  Location     Type
  5052 ;;  keypress        1   87[COMRAM] unsigned char 
  5053 ;; Return value:  Size  Location     Type
  5054 ;;                  1    wreg      void 
  5055 ;; Registers used:
  5056 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5057 ;; Tracked objects:
  5058 ;;		On entry : 0/0
  5059 ;;		On exit  : 0/0
  5060 ;;		Unchanged: 0/0
  5061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5063 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5064 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5065 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5066 ;;Total ram usage:       15 bytes
  5067 ;; Hardware stack levels used:    1
  5068 ;; Hardware stack levels required when called:    5
  5069 ;; This function calls:
  5070 ;;		_stopMoving
  5071 ;; This function is called by:
  5072 ;;		Interrupt level 2
  5073 ;; This function uses a non-reentrant model
  5074 ;;
  5075                           
  5076                           	psect	intcode
  5077  000008                     __pintcode:
  5078                           	opt stack 0
  5079  000008                     _keypressed:
  5080                           	opt stack 19
  5081                           
  5082                           ;incstack = 0
  5083  000008  8261               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5084  00000A  EDB4  F006         	call	int_func,f	;refresh shadow registers
  5085                           tblptru	equ	0xFF8
  5086                           tblptrh	equ	0xFF7
  5087                           tblptrl	equ	0xFF6
  5088                           tablat	equ	0xFF5
  5089                           prodh	equ	0xFF4
  5090                           prodl	equ	0xFF3
  5091                           intcon3	equ	0xFF0
  5092                           indf0	equ	0xFEF
  5093                           postinc0	equ	0xFEE
  5094                           fsr0h	equ	0xFEA
  5095                           fsr0l	equ	0xFE9
  5096                           wreg	equ	0xFE8
  5097                           postdec1	equ	0xFE5
  5098                           plusw1	equ	0xFE3
  5099                           fsr1l	equ	0xFE1
  5100                           indf2	equ	0xFDF
  5101                           postinc2	equ	0xFDE
  5102                           postdec2	equ	0xFDD
  5103                           plusw2	equ	0xFDB
  5104                           fsr2h	equ	0xFDA
  5105                           fsr2l	equ	0xFD9
  5106                           status	equ	0xFD8
  5107                           
  5108                           	psect	intcode_body
  5109  000D68                     __pintcode_body:
  5110                           	opt stack 19
  5111  000D68                     int_func:
  5112                           	opt stack 19
  5113  000D68  0006               	pop		; remove dummy address from shadow register refresh
  5114  000D6A  CFFA F04A          	movff	pclath,??_keypressed
  5115  000D6E  CFFB F04B          	movff	pclatu,??_keypressed+1
  5116  000D72  CFE9 F04C          	movff	fsr0l,??_keypressed+2
  5117  000D76  CFEA F04D          	movff	fsr0h,??_keypressed+3
  5118  000D7A  CFE1 F04E          	movff	fsr1l,??_keypressed+4
  5119  000D7E  CFE2 F04F          	movff	fsr1h,??_keypressed+5
  5120  000D82  CFD9 F050          	movff	fsr2l,??_keypressed+6
  5121  000D86  CFDA F051          	movff	fsr2h,??_keypressed+7
  5122  000D8A  CFF3 F052          	movff	prodl,??_keypressed+8
  5123  000D8E  CFF4 F053          	movff	prodh,??_keypressed+9
  5124  000D92  CFF6 F054          	movff	tblptrl,??_keypressed+10
  5125  000D96  CFF7 F055          	movff	tblptrh,??_keypressed+11
  5126  000D9A  CFF8 F056          	movff	tblptru,??_keypressed+12
  5127  000D9E  CFF5 F057          	movff	tablat,??_keypressed+13
  5128                           
  5129                           ;modules.c: 40: if (INT1IF) {
  5130  000DA2  A0F0               	btfss	intcon3,0,c	;volatile
  5131  000DA4  D007               	goto	i2l172
  5132                           
  5133                           ;modules.c: 41: unsigned char keypress = (PORTB & 0xF0) >> 4;
  5134  000DA6  3881               	swapf	3969,w,c	;volatile
  5135  000DA8  0B0F               	andlw	15
  5136  000DAA  0B0F               	andlw	15
  5137  000DAC  6E58               	movwf	keypressed@keypress,c
  5138                           
  5139                           ;modules.c: 42: INT1IF = 0;
  5140  000DAE  90F0               	bcf	intcon3,0,c	;volatile
  5141                           
  5142                           ;modules.c: 43: stopMoving();
  5143  000DB0  ECE2  F009         	call	_stopMoving	;wreg free
  5144  000DB4                     i2l172:
  5145  000DB4  C057  FFF5         	movff	??_keypressed+13,tablat
  5146  000DB8  C056  FFF8         	movff	??_keypressed+12,tblptru
  5147  000DBC  C055  FFF7         	movff	??_keypressed+11,tblptrh
  5148  000DC0  C054  FFF6         	movff	??_keypressed+10,tblptrl
  5149  000DC4  C053  FFF4         	movff	??_keypressed+9,prodh
  5150  000DC8  C052  FFF3         	movff	??_keypressed+8,prodl
  5151  000DCC  C051  FFDA         	movff	??_keypressed+7,fsr2h
  5152  000DD0  C050  FFD9         	movff	??_keypressed+6,fsr2l
  5153  000DD4  C04F  FFE2         	movff	??_keypressed+5,fsr1h
  5154  000DD8  C04E  FFE1         	movff	??_keypressed+4,fsr1l
  5155  000DDC  C04D  FFEA         	movff	??_keypressed+3,fsr0h
  5156  000DE0  C04C  FFE9         	movff	??_keypressed+2,fsr0l
  5157  000DE4  C04B  FFFB         	movff	??_keypressed+1,pclatu
  5158  000DE8  C04A  FFFA         	movff	??_keypressed,pclath
  5159  000DEC  9261               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5160  000DEE  0011               	retfie		f
  5161  000DF0                     __end_of_keypressed:
  5162                           	opt stack 0
  5163                           pclatu	equ	0xFFB
  5164                           pclath	equ	0xFFA
  5165                           tblptru	equ	0xFF8
  5166                           tblptrh	equ	0xFF7
  5167                           tblptrl	equ	0xFF6
  5168                           tablat	equ	0xFF5
  5169                           prodh	equ	0xFF4
  5170                           prodl	equ	0xFF3
  5171                           intcon3	equ	0xFF0
  5172                           indf0	equ	0xFEF
  5173                           postinc0	equ	0xFEE
  5174                           fsr0h	equ	0xFEA
  5175                           fsr0l	equ	0xFE9
  5176                           wreg	equ	0xFE8
  5177                           postdec1	equ	0xFE5
  5178                           plusw1	equ	0xFE3
  5179                           fsr1h	equ	0xFE2
  5180                           fsr1l	equ	0xFE1
  5181                           indf2	equ	0xFDF
  5182                           postinc2	equ	0xFDE
  5183                           postdec2	equ	0xFDD
  5184                           plusw2	equ	0xFDB
  5185                           fsr2h	equ	0xFDA
  5186                           fsr2l	equ	0xFD9
  5187                           status	equ	0xFD8
  5188                           
  5189 ;; *************** function _stopMoving *****************
  5190 ;; Defined at:
  5191 ;;		line 129 in file "modules.c"
  5192 ;; Parameters:    Size  Location     Type
  5193 ;;		None
  5194 ;; Auto vars:     Size  Location     Type
  5195 ;;		None
  5196 ;; Return value:  Size  Location     Type
  5197 ;;                  1    wreg      void 
  5198 ;; Registers used:
  5199 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5200 ;; Tracked objects:
  5201 ;;		On entry : 0/0
  5202 ;;		On exit  : 0/0
  5203 ;;		Unchanged: 0/0
  5204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5209 ;;Total ram usage:        0 bytes
  5210 ;; Hardware stack levels used:    1
  5211 ;; Hardware stack levels required when called:    4
  5212 ;; This function calls:
  5213 ;;		i2_println
  5214 ;; This function is called by:
  5215 ;;		_keypressed
  5216 ;;		_mainloop
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           
  5220                           	psect	text23
  5221  0013C4                     __ptext23:
  5222                           	opt stack 0
  5223  0013C4                     _stopMoving:
  5224                           	opt stack 19
  5225                           
  5226                           ;modules.c: 130: (INTCONbits.GIE = 0);
  5227                           
  5228                           ;incstack = 0
  5229  0013C4  9EF2               	bcf	intcon,7,c	;volatile
  5230                           
  5231                           ;modules.c: 131: println("Emergency");
  5232  0013C6  0ECB               	movlw	low STR_22
  5233  0013C8  6E1B               	movwf	i2println@data,c
  5234  0013CA  0EFF               	movlw	high STR_22
  5235  0013CC  6E1C               	movwf	i2println@data+1,c
  5236  0013CE  ECF8  F006         	call	i2_println	;wreg free
  5237  0013D2                     i2l217:
  5238  0013D2  D7FF               	goto	i2l217
  5239  0013D4                     __end_of_stopMoving:
  5240                           	opt stack 0
  5241                           pclatu	equ	0xFFB
  5242                           pclath	equ	0xFFA
  5243                           tblptru	equ	0xFF8
  5244                           tblptrh	equ	0xFF7
  5245                           tblptrl	equ	0xFF6
  5246                           tablat	equ	0xFF5
  5247                           prodh	equ	0xFF4
  5248                           prodl	equ	0xFF3
  5249                           intcon	equ	0xFF2
  5250                           intcon3	equ	0xFF0
  5251                           indf0	equ	0xFEF
  5252                           postinc0	equ	0xFEE
  5253                           fsr0h	equ	0xFEA
  5254                           fsr0l	equ	0xFE9
  5255                           wreg	equ	0xFE8
  5256                           postdec1	equ	0xFE5
  5257                           plusw1	equ	0xFE3
  5258                           fsr1h	equ	0xFE2
  5259                           fsr1l	equ	0xFE1
  5260                           indf2	equ	0xFDF
  5261                           postinc2	equ	0xFDE
  5262                           postdec2	equ	0xFDD
  5263                           plusw2	equ	0xFDB
  5264                           fsr2h	equ	0xFDA
  5265                           fsr2l	equ	0xFD9
  5266                           status	equ	0xFD8
  5267                           
  5268 ;; *************** function i2_println *****************
  5269 ;; Defined at:
  5270 ;;		line 21 in file "modules.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;  data            2   26[COMRAM] PTR unsigned char 
  5273 ;;		 -> STR_35(12), STR_34(10), STR_33(5), STR_32(13), 
  5274 ;;		 -> STR_31(11), STR_29(3), STR_28(3), STR_27(6), 
  5275 ;;		 -> STR_26(13), STR_25(11), STR_24(4), STR_22(10), 
  5276 ;;		 -> STR_20(11), STR_18(11), STR_16(10), STR_14(11), 
  5277 ;;		 -> STR_12(14), STR_10(14), STR_9(14), STR_8(15), 
  5278 ;;		 -> STR_7(2), STR_6(17), STR_4(9), STR_2(11), 
  5279 ;;		 -> STR_1(11), 
  5280 ;; Auto vars:     Size  Location     Type
  5281 ;;  println        41   30[COMRAM] unsigned char [41]
  5282 ;;  println         2   71[COMRAM] int 
  5283 ;; Return value:  Size  Location     Type
  5284 ;;                  1    wreg      void 
  5285 ;; Registers used:
  5286 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5287 ;; Tracked objects:
  5288 ;;		On entry : 0/0
  5289 ;;		On exit  : 0/0
  5290 ;;		Unchanged: 0/0
  5291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5292 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5293 ;;      Locals:        43       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5294 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5295 ;;      Totals:        47       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5296 ;;Total ram usage:       47 bytes
  5297 ;; Hardware stack levels used:    1
  5298 ;; Hardware stack levels required when called:    3
  5299 ;; This function calls:
  5300 ;;		i2_printf
  5301 ;; This function is called by:
  5302 ;;		_stopMoving
  5303 ;; This function uses a non-reentrant model
  5304 ;;
  5305                           
  5306                           	psect	text24
  5307  000DF0                     __ptext24:
  5308                           	opt stack 0
  5309  000DF0                     i2_println:
  5310                           	opt stack 19
  5311                           
  5312                           ;modules.c: 22: int i = 0;
  5313                           
  5314                           ;incstack = 0
  5315  000DF0  0E00               	movlw	0
  5316  000DF2  6E49               	movwf	i2println@i+1,c
  5317  000DF4  0E00               	movlw	0
  5318  000DF6  6E48               	movwf	i2println@i,c
  5319                           
  5320                           ;modules.c: 23: char output[] = "                                        ";
  5321  000DF8  EE21  F000         	lfsr	2,println@F3063
  5322  000DFC  EE10  F01F         	lfsr	1,i2println@output
  5323  000E00  0E28               	movlw	40
  5324  000E02                     i2u158_41:
  5325  000E02  CFDB FFE3          	movff	plusw2,plusw1
  5326  000E06  06E8               	decf	wreg,f,c
  5327  000E08  E2FC               	bc	i2u158_41
  5328                           
  5329                           ;modules.c: 24: while (data[i] != '\0') {
  5330  000E0A  D016               	goto	i2l2404
  5331  000E0C                     i2l2400:
  5332                           
  5333                           ;modules.c: 25: output[i] = data[i++];
  5334  000E0C  5048               	movf	i2println@i,w,c
  5335  000E0E  241B               	addwf	i2println@data,w,c
  5336  000E10  6E1D               	movwf	??i2_println& (0+255),c
  5337  000E12  5049               	movf	i2println@i+1,w,c
  5338  000E14  201C               	addwfc	i2println@data+1,w,c
  5339  000E16  6E1E               	movwf	(??i2_println+1)& (0+255),c
  5340  000E18  C01D  FFF6         	movff	??i2_println,tblptrl
  5341  000E1C  C01E  FFF7         	movff	??i2_println+1,tblptrh
  5342  000E20                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5343  000E20  6AF8               	clrf	tblptru,c
  5344  000E22                     	endif
  5345  000E22                     	if	0	;tblptru may be non-zero
  5346  000E22                     	endif
  5347  000E22  0E1F               	movlw	low i2println@output
  5348  000E24  2448               	addwf	i2println@i,w,c
  5349  000E26  6ED9               	movwf	fsr2l,c
  5350  000E28  0E00               	movlw	high i2println@output
  5351  000E2A  2049               	addwfc	i2println@i+1,w,c
  5352  000E2C  6EDA               	movwf	fsr2h,c
  5353  000E2E  0008               	tblrd		*
  5354  000E30  CFF5 FFDF          	movff	tablat,indf2
  5355  000E34  4A48               	infsnz	i2println@i,f,c
  5356  000E36  2A49               	incf	i2println@i+1,f,c
  5357  000E38                     i2l2404:
  5358  000E38  5048               	movf	i2println@i,w,c
  5359  000E3A  241B               	addwf	i2println@data,w,c
  5360  000E3C  6E1D               	movwf	??i2_println& (0+255),c
  5361  000E3E  5049               	movf	i2println@i+1,w,c
  5362  000E40  201C               	addwfc	i2println@data+1,w,c
  5363  000E42  6E1E               	movwf	(??i2_println+1)& (0+255),c
  5364  000E44  C01D  FFF6         	movff	??i2_println,tblptrl
  5365  000E48  C01E  FFF7         	movff	??i2_println+1,tblptrh
  5366  000E4C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5367  000E4C  6AF8               	clrf	tblptru,c
  5368  000E4E                     	endif
  5369  000E4E                     	if	0	;tblptru may be non-zero
  5370  000E4E                     	endif
  5371  000E4E  0008               	tblrd		*
  5372  000E50  50F5               	movf	tablat,w,c
  5373  000E52  0900               	iorlw	0
  5374  000E54  A4D8               	btfss	status,2,c
  5375  000E56  D7DA               	goto	i2l2400
  5376                           
  5377                           ;modules.c: 26: }
  5378                           ;modules.c: 27: printf("%s", output);
  5379  000E58  0EFA               	movlw	low STR_5
  5380  000E5A  6E0D               	movwf	i2printf@f,c
  5381  000E5C  0EFF               	movlw	high STR_5
  5382  000E5E  6E0E               	movwf	i2printf@f+1,c
  5383  000E60  0E1F               	movlw	low i2println@output
  5384  000E62  6E0F               	movwf	?i2_printf+2,c
  5385  000E64  0E00               	movlw	high i2println@output
  5386  000E66  6E10               	movwf	?i2_printf+3,c
  5387  000E68  EC64  F002         	call	i2_printf	;wreg free
  5388  000E6C  0012               	return		;funcret
  5389  000E6E                     __end_ofi2_println:
  5390                           	opt stack 0
  5391                           pclatu	equ	0xFFB
  5392                           pclath	equ	0xFFA
  5393                           tblptru	equ	0xFF8
  5394                           tblptrh	equ	0xFF7
  5395                           tblptrl	equ	0xFF6
  5396                           tablat	equ	0xFF5
  5397                           prodh	equ	0xFF4
  5398                           prodl	equ	0xFF3
  5399                           intcon	equ	0xFF2
  5400                           intcon3	equ	0xFF0
  5401                           indf0	equ	0xFEF
  5402                           postinc0	equ	0xFEE
  5403                           fsr0h	equ	0xFEA
  5404                           fsr0l	equ	0xFE9
  5405                           wreg	equ	0xFE8
  5406                           postdec1	equ	0xFE5
  5407                           plusw1	equ	0xFE3
  5408                           fsr1h	equ	0xFE2
  5409                           fsr1l	equ	0xFE1
  5410                           indf2	equ	0xFDF
  5411                           postinc2	equ	0xFDE
  5412                           postdec2	equ	0xFDD
  5413                           plusw2	equ	0xFDB
  5414                           fsr2h	equ	0xFDA
  5415                           fsr2l	equ	0xFD9
  5416                           status	equ	0xFD8
  5417                           
  5418 ;; *************** function i2_printf *****************
  5419 ;; Defined at:
  5420 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  5421 ;; Parameters:    Size  Location     Type
  5422 ;;  f               2   12[COMRAM] PTR const unsigned char 
  5423 ;;		 -> STR_30(11), STR_23(12), STR_21(3), STR_19(3), 
  5424 ;;		 -> STR_17(3), STR_15(3), STR_13(13), STR_11(11), 
  5425 ;;		 -> STR_5(3), STR_3(19), 
  5426 ;; Auto vars:     Size  Location     Type
  5427 ;;  printf          4    0        struct .
  5428 ;;  printf          2   23[COMRAM] unsigned int 
  5429 ;;  printf          2   21[COMRAM] PTR const unsigned char 
  5430 ;;		 -> STR_36(7), println@output(41), 
  5431 ;;  printf          2   19[COMRAM] PTR void [1]
  5432 ;;		 -> ?i2_printf(2), ?_printf(2), 
  5433 ;;  printf          2    0        unsigned int 
  5434 ;;  printf          1   25[COMRAM] char 
  5435 ;;  printf          1   18[COMRAM] char 
  5436 ;;  printf          1   17[COMRAM] unsigned char 
  5437 ;; Return value:  Size  Location     Type
  5438 ;;                  2   12[COMRAM] int 
  5439 ;; Registers used:
  5440 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5441 ;; Tracked objects:
  5442 ;;		On entry : 0/0
  5443 ;;		On exit  : 0/0
  5444 ;;		Unchanged: 0/0
  5445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5446 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5447 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5448 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5449 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5450 ;;Total ram usage:       14 bytes
  5451 ;; Hardware stack levels used:    1
  5452 ;; Hardware stack levels required when called:    2
  5453 ;; This function calls:
  5454 ;;		i2___lwdiv
  5455 ;;		i2___lwmod
  5456 ;;		i2_putch
  5457 ;; This function is called by:
  5458 ;;		i2_println
  5459 ;; This function uses a non-reentrant model
  5460 ;;
  5461                           
  5462                           	psect	text25
  5463  0004C8                     __ptext25:
  5464                           	opt stack 0
  5465  0004C8                     i2_printf:
  5466                           	opt stack 19
  5467                           
  5468                           ;doprnt.c: 466: va_list ap;
  5469                           ;doprnt.c: 499: signed char c;
  5470                           ;doprnt.c: 506: signed char prec;
  5471                           ;doprnt.c: 508: unsigned char flag;
  5472                           ;doprnt.c: 523: union {
  5473                           ;doprnt.c: 524: unsigned long vd;
  5474                           ;doprnt.c: 525: double integ;
  5475                           ;doprnt.c: 526: } tmpval;
  5476                           ;doprnt.c: 528: unsigned int val;
  5477                           ;doprnt.c: 529: unsigned len;
  5478                           ;doprnt.c: 530: const char * cp;
  5479                           ;doprnt.c: 533: *ap = __va_start();
  5480                           
  5481                           ;incstack = 0
  5482  0004C8  0E0F               	movlw	low (?i2_printf+2)
  5483  0004CA  6E14               	movwf	i2printf@ap,c
  5484  0004CC  0E00               	movlw	high (?i2_printf+2)
  5485  0004CE  6E15               	movwf	i2printf@ap+1,c
  5486                           
  5487                           ;doprnt.c: 536: while(c = *f++) {
  5488  0004D0  D0C8               	goto	i2l2278
  5489  0004D2                     i2l2218:
  5490                           
  5491                           ;doprnt.c: 538: if(c != '%')
  5492  0004D2  0E25               	movlw	37
  5493  0004D4  181A               	xorwf	i2printf@c,w,c
  5494  0004D6  B4D8               	btfsc	status,2,c
  5495  0004D8  D004               	goto	i2l2222
  5496                           
  5497                           ;doprnt.c: 540: {
  5498                           ;doprnt.c: 541: (putch(c) );
  5499  0004DA  501A               	movf	i2printf@c,w,c
  5500  0004DC  ECEA  F009         	call	i2_putch
  5501                           
  5502                           ;doprnt.c: 542: continue;
  5503  0004E0  D0C0               	goto	i2l2278
  5504  0004E2                     i2l2222:
  5505                           
  5506                           ;doprnt.c: 543: }
  5507                           ;doprnt.c: 548: flag = 0;
  5508  0004E2  0E00               	movlw	0
  5509  0004E4  6E12               	movwf	i2printf@flag,c
  5510                           
  5511                           ;doprnt.c: 635: switch(c = *f++) {
  5512  0004E6  D03F               	goto	i2l2240
  5513  0004E8                     i2l2224:
  5514                           
  5515                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  5516  0004E8  C014  FFD9         	movff	i2printf@ap,fsr2l
  5517  0004EC  C015  FFDA         	movff	i2printf@ap+1,fsr2h
  5518  0004F0  CFDE F016          	movff	postinc2,i2printf@cp
  5519  0004F4  CFDD F017          	movff	postdec2,i2printf@cp+1
  5520  0004F8  0E02               	movlw	2
  5521  0004FA  2614               	addwf	i2printf@ap,f,c
  5522  0004FC  0E00               	movlw	0
  5523  0004FE  2215               	addwfc	i2printf@ap+1,f,c
  5524                           
  5525                           ;doprnt.c: 740: if(!cp)
  5526  000500  5016               	movf	i2printf@cp,w,c
  5527  000502  1017               	iorwf	i2printf@cp+1,w,c
  5528  000504  A4D8               	btfss	status,2,c
  5529  000506  D01A               	goto	i2l2236
  5530                           
  5531                           ;doprnt.c: 741: cp = "(null)";
  5532  000508  0EDE               	movlw	low STR_36
  5533  00050A  6E16               	movwf	i2printf@cp,c
  5534  00050C  0EFF               	movlw	high STR_36
  5535  00050E  6E17               	movwf	i2printf@cp+1,c
  5536                           
  5537                           ;doprnt.c: 777: while(*cp)
  5538  000510  D015               	goto	i2l2236
  5539  000512                     i2l2232:
  5540                           
  5541                           ;doprnt.c: 778: (putch(*cp++) );
  5542  000512  C016  FFF6         	movff	i2printf@cp,tblptrl
  5543  000516  C017  FFF7         	movff	i2printf@cp+1,tblptrh
  5544  00051A  0E00               	movlw	low (__mediumconst shr (0+16))
  5545  00051C  6EF8               	movwf	tblptru,c
  5546  00051E  0E0F               	movlw	(high __ramtop+-1)
  5547  000520  64F7               	cpfsgt	tblptrh,c
  5548  000522  D003               	bra	i2u143_47
  5549  000524  0008               	tblrd		*
  5550  000526  50F5               	movf	tablat,w,c
  5551  000528  D005               	bra	i2u143_40
  5552  00052A                     i2u143_47:
  5553  00052A  CFF6 FFE9          	movff	tblptrl,fsr0l
  5554  00052E  CFF7 FFEA          	movff	tblptrh,fsr0h
  5555  000532  50EF               	movf	indf0,w,c
  5556  000534                     i2u143_40:
  5557  000534  ECEA  F009         	call	i2_putch
  5558  000538  4A16               	infsnz	i2printf@cp,f,c
  5559  00053A  2A17               	incf	i2printf@cp+1,f,c
  5560  00053C                     i2l2236:
  5561  00053C  C016  FFF6         	movff	i2printf@cp,tblptrl
  5562  000540  C017  FFF7         	movff	i2printf@cp+1,tblptrh
  5563  000544  0E00               	movlw	low (__mediumconst shr (0+16))
  5564  000546  6EF8               	movwf	tblptru,c
  5565  000548  0E0F               	movlw	(high __ramtop+-1)
  5566  00054A  64F7               	cpfsgt	tblptrh,c
  5567  00054C  D003               	bra	i2u144_47
  5568  00054E  0008               	tblrd		*
  5569  000550  50F5               	movf	tablat,w,c
  5570  000552  D005               	bra	i2u144_40
  5571  000554                     i2u144_47:
  5572  000554  CFF6 FFE9          	movff	tblptrl,fsr0l
  5573  000558  CFF7 FFEA          	movff	tblptrh,fsr0h
  5574  00055C  50EF               	movf	indf0,w,c
  5575  00055E                     i2u144_40:
  5576  00055E  0900               	iorlw	0
  5577  000560  B4D8               	btfsc	status,2,c
  5578  000562  D07F               	goto	i2l2278
  5579  000564  D7D6               	goto	i2l2232
  5580  000566                     i2l2240:
  5581  000566  C00D  FFF6         	movff	i2printf@f,tblptrl
  5582  00056A  C00E  FFF7         	movff	i2printf@f+1,tblptrh
  5583  00056E  4A0D               	infsnz	i2printf@f,f,c
  5584  000570  2A0E               	incf	i2printf@f+1,f,c
  5585  000572                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5586  000572  6AF8               	clrf	tblptru,c
  5587  000574                     	endif
  5588  000574                     	if	0	;tblptru may be non-zero
  5589  000574                     	endif
  5590  000574  0008               	tblrd		*
  5591  000576  CFF5 F01A          	movff	tablat,i2printf@c
  5592  00057A  501A               	movf	i2printf@c,w,c
  5593                           
  5594                           ; Switch size 1, requested type "space"
  5595                           ; Number of cases is 4, Range of values is 0 to 115
  5596                           ; switch strategies available:
  5597                           ; Name         Instructions Cycles
  5598                           ; simple_byte           13     7 (average)
  5599                           ;	Chosen strategy is simple_byte
  5600  00057C  0A00               	xorlw	0	; case 0
  5601  00057E  B4D8               	btfsc	status,2,c
  5602  000580  0012               	return	
  5603  000582  0A64               	xorlw	100	; case 100
  5604  000584  B4D8               	btfsc	status,2,c
  5605  000586  D007               	goto	i2l2242
  5606  000588  0A0D               	xorlw	13	; case 105
  5607  00058A  B4D8               	btfsc	status,2,c
  5608  00058C  D004               	goto	i2l2242
  5609  00058E  0A1A               	xorlw	26	; case 115
  5610  000590  B4D8               	btfsc	status,2,c
  5611  000592  D7AA               	goto	i2l2224
  5612  000594  D066               	goto	i2l2278
  5613  000596                     i2l2242:
  5614                           
  5615                           ;doprnt.c: 1253: {
  5616                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  5617  000596  C014  FFD9         	movff	i2printf@ap,fsr2l
  5618  00059A  C015  FFDA         	movff	i2printf@ap+1,fsr2h
  5619  00059E  CFDE F018          	movff	postinc2,i2printf@val
  5620  0005A2  CFDD F019          	movff	postdec2,i2printf@val+1
  5621  0005A6  0E02               	movlw	2
  5622  0005A8  2614               	addwf	i2printf@ap,f,c
  5623  0005AA  0E00               	movlw	0
  5624  0005AC  2215               	addwfc	i2printf@ap+1,f,c
  5625                           
  5626                           ;doprnt.c: 1261: if((int)val < 0) {
  5627  0005AE  AE19               	btfss	i2printf@val+1,7,c
  5628  0005B0  D006               	goto	i2l2252
  5629                           
  5630                           ;doprnt.c: 1262: flag |= 0x03;
  5631  0005B2  0E03               	movlw	3
  5632  0005B4  1212               	iorwf	i2printf@flag,f,c
  5633                           
  5634                           ;doprnt.c: 1263: val = -val;
  5635  0005B6  6C18               	negf	i2printf@val,c
  5636  0005B8  1E19               	comf	i2printf@val+1,f,c
  5637  0005BA  B0D8               	btfsc	status,0,c
  5638  0005BC  2A19               	incf	i2printf@val+1,f,c
  5639  0005BE                     i2l2252:
  5640                           
  5641                           ;doprnt.c: 1264: }
  5642                           ;doprnt.c: 1266: }
  5643                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5644  0005BE  0E01               	movlw	1
  5645  0005C0  6E1A               	movwf	i2printf@c,c
  5646  0005C2                     i2l2254:
  5647  0005C2  0E05               	movlw	5
  5648  0005C4  181A               	xorwf	i2printf@c,w,c
  5649  0005C6  B4D8               	btfsc	status,2,c
  5650  0005C8  D015               	goto	i2l2266
  5651                           
  5652                           ;doprnt.c: 1306: if(val < dpowers[c])
  5653  0005CA  501A               	movf	i2printf@c,w,c
  5654  0005CC  0D02               	mullw	2
  5655  0005CE  0ED9               	movlw	low _dpowers
  5656  0005D0  24F3               	addwf	prodl,w,c
  5657  0005D2  6EF6               	movwf	tblptrl,c
  5658  0005D4  0EFE               	movlw	high _dpowers
  5659  0005D6  20F4               	addwfc	prodh,w,c
  5660  0005D8  6EF7               	movwf	tblptrh,c
  5661  0005DA                     	if	1	;There are 3 active tblptr bytes
  5662  0005DA  6AF8               	clrf	tblptru,c
  5663  0005DC  0E00               	movlw	low (__mediumconst shr (0+16))
  5664  0005DE  22F8               	addwfc	tblptru,f,c
  5665  0005E0                     	endif
  5666  0005E0  0009               	tblrd		*+
  5667  0005E2  50F5               	movf	tablat,w,c
  5668  0005E4  5C18               	subwf	i2printf@val,w,c
  5669  0005E6  0009               	tblrd		*+
  5670  0005E8  50F5               	movf	tablat,w,c
  5671  0005EA  5819               	subwfb	i2printf@val+1,w,c
  5672  0005EC  A0D8               	btfss	status,0,c
  5673  0005EE  D002               	goto	i2l2266
  5674                           
  5675                           ;doprnt.c: 1307: break;
  5676  0005F0  2A1A               	incf	i2printf@c,f,c
  5677  0005F2  D7E7               	goto	i2l2254
  5678  0005F4                     i2l2266:
  5679                           
  5680                           ;doprnt.c: 1422: {
  5681                           ;doprnt.c: 1438: if(flag & 0x03)
  5682  0005F4  C012  F011         	movff	i2printf@flag,??i2_printf
  5683  0005F8  0E03               	movlw	3
  5684  0005FA  1611               	andwf	??i2_printf,f,c
  5685  0005FC  B4D8               	btfsc	status,2,c
  5686  0005FE  D003               	goto	i2l2270
  5687                           
  5688                           ;doprnt.c: 1439: (putch('-') );
  5689  000600  0E2D               	movlw	45
  5690  000602  ECEA  F009         	call	i2_putch
  5691  000606                     i2l2270:
  5692                           
  5693                           ;doprnt.c: 1469: }
  5694                           ;doprnt.c: 1472: prec = c;
  5695  000606  C01A  F013         	movff	i2printf@c,i2printf@prec
  5696                           
  5697                           ;doprnt.c: 1474: while(prec--) {
  5698  00060A  D027               	goto	i2l2276
  5699  00060C                     i2l2272:
  5700                           
  5701                           ;doprnt.c: 1478: {
  5702                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5703  00060C  5013               	movf	i2printf@prec,w,c
  5704  00060E  0D02               	mullw	2
  5705  000610  0ED9               	movlw	low _dpowers
  5706  000612  24F3               	addwf	prodl,w,c
  5707  000614  6EF6               	movwf	tblptrl,c
  5708  000616  0EFE               	movlw	high _dpowers
  5709  000618  20F4               	addwfc	prodh,w,c
  5710  00061A  6EF7               	movwf	tblptrh,c
  5711  00061C                     	if	1	;There are 3 active tblptr bytes
  5712  00061C  6AF8               	clrf	tblptru,c
  5713  00061E  0E00               	movlw	low (__mediumconst shr (0+16))
  5714  000620  22F8               	addwfc	tblptru,f,c
  5715  000622                     	endif
  5716  000622  0009               	tblrd		*+
  5717  000624  CFF5 F003          	movff	tablat,i2___lwdiv@divisor
  5718  000628  000A               	tblrd		*-
  5719  00062A  CFF5 F004          	movff	tablat,i2___lwdiv@divisor+1
  5720  00062E  C018  F001         	movff	i2printf@val,i2___lwdiv@dividend
  5721  000632  C019  F002         	movff	i2printf@val+1,i2___lwdiv@dividend+1
  5722  000636  ECBB  F008         	call	i2___lwdiv	;wreg free
  5723  00063A  C001  F008         	movff	?i2___lwdiv,i2___lwmod@dividend
  5724  00063E  C002  F009         	movff	?i2___lwdiv+1,i2___lwmod@dividend+1
  5725  000642  0E00               	movlw	0
  5726  000644  6E0B               	movwf	i2___lwmod@divisor+1,c
  5727  000646  0E0A               	movlw	10
  5728  000648  6E0A               	movwf	i2___lwmod@divisor,c
  5729  00064A  EC71  F009         	call	i2___lwmod	;wreg free
  5730  00064E  5008               	movf	?i2___lwmod,w,c
  5731  000650  0F30               	addlw	48
  5732  000652  6E1A               	movwf	i2printf@c,c
  5733                           
  5734                           ;doprnt.c: 1523: }
  5735                           ;doprnt.c: 1524: (putch(c) );
  5736  000654  501A               	movf	i2printf@c,w,c
  5737  000656  ECEA  F009         	call	i2_putch
  5738  00065A                     i2l2276:
  5739  00065A  0613               	decf	i2printf@prec,f,c
  5740  00065C  2813               	incf	i2printf@prec,w,c
  5741  00065E  A4D8               	btfss	status,2,c
  5742  000660  D7D5               	goto	i2l2272
  5743  000662                     i2l2278:
  5744  000662  C00D  FFF6         	movff	i2printf@f,tblptrl
  5745  000666  C00E  FFF7         	movff	i2printf@f+1,tblptrh
  5746  00066A  4A0D               	infsnz	i2printf@f,f,c
  5747  00066C  2A0E               	incf	i2printf@f+1,f,c
  5748  00066E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5749  00066E  6AF8               	clrf	tblptru,c
  5750  000670                     	endif
  5751  000670                     	if	0	;tblptru may be non-zero
  5752  000670                     	endif
  5753  000670  0008               	tblrd		*
  5754  000672  CFF5 F01A          	movff	tablat,i2printf@c
  5755  000676  501A               	movf	i2printf@c,w,c
  5756  000678  B4D8               	btfsc	status,2,c
  5757  00067A  0012               	return	
  5758  00067C  D72A               	goto	i2l2218
  5759  00067E                     __end_ofi2_printf:
  5760                           	opt stack 0
  5761                           pclatu	equ	0xFFB
  5762                           pclath	equ	0xFFA
  5763                           tblptru	equ	0xFF8
  5764                           tblptrh	equ	0xFF7
  5765                           tblptrl	equ	0xFF6
  5766                           tablat	equ	0xFF5
  5767                           prodh	equ	0xFF4
  5768                           prodl	equ	0xFF3
  5769                           intcon	equ	0xFF2
  5770                           intcon3	equ	0xFF0
  5771                           indf0	equ	0xFEF
  5772                           postinc0	equ	0xFEE
  5773                           fsr0h	equ	0xFEA
  5774                           fsr0l	equ	0xFE9
  5775                           wreg	equ	0xFE8
  5776                           postdec1	equ	0xFE5
  5777                           plusw1	equ	0xFE3
  5778                           fsr1h	equ	0xFE2
  5779                           fsr1l	equ	0xFE1
  5780                           indf2	equ	0xFDF
  5781                           postinc2	equ	0xFDE
  5782                           postdec2	equ	0xFDD
  5783                           plusw2	equ	0xFDB
  5784                           fsr2h	equ	0xFDA
  5785                           fsr2l	equ	0xFD9
  5786                           status	equ	0xFD8
  5787                           
  5788 ;; *************** function i2_putch *****************
  5789 ;; Defined at:
  5790 ;;		line 31 in file "lcd.c"
  5791 ;; Parameters:    Size  Location     Type
  5792 ;;  data            1    wreg     unsigned char 
  5793 ;; Auto vars:     Size  Location     Type
  5794 ;;  data            1    2[COMRAM] unsigned char 
  5795 ;; Return value:  Size  Location     Type
  5796 ;;                  1    wreg      void 
  5797 ;; Registers used:
  5798 ;;		wreg, status,2, status,0, cstack
  5799 ;; Tracked objects:
  5800 ;;		On entry : 0/0
  5801 ;;		On exit  : 0/0
  5802 ;;		Unchanged: 0/0
  5803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5807 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5808 ;;Total ram usage:        1 bytes
  5809 ;; Hardware stack levels used:    1
  5810 ;; Hardware stack levels required when called:    1
  5811 ;; This function calls:
  5812 ;;		i2_lcdNibble
  5813 ;; This function is called by:
  5814 ;;		i2_printf
  5815 ;; This function uses a non-reentrant model
  5816 ;;
  5817                           
  5818                           	psect	text26
  5819  0013D4                     __ptext26:
  5820                           	opt stack 0
  5821  0013D4                     i2_putch:
  5822                           	opt stack 19
  5823                           
  5824                           ;incstack = 0
  5825                           ;i2putch@data stored from wreg
  5826  0013D4  6E03               	movwf	i2putch@data,c
  5827                           
  5828                           ;lcd.c: 32: LATDbits.LATD2 = 1;
  5829  0013D6  848C               	bsf	3980,2,c	;volatile
  5830                           
  5831                           ;lcd.c: 33: lcdNibble(data);
  5832  0013D8  5003               	movf	i2putch@data,w,c
  5833  0013DA  EC90  F008         	call	i2_lcdNibble
  5834  0013DE  0012               	return		;funcret
  5835  0013E0                     __end_ofi2_putch:
  5836                           	opt stack 0
  5837                           pclatu	equ	0xFFB
  5838                           pclath	equ	0xFFA
  5839                           tblptru	equ	0xFF8
  5840                           tblptrh	equ	0xFF7
  5841                           tblptrl	equ	0xFF6
  5842                           tablat	equ	0xFF5
  5843                           prodh	equ	0xFF4
  5844                           prodl	equ	0xFF3
  5845                           intcon	equ	0xFF2
  5846                           intcon3	equ	0xFF0
  5847                           indf0	equ	0xFEF
  5848                           postinc0	equ	0xFEE
  5849                           fsr0h	equ	0xFEA
  5850                           fsr0l	equ	0xFE9
  5851                           wreg	equ	0xFE8
  5852                           postdec1	equ	0xFE5
  5853                           plusw1	equ	0xFE3
  5854                           fsr1h	equ	0xFE2
  5855                           fsr1l	equ	0xFE1
  5856                           indf2	equ	0xFDF
  5857                           postinc2	equ	0xFDE
  5858                           postdec2	equ	0xFDD
  5859                           plusw2	equ	0xFDB
  5860                           fsr2h	equ	0xFDA
  5861                           fsr2l	equ	0xFD9
  5862                           status	equ	0xFD8
  5863                           
  5864 ;; *************** function i2_lcdNibble *****************
  5865 ;; Defined at:
  5866 ;;		line 36 in file "lcd.c"
  5867 ;; Parameters:    Size  Location     Type
  5868 ;;  data            1    wreg     unsigned char 
  5869 ;; Auto vars:     Size  Location     Type
  5870 ;;  data            1    1[COMRAM] unsigned char 
  5871 ;;  lcdNibble       1    0[COMRAM] unsigned char 
  5872 ;; Return value:  Size  Location     Type
  5873 ;;                  1    wreg      void 
  5874 ;; Registers used:
  5875 ;;		wreg, status,2, status,0
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5882 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5884 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5885 ;;Total ram usage:        2 bytes
  5886 ;; Hardware stack levels used:    1
  5887 ;; This function calls:
  5888 ;;		Nothing
  5889 ;; This function is called by:
  5890 ;;		i2_putch
  5891 ;; This function uses a non-reentrant model
  5892 ;;
  5893                           
  5894                           	psect	text27
  5895  001120                     __ptext27:
  5896                           	opt stack 0
  5897  001120                     i2_lcdNibble:
  5898                           	opt stack 19
  5899                           
  5900                           ;incstack = 0
  5901                           ;i2lcdNibble@data stored from wreg
  5902  001120  6E02               	movwf	i2lcdNibble@data,c
  5903                           
  5904                           ;lcd.c: 38: char temp = data & 0xF0;
  5905  001122  5002               	movf	i2lcdNibble@data,w,c
  5906  001124  0BF0               	andlw	240
  5907  001126  6E01               	movwf	i2lcdNibble@temp,c
  5908                           
  5909                           ;lcd.c: 39: LATD = LATD & 0x0F;
  5910  001128  508C               	movf	3980,w,c	;volatile
  5911  00112A  0B0F               	andlw	15
  5912  00112C  6E8C               	movwf	3980,c	;volatile
  5913                           
  5914                           ;lcd.c: 40: LATD = temp | LATD;
  5915  00112E  5001               	movf	i2lcdNibble@temp,w,c
  5916  001130  108C               	iorwf	3980,w,c	;volatile
  5917  001132  6E8C               	movwf	3980,c	;volatile
  5918                           
  5919                           ;lcd.c: 42: LATDbits.LATD3 = 0;
  5920  001134  968C               	bcf	3980,3,c	;volatile
  5921                           
  5922                           ;lcd.c: 43: _delay((unsigned long)((25)*(8000000/4000000.0)));
  5923  001136  0E10               	movlw	16
  5924  001138                     i2u191_47:
  5925  001138  2EE8               	decfsz	wreg,f,c
  5926  00113A  D7FE               	bra	i2u191_47
  5927  00113C  D000               	nop2	
  5928                           
  5929                           ;lcd.c: 44: LATDbits.LATD3 = 1;
  5930  00113E  868C               	bsf	3980,3,c	;volatile
  5931                           
  5932                           ;lcd.c: 45: _delay((unsigned long)((25)*(8000000/4000000.0)));
  5933  001140  0E10               	movlw	16
  5934  001142                     i2u192_47:
  5935  001142  2EE8               	decfsz	wreg,f,c
  5936  001144  D7FE               	bra	i2u192_47
  5937  001146  D000               	nop2	
  5938                           
  5939                           ;lcd.c: 47: data = data << 4;
  5940  001148  3802               	swapf	i2lcdNibble@data,w,c
  5941  00114A  0BF0               	andlw	240
  5942  00114C  6E02               	movwf	i2lcdNibble@data,c
  5943                           
  5944                           ;lcd.c: 49: temp = data & 0xF0;
  5945  00114E  5002               	movf	i2lcdNibble@data,w,c
  5946  001150  0BF0               	andlw	240
  5947  001152  6E01               	movwf	i2lcdNibble@temp,c
  5948                           
  5949                           ;lcd.c: 50: LATD = LATD & 0x0F;
  5950  001154  508C               	movf	3980,w,c	;volatile
  5951  001156  0B0F               	andlw	15
  5952  001158  6E8C               	movwf	3980,c	;volatile
  5953                           
  5954                           ;lcd.c: 51: LATD = temp | LATD;
  5955  00115A  5001               	movf	i2lcdNibble@temp,w,c
  5956  00115C  108C               	iorwf	3980,w,c	;volatile
  5957  00115E  6E8C               	movwf	3980,c	;volatile
  5958                           
  5959                           ;lcd.c: 53: LATDbits.LATD3 = 0;
  5960  001160  968C               	bcf	3980,3,c	;volatile
  5961                           
  5962                           ;lcd.c: 54: _delay((unsigned long)((25)*(8000000/4000000.0)));
  5963  001162  0E10               	movlw	16
  5964  001164                     i2u193_47:
  5965  001164  2EE8               	decfsz	wreg,f,c
  5966  001166  D7FE               	bra	i2u193_47
  5967  001168  D000               	nop2	
  5968                           
  5969                           ;lcd.c: 55: LATDbits.LATD3 = 1;
  5970  00116A  868C               	bsf	3980,3,c	;volatile
  5971                           
  5972                           ;lcd.c: 56: _delay((unsigned long)((25)*(8000000/4000000.0)));
  5973  00116C  0E10               	movlw	16
  5974  00116E                     i2u194_47:
  5975  00116E  2EE8               	decfsz	wreg,f,c
  5976  001170  D7FE               	bra	i2u194_47
  5977  001172  D000               	nop2	
  5978  001174  0012               	return		;funcret
  5979  001176                     __end_ofi2_lcdNibble:
  5980                           	opt stack 0
  5981                           pclatu	equ	0xFFB
  5982                           pclath	equ	0xFFA
  5983                           tblptru	equ	0xFF8
  5984                           tblptrh	equ	0xFF7
  5985                           tblptrl	equ	0xFF6
  5986                           tablat	equ	0xFF5
  5987                           prodh	equ	0xFF4
  5988                           prodl	equ	0xFF3
  5989                           intcon	equ	0xFF2
  5990                           intcon3	equ	0xFF0
  5991                           indf0	equ	0xFEF
  5992                           postinc0	equ	0xFEE
  5993                           fsr0h	equ	0xFEA
  5994                           fsr0l	equ	0xFE9
  5995                           wreg	equ	0xFE8
  5996                           postdec1	equ	0xFE5
  5997                           plusw1	equ	0xFE3
  5998                           fsr1h	equ	0xFE2
  5999                           fsr1l	equ	0xFE1
  6000                           indf2	equ	0xFDF
  6001                           postinc2	equ	0xFDE
  6002                           postdec2	equ	0xFDD
  6003                           plusw2	equ	0xFDB
  6004                           fsr2h	equ	0xFDA
  6005                           fsr2l	equ	0xFD9
  6006                           status	equ	0xFD8
  6007                           
  6008 ;; *************** function i2___lwmod *****************
  6009 ;; Defined at:
  6010 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  6011 ;; Parameters:    Size  Location     Type
  6012 ;;  dividend        2    7[COMRAM] unsigned int 
  6013 ;;  divisor         2    9[COMRAM] unsigned int 
  6014 ;; Auto vars:     Size  Location     Type
  6015 ;;  __lwmod         1   11[COMRAM] unsigned char 
  6016 ;; Return value:  Size  Location     Type
  6017 ;;                  2    7[COMRAM] unsigned int 
  6018 ;; Registers used:
  6019 ;;		wreg, status,2, status,0
  6020 ;; Tracked objects:
  6021 ;;		On entry : 0/0
  6022 ;;		On exit  : 0/0
  6023 ;;		Unchanged: 0/0
  6024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6025 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6026 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6028 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6029 ;;Total ram usage:        5 bytes
  6030 ;; Hardware stack levels used:    1
  6031 ;; This function calls:
  6032 ;;		Nothing
  6033 ;; This function is called by:
  6034 ;;		i2_printf
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           	psect	text28
  6039  0012E2                     __ptext28:
  6040                           	opt stack 0
  6041  0012E2                     i2___lwmod:
  6042                           	opt stack 20
  6043                           
  6044                           ;incstack = 0
  6045  0012E2  500A               	movf	i2___lwmod@divisor,w,c
  6046  0012E4  100B               	iorwf	i2___lwmod@divisor+1,w,c
  6047  0012E6  B4D8               	btfsc	status,2,c
  6048  0012E8  D018               	goto	i2l705
  6049  0012EA  0E01               	movlw	1
  6050  0012EC  6E0C               	movwf	i2___lwmod@counter,c
  6051  0012EE  D004               	goto	i2l2158
  6052  0012F0                     i2l2156:
  6053  0012F0  90D8               	bcf	status,0,c
  6054  0012F2  360A               	rlcf	i2___lwmod@divisor,f,c
  6055  0012F4  360B               	rlcf	i2___lwmod@divisor+1,f,c
  6056  0012F6  2A0C               	incf	i2___lwmod@counter,f,c
  6057  0012F8                     i2l2158:
  6058  0012F8  AE0B               	btfss	i2___lwmod@divisor+1,7,c
  6059  0012FA  D7FA               	goto	i2l2156
  6060  0012FC                     i2l2160:
  6061  0012FC  500A               	movf	i2___lwmod@divisor,w,c
  6062  0012FE  5C08               	subwf	i2___lwmod@dividend,w,c
  6063  001300  500B               	movf	i2___lwmod@divisor+1,w,c
  6064  001302  5809               	subwfb	i2___lwmod@dividend+1,w,c
  6065  001304  A0D8               	btfss	status,0,c
  6066  001306  D004               	goto	i2l2164
  6067  001308  500A               	movf	i2___lwmod@divisor,w,c
  6068  00130A  5E08               	subwf	i2___lwmod@dividend,f,c
  6069  00130C  500B               	movf	i2___lwmod@divisor+1,w,c
  6070  00130E  5A09               	subwfb	i2___lwmod@dividend+1,f,c
  6071  001310                     i2l2164:
  6072  001310  90D8               	bcf	status,0,c
  6073  001312  320B               	rrcf	i2___lwmod@divisor+1,f,c
  6074  001314  320A               	rrcf	i2___lwmod@divisor,f,c
  6075  001316  2E0C               	decfsz	i2___lwmod@counter,f,c
  6076  001318  D7F1               	goto	i2l2160
  6077  00131A                     i2l705:
  6078  00131A  C008  F008         	movff	i2___lwmod@dividend,?i2___lwmod
  6079  00131E  C009  F009         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  6080  001322  0012               	return		;funcret
  6081  001324                     __end_ofi2___lwmod:
  6082                           	opt stack 0
  6083                           pclatu	equ	0xFFB
  6084                           pclath	equ	0xFFA
  6085                           tblptru	equ	0xFF8
  6086                           tblptrh	equ	0xFF7
  6087                           tblptrl	equ	0xFF6
  6088                           tablat	equ	0xFF5
  6089                           prodh	equ	0xFF4
  6090                           prodl	equ	0xFF3
  6091                           intcon	equ	0xFF2
  6092                           intcon3	equ	0xFF0
  6093                           indf0	equ	0xFEF
  6094                           postinc0	equ	0xFEE
  6095                           fsr0h	equ	0xFEA
  6096                           fsr0l	equ	0xFE9
  6097                           wreg	equ	0xFE8
  6098                           postdec1	equ	0xFE5
  6099                           plusw1	equ	0xFE3
  6100                           fsr1h	equ	0xFE2
  6101                           fsr1l	equ	0xFE1
  6102                           indf2	equ	0xFDF
  6103                           postinc2	equ	0xFDE
  6104                           postdec2	equ	0xFDD
  6105                           plusw2	equ	0xFDB
  6106                           fsr2h	equ	0xFDA
  6107                           fsr2l	equ	0xFD9
  6108                           status	equ	0xFD8
  6109                           
  6110 ;; *************** function i2___lwdiv *****************
  6111 ;; Defined at:
  6112 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  6113 ;; Parameters:    Size  Location     Type
  6114 ;;  dividend        2    0[COMRAM] unsigned int 
  6115 ;;  divisor         2    2[COMRAM] unsigned int 
  6116 ;; Auto vars:     Size  Location     Type
  6117 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  6118 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  6119 ;; Return value:  Size  Location     Type
  6120 ;;                  2    0[COMRAM] unsigned int 
  6121 ;; Registers used:
  6122 ;;		wreg, status,2, status,0
  6123 ;; Tracked objects:
  6124 ;;		On entry : 0/0
  6125 ;;		On exit  : 0/0
  6126 ;;		Unchanged: 0/0
  6127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6128 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6129 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6131 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6132 ;;Total ram usage:        7 bytes
  6133 ;; Hardware stack levels used:    1
  6134 ;; This function calls:
  6135 ;;		Nothing
  6136 ;; This function is called by:
  6137 ;;		i2_printf
  6138 ;; This function uses a non-reentrant model
  6139 ;;
  6140                           
  6141                           	psect	text29
  6142  001176                     __ptext29:
  6143                           	opt stack 0
  6144  001176                     i2___lwdiv:
  6145                           	opt stack 20
  6146                           
  6147                           ;incstack = 0
  6148  001176  0E00               	movlw	0
  6149  001178  6E06               	movwf	i2___lwdiv@quotient+1,c
  6150  00117A  0E00               	movlw	0
  6151  00117C  6E05               	movwf	i2___lwdiv@quotient,c
  6152  00117E  5003               	movf	i2___lwdiv@divisor,w,c
  6153  001180  1004               	iorwf	i2___lwdiv@divisor+1,w,c
  6154  001182  B4D8               	btfsc	status,2,c
  6155  001184  D01C               	goto	i2l695
  6156  001186  0E01               	movlw	1
  6157  001188  6E07               	movwf	i2___lwdiv@counter,c
  6158  00118A  D004               	goto	i2l2138
  6159  00118C                     i2l2136:
  6160  00118C  90D8               	bcf	status,0,c
  6161  00118E  3603               	rlcf	i2___lwdiv@divisor,f,c
  6162  001190  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  6163  001192  2A07               	incf	i2___lwdiv@counter,f,c
  6164  001194                     i2l2138:
  6165  001194  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  6166  001196  D7FA               	goto	i2l2136
  6167  001198                     i2l2140:
  6168  001198  90D8               	bcf	status,0,c
  6169  00119A  3605               	rlcf	i2___lwdiv@quotient,f,c
  6170  00119C  3606               	rlcf	i2___lwdiv@quotient+1,f,c
  6171  00119E  5003               	movf	i2___lwdiv@divisor,w,c
  6172  0011A0  5C01               	subwf	i2___lwdiv@dividend,w,c
  6173  0011A2  5004               	movf	i2___lwdiv@divisor+1,w,c
  6174  0011A4  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  6175  0011A6  A0D8               	btfss	status,0,c
  6176  0011A8  D005               	goto	i2l2148
  6177  0011AA  5003               	movf	i2___lwdiv@divisor,w,c
  6178  0011AC  5E01               	subwf	i2___lwdiv@dividend,f,c
  6179  0011AE  5004               	movf	i2___lwdiv@divisor+1,w,c
  6180  0011B0  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  6181  0011B2  8005               	bsf	i2___lwdiv@quotient,0,c
  6182  0011B4                     i2l2148:
  6183  0011B4  90D8               	bcf	status,0,c
  6184  0011B6  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  6185  0011B8  3203               	rrcf	i2___lwdiv@divisor,f,c
  6186  0011BA  2E07               	decfsz	i2___lwdiv@counter,f,c
  6187  0011BC  D7ED               	goto	i2l2140
  6188  0011BE                     i2l695:
  6189  0011BE  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  6190  0011C2  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  6191  0011C6  0012               	return		;funcret
  6192  0011C8                     __end_ofi2___lwdiv:
  6193                           	opt stack 0
  6194                           pclatu	equ	0xFFB
  6195                           pclath	equ	0xFFA
  6196                           tblptru	equ	0xFF8
  6197                           tblptrh	equ	0xFF7
  6198                           tblptrl	equ	0xFF6
  6199                           tablat	equ	0xFF5
  6200                           prodh	equ	0xFF4
  6201                           prodl	equ	0xFF3
  6202                           intcon	equ	0xFF2
  6203                           intcon3	equ	0xFF0
  6204                           indf0	equ	0xFEF
  6205                           postinc0	equ	0xFEE
  6206                           fsr0h	equ	0xFEA
  6207                           fsr0l	equ	0xFE9
  6208                           wreg	equ	0xFE8
  6209                           postdec1	equ	0xFE5
  6210                           plusw1	equ	0xFE3
  6211                           fsr1h	equ	0xFE2
  6212                           fsr1l	equ	0xFE1
  6213                           indf2	equ	0xFDF
  6214                           postinc2	equ	0xFDE
  6215                           postdec2	equ	0xFDD
  6216                           plusw2	equ	0xFDB
  6217                           fsr2h	equ	0xFDA
  6218                           fsr2l	equ	0xFD9
  6219                           status	equ	0xFD8
  6220                           pclatu	equ	0xFFB
  6221                           pclath	equ	0xFFA
  6222                           tblptru	equ	0xFF8
  6223                           tblptrh	equ	0xFF7
  6224                           tblptrl	equ	0xFF6
  6225                           tablat	equ	0xFF5
  6226                           prodh	equ	0xFF4
  6227                           prodl	equ	0xFF3
  6228                           intcon	equ	0xFF2
  6229                           intcon3	equ	0xFF0
  6230                           indf0	equ	0xFEF
  6231                           postinc0	equ	0xFEE
  6232                           fsr0h	equ	0xFEA
  6233                           fsr0l	equ	0xFE9
  6234                           wreg	equ	0xFE8
  6235                           postdec1	equ	0xFE5
  6236                           plusw1	equ	0xFE3
  6237                           fsr1h	equ	0xFE2
  6238                           fsr1l	equ	0xFE1
  6239                           indf2	equ	0xFDF
  6240                           postinc2	equ	0xFDE
  6241                           postdec2	equ	0xFDD
  6242                           plusw2	equ	0xFDB
  6243                           fsr2h	equ	0xFDA
  6244                           fsr2l	equ	0xFD9
  6245                           status	equ	0xFD8
  6246                           
  6247                           	psect	text30
  6248  000000                     __ptext30:
  6249                           	opt stack 0
  6250                           pclatu	equ	0xFFB
  6251                           pclath	equ	0xFFA
  6252                           tblptru	equ	0xFF8
  6253                           tblptrh	equ	0xFF7
  6254                           tblptrl	equ	0xFF6
  6255                           tablat	equ	0xFF5
  6256                           prodh	equ	0xFF4
  6257                           prodl	equ	0xFF3
  6258                           intcon	equ	0xFF2
  6259                           intcon3	equ	0xFF0
  6260                           indf0	equ	0xFEF
  6261                           postinc0	equ	0xFEE
  6262                           fsr0h	equ	0xFEA
  6263                           fsr0l	equ	0xFE9
  6264                           wreg	equ	0xFE8
  6265                           postdec1	equ	0xFE5
  6266                           plusw1	equ	0xFE3
  6267                           fsr1h	equ	0xFE2
  6268                           fsr1l	equ	0xFE1
  6269                           indf2	equ	0xFDF
  6270                           postinc2	equ	0xFDE
  6271                           postdec2	equ	0xFDD
  6272                           plusw2	equ	0xFDB
  6273                           fsr2h	equ	0xFDA
  6274                           fsr2l	equ	0xFD9
  6275                           status	equ	0xFD8
  6276                           
  6277                           	psect	rparam
  6278  0000                     pclatu	equ	0xFFB
  6279                           pclath	equ	0xFFA
  6280                           tblptru	equ	0xFF8
  6281                           tblptrh	equ	0xFF7
  6282                           tblptrl	equ	0xFF6
  6283                           tablat	equ	0xFF5
  6284                           prodh	equ	0xFF4
  6285                           prodl	equ	0xFF3
  6286                           intcon	equ	0xFF2
  6287                           intcon3	equ	0xFF0
  6288                           indf0	equ	0xFEF
  6289                           postinc0	equ	0xFEE
  6290                           fsr0h	equ	0xFEA
  6291                           fsr0l	equ	0xFE9
  6292                           wreg	equ	0xFE8
  6293                           postdec1	equ	0xFE5
  6294                           plusw1	equ	0xFE3
  6295                           fsr1h	equ	0xFE2
  6296                           fsr1l	equ	0xFE1
  6297                           indf2	equ	0xFDF
  6298                           postinc2	equ	0xFDE
  6299                           postdec2	equ	0xFDD
  6300                           plusw2	equ	0xFDB
  6301                           fsr2h	equ	0xFDA
  6302                           fsr2l	equ	0xFD9
  6303                           status	equ	0xFD8
  6304                           
  6305                           	psect	temp
  6306  000061                     btemp:
  6307                           	opt stack 0
  6308  000061                     	ds	1
  6309  0000                     int$flags	set	btemp
  6310                           pclatu	equ	0xFFB
  6311                           pclath	equ	0xFFA
  6312                           tblptru	equ	0xFF8
  6313                           tblptrh	equ	0xFF7
  6314                           tblptrl	equ	0xFF6
  6315                           tablat	equ	0xFF5
  6316                           prodh	equ	0xFF4
  6317                           prodl	equ	0xFF3
  6318                           intcon	equ	0xFF2
  6319                           intcon3	equ	0xFF0
  6320                           indf0	equ	0xFEF
  6321                           postinc0	equ	0xFEE
  6322                           fsr0h	equ	0xFEA
  6323                           fsr0l	equ	0xFE9
  6324                           wreg	equ	0xFE8
  6325                           postdec1	equ	0xFE5
  6326                           plusw1	equ	0xFE3
  6327                           fsr1h	equ	0xFE2
  6328                           fsr1l	equ	0xFE1
  6329                           indf2	equ	0xFDF
  6330                           postinc2	equ	0xFDE
  6331                           postdec2	equ	0xFDD
  6332                           plusw2	equ	0xFDB
  6333                           fsr2h	equ	0xFDA
  6334                           fsr2l	equ	0xFD9
  6335                           status	equ	0xFD8


Data Sizes:
    Strings     284
    Constant    10
    Data        41
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     88      96
    BANK0           128    108     116
    BANK1           256      0      41
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_30(CODE[11]), STR_23(CODE[12]), STR_21(CODE[3]), STR_19(CODE[3]), 
		 -> STR_17(CODE[3]), STR_15(CODE[3]), STR_13(CODE[13]), STR_11(CODE[11]), 
		 -> STR_5(CODE[3]), STR_3(CODE[19]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_36(CODE[7]), println@output(BANK0[41]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(COMRAM[2]), ?_printf(BANK0[2]), 

    checkC9V@sorted	PTR int  size(2) Largest target is 8
		 -> simulate@sorted(BANK0[8]), mainloop@sorted(COMRAM[8]), 

    moveSmallNose@prev	PTR int  size(2) Largest target is 2
		 -> main@smallNose(BANK0[2]), 

    moveBigNose@prev	PTR int  size(2) Largest target is 2
		 -> main@bigNose(BANK0[2]), 

    println@data	PTR unsigned char  size(2) Largest target is 17
		 -> STR_35(CODE[12]), STR_34(CODE[10]), STR_33(CODE[5]), STR_32(CODE[13]), 
		 -> STR_31(CODE[11]), STR_29(CODE[3]), STR_28(CODE[3]), STR_27(CODE[6]), 
		 -> STR_26(CODE[13]), STR_25(CODE[11]), STR_24(CODE[4]), STR_22(CODE[10]), 
		 -> STR_20(CODE[11]), STR_18(CODE[11]), STR_16(CODE[10]), STR_14(CODE[11]), 
		 -> STR_12(CODE[14]), STR_10(CODE[14]), STR_9(CODE[14]), STR_8(CODE[15]), 
		 -> STR_7(CODE[2]), STR_6(CODE[17]), STR_4(CODE[9]), STR_2(CODE[11]), 
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _keypressed in COMRAM

    _stopMoving->i2_println
    i2_println->i2_printf
    i2_printf->i2___lwmod
    i2_putch->i2_lcdNibble
    i2___lwmod->i2___lwdiv

Critical Paths under _main in BANK0

    _main->_simulate
    _simulate->_checkC9V
    _checkC9V->_println
    _println->_printf
    _checkV->___ftge
    _printf->___lwmod
    _putch->_lcdNibble
    ___lwmod->___lwdiv
    ___ftmul->___awtoft
    ___ftge->___ftdiv
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    _initialize->_initLCD
    _initLCD->_lcdInst
    _lcdInst->_lcdNibble

Critical Paths under _keypressed in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _keypressed in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _keypressed in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _keypressed in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _keypressed in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _keypressed in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _keypressed in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _keypressed in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _keypressed in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _keypressed in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _keypressed in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _keypressed in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _keypressed in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _keypressed in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _keypressed in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _keypressed in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     4      5   26205
                                             99 BANK0      9     4      5
                      _captureKeypad
                         _initialize
                        _moveBigNose
                      _moveSmallNose
                            _println
                           _simulate
 ---------------------------------------------------------------------------------
 (1) _simulate                                            12    12      0   21646
                                             87 BANK0     12    12      0
                      _captureKeypad
                           _checkC9V
                             _printf
                            _println
 ---------------------------------------------------------------------------------
 (2) _checkC9V                                             8     6      2   15987
                                             79 BANK0      8     6      2
                                 _AD
                             _checkV
                            _lcdInst
                             _printf
                            _println
 ---------------------------------------------------------------------------------
 (2) _println                                             47    45      2    3569
                                             32 BANK0     47    45      2
                             _printf
 ---------------------------------------------------------------------------------
 (3) _checkV                                               6     2      4   10079
                                             51 BANK0      6     2      4
                                 _AD (ARG)
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              26    16     10    1830
                                             12 BANK0     20    10     10
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0     135
                                              2 BANK0      1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     287
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     290
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    2587
                                             12 BANK0     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6     264
                                             42 BANK0      9     3      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             15     9      6    2541
                                             27 BANK0     15     9      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             4     1      3    2250
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2031
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) _AD                                                   5     3      2      22
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _captureKeypad                                        3     1      2      23
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _moveSmallNose                                        7     3      4     390
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _moveBigNose                                          7     3      4     390
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0     135
                            _initLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              1     1      0     135
                                              3 BANK0      1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     135
                                              2 BANK0      1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (5) _lcdNibble                                            2     2      0     113
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _keypressed                                          15    15      0    1248
                                             73 COMRAM    15    15      0
                         _stopMoving
 ---------------------------------------------------------------------------------
 (8) _stopMoving                                           0     0      0    1247
                          i2_println
 ---------------------------------------------------------------------------------
 (9) i2_println                                           47    45      2    1247
                                             26 COMRAM    47    45      2
                           i2_printf
 ---------------------------------------------------------------------------------
 (10) i2_printf                                           20    16      4    1064
                                             12 COMRAM    14    10      4
                          i2___lwdiv
                          i2___lwmod
                            i2_putch
 ---------------------------------------------------------------------------------
 (11) i2_putch                                             1     1      0     135
                                              2 COMRAM     1     1      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (12) i2_lcdNibble                                         2     2      0     113
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) i2___lwmod                                           5     1      4     211
                                              7 COMRAM     5     1      4
                          i2___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _captureKeypad
   _initialize
     _initLCD
       _lcdInst
         _lcdNibble
   _moveBigNose
   _moveSmallNose
   _println
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
         _lcdNibble
   _simulate
     _captureKeypad
     _checkC9V
       _AD
       _checkV
         _AD (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftge (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         _lcdInst (ARG)
           _lcdNibble
         _printf (ARG)
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _putch
             _lcdNibble
       _lcdInst
         _lcdNibble
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _putch
           _lcdNibble
       _println
         _printf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _putch
             _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
         _lcdNibble
     _println
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _putch
           _lcdNibble

 _keypressed (ROOT)
   _stopMoving
     i2_println
       i2_printf
         i2___lwdiv
         i2___lwmod
           i2___lwdiv (ARG)
         i2_putch
           i2_lcdNibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      29       7       16.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     6C      74       5       90.6%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     58      60       1       76.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FD      34        0.0%
DATA                 0      0      FD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Feb 13 17:01:14 2017

                     _AD 11C8                       l86 0BF8       i2___lwdiv@dividend 0001  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_OSC$HS 000000  
                    ?_AD 0080                      l162 1386                      l226 0B1A  
                    l242 01DC                      l165 1394                      l256 027C  
                    l517 0A00                      l705 1116                      l575 08F2  
                    l695 104C             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
                    wreg 000FE8              main@bigNose 00E8                     ??_AD 0082  
           __CFG_LVP$OFF 000000             ___ftdiv@cntr 00A4             ___ftdiv@sign 00A9  
           __CFG_WDT$OFF 000000                     l2014 0850                     l2104 1278  
                   l2008 0816                     l2112 0C3A                     l2034 08B0  
                   l2122 0CBE                     l2116 0C7A                     l2060 06F2  
                   l2054 06B8                     l2208 0A90                     l2074 0740  
                   l2322 00D6                     l2420 0E8A                     l2084 077E  
                   l2172 0CE0                     l2332 0122                     l2308 0078  
                   l2422 0E94                     l2078 075E                     l2342 016E  
                   l2318 00C6                     l2432 0F06                     l2424 0EBA  
                   l2088 079C                     l2176 0D1E                     l2352 01E4  
                   l2434 0F10                     l2426 0EC4                     l2186 11DC  
                   l2362 0230                     l2346 0180                     l2450 0B50  
                   l2436 0F36                     l2188 11EE                     l2348 01C8  
                   l2438 0F40                     l2710 01B0                     l2374 0284  
                   l1912 1108                     l1904 10D2                     l2712 01BC  
                   l1850 0956                     l1906 10DE                     l2714 02B2  
                   l2298 0028                     l2458 0BBC                     l2618 0FC2  
                   l1860 09E4                     l1852 0964                     l1908 10E4  
                   l1940 02F2                     l2716 02C4                     l1862 09F2  
                   l1854 0994                     l1846 0942                     l1950 032E  
                   l1942 02FA                     l1960 03B8                     l1936 02DE  
                   l1874 0A26                     l1858 09B4                     l1970 03E8  
                   l1954 035A                     l1868 0A0A                     l1884 0FFC  
                   l1972 03EE                     l1886 1008                     l1990 0444  
                   l1958 0384                     l1896 103E                     l1888 100E  
                   l1984 042A                     l1994 049C                     l1988 043E  
                   l1996 04A8                     _ADFM 007E07                     _ADON 007E10  
                   STR_1 FFB6                     STR_2 FFB6                     STR_3 FEE3  
                   STR_4 FFD5                     STR_5 FFFA                     STR_6 FEF6  
                   STR_7 FFFD                     STR_8 FF07                     STR_9 FF32  
                   u1201 0694                     u1050 0350                     u1060 037C  
                   u1221 06CE                     u1151 07F2                     u1057 0346  
                   u1171 082C                     u1067 0372                     _LATA 000F89  
                   _LATB 000F8A                     _LATC 000F8B                     _LATD 000F8C  
                   u1361 0CD6                     _LATE 000F8D                     u1530 0076  
                   u1550 01DC                     u1661 0B46                     u1670 0BB2  
                   u1807 0140                     u1817 0202                     u1907 10B6  
                   u1827 024E                     u1837 0A60                     u1847 11E4  
                   u1857 121E                     u1777 0046                     u1867 1252  
                   u1787 00A4                     u1877 1076                     u1797 00F4  
                   u1887 1080                     u1897 10AC                     _main 0F66  
           ___ftpack@arg 0080             println@F3063 0100             ___ftpack@exp 0083  
                   fsr0h 000FEA                     fsr1h 000FE2       i2___lwdiv@quotient 0005  
                   indf0 000FEF                     fsr2h 000FDA                     fsr0l 000FE9  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0061                     prodh 000FF4                     prodl 000FF3  
                   start 000E            __CFG_IESO$OFF 000000             simulate@stop 00D9  
        __end_ofi2_putch 13E0            __CFG_MCLRE$ON 000000             ___ftmul@cntr 0099  
           ___param_bank 000000             ___ftmul@sign 009A              i2_lcdNibble 1120  
         checkC9V@sorted 00CF                    ?_main 00E3                    STR_10 FF16  
                  STR_11 FFAB                    STR_20 FF7F                    STR_12 FF24  
                  STR_13 FF5A                    STR_22 FFCB                    STR_30 FFA0  
                  STR_14 FF8A                    STR_31 FF4F                    STR_23 FF73  
                  STR_24 FFF0                    STR_16 FFC1                    STR_32 FF4D  
                  STR_33 FFEB                    STR_34 FF69                    STR_18 FF95  
                  STR_26 FF40                    STR_27 FFE5                    STR_35 FF67  
                  STR_28 FFF4                    STR_36 FFDE                    STR_29 FFF7  
        __end_of___ftdiv 0928          __end_of___ftmul 07DC          __end_of___lwdiv 1056  
        __end_of___lwmod 1120                    i2l217 13D2                    i2l172 0DB4  
                  i2l705 131A                    i2l695 11BE                    _PORTB 000F81  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          simulate@F3192 00EC            __CFG_WRT3$OFF 000000          __end_of_lcdInst 13C4  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000          __end_of_initLCD 125C  
         __CFG_EBTRB$OFF 000000            ___awtoft@sign 008B          __end_of_dpowers FEE3  
          ___ftpack@sign 0084                    _putch 13A4                    pclath 000FFA  
                  tablat 000FF5          __end_of_println 0D68                    plusw1 000FE3  
                  plusw2 000FDB                    status 000FD8           __CFG_PBADEN$ON 000000  
       __end_ofi2_printf 067E       __size_ofi2___lwdiv 0052       __size_ofi2___lwmod 0042  
      moveSmallNose@next 0082        moveSmallNose@prev 0080          __initialization 12A0  
           __end_of_main 0FDE               i2printf@ap 0014               i2printf@cp 0016  
          i2println@data 001B               i2println@i 0048                   ??_main 00E8  
     __size_ofi2_println 007E            __activetblptr 000003             ?_moveBigNose 0080  
          println@output 00A4                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADRESH 000FC4                   _ADRESL 000FC3          i2lcdNibble@data 0002  
       __end_of___awtoft 12A0                   ?_putch 0001         __end_of___ftpack 0A34  
        i2lcdNibble@temp 0001                   _INT1IE 007F83                   _INT1IF 007F80  
                 _CVRCON 000FB5    __end_of_moveSmallNose 0EEA                   i2l2140 1198  
                 i2l2222 04E2                   i2l2136 118C                   i2l2160 12FC  
                 i2l2232 0512                   i2l2224 04E8                   i2l2240 0566  
                 i2l2400 0E0C                   i2l2138 1194                   i2l2242 0596  
                 i2l2218 04D2                   i2l2148 11B4                   i2l2164 1310  
                 i2l2156 12F0                   i2l2252 05BE                   i2l2236 053C  
                 i2l2404 0E38                   i2l2158 12F8                   i2l2270 0606  
                 i2l2254 05C2                   i2l2272 060C                   i2l2266 05F4  
                 i2l2276 065A                   i2l2278 0662             _checkC9V$500 00D3  
              ??i2_putch 0003         __end_of_checkC9V 02D0                AD@channel 0084  
          checkV@voltage 00B3           __CFG_XINST$OFF 000000    __end_of_captureKeypad 13A4  
                 ___ftge 0BFA                   _checkV 0A34           __CFG_STVREN$ON 000000  
              ??___ftdiv 00A1                ??___ftmul 0092                ??___lwdiv 0084  
              ??___lwmod 008B                   clear_0 12C6                   clear_1 12D2  
          main@smallNose 00EA                ??_lcdInst 0082                   _printf 02D0  
  ___ftmul@f3_as_product 0096                ??_initLCD 0083        __end_ofi2___lwdiv 11C8  
           __mediumconst FED8        __end_ofi2___lwmod 1324                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8         __end_of_simulate 0BFA  
              ??_println 00A2           simulate@sorted 00DB               __accesstop 0080  
__end_of__initialization 12D8               ___ftge@ff1 00AA               ___ftge@ff2 00AD  
      __end_ofi2_println 0E6E            ___rparam_used 000001               ___ftdiv@f1 009B  
             ___ftdiv@f2 009E               ___ftdiv@f3 00A5               ___awtoft@c 0088  
             ___ftmul@f1 008C               ___ftmul@f2 008F       i2___lwmod@dividend 0008  
         __pcstackCOMRAM 0001             __pidataBANK1 135C            __end_of_putch 13B4  
            i2printf@val 0018               __end_of_AD 1216       __size_of_lcdNibble 0068  
            i2putch@data 0003                ?i2_printf 000D                  ??_putch 0082  
             __pbssBANK0 00EC                  ?___ftge 00AA             ?i2_lcdNibble 0001  
                ?_checkV 00B3                ?___awtoft 0088                ?___ftpack 0080  
                ?_printf 008C                ?_checkC9V 00CF     __size_of_moveBigNose 007C  
             ??i2_printf 0011                  i2_putch 13D4        __end_of_lcdNibble 10BE  
                __Hparam 0000                  __Lparam 0000          __size_of___ftge 00C8  
              ?_simulate 0001                  ___ftdiv 07DC                  ___ftmul 067E  
        __size_of_checkV 00EE                  ___lwdiv 0FDE                  ___lwmod 10BE  
                __pcinit 12A0               ??___awtoft 008B               ??___ftpack 0085  
                __ramtop 1000               _initialize 1324                  _lcdInst 13B4  
                __ptext0 0F66                  __ptext1 0B22                  __ptext2 0012  
                __ptext3 0CC2                  __ptext4 0A34                  __ptext5 02D0  
                __ptext6 13A4                  __ptext7 10BE                  __ptext8 0FDE  
                __ptext9 067E          __size_of_printf 01F8                  _initLCD 1216  
             ??_checkC9V 00D1                  _dpowers FED9               _keypressed 0008  
                _println 0CC2           __pintcode_body 0D68     end_of_initialization 12D8  
                int_func 0D68                  printf@c 009F                  printf@f 008C  
                postdec1 000FE5                  postdec2 000FDD               ??_simulate 00D7  
                postinc0 000FEE                  postinc2 000FDE                _PORTBbits 000F81  
      i2___lwdiv@divisor 0003                i2___lwdiv 1176                i2___lwmod 12E2  
      i2___lwdiv@counter 0007              ___ftdiv@exp 00A8               _stopMoving 13C4  
            ___ftmul@exp 0095                i2_println 0DF0              println@data 00A0  
         __end_of___ftge 0CC2           __end_of_checkV 0B22     __size_ofi2_lcdNibble 0056  
          mainloop@F3183 0059              ?_initialize 0001   __size_of_moveSmallNose 007C  
         __end_of_printf 04C8             i2printf@flag 0012             i2printf@prec 0013  
    start_initialization 12A0              ?_keypressed 0001                i2printf@c 001A  
              i2printf@f 000D   __size_of_captureKeypad 001E               ?i2___lwdiv 0001  
             ?i2___lwmod 0008        __size_ofi2_printf 01B6          i2println@output 001F  
        moveBigNose@next 0082          moveBigNose@prev 0080               ?i2_println 001B  
               ??___ftge 00B0                 ??_checkV 00B7              __pdataBANK1 0100  
       __CFG_LPT1OSC$OFF 000000                 ??_printf 0096        __size_of___awtoft 0044  
      __size_of___ftpack 010C              __pbssCOMRAM 0059            __pcstackBANK0 0080  
      __size_of_checkC9V 02BE        i2___lwmod@divisor 000A        i2___lwmod@counter 000C  
          _moveSmallNose 0E6E                 ?i2_putch 0001      __size_of_initialize 0038  
            ?_stopMoving 0001         ___lwdiv@dividend 0080        __CFG_CCP2MX$PORTC 000000  
          _captureKeypad 1386      __size_of_keypressed 0DE8                __pintcode 0008  
          __pmediumconst FED8                _lcdNibble 1056                 ?___ftdiv 009B  
               ?___ftmul 008C                 ?___lwdiv 0080                 ?___lwmod 0087  
      __size_of_simulate 00D8                 ?_lcdInst 0001            ??_moveBigNose 0084  
              checkC9V@i 00D5                 ?_initLCD 0001                checkV@max 00B5  
               ?_println 00A0         ___lwdiv@quotient 0084              ??i2___lwdiv 0005  
            ??i2___lwmod 000C           __size_of_putch 0010              __size_of_AD 004E  
         ?_moveSmallNose 0080                 _LATDbits 000F8C                 i2u143_40 0534  
               i2u143_47 052A                 i2u144_40 055E                 i2u144_47 0554  
               i2u158_41 0E02                 i2u191_47 1138                 i2u192_47 1142  
               i2u193_47 1164                 i2u194_47 116E           ?_captureKeypad 0080  
            ??i2_println 001D         __CFG_WDTPS$32768 000000               ?_lcdNibble 0001  
             _ADCON0bits 000FC2            lcdNibble@data 0081               printf@flag 0097  
          lcdNibble@temp 0080               printf@prec 0098      __size_of_stopMoving 0010  
               i2_printf 04C8    captureKeypad@keypress 0082      __end_of_moveBigNose 0F66  
              copy_data0 12B4         __size_ofi2_putch 000C       keypressed@keypress 0058  
               __Hrparam 0000                 __Lrparam 0000       __CFG_BOREN$SBORDIS 000000  
       __size_of___ftdiv 014C         __size_of___ftmul 015E         __size_of___lwdiv 0078  
       __size_of___lwmod 0062             ??_initialize 0084                 ___awtoft 125C  
               ___ftpack 0928         __size_of_lcdInst 0010                 _checkC9V 0012  
       __size_of_initLCD 0046             ??_keypressed 004A          ___lwdiv@divisor 0082  
        ___lwdiv@counter 0086                 __ptext10 0BFA                 __ptext11 07DC  
               __ptext20 13B4                 __ptext12 125C                 __ptext21 1056  
               __ptext13 0928                 __ptext30 0000                 __ptext14 11C8  
               __ptext23 13C4                 __ptext15 1386                 __ptext24 0DF0  
               __ptext16 0E6E                 __ptext25 04C8                 __ptext17 0EEA  
               __ptext26 13D4                 __ptext18 1324                 __ptext27 1120  
               __ptext19 1216                 __ptext28 12E2                 __ptext29 1176  
        ??_moveSmallNose 0084         __size_of_println 00A6            __size_of_main 0078  
     __end_of_initialize 135C          ??_captureKeypad 0082            ??i2_lcdNibble 0001  
            ??_lcdNibble 0080                 _simulate 0B22       __end_of_keypressed 0DF0  
               int$flags 0061                 main@argc 00E3                 main@argv 00E5  
              printf@val 009D              _moveBigNose 0EEA                putch@data 0082  
             _INTCONbits 000FF2                 intlevel2 0000         ___lwmod@dividend 0087  
           ??_stopMoving 004A                 printf@ap 0099                 printf@cp 009B  
               println@i 00CD              lcdInst@data 0082      __end_ofi2_lcdNibble 1176  
        ___lwmod@divisor 0089          ___lwmod@counter 008B       __end_of_stopMoving 13D4  



Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Apr 12 13:48:36 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    82  0000                     
    83                           ; Version 1.41
    84                           ; Generated 25/01/2017 GMT
    85                           ; 
    86                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F4620 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117  0000                     
   118                           	psect	idataBANK0
   119  0026B2                     __pidataBANK0:
   120                           	opt stack 0
   121                           
   122                           ;initializer for mainloop@F3101
   123  0026B2  0001               	dw	1
   124  0026B4  0001               	dw	1
   125  0026B6  0001               	dw	1
   126                           
   127                           ;initializer for mainloop@F3096
   128  0026B8  02                 	db	2
   129  0026B9  02                 	db	2
   130  0026BA  02                 	db	2
   131  0026BB  06                 	db	6
   132                           
   133                           	psect	mediumconst
   134  00FDC0                     __pmediumconst:
   135                           	opt stack 0
   136  00FDC0  00                 	db	0
   137  00FDC1                     _dpowers:
   138                           	opt stack 0
   139  00FDC1  0001               	dw	1
   140  00FDC3  000A               	dw	10
   141  00FDC5  0064               	dw	100
   142  00FDC7  03E8               	dw	1000
   143  00FDC9  2710               	dw	10000
   144  00FDCB                     __end_of_dpowers:
   145                           	opt stack 0
   146  00FDCB                     _hexpowers:
   147                           	opt stack 0
   148  00FDCB  0001               	dw	1
   149  00FDCD  0010               	dw	16
   150  00FDCF  0100               	dw	256
   151  00FDD1  1000               	dw	4096
   152  00FDD3                     __end_of_hexpowers:
   153                           	opt stack 0
   154  0000                     _PIR2bits	set	4001
   155  0000                     _EECON2	set	4007
   156  0000                     _EEDATA	set	4008
   157  0000                     _EECON1bits	set	4006
   158  0000                     _EEADR	set	4009
   159  0000                     _EEADRH	set	4010
   160  0000                     _SSPBUF	set	4041
   161  0000                     _SSPADD	set	4040
   162  0000                     _SSPCON2	set	4037
   163  0000                     _SSPCON1	set	4038
   164  0000                     _SSPSTAT	set	4039
   165  0000                     _ADRESL	set	4035
   166  0000                     _ADRESH	set	4036
   167  0000                     _ADCON0bits	set	4034
   168  0000                     _LATDbits	set	3980
   169  0000                     _PORTBbits	set	3969
   170  0000                     _PORTB	set	3969
   171  0000                     _INTCONbits	set	4082
   172  0000                     _CVRCON	set	4021
   173  0000                     _ADCON1	set	4033
   174  0000                     _ADCON0	set	4034
   175  0000                     _LATE	set	3981
   176  0000                     _LATD	set	3980
   177  0000                     _LATC	set	3979
   178  0000                     _LATB	set	3978
   179  0000                     _LATA	set	3977
   180  0000                     _TRISE	set	3990
   181  0000                     _TRISD	set	3989
   182  0000                     _TRISC	set	3988
   183  0000                     _TRISB	set	3987
   184  0000                     _TRISA	set	3986
   185  0000                     _ACKEN	set	32300
   186  0000                     _ACKDT	set	32301
   187  0000                     _RCEN	set	32299
   188  0000                     _PEN	set	32298
   189  0000                     _SEN	set	32296
   190  0000                     _TRISC4	set	31908
   191  0000                     _TRISC3	set	31907
   192  0000                     _ADON	set	32272
   193  0000                     _INT1IE	set	32643
   194  0000                     _LATC5	set	31837
   195  0000                     _LATC7	set	31839
   196  0000                     _INT1IF	set	32640
   197  0000                     _INT2IF	set	32641
   198  0000                     _INT2IE	set	32644
   199  0000                     _LATC6	set	31838
   200  0000                     _INTEDG2	set	32652
   201  0000                     _ADFM	set	32263
   202  0000                     _LATB2	set	31826
   203  0000                     _LATC2	set	31834
   204  0000                     _LATC1	set	31833
   205  0000                     _LATC0	set	31832
   206  00FDD3                     STR_2:
   207                           
   208                           ; BSR set to: 0
   209  00FDD3  53                 	db	83	;'S'
   210  00FDD4  6F                 	db	111	;'o'
   211  00FDD5  72                 	db	114	;'r'
   212  00FDD6  74                 	db	116	;'t'
   213  00FDD7  69                 	db	105	;'i'
   214  00FDD8  6E                 	db	110	;'n'
   215  00FDD9  67                 	db	103	;'g'
   216  00FDDA  20                 	db	32
   217  00FDDB  43                 	db	67	;'C'
   218  00FDDC  6F                 	db	111	;'o'
   219  00FDDD  6D                 	db	109	;'m'
   220  00FDDE  70                 	db	112	;'p'
   221  00FDDF  6C                 	db	108	;'l'
   222  00FDE0  65                 	db	101	;'e'
   223  00FDE1  74                 	db	116	;'t'
   224  00FDE2  65                 	db	101	;'e'
   225  00FDE3  20                 	db	32
   226  00FDE4  20                 	db	32
   227  00FDE5  20                 	db	32
   228  00FDE6  20                 	db	32
   229  00FDE7  20                 	db	32
   230  00FDE8  20                 	db	32
   231  00FDE9  20                 	db	32
   232  00FDEA  20                 	db	32
   233  00FDEB  20                 	db	32
   234  00FDEC  20                 	db	32
   235  00FDED  00                 	db	0
   236  00FDEE                     STR_18:
   237                           
   238                           ; BSR set to: 0
   239  00FDEE  20                 	db	32
   240  00FDEF  20                 	db	32
   241  00FDF0  20                 	db	32
   242  00FDF1  20                 	db	32
   243  00FDF2  25                 	db	37
   244  00FDF3  30                 	db	48	;'0'
   245  00FDF4  32                 	db	50	;'2'
   246  00FDF5  78                 	db	120	;'x'
   247  00FDF6  2F                 	db	47
   248  00FDF7  25                 	db	37
   249  00FDF8  30                 	db	48	;'0'
   250  00FDF9  32                 	db	50	;'2'
   251  00FDFA  78                 	db	120	;'x'
   252  00FDFB  2F                 	db	47
   253  00FDFC  25                 	db	37
   254  00FDFD  30                 	db	48	;'0'
   255  00FDFE  32                 	db	50	;'2'
   256  00FDFF  78                 	db	120	;'x'
   257  00FE00  20                 	db	32
   258  00FE01  20                 	db	32
   259  00FE02  20                 	db	32
   260  00FE03  20                 	db	32
   261  00FE04  20                 	db	32
   262  00FE05  20                 	db	32
   263  00FE06  00                 	db	0
   264  00FE07                     STR_19:
   265                           
   266                           ; BSR set to: 0
   267  00FE07  20                 	db	32
   268  00FE08  20                 	db	32
   269  00FE09  20                 	db	32
   270  00FE0A  20                 	db	32
   271  00FE0B  25                 	db	37
   272  00FE0C  30                 	db	48	;'0'
   273  00FE0D  32                 	db	50	;'2'
   274  00FE0E  78                 	db	120	;'x'
   275  00FE0F  3A                 	db	58	;':'
   276  00FE10  25                 	db	37
   277  00FE11  30                 	db	48	;'0'
   278  00FE12  32                 	db	50	;'2'
   279  00FE13  78                 	db	120	;'x'
   280  00FE14  3A                 	db	58	;':'
   281  00FE15  25                 	db	37
   282  00FE16  30                 	db	48	;'0'
   283  00FE17  32                 	db	50	;'2'
   284  00FE18  78                 	db	120	;'x'
   285  00FE19  20                 	db	32
   286  00FE1A  20                 	db	32
   287  00FE1B  20                 	db	32
   288  00FE1C  20                 	db	32
   289  00FE1D  20                 	db	32
   290  00FE1E  20                 	db	32
   291  00FE1F  00                 	db	0
   292  00FE20                     STR_24:
   293                           
   294                           ; BSR set to: 0
   295  00FE20  54                 	db	84	;'T'
   296  00FE21  69                 	db	105	;'i'
   297  00FE22  6D                 	db	109	;'m'
   298  00FE23  65                 	db	101	;'e'
   299  00FE24  20                 	db	32
   300  00FE25  45                 	db	69	;'E'
   301  00FE26  6C                 	db	108	;'l'
   302  00FE27  61                 	db	97	;'a'
   303  00FE28  70                 	db	112	;'p'
   304  00FE29  73                 	db	115	;'s'
   305  00FE2A  65                 	db	101	;'e'
   306  00FE2B  64                 	db	100	;'d'
   307  00FE2C  3A                 	db	58	;':'
   308  00FE2D  20                 	db	32
   309  00FE2E  20                 	db	32
   310  00FE2F  20                 	db	32
   311  00FE30  20                 	db	32
   312  00FE31  20                 	db	32
   313  00FE32  20                 	db	32
   314  00FE33  20                 	db	32
   315  00FE34  20                 	db	32
   316  00FE35  20                 	db	32
   317  00FE36  20                 	db	32
   318  00FE37  00                 	db	0
   319  00FE38                     STR_26:
   320                           
   321                           ; BSR set to: 0
   322  00FE38  54                 	db	84	;'T'
   323  00FE39  6F                 	db	111	;'o'
   324  00FE3A  74                 	db	116	;'t'
   325  00FE3B  61                 	db	97	;'a'
   326  00FE3C  6C                 	db	108	;'l'
   327  00FE3D  20                 	db	32
   328  00FE3E  53                 	db	83	;'S'
   329  00FE3F  6F                 	db	111	;'o'
   330  00FE40  72                 	db	114	;'r'
   331  00FE41  74                 	db	116	;'t'
   332  00FE42  65                 	db	101	;'e'
   333  00FE43  64                 	db	100	;'d'
   334  00FE44  3A                 	db	58	;':'
   335  00FE45  20                 	db	32
   336  00FE46  20                 	db	32
   337  00FE47  20                 	db	32
   338  00FE48  20                 	db	32
   339  00FE49  20                 	db	32
   340  00FE4A  20                 	db	32
   341  00FE4B  20                 	db	32
   342  00FE4C  20                 	db	32
   343  00FE4D  20                 	db	32
   344  00FE4E  20                 	db	32
   345  00FE4F  00                 	db	0
   346  00FE50                     STR_23:
   347                           
   348                           ; BSR set to: 0
   349  00FE50  46                 	db	70	;'F'
   350  00FE51  6F                 	db	111	;'o'
   351  00FE52  72                 	db	114	;'r'
   352  00FE53  20                 	db	32
   353  00FE54  6D                 	db	109	;'m'
   354  00FE55  6F                 	db	111	;'o'
   355  00FE56  72                 	db	114	;'r'
   356  00FE57  65                 	db	101	;'e'
   357  00FE58  20                 	db	32
   358  00FE59  69                 	db	105	;'i'
   359  00FE5A  6E                 	db	110	;'n'
   360  00FE5B  66                 	db	102	;'f'
   361  00FE5C  6F                 	db	111	;'o'
   362  00FE5D  20                 	db	32
   363  00FE5E  20                 	db	32
   364  00FE5F  20                 	db	32
   365  00FE60  20                 	db	32
   366  00FE61  20                 	db	32
   367  00FE62  20                 	db	32
   368  00FE63  20                 	db	32
   369  00FE64  20                 	db	32
   370  00FE65  20                 	db	32
   371  00FE66  20                 	db	32
   372  00FE67  00                 	db	0
   373  00FE68                     STR_27:
   374                           
   375                           ; BSR set to: 0
   376  00FE68  25                 	db	37
   377  00FE69  75                 	db	117	;'u'
   378  00FE6A  20                 	db	32
   379  00FE6B  62                 	db	98	;'b'
   380  00FE6C  61                 	db	97	;'a'
   381  00FE6D  74                 	db	116	;'t'
   382  00FE6E  74                 	db	116	;'t'
   383  00FE6F  65                 	db	101	;'e'
   384  00FE70  72                 	db	114	;'r'
   385  00FE71  69                 	db	105	;'i'
   386  00FE72  65                 	db	101	;'e'
   387  00FE73  73                 	db	115	;'s'
   388  00FE74  20                 	db	32
   389  00FE75  20                 	db	32
   390  00FE76  20                 	db	32
   391  00FE77  20                 	db	32
   392  00FE78  20                 	db	32
   393  00FE79  20                 	db	32
   394  00FE7A  20                 	db	32
   395  00FE7B  20                 	db	32
   396  00FE7C  20                 	db	32
   397  00FE7D  20                 	db	32
   398  00FE7E  00                 	db	0
   399  00FE7F                     STR_43:
   400                           
   401                           ; BSR set to: 0
   402  00FE7F  50                 	db	80	;'P'
   403  00FE80  65                 	db	101	;'e'
   404  00FE81  72                 	db	114	;'r'
   405  00FE82  6D                 	db	109	;'m'
   406  00FE83  61                 	db	97	;'a'
   407  00FE84  6E                 	db	110	;'n'
   408  00FE85  65                 	db	101	;'e'
   409  00FE86  6E                 	db	110	;'n'
   410  00FE87  74                 	db	116	;'t'
   411  00FE88  20                 	db	32
   412  00FE89  6C                 	db	108	;'l'
   413  00FE8A  6F                 	db	111	;'o'
   414  00FE8B  67                 	db	103	;'g'
   415  00FE8C  3A                 	db	58	;':'
   416  00FE8D  20                 	db	32
   417  00FE8E  20                 	db	32
   418  00FE8F  20                 	db	32
   419  00FE90  20                 	db	32
   420  00FE91  20                 	db	32
   421  00FE92  20                 	db	32
   422  00FE93  20                 	db	32
   423  00FE94  00                 	db	0
   424  00FE95                     STR_28:
   425                           
   426                           ; BSR set to: 0
   427  00FE95  43                 	db	67	;'C'
   428  00FE96  68                 	db	104	;'h'
   429  00FE97  61                 	db	97	;'a'
   430  00FE98  72                 	db	114	;'r'
   431  00FE99  67                 	db	103	;'g'
   432  00FE9A  65                 	db	101	;'e'
   433  00FE9B  64                 	db	100	;'d'
   434  00FE9C  20                 	db	32
   435  00FE9D  41                 	db	65	;'A'
   436  00FE9E  41                 	db	65	;'A'
   437  00FE9F  3A                 	db	58	;':'
   438  00FEA0  20                 	db	32
   439  00FEA1  20                 	db	32
   440  00FEA2  20                 	db	32
   441  00FEA3  20                 	db	32
   442  00FEA4  20                 	db	32
   443  00FEA5  20                 	db	32
   444  00FEA6  20                 	db	32
   445  00FEA7  20                 	db	32
   446  00FEA8  20                 	db	32
   447  00FEA9  20                 	db	32
   448  00FEAA  00                 	db	0
   449  00FEAB                     STR_32:
   450                           
   451                           ; BSR set to: 0
   452  00FEAB  43                 	db	67	;'C'
   453  00FEAC  68                 	db	104	;'h'
   454  00FEAD  61                 	db	97	;'a'
   455  00FEAE  72                 	db	114	;'r'
   456  00FEAF  67                 	db	103	;'g'
   457  00FEB0  65                 	db	101	;'e'
   458  00FEB1  64                 	db	100	;'d'
   459  00FEB2  20                 	db	32
   460  00FEB3  39                 	db	57	;'9'
   461  00FEB4  56                 	db	86	;'V'
   462  00FEB5  3A                 	db	58	;':'
   463  00FEB6  20                 	db	32
   464  00FEB7  20                 	db	32
   465  00FEB8  20                 	db	32
   466  00FEB9  20                 	db	32
   467  00FEBA  20                 	db	32
   468  00FEBB  20                 	db	32
   469  00FEBC  20                 	db	32
   470  00FEBD  20                 	db	32
   471  00FEBE  20                 	db	32
   472  00FEBF  20                 	db	32
   473  00FEC0  00                 	db	0
   474  00FEC1                     STR_22:
   475                           
   476                           ; BSR set to: 0
   477  00FEC1  50                 	db	80	;'P'
   478  00FEC2  72                 	db	114	;'r'
   479  00FEC3  65                 	db	101	;'e'
   480  00FEC4  73                 	db	115	;'s'
   481  00FEC5  73                 	db	115	;'s'
   482  00FEC6  20                 	db	32
   483  00FEC7  61                 	db	97	;'a'
   484  00FEC8  20                 	db	32
   485  00FEC9  6B                 	db	107	;'k'
   486  00FECA  65                 	db	101	;'e'
   487  00FECB  79                 	db	121	;'y'
   488  00FECC  20                 	db	32
   489  00FECD  20                 	db	32
   490  00FECE  20                 	db	32
   491  00FECF  20                 	db	32
   492  00FED0  20                 	db	32
   493  00FED1  20                 	db	32
   494  00FED2  20                 	db	32
   495  00FED3  20                 	db	32
   496  00FED4  20                 	db	32
   497  00FED5  20                 	db	32
   498  00FED6  00                 	db	0
   499  00FED7                     STR_30:
   500                           
   501                           ; BSR set to: 0
   502  00FED7  43                 	db	67	;'C'
   503  00FED8  68                 	db	104	;'h'
   504  00FED9  61                 	db	97	;'a'
   505  00FEDA  72                 	db	114	;'r'
   506  00FEDB  67                 	db	103	;'g'
   507  00FEDC  65                 	db	101	;'e'
   508  00FEDD  64                 	db	100	;'d'
   509  00FEDE  20                 	db	32
   510  00FEDF  43                 	db	67	;'C'
   511  00FEE0  3A                 	db	58	;':'
   512  00FEE1  20                 	db	32
   513  00FEE2  20                 	db	32
   514  00FEE3  20                 	db	32
   515  00FEE4  20                 	db	32
   516  00FEE5  20                 	db	32
   517  00FEE6  20                 	db	32
   518  00FEE7  20                 	db	32
   519  00FEE8  20                 	db	32
   520  00FEE9  20                 	db	32
   521  00FEEA  20                 	db	32
   522  00FEEB  00                 	db	0
   523  00FEEC                     STR_34:
   524                           
   525                           ; BSR set to: 0
   526  00FEEC  55                 	db	85	;'U'
   527  00FEED  6E                 	db	110	;'n'
   528  00FEEE  63                 	db	99	;'c'
   529  00FEEF  68                 	db	104	;'h'
   530  00FEF0  61                 	db	97	;'a'
   531  00FEF1  72                 	db	114	;'r'
   532  00FEF2  67                 	db	103	;'g'
   533  00FEF3  65                 	db	101	;'e'
   534  00FEF4  64                 	db	100	;'d'
   535  00FEF5  3A                 	db	58	;':'
   536  00FEF6  20                 	db	32
   537  00FEF7  20                 	db	32
   538  00FEF8  20                 	db	32
   539  00FEF9  20                 	db	32
   540  00FEFA  20                 	db	32
   541  00FEFB  20                 	db	32
   542  00FEFC  20                 	db	32
   543  00FEFD  20                 	db	32
   544  00FEFE  20                 	db	32
   545  00FEFF  20                 	db	32
   546  00FF00  00                 	db	0
   547  00FF01                     STR_25:
   548                           
   549                           ; BSR set to: 0
   550  00FF01  25                 	db	37
   551  00FF02  75                 	db	117	;'u'
   552  00FF03  20                 	db	32
   553  00FF04  73                 	db	115	;'s'
   554  00FF05  65                 	db	101	;'e'
   555  00FF06  63                 	db	99	;'c'
   556  00FF07  6F                 	db	111	;'o'
   557  00FF08  6E                 	db	110	;'n'
   558  00FF09  64                 	db	100	;'d'
   559  00FF0A  73                 	db	115	;'s'
   560  00FF0B  20                 	db	32
   561  00FF0C  20                 	db	32
   562  00FF0D  20                 	db	32
   563  00FF0E  20                 	db	32
   564  00FF0F  20                 	db	32
   565  00FF10  20                 	db	32
   566  00FF11  20                 	db	32
   567  00FF12  20                 	db	32
   568  00FF13  20                 	db	32
   569  00FF14  20                 	db	32
   570  00FF15  00                 	db	0
   571  00FF16                     STR_1:
   572                           
   573                           ; BSR set to: 0
   574  00FF16  44                 	db	68	;'D'
   575  00FF17  75                 	db	117	;'u'
   576  00FF18  6D                 	db	109	;'m'
   577  00FF19  6D                 	db	109	;'m'
   578  00FF1A  69                 	db	105	;'i'
   579  00FF1B  6E                 	db	110	;'n'
   580  00FF1C  67                 	db	103	;'g'
   581  00FF1D  2E                 	db	46
   582  00FF1E  2E                 	db	46
   583  00FF1F  2E                 	db	46
   584  00FF20  20                 	db	32
   585  00FF21  20                 	db	32
   586  00FF22  20                 	db	32
   587  00FF23  20                 	db	32
   588  00FF24  20                 	db	32
   589  00FF25  20                 	db	32
   590  00FF26  20                 	db	32
   591  00FF27  20                 	db	32
   592  00FF28  20                 	db	32
   593  00FF29  20                 	db	32
   594  00FF2A  00                 	db	0
   595  00FF2B                     STR_3:
   596                           
   597                           ; BSR set to: 0
   598  00FF2B  53                 	db	83	;'S'
   599  00FF2C  6F                 	db	111	;'o'
   600  00FF2D  72                 	db	114	;'r'
   601  00FF2E  74                 	db	116	;'t'
   602  00FF2F  69                 	db	105	;'i'
   603  00FF30  6E                 	db	110	;'n'
   604  00FF31  67                 	db	103	;'g'
   605  00FF32  2E                 	db	46
   606  00FF33  2E                 	db	46
   607  00FF34  2E                 	db	46
   608  00FF35  20                 	db	32
   609  00FF36  20                 	db	32
   610  00FF37  20                 	db	32
   611  00FF38  20                 	db	32
   612  00FF39  20                 	db	32
   613  00FF3A  20                 	db	32
   614  00FF3B  20                 	db	32
   615  00FF3C  20                 	db	32
   616  00FF3D  20                 	db	32
   617  00FF3E  20                 	db	32
   618  00FF3F  00                 	db	0
   619  00FF40                     STR_36:
   620                           
   621                           ; BSR set to: 0
   622  00FF40  45                 	db	69	;'E'
   623  00FF41  6D                 	db	109	;'m'
   624  00FF42  65                 	db	101	;'e'
   625  00FF43  72                 	db	114	;'r'
   626  00FF44  67                 	db	103	;'g'
   627  00FF45  65                 	db	101	;'e'
   628  00FF46  6E                 	db	110	;'n'
   629  00FF47  63                 	db	99	;'c'
   630  00FF48  79                 	db	121	;'y'
   631  00FF49  20                 	db	32
   632  00FF4A  20                 	db	32
   633  00FF4B  20                 	db	32
   634  00FF4C  20                 	db	32
   635  00FF4D  20                 	db	32
   636  00FF4E  20                 	db	32
   637  00FF4F  20                 	db	32
   638  00FF50  20                 	db	32
   639  00FF51  20                 	db	32
   640  00FF52  20                 	db	32
   641  00FF53  00                 	db	0
   642  00FF54                     STR_21:
   643                           
   644                           ; BSR set to: 0
   645  00FF54  57                 	db	87	;'W'
   646  00FF55  65                 	db	101	;'e'
   647  00FF56  6C                 	db	108	;'l'
   648  00FF57  63                 	db	99	;'c'
   649  00FF58  6F                 	db	111	;'o'
   650  00FF59  6D                 	db	109	;'m'
   651  00FF5A  65                 	db	101	;'e'
   652  00FF5B  21                 	db	33
   653  00FF5C  20                 	db	32
   654  00FF5D  20                 	db	32
   655  00FF5E  20                 	db	32
   656  00FF5F  20                 	db	32
   657  00FF60  20                 	db	32
   658  00FF61  20                 	db	32
   659  00FF62  20                 	db	32
   660  00FF63  20                 	db	32
   661  00FF64  20                 	db	32
   662  00FF65  20                 	db	32
   663  00FF66  00                 	db	0
   664  00FF67                     STR_44:
   665                           
   666                           ; BSR set to: 0
   667  00FF67  57                 	db	87	;'W'
   668  00FF68  68                 	db	104	;'h'
   669  00FF69  69                 	db	105	;'i'
   670  00FF6A  63                 	db	99	;'c'
   671  00FF6B  68                 	db	104	;'h'
   672  00FF6C  20                 	db	32
   673  00FF6D  72                 	db	114	;'r'
   674  00FF6E  75                 	db	117	;'u'
   675  00FF6F  6E                 	db	110	;'n'
   676  00FF70  3F                 	db	63	;'?'
   677  00FF71  20                 	db	32
   678  00FF72  20                 	db	32
   679  00FF73  20                 	db	32
   680  00FF74  20                 	db	32
   681  00FF75  20                 	db	32
   682  00FF76  20                 	db	32
   683  00FF77  20                 	db	32
   684  00FF78  00                 	db	0
   685  00FF79                     STR_37:
   686                           
   687                           ; BSR set to: 0
   688  00FF79  53                 	db	83	;'S'
   689  00FF7A  74                 	db	116	;'t'
   690  00FF7B  6F                 	db	111	;'o'
   691  00FF7C  70                 	db	112	;'p'
   692  00FF7D  70                 	db	112	;'p'
   693  00FF7E  65                 	db	101	;'e'
   694  00FF7F  64                 	db	100	;'d'
   695  00FF80  20                 	db	32
   696  00FF81  20                 	db	32
   697  00FF82  20                 	db	32
   698  00FF83  20                 	db	32
   699  00FF84  20                 	db	32
   700  00FF85  20                 	db	32
   701  00FF86  20                 	db	32
   702  00FF87  20                 	db	32
   703  00FF88  20                 	db	32
   704  00FF89  20                 	db	32
   705  00FF8A  00                 	db	0
   706  00FF8B                     
   707                           ; BSR set to: 0
   708  00FF8B  41                 	db	65	;'A'
   709  00FF8C  20                 	db	32
   710  00FF8D  25                 	db	37
   711  00FF8E  64                 	db	100	;'d'
   712  00FF8F  2C                 	db	44
   713  00FF90  43                 	db	67	;'C'
   714  00FF91  20                 	db	32
   715  00FF92  25                 	db	37
   716  00FF93  64                 	db	100	;'d'
   717  00FF94  2C                 	db	44
   718  00FF95  39                 	db	57	;'9'
   719  00FF96  20                 	db	32
   720  00FF97  25                 	db	37
   721  00FF98  64                 	db	100	;'d'
   722  00FF99  20                 	db	32
   723  00FF9A  20                 	db	32
   724  00FF9B  20                 	db	32
   725  00FF9C  00                 	db	0
   726  00FF9D                     STR_47:
   727                           
   728                           ; BSR set to: 0
   729  00FF9D  30                 	db	48	;'0'
   730  00FF9E  31                 	db	49	;'1'
   731  00FF9F  32                 	db	50	;'2'
   732  00FFA0  33                 	db	51	;'3'
   733  00FFA1  34                 	db	52	;'4'
   734  00FFA2  35                 	db	53	;'5'
   735  00FFA3  36                 	db	54	;'6'
   736  00FFA4  37                 	db	55	;'7'
   737  00FFA5  38                 	db	56	;'8'
   738  00FFA6  39                 	db	57	;'9'
   739  00FFA7  61                 	db	97	;'a'
   740  00FFA8  62                 	db	98	;'b'
   741  00FFA9  63                 	db	99	;'c'
   742  00FFAA  64                 	db	100	;'d'
   743  00FFAB  65                 	db	101	;'e'
   744  00FFAC  66                 	db	102	;'f'
   745  00FFAD  00                 	db	0
   746  00FFAE                     STR_45:
   747                           
   748                           ; BSR set to: 0
   749  00FFAE  73                 	db	115	;'s'
   750  00FFAF  68                 	db	104	;'h'
   751  00FFB0  6F                 	db	111	;'o'
   752  00FFB1  77                 	db	119	;'w'
   753  00FFB2  69                 	db	105	;'i'
   754  00FFB3  6E                 	db	110	;'n'
   755  00FFB4  67                 	db	103	;'g'
   756  00FFB5  20                 	db	32
   757  00FFB6  25                 	db	37
   758  00FFB7  75                 	db	117	;'u'
   759  00FFB8  20                 	db	32
   760  00FFB9  20                 	db	32
   761  00FFBA  20                 	db	32
   762  00FFBB  20                 	db	32
   763  00FFBC  20                 	db	32
   764  00FFBD  20                 	db	32
   765  00FFBE  00                 	db	0
   766  00FFBF                     STR_46:
   767                           
   768                           ; BSR set to: 0
   769  00FFBF  72                 	db	114	;'r'
   770  00FFC0  75                 	db	117	;'u'
   771  00FFC1  6E                 	db	110	;'n'
   772  00FFC2  73                 	db	115	;'s'
   773  00FFC3  20                 	db	32
   774  00FFC4  62                 	db	98	;'b'
   775  00FFC5  65                 	db	101	;'e'
   776  00FFC6  66                 	db	102	;'f'
   777  00FFC7  6F                 	db	111	;'o'
   778  00FFC8  72                 	db	114	;'r'
   779  00FFC9  65                 	db	101	;'e'
   780  00FFCA  20                 	db	32
   781  00FFCB  20                 	db	32
   782  00FFCC  20                 	db	32
   783  00FFCD  20                 	db	32
   784  00FFCE  20                 	db	32
   785  00FFCF  00                 	db	0
   786  00FFD0                     STR_29:
   787                           
   788                           ; BSR set to: 0
   789  00FFD0  25                 	db	37
   790  00FFD1  75                 	db	117	;'u'
   791  00FFD2  20                 	db	32
   792  00FFD3  20                 	db	32
   793  00FFD4  20                 	db	32
   794  00FFD5  20                 	db	32
   795  00FFD6  20                 	db	32
   796  00FFD7  20                 	db	32
   797  00FFD8  20                 	db	32
   798  00FFD9  20                 	db	32
   799  00FFDA  20                 	db	32
   800  00FFDB  20                 	db	32
   801  00FFDC  20                 	db	32
   802  00FFDD  20                 	db	32
   803  00FFDE  20                 	db	32
   804  00FFDF  00                 	db	0
   805  00FFE0                     STR_39:
   806                           
   807                           ; BSR set to: 0
   808  00FFE0  20                 	db	32
   809  00FFE1  25                 	db	37
   810  00FFE2  64                 	db	100	;'d'
   811  00FFE3  20                 	db	32
   812  00FFE4  00                 	db	0
   813  00FFE5                     STR_13:
   814                           
   815                           ; BSR set to: 0
   816  00FFE5  20                 	db	32
   817  00FFE6  41                 	db	65	;'A'
   818  00FFE7  41                 	db	65	;'A'
   819  00FFE8  3A                 	db	58	;':'
   820  00FFE9  00                 	db	0
   821  00FFEA                     STR_38:
   822                           
   823                           ; BSR set to: 0
   824  00FFEA  2D                 	db	45
   825  00FFEB  31                 	db	49	;'1'
   826  00FFEC  20                 	db	32
   827  00FFED  00                 	db	0
   828  00FFEE                     STR_9:
   829                           
   830                           ; BSR set to: 0
   831  00FFEE  20                 	db	32
   832  00FFEF  43                 	db	67	;'C'
   833  00FFF0  3A                 	db	58	;':'
   834  00FFF1  00                 	db	0
   835  00FFF2                     STR_5:
   836                           
   837                           ; BSR set to: 0
   838  00FFF2  39                 	db	57	;'9'
   839  00FFF3  56                 	db	86	;'V'
   840  00FFF4  3A                 	db	58	;':'
   841  00FFF5  00                 	db	0
   842  00FFF6                     STR_6:
   843                           
   844                           ; BSR set to: 0
   845  00FFF6  20                 	db	32
   846  00FFF7  2B                 	db	43
   847  00FFF8  00                 	db	0
   848  00FFF9                     STR_7:
   849                           
   850                           ; BSR set to: 0
   851  00FFF9  20                 	db	32
   852  00FFFA  2D                 	db	45
   853  00FFFB  00                 	db	0
   854  00FFFC                     STR_8:
   855                           
   856                           ; BSR set to: 0
   857  00FFFC  20                 	db	32
   858  00FFFD  30                 	db	48	;'0'
   859  00FFFE  00                 	db	0
   860  0000                     
   861                           ; #config settings
   862  00FFFF  00                 	db	0	; dummy byte at the end
   863  0000                     
   864                           	psect	cinit
   865  0022DC                     __pcinit:
   866                           	opt stack 0
   867  0022DC                     start_initialization:
   868                           	opt stack 0
   869  0022DC                     __initialization:
   870                           	opt stack 0
   871                           
   872                           ; Initialize objects allocated to BANK0 (10 bytes)
   873                           ; load TBLPTR registers with __pidataBANK0
   874  0022DC  0EB2               	movlw	low __pidataBANK0
   875  0022DE  6EF6               	movwf	tblptrl,c
   876  0022E0  0E26               	movlw	high __pidataBANK0
   877  0022E2  6EF7               	movwf	tblptrh,c
   878  0022E4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   879  0022E6  6EF8               	movwf	tblptru,c
   880  0022E8  EE00  F0DA         	lfsr	0,__pdataBANK0
   881  0022EC  EE10 F00A          	lfsr	1,10
   882  0022F0                     copy_data0:
   883  0022F0  0009               	tblrd		*+
   884  0022F2  CFF5 FFEE          	movff	tablat,postinc0
   885  0022F6  50E5               	movf	postdec1,w,c
   886  0022F8  50E1               	movf	fsr1l,w,c
   887  0022FA  E1FA               	bnz	copy_data0
   888                           
   889                           ; Clear objects allocated to BANK0 (48 bytes)
   890  0022FC  EE00  F080         	lfsr	0,__pbssBANK0
   891  002300  0E30               	movlw	48
   892  002302                     clear_0:
   893  002302  6AEE               	clrf	postinc0,c
   894  002304  06E8               	decf	wreg,f,c
   895  002306  E1FD               	bnz	clear_0
   896                           
   897                           ; Clear objects allocated to COMRAM (6 bytes)
   898  002308  6A7C               	clrf	(__pbssCOMRAM+5)& (0+255),c
   899  00230A  6A7B               	clrf	(__pbssCOMRAM+4)& (0+255),c
   900  00230C  6A7A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   901  00230E  6A79               	clrf	(__pbssCOMRAM+2)& (0+255),c
   902  002310  6A78               	clrf	(__pbssCOMRAM+1)& (0+255),c
   903  002312  6A77               	clrf	__pbssCOMRAM& (0+255),c
   904  002314                     end_of_initialization:
   905                           	opt stack 0
   906  002314                     __end_of__initialization:
   907                           	opt stack 0
   908  002314  907D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   909  002316  927D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   910  002318  0E00               	movlw	low (__Lmediumconst shr (0+16))
   911  00231A  6EF8               	movwf	tblptru,c
   912  00231C  0100               	movlb	0
   913  00231E  EF23  F011         	goto	_main	;jump to C main() function
   914                           tblptru	equ	0xFF8
   915                           tblptrh	equ	0xFF7
   916                           tblptrl	equ	0xFF6
   917                           tablat	equ	0xFF5
   918                           postinc0	equ	0xFEE
   919                           wreg	equ	0xFE8
   920                           postdec1	equ	0xFE5
   921                           fsr1l	equ	0xFE1
   922                           
   923                           	psect	bssCOMRAM
   924  000077                     __pbssCOMRAM:
   925                           	opt stack 0
   926  000077                     simulate@F3110:
   927                           	opt stack 0
   928  000077                     	ds	4
   929  00007B                     _mode:
   930                           	opt stack 0
   931  00007B                     	ds	2
   932                           tblptru	equ	0xFF8
   933                           tblptrh	equ	0xFF7
   934                           tblptrl	equ	0xFF6
   935                           tablat	equ	0xFF5
   936                           postinc0	equ	0xFEE
   937                           wreg	equ	0xFE8
   938                           postdec1	equ	0xFE5
   939                           fsr1l	equ	0xFE1
   940                           
   941                           	psect	bssBANK0
   942  000080                     __pbssBANK0:
   943                           	opt stack 0
   944  000080                     intrpt@F3137:
   945                           	opt stack 0
   946  000080                     	ds	6
   947  000086                     simulate@F3127:
   948                           	opt stack 0
   949  000086                     	ds	6
   950  00008C                     simulate@F3125:
   951                           	opt stack 0
   952  00008C                     	ds	6
   953  000092                     simulate@F3123:
   954                           	opt stack 0
   955  000092                     	ds	6
   956  000098                     PermLog@F3082:
   957                           	opt stack 0
   958  000098                     	ds	4
   959  00009C                     testAD@F3144:
   960                           	opt stack 0
   961  00009C                     	ds	4
   962  0000A0                     simulate@F3114:
   963                           	opt stack 0
   964  0000A0                     	ds	4
   965  0000A4                     simulate@F3112:
   966                           	opt stack 0
   967  0000A4                     	ds	4
   968  0000A8                     _Latest:
   969                           	opt stack 0
   970  0000A8                     	ds	1
   971  0000A9                     _time:
   972                           	opt stack 0
   973  0000A9                     	ds	7
   974                           tblptru	equ	0xFF8
   975                           tblptrh	equ	0xFF7
   976                           tblptrl	equ	0xFF6
   977                           tablat	equ	0xFF5
   978                           postinc0	equ	0xFEE
   979                           wreg	equ	0xFE8
   980                           postdec1	equ	0xFE5
   981                           fsr1l	equ	0xFE1
   982                           
   983                           	psect	dataBANK0
   984  0000DA                     __pdataBANK0:
   985                           	opt stack 0
   986  0000DA                     mainloop@F3101:
   987                           	opt stack 0
   988  0000DA                     	ds	6
   989  0000E0                     mainloop@F3096:
   990                           	opt stack 0
   991  0000E0                     	ds	4
   992                           tblptru	equ	0xFF8
   993                           tblptrh	equ	0xFF7
   994                           tblptrl	equ	0xFF6
   995                           tablat	equ	0xFF5
   996                           postinc0	equ	0xFEE
   997                           wreg	equ	0xFE8
   998                           postdec1	equ	0xFE5
   999                           fsr1l	equ	0xFE1
  1000                           
  1001                           	psect	cstackBANK0
  1002  0000B0                     __pcstackBANK0:
  1003                           	opt stack 0
  1004  0000B0                     ??_isdigit:
  1005  0000B0                     ??_I2C_Master_Wait:
  1006  0000B0                     ?___wmul:
  1007                           	opt stack 0
  1008  0000B0                     ?___lwdiv:
  1009                           	opt stack 0
  1010  0000B0                     ?___lldiv:
  1011                           	opt stack 0
  1012  0000B0                     lcdNibble@temp:
  1013                           	opt stack 0
  1014  0000B0                     ReadEE@address:
  1015                           	opt stack 0
  1016  0000B0                     ___wmul@multiplier:
  1017                           	opt stack 0
  1018  0000B0                     ___lwdiv@dividend:
  1019                           	opt stack 0
  1020  0000B0                     ___lldiv@dividend:
  1021                           	opt stack 0
  1022                           
  1023                           ; 4 bytes @ 0x0
  1024  0000B0                     	ds	1
  1025  0000B1                     lcdNibble@data:
  1026                           	opt stack 0
  1027  0000B1                     I2C_Master_Read@a:
  1028                           	opt stack 0
  1029  0000B1                     _isdigit$1079:
  1030                           	opt stack 0
  1031  0000B1                     I2C_Master_Write@d:
  1032                           	opt stack 0
  1033                           
  1034                           ; 2 bytes @ 0x1
  1035  0000B1                     	ds	1
  1036  0000B2                     lcdInst@data:
  1037                           	opt stack 0
  1038  0000B2                     putch@data:
  1039                           	opt stack 0
  1040  0000B2                     I2C_Master_Read@temp:
  1041                           	opt stack 0
  1042  0000B2                     isdigit@c:
  1043                           	opt stack 0
  1044  0000B2                     ___wmul@multiplicand:
  1045                           	opt stack 0
  1046  0000B2                     ___lwdiv@divisor:
  1047                           	opt stack 0
  1048                           
  1049                           ; 2 bytes @ 0x2
  1050  0000B2                     	ds	1
  1051  0000B3                     ??_initLCD:
  1052  0000B3                     getTime@time:
  1053                           	opt stack 0
  1054                           
  1055                           ; 2 bytes @ 0x3
  1056  0000B3                     	ds	1
  1057  0000B4                     ___wmul@product:
  1058                           	opt stack 0
  1059  0000B4                     ___lwdiv@quotient:
  1060                           	opt stack 0
  1061  0000B4                     ___lldiv@divisor:
  1062                           	opt stack 0
  1063                           
  1064                           ; 4 bytes @ 0x4
  1065  0000B4                     	ds	1
  1066  0000B5                     getTime@i:
  1067                           	opt stack 0
  1068                           
  1069                           ; 1 bytes @ 0x5
  1070  0000B5                     	ds	1
  1071  0000B6                     ___lwdiv@counter:
  1072                           	opt stack 0
  1073                           
  1074                           ; 1 bytes @ 0x6
  1075  0000B6                     	ds	1
  1076  0000B7                     ?___lwmod:
  1077                           	opt stack 0
  1078  0000B7                     ___lwmod@dividend:
  1079                           	opt stack 0
  1080                           
  1081                           ; 2 bytes @ 0x7
  1082  0000B7                     	ds	1
  1083  0000B8                     ___lldiv@quotient:
  1084                           	opt stack 0
  1085                           
  1086                           ; 4 bytes @ 0x8
  1087  0000B8                     	ds	1
  1088  0000B9                     ___lwmod@divisor:
  1089                           	opt stack 0
  1090                           
  1091                           ; 2 bytes @ 0x9
  1092  0000B9                     	ds	2
  1093  0000BB                     ___lwmod@counter:
  1094                           	opt stack 0
  1095                           
  1096                           ; 1 bytes @ 0xB
  1097  0000BB                     	ds	1
  1098  0000BC                     ?_printf:
  1099                           	opt stack 0
  1100  0000BC                     ___lldiv@counter:
  1101                           	opt stack 0
  1102  0000BC                     printf@f:
  1103                           	opt stack 0
  1104                           
  1105                           ; 2 bytes @ 0xC
  1106  0000BC                     	ds	1
  1107  0000BD                     I2C_Master_Init@c:
  1108                           	opt stack 0
  1109                           
  1110                           ; 4 bytes @ 0xD
  1111  0000BD                     	ds	4
  1112  0000C1                     ??_I2C_Master_Init:
  1113                           
  1114                           ; 1 bytes @ 0x11
  1115  0000C1                     	ds	3
  1116  0000C4                     ??_printf:
  1117                           
  1118                           ; 1 bytes @ 0x14
  1119  0000C4                     	ds	1
  1120  0000C5                     
  1121                           ; 1 bytes @ 0x15
  1122  0000C5                     	ds	3
  1123  0000C8                     printf@cp:
  1124                           	opt stack 0
  1125                           
  1126                           ; 2 bytes @ 0x18
  1127  0000C8                     	ds	2
  1128  0000CA                     printf@idx:
  1129                           	opt stack 0
  1130                           
  1131                           ; 1 bytes @ 0x1A
  1132  0000CA                     	ds	1
  1133  0000CB                     printf@ap:
  1134                           	opt stack 0
  1135                           
  1136                           ; 2 bytes @ 0x1B
  1137  0000CB                     	ds	2
  1138  0000CD                     printf@len:
  1139                           	opt stack 0
  1140                           
  1141                           ; 2 bytes @ 0x1D
  1142  0000CD                     	ds	2
  1143  0000CF                     printf@prec:
  1144                           	opt stack 0
  1145                           
  1146                           ; 1 bytes @ 0x1F
  1147  0000CF                     	ds	1
  1148  0000D0                     printf@val:
  1149                           	opt stack 0
  1150                           
  1151                           ; 2 bytes @ 0x20
  1152  0000D0                     	ds	2
  1153  0000D2                     printf@flag:
  1154                           	opt stack 0
  1155                           
  1156                           ; 1 bytes @ 0x22
  1157  0000D2                     	ds	1
  1158  0000D3                     printf@width:
  1159                           	opt stack 0
  1160                           
  1161                           ; 2 bytes @ 0x23
  1162  0000D3                     	ds	2
  1163  0000D5                     printf@c:
  1164                           	opt stack 0
  1165                           
  1166                           ; 1 bytes @ 0x25
  1167  0000D5                     	ds	1
  1168  0000D6                     ??_showRTC:
  1169                           
  1170                           ; 1 bytes @ 0x26
  1171  0000D6                     	ds	2
  1172  0000D8                     ??_main:
  1173                           
  1174                           ; 1 bytes @ 0x28
  1175  0000D8                     	ds	2
  1176                           tblptru	equ	0xFF8
  1177                           tblptrh	equ	0xFF7
  1178                           tblptrl	equ	0xFF6
  1179                           tablat	equ	0xFF5
  1180                           postinc0	equ	0xFEE
  1181                           wreg	equ	0xFE8
  1182                           postdec1	equ	0xFE5
  1183                           fsr1l	equ	0xFE1
  1184                           
  1185                           	psect	cstackCOMRAM
  1186  000001                     __pcstackCOMRAM:
  1187                           	opt stack 0
  1188  000001                     ??_openGate:
  1189  000001                     ??_closeGate:
  1190  000001                     ??i2_I2C_Master_Wait:
  1191  000001                     ??i2_isdigit:
  1192  000001                     ?_AD:
  1193                           	opt stack 0
  1194  000001                     ?_captureKeypad:
  1195                           	opt stack 0
  1196  000001                     ?___awdiv:
  1197                           	opt stack 0
  1198  000001                     ?i2___wmul:
  1199                           	opt stack 0
  1200  000001                     ?i2___lwdiv:
  1201                           	opt stack 0
  1202  000001                     ?___ftpack:
  1203                           	opt stack 0
  1204  000001                     back@runs:
  1205                           	opt stack 0
  1206  000001                     i2lcdNibble@temp:
  1207                           	opt stack 0
  1208  000001                     WriteEE@address:
  1209                           	opt stack 0
  1210  000001                     ___awdiv@dividend:
  1211                           	opt stack 0
  1212  000001                     i2ReadEE@address:
  1213                           	opt stack 0
  1214  000001                     i2___wmul@multiplier:
  1215                           	opt stack 0
  1216  000001                     i2___lwdiv@dividend:
  1217                           	opt stack 0
  1218  000001                     ___ftpack@arg:
  1219                           	opt stack 0
  1220                           
  1221                           ; 3 bytes @ 0x0
  1222  000001                     	ds	1
  1223  000002                     back@result:
  1224                           	opt stack 0
  1225  000002                     i2lcdNibble@data:
  1226                           	opt stack 0
  1227  000002                     i2I2C_Master_Read@a:
  1228                           	opt stack 0
  1229  000002                     i2_isdigit$1079:
  1230                           	opt stack 0
  1231  000002                     i2I2C_Master_Write@d:
  1232                           	opt stack 0
  1233                           
  1234                           ; 2 bytes @ 0x1
  1235  000002                     	ds	1
  1236  000003                     ??_AD:
  1237  000003                     captureKeypad@keypress:
  1238                           	opt stack 0
  1239  000003                     WriteEE@data:
  1240                           	opt stack 0
  1241  000003                     i2lcdInst@data:
  1242                           	opt stack 0
  1243  000003                     i2putch@data:
  1244                           	opt stack 0
  1245  000003                     i2I2C_Master_Read@temp:
  1246                           	opt stack 0
  1247  000003                     i2isdigit@c:
  1248                           	opt stack 0
  1249  000003                     ReadRun@sorted:
  1250                           	opt stack 0
  1251  000003                     ___awdiv@divisor:
  1252                           	opt stack 0
  1253  000003                     i2___wmul@multiplicand:
  1254                           	opt stack 0
  1255  000003                     i2___lwdiv@divisor:
  1256                           	opt stack 0
  1257                           
  1258                           ; 2 bytes @ 0x2
  1259  000003                     	ds	1
  1260  000004                     ___ftpack@exp:
  1261                           	opt stack 0
  1262  000004                     i2getTime@time:
  1263                           	opt stack 0
  1264                           
  1265                           ; 2 bytes @ 0x3
  1266  000004                     	ds	1
  1267  000005                     AD@channel:
  1268                           	opt stack 0
  1269  000005                     ___awdiv@counter:
  1270                           	opt stack 0
  1271  000005                     ___ftpack@sign:
  1272                           	opt stack 0
  1273  000005                     ReadRun@time:
  1274                           	opt stack 0
  1275  000005                     i2___wmul@product:
  1276                           	opt stack 0
  1277  000005                     i2___lwdiv@quotient:
  1278                           	opt stack 0
  1279                           
  1280                           ; 2 bytes @ 0x4
  1281  000005                     	ds	1
  1282  000006                     ??___ftpack:
  1283  000006                     ___awdiv@sign:
  1284                           	opt stack 0
  1285  000006                     i2getTime@i:
  1286                           	opt stack 0
  1287                           
  1288                           ; 1 bytes @ 0x5
  1289  000006                     	ds	1
  1290  000007                     ??_ReadRun:
  1291  000007                     ?_HexDecToDec2:
  1292                           	opt stack 0
  1293  000007                     i2___lwdiv@counter:
  1294                           	opt stack 0
  1295  000007                     HexDecToDec2@hex:
  1296                           	opt stack 0
  1297  000007                     WriteRun@sorted:
  1298                           	opt stack 0
  1299  000007                     ___awdiv@quotient:
  1300                           	opt stack 0
  1301                           
  1302                           ; 2 bytes @ 0x6
  1303  000007                     	ds	1
  1304  000008                     ?i2___lwmod:
  1305                           	opt stack 0
  1306  000008                     i2___lwmod@dividend:
  1307                           	opt stack 0
  1308                           
  1309                           ; 2 bytes @ 0x7
  1310  000008                     	ds	1
  1311  000009                     ??_HexDecToDec2:
  1312  000009                     ?___awtoft:
  1313                           	opt stack 0
  1314  000009                     PWMC@widthus:
  1315                           	opt stack 0
  1316  000009                     WriteRun@time:
  1317                           	opt stack 0
  1318  000009                     ___awtoft@c:
  1319                           	opt stack 0
  1320                           
  1321                           ; 2 bytes @ 0x8
  1322  000009                     	ds	1
  1323  00000A                     i2___lwmod@divisor:
  1324                           	opt stack 0
  1325                           
  1326                           ; 2 bytes @ 0x9
  1327  00000A                     	ds	1
  1328  00000B                     ??_WriteRun:
  1329  00000B                     ReadRun@backruns:
  1330                           	opt stack 0
  1331  00000B                     PWMC@cycles:
  1332                           	opt stack 0
  1333                           
  1334                           ; 2 bytes @ 0xA
  1335  00000B                     	ds	1
  1336  00000C                     ___awtoft@sign:
  1337                           	opt stack 0
  1338  00000C                     i2___lwmod@counter:
  1339                           	opt stack 0
  1340  00000C                     HexDecToDec2@tenth:
  1341                           	opt stack 0
  1342  00000C                     ReadRun@add:
  1343                           	opt stack 0
  1344                           
  1345                           ; 2 bytes @ 0xB
  1346  00000C                     	ds	1
  1347  00000D                     ?i2_printf:
  1348                           	opt stack 0
  1349  00000D                     ?___ftmul:
  1350                           	opt stack 0
  1351  00000D                     PWMC@port:
  1352                           	opt stack 0
  1353  00000D                     WriteRun@add:
  1354                           	opt stack 0
  1355  00000D                     i2printf@f:
  1356                           	opt stack 0
  1357  00000D                     ___ftmul@f1:
  1358                           	opt stack 0
  1359                           
  1360                           ; 3 bytes @ 0xC
  1361  00000D                     	ds	1
  1362  00000E                     HexDecToDec2@digit:
  1363                           	opt stack 0
  1364                           
  1365                           ; 2 bytes @ 0xD
  1366  00000E                     	ds	1
  1367  00000F                     ??_PWMC:
  1368                           
  1369                           ; 1 bytes @ 0xE
  1370  00000F                     	ds	1
  1371  000010                     ___ftmul@f2:
  1372                           	opt stack 0
  1373                           
  1374                           ; 3 bytes @ 0xF
  1375  000010                     	ds	1
  1376  000011                     ??i2_printf:
  1377  000011                     _PWMC$1423:
  1378                           	opt stack 0
  1379                           
  1380                           ; 1 bytes @ 0x10
  1381  000011                     	ds	1
  1382  000012                     _PWMC$1424:
  1383                           	opt stack 0
  1384                           
  1385                           ; 1 bytes @ 0x11
  1386  000012                     	ds	1
  1387  000013                     ??___ftmul:
  1388  000013                     _PWMC$1425:
  1389                           	opt stack 0
  1390                           
  1391                           ; 1 bytes @ 0x12
  1392  000013                     	ds	1
  1393  000014                     PWMC@countdown:
  1394                           	opt stack 0
  1395                           
  1396                           ; 2 bytes @ 0x13
  1397  000014                     	ds	1
  1398  000015                     i2printf@cp:
  1399                           	opt stack 0
  1400                           
  1401                           ; 2 bytes @ 0x14
  1402  000015                     	ds	1
  1403  000016                     ___ftmul@exp:
  1404                           	opt stack 0
  1405  000016                     CW90@port:
  1406                           	opt stack 0
  1407  000016                     CCW90@port:
  1408                           	opt stack 0
  1409                           
  1410                           ; 2 bytes @ 0x15
  1411  000016                     	ds	1
  1412  000017                     i2printf@idx:
  1413                           	opt stack 0
  1414  000017                     ___ftmul@f3_as_product:
  1415                           	opt stack 0
  1416                           
  1417                           ; 3 bytes @ 0x16
  1418  000017                     	ds	1
  1419  000018                     ??_CCW90:
  1420  000018                     ??_CW90:
  1421  000018                     i2printf@ap:
  1422                           	opt stack 0
  1423                           
  1424                           ; 2 bytes @ 0x17
  1425  000018                     	ds	2
  1426  00001A                     ___ftmul@cntr:
  1427                           	opt stack 0
  1428  00001A                     i2printf@len:
  1429                           	opt stack 0
  1430                           
  1431                           ; 2 bytes @ 0x19
  1432  00001A                     	ds	1
  1433  00001B                     ___ftmul@sign:
  1434                           	opt stack 0
  1435                           
  1436                           ; 1 bytes @ 0x1A
  1437  00001B                     	ds	1
  1438  00001C                     i2printf@prec:
  1439                           	opt stack 0
  1440  00001C                     ___ftge@ff1:
  1441                           	opt stack 0
  1442                           
  1443                           ; 3 bytes @ 0x1B
  1444  00001C                     	ds	1
  1445  00001D                     i2printf@val:
  1446                           	opt stack 0
  1447                           
  1448                           ; 2 bytes @ 0x1C
  1449  00001D                     	ds	2
  1450  00001F                     i2printf@flag:
  1451                           	opt stack 0
  1452  00001F                     ___ftge@ff2:
  1453                           	opt stack 0
  1454                           
  1455                           ; 3 bytes @ 0x1E
  1456  00001F                     	ds	1
  1457  000020                     i2printf@width:
  1458                           	opt stack 0
  1459                           
  1460                           ; 2 bytes @ 0x1F
  1461  000020                     	ds	2
  1462  000022                     ??___ftge:
  1463  000022                     i2printf@c:
  1464                           	opt stack 0
  1465                           
  1466                           ; 1 bytes @ 0x21
  1467  000022                     	ds	1
  1468  000023                     showInfo@time:
  1469                           	opt stack 0
  1470  000023                     _stopMoving$577:
  1471                           	opt stack 0
  1472  000023                     printV@charged:
  1473                           	opt stack 0
  1474                           
  1475                           ; 2 bytes @ 0x22
  1476  000023                     	ds	2
  1477  000025                     ?_checkV:
  1478                           	opt stack 0
  1479  000025                     stopMoving@em:
  1480                           	opt stack 0
  1481  000025                     showInfo@sorted:
  1482                           	opt stack 0
  1483  000025                     checkV@threshhold:
  1484                           	opt stack 0
  1485                           
  1486                           ; 2 bytes @ 0x24
  1487  000025                     	ds	2
  1488  000027                     ??_showInfo:
  1489  000027                     ??_checkV:
  1490                           
  1491                           ; 1 bytes @ 0x26
  1492  000027                     	ds	2
  1493  000029                     checkV@tmp:
  1494                           	opt stack 0
  1495                           
  1496                           ; 2 bytes @ 0x28
  1497  000029                     	ds	2
  1498  00002B                     checkV@channel:
  1499                           	opt stack 0
  1500                           
  1501                           ; 1 bytes @ 0x2A
  1502  00002B                     	ds	1
  1503  00002C                     showInfo@type:
  1504                           	opt stack 0
  1505  00002C                     checkV@voltage:
  1506                           	opt stack 0
  1507                           
  1508                           ; 2 bytes @ 0x2B
  1509  00002C                     	ds	2
  1510  00002E                     ?_check9:
  1511                           	opt stack 0
  1512  00002E                     ?_checkC:
  1513                           	opt stack 0
  1514  00002E                     ?_checkAA:
  1515                           	opt stack 0
  1516  00002E                     showInfo@stop:
  1517                           	opt stack 0
  1518  00002E                     checkAA@sorted:
  1519                           	opt stack 0
  1520  00002E                     checkC@sorted:
  1521                           	opt stack 0
  1522  00002E                     check9@sorted:
  1523                           	opt stack 0
  1524                           
  1525                           ; 2 bytes @ 0x2D
  1526  00002E                     	ds	2
  1527  000030                     ??_check9:
  1528  000030                     ??_checkC:
  1529  000030                     ??_checkAA:
  1530  000030                     ??_PermLog:
  1531  000030                     ??_mainloop:
  1532                           
  1533                           ; 1 bytes @ 0x2F
  1534  000030                     	ds	2
  1535  000032                     checkAA@V:
  1536                           	opt stack 0
  1537  000032                     checkC@V:
  1538                           	opt stack 0
  1539  000032                     check9@V:
  1540                           	opt stack 0
  1541  000032                     mainloop@sorted:
  1542                           	opt stack 0
  1543  000032                     PermLog@sorted:
  1544                           	opt stack 0
  1545                           
  1546                           ; 4 bytes @ 0x31
  1547  000032                     	ds	2
  1548  000034                     ??_simulate:
  1549                           
  1550                           ; 1 bytes @ 0x33
  1551  000034                     	ds	2
  1552  000036                     PermLog@goback:
  1553                           	opt stack 0
  1554  000036                     _simulate$1521:
  1555                           	opt stack 0
  1556  000036                     mainloop@portCW:
  1557                           	opt stack 0
  1558                           
  1559                           ; 6 bytes @ 0x35
  1560  000036                     	ds	1
  1561  000037                     PermLog@time:
  1562                           	opt stack 0
  1563                           
  1564                           ; 2 bytes @ 0x36
  1565  000037                     	ds	1
  1566  000038                     simulate@now:
  1567                           	opt stack 0
  1568                           
  1569                           ; 4 bytes @ 0x37
  1570  000038                     	ds	1
  1571  000039                     PermLog@backruns:
  1572                           	opt stack 0
  1573                           
  1574                           ; 2 bytes @ 0x38
  1575  000039                     	ds	3
  1576  00003C                     mainloop@period:
  1577                           	opt stack 0
  1578  00003C                     simulate@start:
  1579                           	opt stack 0
  1580                           
  1581                           ; 4 bytes @ 0x3B
  1582  00003C                     	ds	2
  1583  00003E                     mainloop@i:
  1584                           	opt stack 0
  1585                           
  1586                           ; 2 bytes @ 0x3D
  1587  00003E                     	ds	2
  1588  000040                     simulate@notyet:
  1589                           	opt stack 0
  1590                           
  1591                           ; 1 bytes @ 0x3F
  1592  000040                     	ds	1
  1593  000041                     simulate@portShake:
  1594                           	opt stack 0
  1595                           
  1596                           ; 6 bytes @ 0x40
  1597  000041                     	ds	6
  1598  000047                     simulate@shakeCW:
  1599                           	opt stack 0
  1600                           
  1601                           ; 1 bytes @ 0x46
  1602  000047                     	ds	1
  1603  000048                     simulate@portCW:
  1604                           	opt stack 0
  1605                           
  1606                           ; 6 bytes @ 0x47
  1607  000048                     	ds	6
  1608  00004E                     simulate@portCCW:
  1609                           	opt stack 0
  1610                           
  1611                           ; 6 bytes @ 0x4D
  1612  00004E                     	ds	6
  1613  000054                     simulate@C:
  1614                           	opt stack 0
  1615                           
  1616                           ; 2 bytes @ 0x53
  1617  000054                     	ds	2
  1618  000056                     simulate@V9:
  1619                           	opt stack 0
  1620                           
  1621                           ; 2 bytes @ 0x55
  1622  000056                     	ds	2
  1623  000058                     simulate@period:
  1624                           	opt stack 0
  1625                           
  1626                           ; 2 bytes @ 0x57
  1627  000058                     	ds	2
  1628  00005A                     simulate@AA:
  1629                           	opt stack 0
  1630                           
  1631                           ; 2 bytes @ 0x59
  1632  00005A                     	ds	2
  1633  00005C                     simulate@sorted:
  1634                           	opt stack 0
  1635                           
  1636                           ; 4 bytes @ 0x5B
  1637  00005C                     	ds	4
  1638  000060                     ??_intrpt:
  1639                           
  1640                           ; 1 bytes @ 0x5F
  1641  000060                     	ds	16
  1642  000070                     intrpt@keypress:
  1643                           	opt stack 0
  1644                           
  1645                           ; 1 bytes @ 0x6F
  1646  000070                     	ds	1
  1647  000071                     intrpt@port:
  1648                           	opt stack 0
  1649                           
  1650                           ; 6 bytes @ 0x70
  1651  000071                     	ds	6
  1652                           tblptru	equ	0xFF8
  1653                           tblptrh	equ	0xFF7
  1654                           tblptrl	equ	0xFF6
  1655                           tablat	equ	0xFF5
  1656                           postinc0	equ	0xFEE
  1657                           wreg	equ	0xFE8
  1658                           postdec1	equ	0xFE5
  1659                           fsr1l	equ	0xFE1
  1660                           
  1661 ;;
  1662 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1663 ;;
  1664 ;; *************** function _main *****************
  1665 ;; Defined at:
  1666 ;;		line 342 in file "main.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;		None
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;		None
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  2  189[None  ] int 
  1673 ;; Registers used:
  1674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1682 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1683 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1684 ;;Total ram usage:        2 bytes
  1685 ;; Hardware stack levels required when called:   11
  1686 ;; This function calls:
  1687 ;;		_initialize
  1688 ;;		_lcdInst
  1689 ;;		_printf
  1690 ;;		_showRTC
  1691 ;; This function is called by:
  1692 ;;		Startup code after reset
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           	psect	text0
  1697  002246                     __ptext0:
  1698                           	opt stack 0
  1699  002246                     _main:
  1700                           	opt stack 20
  1701                           
  1702                           ;main.c: 343: initialize();
  1703                           
  1704                           ; BSR set to: 0
  1705                           ;incstack = 0
  1706  002246  ECA1  F010         	call	_initialize	;wreg free
  1707                           
  1708                           ;main.c: 345: lcdInst(0b10000000);
  1709  00224A  0E80               	movlw	128
  1710  00224C  EC45  F013         	call	_lcdInst
  1711                           
  1712                           ;main.c: 346: printf("Welcome!          ");
  1713  002250  0E54               	movlw	low STR_21
  1714  002252  0100               	movlb	0	; () banked
  1715  002254  6FBC               	movwf	printf@f& (0+255),b
  1716  002256  0EFF               	movlw	high STR_21
  1717  002258  0100               	movlb	0	; () banked
  1718  00225A  6FBD               	movwf	(printf@f+1)& (0+255),b
  1719  00225C  EC49  F002         	call	_printf	;wreg free
  1720                           
  1721                           ;main.c: 348: _delay((unsigned long)((500)*(8000000/4000.0)));
  1722  002260  0E06               	movlw	6
  1723  002262  0100               	movlb	0	; () banked
  1724  002264  6FD9               	movwf	(??_main+1)& (0+255),b
  1725  002266  0E13               	movlw	19
  1726  002268  0100               	movlb	0	; () banked
  1727  00226A  6FD8               	movwf	??_main& (0+255),b
  1728  00226C  0EAD               	movlw	173
  1729  00226E                     u3557:
  1730  00226E  2EE8               	decfsz	wreg,f,c
  1731  002270  D7FE               	bra	u3557
  1732  002272  2FD8               	decfsz	??_main& (0+255),f,b
  1733  002274  D7FC               	bra	u3557
  1734  002276  2FD9               	decfsz	(??_main+1)& (0+255),f,b
  1735  002278  D7FA               	bra	u3557
  1736  00227A  D000               	nop2	
  1737                           
  1738                           ;main.c: 351: INT1IE = 1;
  1739  00227C  86F0               	bsf	intcon3,3,c	;volatile
  1740                           
  1741                           ;main.c: 352: INT1IF = 0;
  1742  00227E  90F0               	bcf	intcon3,0,c	;volatile
  1743                           
  1744                           ;main.c: 353: INT2IE = 0;
  1745  002280  98F0               	bcf	intcon3,4,c	;volatile
  1746                           
  1747                           ;main.c: 354: (INTCONbits.GIE = 1);
  1748  002282  8EF2               	bsf	intcon,7,c	;volatile
  1749                           
  1750                           ;main.c: 355: mode = 0;
  1751  002284  0E00               	movlw	0
  1752  002286  6E7C               	movwf	_mode+1,c
  1753  002288  0E00               	movlw	0
  1754  00228A  6E7B               	movwf	_mode,c
  1755  00228C                     l4505:
  1756  00228C  EC90  F00D         	call	_showRTC	;wreg free
  1757  002290  D7FD               	goto	l4505
  1758  002292  00FF               	reset		;# 
  1759  002294                     __end_of_main:
  1760                           	opt stack 0
  1761                           tblptru	equ	0xFF8
  1762                           tblptrh	equ	0xFF7
  1763                           tblptrl	equ	0xFF6
  1764                           tablat	equ	0xFF5
  1765                           intcon	equ	0xFF2
  1766                           intcon3	equ	0xFF0
  1767                           postinc0	equ	0xFEE
  1768                           wreg	equ	0xFE8
  1769                           postdec1	equ	0xFE5
  1770                           fsr1l	equ	0xFE1
  1771                           
  1772 ;; *************** function _showRTC *****************
  1773 ;; Defined at:
  1774 ;;		line 229 in file "main.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;		None
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;		None
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  1    wreg      void 
  1781 ;; Registers used:
  1782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1790 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1791 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1792 ;;Total ram usage:        2 bytes
  1793 ;; Hardware stack levels used:    1
  1794 ;; Hardware stack levels required when called:   10
  1795 ;; This function calls:
  1796 ;;		_getTime
  1797 ;;		_lcdInst
  1798 ;;		_printf
  1799 ;; This function is called by:
  1800 ;;		_main
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           	psect	text1
  1805  001B20                     __ptext1:
  1806                           	opt stack 0
  1807  001B20                     _showRTC:
  1808                           	opt stack 20
  1809                           
  1810                           ;main.c: 231: getTime(time);
  1811                           
  1812                           ;incstack = 0
  1813  001B20  0EA9               	movlw	low _time
  1814  001B22  0100               	movlb	0	; () banked
  1815  001B24  6FB3               	movwf	getTime@time& (0+255),b
  1816  001B26  0E00               	movlw	high _time
  1817  001B28  0100               	movlb	0	; () banked
  1818  001B2A  6FB4               	movwf	(getTime@time+1)& (0+255),b
  1819  001B2C  ECD5  F00D         	call	_getTime	;wreg free
  1820                           
  1821                           ;main.c: 232: lcdInst(0b10000000);
  1822  001B30  0E80               	movlw	128
  1823  001B32  EC45  F013         	call	_lcdInst
  1824                           
  1825                           ;main.c: 233: printf("    %02x/%02x/%02x      ", time[6], time[5], time[4]);
  1826  001B36  0EEE               	movlw	low STR_18
  1827  001B38  0100               	movlb	0	; () banked
  1828  001B3A  6FBC               	movwf	printf@f& (0+255),b
  1829  001B3C  0EFD               	movlw	high STR_18
  1830  001B3E  0100               	movlb	0	; () banked
  1831  001B40  6FBD               	movwf	(printf@f+1)& (0+255),b
  1832  001B42  C0AF  F0BE         	movff	_time+6,?_printf+2
  1833  001B46  0100               	movlb	0	; () banked
  1834  001B48  6BBF               	clrf	(?_printf+3)& (0+255),b
  1835  001B4A  C0AE  F0C0         	movff	_time+5,?_printf+4
  1836  001B4E  0100               	movlb	0	; () banked
  1837  001B50  6BC1               	clrf	(?_printf+5)& (0+255),b
  1838  001B52  C0AD  F0C2         	movff	_time+4,?_printf+6
  1839  001B56  0100               	movlb	0	; () banked
  1840  001B58  6BC3               	clrf	(?_printf+7)& (0+255),b
  1841  001B5A  EC49  F002         	call	_printf	;wreg free
  1842                           
  1843                           ;main.c: 234: lcdInst(0b11000000);
  1844  001B5E  0EC0               	movlw	192
  1845  001B60  EC45  F013         	call	_lcdInst
  1846                           
  1847                           ;main.c: 235: printf("    %02x:%02x:%02x      ", time[2], time[1], time[0]);
  1848  001B64  0E07               	movlw	low STR_19
  1849  001B66  0100               	movlb	0	; () banked
  1850  001B68  6FBC               	movwf	printf@f& (0+255),b
  1851  001B6A  0EFE               	movlw	high STR_19
  1852  001B6C  0100               	movlb	0	; () banked
  1853  001B6E  6FBD               	movwf	(printf@f+1)& (0+255),b
  1854  001B70  C0AB  F0BE         	movff	_time+2,?_printf+2
  1855  001B74  0100               	movlb	0	; () banked
  1856  001B76  6BBF               	clrf	(?_printf+3)& (0+255),b
  1857  001B78  C0AA  F0C0         	movff	_time+1,?_printf+4
  1858  001B7C  0100               	movlb	0	; () banked
  1859  001B7E  6BC1               	clrf	(?_printf+5)& (0+255),b
  1860  001B80  C0A9  F0C2         	movff	_time,?_printf+6
  1861  001B84  0100               	movlb	0	; () banked
  1862  001B86  6BC3               	clrf	(?_printf+7)& (0+255),b
  1863  001B88  EC49  F002         	call	_printf	;wreg free
  1864                           
  1865                           ;main.c: 236: _delay((unsigned long)((250)*(8000000/4000.0)));
  1866  001B8C  0E03               	movlw	3
  1867  001B8E  0100               	movlb	0	; () banked
  1868  001B90  6FD7               	movwf	(??_showRTC+1)& (0+255),b
  1869  001B92  0E8A               	movlw	138
  1870  001B94  0100               	movlb	0	; () banked
  1871  001B96  6FD6               	movwf	??_showRTC& (0+255),b
  1872  001B98  0E55               	movlw	85
  1873  001B9A                     u3567:
  1874  001B9A  2EE8               	decfsz	wreg,f,c
  1875  001B9C  D7FE               	bra	u3567
  1876  001B9E  2FD6               	decfsz	??_showRTC& (0+255),f,b
  1877  001BA0  D7FC               	bra	u3567
  1878  001BA2  2FD7               	decfsz	(??_showRTC+1)& (0+255),f,b
  1879  001BA4  D7FA               	bra	u3567
  1880  001BA6  D000               	nop2	
  1881  001BA8  0012               	return		;funcret
  1882  001BAA                     __end_of_showRTC:
  1883                           	opt stack 0
  1884                           tblptru	equ	0xFF8
  1885                           tblptrh	equ	0xFF7
  1886                           tblptrl	equ	0xFF6
  1887                           tablat	equ	0xFF5
  1888                           intcon	equ	0xFF2
  1889                           intcon3	equ	0xFF0
  1890                           postinc0	equ	0xFEE
  1891                           wreg	equ	0xFE8
  1892                           postdec1	equ	0xFE5
  1893                           fsr1l	equ	0xFE1
  1894                           
  1895 ;; *************** function _printf *****************
  1896 ;; Defined at:
  1897 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  f               2   12[BANK0 ] PTR const unsigned char 
  1900 ;;		 -> STR_46(17), STR_45(17), STR_44(18), STR_43(22), 
  1901 ;;		 -> STR_42(4), STR_41(3), STR_40(4), STR_39(5), 
  1902 ;;		 -> STR_38(4), STR_37(18), STR_36(20), STR_35(16), 
  1903 ;;		 -> STR_34(21), STR_33(16), STR_32(22), STR_31(16), 
  1904 ;;		 -> STR_30(21), STR_29(16), STR_28(22), STR_27(23), 
  1905 ;;		 -> STR_26(24), STR_25(21), STR_24(24), STR_23(24), 
  1906 ;;		 -> STR_22(22), STR_21(19), STR_20(18), STR_19(25), 
  1907 ;;		 -> STR_18(25), STR_17(27), STR_16(3), STR_15(3), 
  1908 ;;		 -> STR_14(3), STR_13(5), STR_12(3), STR_11(3), 
  1909 ;;		 -> STR_10(3), STR_9(4), STR_8(3), STR_7(3), 
  1910 ;;		 -> STR_6(3), STR_5(4), STR_4(5), STR_3(21), 
  1911 ;;		 -> STR_2(27), STR_1(21), 
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;  idx             1   26[BANK0 ] unsigned char 
  1914 ;;  tmpval          4    0        struct .
  1915 ;;  width           2   35[BANK0 ] int 
  1916 ;;  val             2   32[BANK0 ] unsigned int 
  1917 ;;  len             2   29[BANK0 ] unsigned int 
  1918 ;;  ap              2   27[BANK0 ] PTR void [1]
  1919 ;;		 -> ?i2_printf(2), ?_printf(2), 
  1920 ;;  cp              2   24[BANK0 ] PTR const unsigned char 
  1921 ;;		 -> printf@c(1), 
  1922 ;;  c               1   37[BANK0 ] char 
  1923 ;;  flag            1   34[BANK0 ] unsigned char 
  1924 ;;  prec            1   31[BANK0 ] char 
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  2   12[BANK0 ] int 
  1927 ;; Registers used:
  1928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1934 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1935 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1936 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1937 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1938 ;;Total ram usage:       26 bytes
  1939 ;; Hardware stack levels used:    1
  1940 ;; Hardware stack levels required when called:    9
  1941 ;; This function calls:
  1942 ;;		___lwdiv
  1943 ;;		___lwmod
  1944 ;;		___wmul
  1945 ;;		_isdigit
  1946 ;;		_putch
  1947 ;; This function is called by:
  1948 ;;		_showRTC
  1949 ;;		_main
  1950 ;;		_testAD
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           	psect	text2
  1955  000492                     __ptext2:
  1956                           	opt stack 0
  1957  000492                     _printf:
  1958                           	opt stack 20
  1959                           
  1960                           ;doprnt.c: 466: va_list ap;
  1961                           ;doprnt.c: 499: signed char c;
  1962                           ;doprnt.c: 501: int width;
  1963                           ;doprnt.c: 506: signed char prec;
  1964                           ;doprnt.c: 508: unsigned char flag;
  1965                           ;doprnt.c: 523: union {
  1966                           ;doprnt.c: 524: unsigned long vd;
  1967                           ;doprnt.c: 525: double integ;
  1968                           ;doprnt.c: 526: } tmpval;
  1969                           ;doprnt.c: 528: unsigned int val;
  1970                           ;doprnt.c: 529: unsigned len;
  1971                           ;doprnt.c: 530: const char * cp;
  1972                           ;doprnt.c: 533: *ap = __va_start();
  1973                           
  1974                           ;incstack = 0
  1975  000492  0EBE               	movlw	low (?_printf+2)
  1976  000494  0100               	movlb	0	; () banked
  1977  000496  6FCB               	movwf	printf@ap& (0+255),b
  1978  000498  0E00               	movlw	high (?_printf+2)
  1979  00049A  0100               	movlb	0	; () banked
  1980  00049C  6FCC               	movwf	(printf@ap+1)& (0+255),b
  1981                           
  1982                           ;doprnt.c: 536: while(c = *f++) {
  1983  00049E  D21F               	goto	l3833
  1984  0004A0                     l3683:
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;doprnt.c: 538: if(c != '%')
  1988  0004A0  0E25               	movlw	37
  1989  0004A2  0100               	movlb	0	; () banked
  1990  0004A4  19D5               	xorwf	printf@c& (0+255),w,b
  1991  0004A6  B4D8               	btfsc	status,2,c
  1992  0004A8  D005               	goto	l3687
  1993                           
  1994                           ; BSR set to: 0
  1995                           ;doprnt.c: 540: {
  1996                           ;doprnt.c: 541: (putch(c) );
  1997  0004AA  0100               	movlb	0	; () banked
  1998  0004AC  51D5               	movf	printf@c& (0+255),w,b
  1999  0004AE  EC3D  F013         	call	_putch
  2000                           
  2001                           ;doprnt.c: 542: continue;
  2002  0004B2  D215               	goto	l3833
  2003  0004B4                     l3687:
  2004                           
  2005                           ;doprnt.c: 543: }
  2006                           ;doprnt.c: 546: width = 0;
  2007  0004B4  0E00               	movlw	0
  2008  0004B6  0100               	movlb	0	; () banked
  2009  0004B8  6FD4               	movwf	(printf@width+1)& (0+255),b
  2010  0004BA  0E00               	movlw	0
  2011  0004BC  6FD3               	movwf	printf@width& (0+255),b
  2012                           
  2013                           ;doprnt.c: 548: flag = 0;
  2014  0004BE  0E00               	movlw	0
  2015  0004C0  0100               	movlb	0	; () banked
  2016  0004C2  6FD2               	movwf	printf@flag& (0+255),b
  2017                           
  2018                           ; BSR set to: 0
  2019                           ;doprnt.c: 551: switch(*f) {
  2020                           
  2021                           ;doprnt.c: 550: for(;;) {
  2022  0004C4  D005               	goto	l3693
  2023  0004C6                     l3689:
  2024                           
  2025                           ;doprnt.c: 580: flag |= 0x04;
  2026  0004C6  0100               	movlb	0	; () banked
  2027  0004C8  85D2               	bsf	printf@flag& (0+255),2,b
  2028                           
  2029                           ;doprnt.c: 581: f++;
  2030  0004CA  0100               	movlb	0	; () banked
  2031  0004CC  4BBC               	infsnz	printf@f& (0+255),f,b
  2032  0004CE  2BBD               	incf	(printf@f+1)& (0+255),f,b
  2033  0004D0                     l3693:
  2034  0004D0  C0BC  FFF6         	movff	printf@f,tblptrl
  2035  0004D4  C0BD  FFF7         	movff	printf@f+1,tblptrh
  2036  0004D8                     	if	0	;tblptru may be non-zero
  2037  0004D8                     	endif
  2038  0004D8                     	if	0	;tblptru may be non-zero
  2039  0004D8                     	endif
  2040  0004D8  0008               	tblrd		*
  2041  0004DA  50F5               	movf	tablat,w,c
  2042                           
  2043                           ; Switch size 1, requested type "space"
  2044                           ; Number of cases is 1, Range of values is 48 to 48
  2045                           ; switch strategies available:
  2046                           ; Name         Instructions Cycles
  2047                           ; simple_byte            4     3 (average)
  2048                           ;	Chosen strategy is simple_byte
  2049  0004DC  0A30               	xorlw	48	; case 48
  2050  0004DE  B4D8               	btfsc	status,2,c
  2051  0004E0  D7F2               	goto	l3689
  2052                           
  2053                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  2054                           
  2055                           ;doprnt.c: 586: }
  2056                           
  2057                           ;doprnt.c: 585: break;
  2058  0004E2  C0BC  FFF6         	movff	printf@f,tblptrl
  2059  0004E6  C0BD  FFF7         	movff	printf@f+1,tblptrh
  2060  0004EA                     	if	0	;tblptru may be non-zero
  2061  0004EA                     	endif
  2062  0004EA                     	if	0	;tblptru may be non-zero
  2063  0004EA                     	endif
  2064  0004EA  0008               	tblrd		*
  2065  0004EC  50F5               	movf	tablat,w,c
  2066  0004EE  EC3F  F012         	call	_isdigit
  2067  0004F2  A0D8               	btfss	status,0,c
  2068  0004F4  D092               	goto	l3733
  2069                           
  2070                           ;doprnt.c: 598: width = 0;
  2071  0004F6  0E00               	movlw	0
  2072  0004F8  0100               	movlb	0	; () banked
  2073  0004FA  6FD4               	movwf	(printf@width+1)& (0+255),b
  2074  0004FC  0E00               	movlw	0
  2075  0004FE  6FD3               	movwf	printf@width& (0+255),b
  2076  000500                     l3699:
  2077                           
  2078                           ;doprnt.c: 600: width *= 10;
  2079  000500  C0D3  F0B0         	movff	printf@width,___wmul@multiplier
  2080  000504  C0D4  F0B1         	movff	printf@width+1,___wmul@multiplier+1
  2081  000508  0E00               	movlw	0
  2082  00050A  0100               	movlb	0	; () banked
  2083  00050C  6FB3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2084  00050E  0E0A               	movlw	10
  2085  000510  6FB2               	movwf	___wmul@multiplicand& (0+255),b
  2086  000512  EC0D  F012         	call	___wmul	;wreg free
  2087  000516  C0B0  F0D3         	movff	?___wmul,printf@width
  2088  00051A  C0B1  F0D4         	movff	?___wmul+1,printf@width+1
  2089                           
  2090                           ;doprnt.c: 601: width += *f++ - '0';
  2091  00051E  0ED0               	movlw	208
  2092  000520  0100               	movlb	0	; () banked
  2093  000522  6FC4               	movwf	??_printf& (0+255),b
  2094  000524  0EFF               	movlw	255
  2095  000526  0100               	movlb	0	; () banked
  2096  000528  6FC5               	movwf	(??_printf+1)& (0+255),b
  2097  00052A  C0BC  FFF6         	movff	printf@f,tblptrl
  2098  00052E  C0BD  FFF7         	movff	printf@f+1,tblptrh
  2099  000532                     	if	0	;tblptru may be non-zero
  2100  000532                     	endif
  2101  000532                     	if	0	;tblptru may be non-zero
  2102  000532                     	endif
  2103  000532  0008               	tblrd		*
  2104  000534  50F5               	movf	tablat,w,c
  2105  000536  0100               	movlb	0	; () banked
  2106  000538  6FC6               	movwf	(??_printf+2)& (0+255),b
  2107  00053A  6BC7               	clrf	(??_printf+3)& (0+255),b
  2108  00053C  0100               	movlb	0	; () banked
  2109  00053E  51C4               	movf	??_printf& (0+255),w,b
  2110  000540  0100               	movlb	0	; () banked
  2111  000542  27C6               	addwf	(??_printf+2)& (0+255),f,b
  2112  000544  0100               	movlb	0	; () banked
  2113  000546  51C5               	movf	(??_printf+1)& (0+255),w,b
  2114  000548  0100               	movlb	0	; () banked
  2115  00054A  23C7               	addwfc	(??_printf+3)& (0+255),f,b
  2116  00054C  0100               	movlb	0	; () banked
  2117  00054E  51C6               	movf	(??_printf+2)& (0+255),w,b
  2118  000550  0100               	movlb	0	; () banked
  2119  000552  27D3               	addwf	printf@width& (0+255),f,b
  2120  000554  0100               	movlb	0	; () banked
  2121  000556  51C7               	movf	(??_printf+3)& (0+255),w,b
  2122  000558  0100               	movlb	0	; () banked
  2123  00055A  23D4               	addwfc	(printf@width+1)& (0+255),f,b
  2124                           
  2125                           ; BSR set to: 0
  2126  00055C  0100               	movlb	0	; () banked
  2127  00055E  4BBC               	infsnz	printf@f& (0+255),f,b
  2128  000560  2BBD               	incf	(printf@f+1)& (0+255),f,b
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2132  000562  C0BC  FFF6         	movff	printf@f,tblptrl
  2133  000566  C0BD  FFF7         	movff	printf@f+1,tblptrh
  2134  00056A                     	if	0	;tblptru may be non-zero
  2135  00056A                     	endif
  2136  00056A                     	if	0	;tblptru may be non-zero
  2137  00056A                     	endif
  2138  00056A  0008               	tblrd		*
  2139  00056C  50F5               	movf	tablat,w,c
  2140  00056E  EC3F  F012         	call	_isdigit
  2141  000572  A0D8               	btfss	status,0,c
  2142  000574  D052               	goto	l3733
  2143  000576  D7C4               	goto	l3699
  2144  000578                     l3707:
  2145                           
  2146                           ;doprnt.c: 721: flag |= 0x80;
  2147  000578  0100               	movlb	0	; () banked
  2148  00057A  8FD2               	bsf	printf@flag& (0+255),7,b
  2149                           
  2150                           ;doprnt.c: 723: break;
  2151  00057C  D06A               	goto	l3735
  2152  00057E                     l3709:
  2153                           
  2154                           ; BSR set to: 0
  2155                           ;doprnt.c: 757: if(width > len)
  2156  00057E  0100               	movlb	0	; () banked
  2157  000580  51D3               	movf	printf@width& (0+255),w,b
  2158  000582  0100               	movlb	0	; () banked
  2159  000584  5DCD               	subwf	printf@len& (0+255),w,b
  2160  000586  0100               	movlb	0	; () banked
  2161  000588  51D4               	movf	(printf@width+1)& (0+255),w,b
  2162  00058A  0100               	movlb	0	; () banked
  2163  00058C  59CE               	subwfb	(printf@len+1)& (0+255),w,b
  2164  00058E  B0D8               	btfsc	status,0,c
  2165  000590  D009               	goto	l3713
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;doprnt.c: 758: width -= len;
  2169  000592  0100               	movlb	0	; () banked
  2170  000594  51CD               	movf	printf@len& (0+255),w,b
  2171  000596  0100               	movlb	0	; () banked
  2172  000598  5FD3               	subwf	printf@width& (0+255),f,b
  2173  00059A  0100               	movlb	0	; () banked
  2174  00059C  51CE               	movf	(printf@len+1)& (0+255),w,b
  2175  00059E  0100               	movlb	0	; () banked
  2176  0005A0  5BD4               	subwfb	(printf@width+1)& (0+255),f,b
  2177  0005A2  D009               	goto	l3717
  2178  0005A4                     l3713:
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;doprnt.c: 759: else
  2182                           ;doprnt.c: 760: width = 0;
  2183  0005A4  0E00               	movlw	0
  2184  0005A6  0100               	movlb	0	; () banked
  2185  0005A8  6FD4               	movwf	(printf@width+1)& (0+255),b
  2186  0005AA  0E00               	movlw	0
  2187  0005AC  6FD3               	movwf	printf@width& (0+255),b
  2188                           
  2189                           ; BSR set to: 0
  2190                           ;doprnt.c: 764: while(width--)
  2191  0005AE  D003               	goto	l3717
  2192  0005B0                     l3715:
  2193                           
  2194                           ; BSR set to: 0
  2195                           ;doprnt.c: 765: (putch(' ') );
  2196  0005B0  0E20               	movlw	32
  2197  0005B2  EC3D  F013         	call	_putch
  2198  0005B6                     l3717:
  2199  0005B6  0100               	movlb	0	; () banked
  2200  0005B8  07D3               	decf	printf@width& (0+255),f,b
  2201  0005BA  A0D8               	btfss	status,0,c
  2202  0005BC  07D4               	decf	(printf@width+1)& (0+255),f,b
  2203  0005BE  0100               	movlb	0	; () banked
  2204  0005C0  29D3               	incf	printf@width& (0+255),w,b
  2205  0005C2  E1F6               	bnz	l3715
  2206  0005C4  0100               	movlb	0	; () banked
  2207  0005C6  29D4               	incf	(printf@width+1)& (0+255),w,b
  2208  0005C8  B4D8               	btfsc	status,2,c
  2209  0005CA  D00B               	goto	l3723
  2210  0005CC  D7F1               	goto	l3715
  2211  0005CE                     l3719:
  2212                           
  2213                           ; BSR set to: 0
  2214                           ;doprnt.c: 768: (putch(*cp++) );
  2215  0005CE  C0C8  FFD9         	movff	printf@cp,fsr2l
  2216  0005D2  C0C9  FFDA         	movff	printf@cp+1,fsr2h
  2217  0005D6  50DF               	movf	indf2,w,c
  2218  0005D8  EC3D  F013         	call	_putch
  2219  0005DC  0100               	movlb	0	; () banked
  2220  0005DE  4BC8               	infsnz	printf@cp& (0+255),f,b
  2221  0005E0  2BC9               	incf	(printf@cp+1)& (0+255),f,b
  2222  0005E2                     l3723:
  2223                           
  2224                           ; BSR set to: 0
  2225  0005E2  0100               	movlb	0	; () banked
  2226  0005E4  07CD               	decf	printf@len& (0+255),f,b
  2227  0005E6  A0D8               	btfss	status,0,c
  2228  0005E8  07CE               	decf	(printf@len+1)& (0+255),f,b
  2229  0005EA  0100               	movlb	0	; () banked
  2230  0005EC  29CD               	incf	printf@len& (0+255),w,b
  2231  0005EE  E1EF               	bnz	l3719
  2232  0005F0  0100               	movlb	0	; () banked
  2233  0005F2  29CE               	incf	(printf@len+1)& (0+255),w,b
  2234  0005F4  B4D8               	btfsc	status,2,c
  2235  0005F6  D173               	goto	l3833
  2236  0005F8  D7EA               	goto	l3719
  2237  0005FA                     l3725:
  2238                           
  2239                           ; BSR set to: 0
  2240                           ;doprnt.c: 805: cp = (char *)&c;
  2241  0005FA  0ED5               	movlw	low printf@c
  2242  0005FC  0100               	movlb	0	; () banked
  2243  0005FE  6FC8               	movwf	printf@cp& (0+255),b
  2244  000600  0E00               	movlw	high printf@c
  2245  000602  0100               	movlb	0	; () banked
  2246  000604  6FC9               	movwf	(printf@cp+1)& (0+255),b
  2247                           
  2248                           ; BSR set to: 0
  2249                           ;doprnt.c: 806: len = 1;
  2250  000606  0E00               	movlw	0
  2251  000608  0100               	movlb	0	; () banked
  2252  00060A  6FCE               	movwf	(printf@len+1)& (0+255),b
  2253  00060C  0E01               	movlw	1
  2254  00060E  6FCD               	movwf	printf@len& (0+255),b
  2255                           
  2256                           ;doprnt.c: 807: goto dostring;
  2257  000610  D7B6               	goto	l3709
  2258  000612                     l3729:
  2259                           
  2260                           ; BSR set to: 0
  2261                           ;doprnt.c: 818: flag |= 0xC0;
  2262  000612  0EC0               	movlw	192
  2263  000614  0100               	movlb	0	; () banked
  2264  000616  13D2               	iorwf	printf@flag& (0+255),f,b
  2265                           
  2266                           ; BSR set to: 0
  2267                           ;doprnt.c: 822: }
  2268                           
  2269                           ;doprnt.c: 819: break;
  2270  000618  D01C               	goto	l3735
  2271  00061A                     l3733:
  2272  00061A  C0BC  FFF6         	movff	printf@f,tblptrl
  2273  00061E  C0BD  FFF7         	movff	printf@f+1,tblptrh
  2274  000622  0100               	movlb	0	; () banked
  2275  000624  4BBC               	infsnz	printf@f& (0+255),f,b
  2276  000626  2BBD               	incf	(printf@f+1)& (0+255),f,b
  2277  000628                     	if	0	;tblptru may be non-zero
  2278  000628                     	endif
  2279  000628                     	if	0	;tblptru may be non-zero
  2280  000628                     	endif
  2281  000628  0008               	tblrd		*
  2282  00062A  CFF5 F0D5          	movff	tablat,printf@c
  2283  00062E  0100               	movlb	0	; () banked
  2284  000630  51D5               	movf	printf@c& (0+255),w,b
  2285                           
  2286                           ; Switch size 1, requested type "space"
  2287                           ; Number of cases is 5, Range of values is 0 to 120
  2288                           ; switch strategies available:
  2289                           ; Name         Instructions Cycles
  2290                           ; simple_byte           16     9 (average)
  2291                           ;	Chosen strategy is simple_byte
  2292  000632  0A00               	xorlw	0	; case 0
  2293  000634  B4D8               	btfsc	status,2,c
  2294  000636  0012               	return	
  2295  000638  0A64               	xorlw	100	; case 100
  2296  00063A  B4D8               	btfsc	status,2,c
  2297  00063C  D00A               	goto	l3735
  2298  00063E  0A0D               	xorlw	13	; case 105
  2299  000640  B4D8               	btfsc	status,2,c
  2300  000642  D007               	goto	l3735
  2301  000644  0A1C               	xorlw	28	; case 117
  2302  000646  B4D8               	btfsc	status,2,c
  2303  000648  D7E4               	goto	l3729
  2304  00064A  0A0D               	xorlw	13	; case 120
  2305  00064C  B4D8               	btfsc	status,2,c
  2306  00064E  D794               	goto	l3707
  2307  000650  D7D4               	goto	l3725
  2308  000652                     l3735:
  2309                           
  2310                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
  2311  000652  C0D2  F0C4         	movff	printf@flag,??_printf
  2312  000656  0EC0               	movlw	192
  2313  000658  0100               	movlb	0	; () banked
  2314  00065A  17C4               	andwf	??_printf& (0+255),f,b
  2315  00065C  A4D8               	btfss	status,2,c
  2316  00065E  D019               	goto	l3747
  2317                           
  2318                           ; BSR set to: 0
  2319                           ;doprnt.c: 1253: {
  2320                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2321  000660  C0CB  FFD9         	movff	printf@ap,fsr2l
  2322  000664  C0CC  FFDA         	movff	printf@ap+1,fsr2h
  2323  000668  CFDE F0D0          	movff	postinc2,printf@val
  2324  00066C  CFDD F0D1          	movff	postdec2,printf@val+1
  2325                           
  2326                           ; BSR set to: 0
  2327  000670  0E02               	movlw	2
  2328  000672  0100               	movlb	0	; () banked
  2329  000674  27CB               	addwf	printf@ap& (0+255),f,b
  2330  000676  0E00               	movlw	0
  2331  000678  23CC               	addwfc	(printf@ap+1)& (0+255),f,b
  2332                           
  2333                           ; BSR set to: 0
  2334                           ;doprnt.c: 1261: if((int)val < 0) {
  2335  00067A  0100               	movlb	0	; () banked
  2336  00067C  AFD1               	btfss	(printf@val+1)& (0+255),7,b
  2337  00067E  D053               	goto	l3781
  2338                           
  2339                           ; BSR set to: 0
  2340                           ;doprnt.c: 1262: flag |= 0x03;
  2341  000680  0E03               	movlw	3
  2342  000682  0100               	movlb	0	; () banked
  2343  000684  13D2               	iorwf	printf@flag& (0+255),f,b
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;doprnt.c: 1263: val = -val;
  2347  000686  0100               	movlb	0	; () banked
  2348  000688  6DD0               	negf	printf@val& (0+255),b
  2349  00068A  1FD1               	comf	(printf@val+1)& (0+255),f,b
  2350  00068C  B0D8               	btfsc	status,0,c
  2351  00068E  2BD1               	incf	(printf@val+1)& (0+255),f,b
  2352                           
  2353                           ; BSR set to: 0
  2354                           ;doprnt.c: 1264: }
  2355                           ;doprnt.c: 1266: }
  2356  000690  D04A               	goto	l3781
  2357  000692                     l3747:
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;doprnt.c: 1268: else
  2361                           ;doprnt.c: 1273: {
  2362                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2363  000692  C0CB  FFD9         	movff	printf@ap,fsr2l
  2364  000696  C0CC  FFDA         	movff	printf@ap+1,fsr2h
  2365  00069A  CFDE F0D0          	movff	postinc2,printf@val
  2366  00069E  CFDD F0D1          	movff	postdec2,printf@val+1
  2367                           
  2368                           ; BSR set to: 0
  2369  0006A2  0E02               	movlw	2
  2370  0006A4  0100               	movlb	0	; () banked
  2371  0006A6  27CB               	addwf	printf@ap& (0+255),f,b
  2372  0006A8  0E00               	movlw	0
  2373  0006AA  23CC               	addwfc	(printf@ap+1)& (0+255),f,b
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;doprnt.c: 1287: }
  2377                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
  2378  0006AC  D03C               	goto	l3781
  2379  0006AE                     l3751:
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;doprnt.c: 1302: case 0xC0:
  2383                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2384  0006AE  0E01               	movlw	1
  2385  0006B0  0100               	movlb	0	; () banked
  2386  0006B2  6FD5               	movwf	printf@c& (0+255),b
  2387  0006B4                     l3753:
  2388                           
  2389                           ; BSR set to: 0
  2390  0006B4  0E05               	movlw	5
  2391  0006B6  0100               	movlb	0	; () banked
  2392  0006B8  19D5               	xorwf	printf@c& (0+255),w,b
  2393  0006BA  B4D8               	btfsc	status,2,c
  2394  0006BC  D040               	goto	l3783
  2395                           
  2396                           ; BSR set to: 0
  2397                           ;doprnt.c: 1306: if(val < dpowers[c])
  2398                           
  2399                           ; BSR set to: 0
  2400                           
  2401                           ; BSR set to: 0
  2402  0006BE  0100               	movlb	0	; () banked
  2403  0006C0  51D5               	movf	printf@c& (0+255),w,b
  2404  0006C2  0D02               	mullw	2
  2405  0006C4  0EC1               	movlw	low _dpowers
  2406  0006C6  24F3               	addwf	prodl,w,c
  2407  0006C8  6EF6               	movwf	tblptrl,c
  2408  0006CA  0EFD               	movlw	high _dpowers
  2409  0006CC  20F4               	addwfc	prodh,w,c
  2410  0006CE  6EF7               	movwf	tblptrh,c
  2411  0006D0                     	if	0	;There are less than 3 active tblptr bytes
  2412  0006D0                     	endif
  2413  0006D0  0009               	tblrd		*+
  2414  0006D2  50F5               	movf	tablat,w,c
  2415  0006D4  0100               	movlb	0	; () banked
  2416  0006D6  5DD0               	subwf	printf@val& (0+255),w,b
  2417  0006D8  0009               	tblrd		*+
  2418  0006DA  50F5               	movf	tablat,w,c
  2419  0006DC  0100               	movlb	0	; () banked
  2420  0006DE  59D1               	subwfb	(printf@val+1)& (0+255),w,b
  2421  0006E0  A0D8               	btfss	status,0,c
  2422  0006E2  D02D               	goto	l3783
  2423                           
  2424                           ; BSR set to: 0
  2425                           
  2426                           ; BSR set to: 0
  2427                           
  2428                           ; BSR set to: 0
  2429                           ;doprnt.c: 1307: break;
  2430  0006E4  0100               	movlb	0	; () banked
  2431  0006E6  2BD5               	incf	printf@c& (0+255),f,b
  2432  0006E8  D7E5               	goto	l3753
  2433  0006EA                     l3765:
  2434                           
  2435                           ; BSR set to: 0
  2436                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  2437  0006EA  0E01               	movlw	1
  2438  0006EC  0100               	movlb	0	; () banked
  2439  0006EE  6FD5               	movwf	printf@c& (0+255),b
  2440  0006F0                     l3767:
  2441                           
  2442                           ; BSR set to: 0
  2443  0006F0  0E04               	movlw	4
  2444  0006F2  0100               	movlb	0	; () banked
  2445  0006F4  19D5               	xorwf	printf@c& (0+255),w,b
  2446  0006F6  B4D8               	btfsc	status,2,c
  2447  0006F8  D022               	goto	l3783
  2448                           
  2449                           ; BSR set to: 0
  2450                           ;doprnt.c: 1317: if(val < hexpowers[c])
  2451                           
  2452                           ; BSR set to: 0
  2453                           
  2454                           ; BSR set to: 0
  2455  0006FA  0100               	movlb	0	; () banked
  2456  0006FC  51D5               	movf	printf@c& (0+255),w,b
  2457  0006FE  0D02               	mullw	2
  2458  000700  0ECB               	movlw	low _hexpowers
  2459  000702  24F3               	addwf	prodl,w,c
  2460  000704  6EF6               	movwf	tblptrl,c
  2461  000706  0EFD               	movlw	high _hexpowers
  2462  000708  20F4               	addwfc	prodh,w,c
  2463  00070A  6EF7               	movwf	tblptrh,c
  2464  00070C                     	if	0	;There are less than 3 active tblptr bytes
  2465  00070C                     	endif
  2466  00070C  0009               	tblrd		*+
  2467  00070E  50F5               	movf	tablat,w,c
  2468  000710  0100               	movlb	0	; () banked
  2469  000712  5DD0               	subwf	printf@val& (0+255),w,b
  2470  000714  0009               	tblrd		*+
  2471  000716  50F5               	movf	tablat,w,c
  2472  000718  0100               	movlb	0	; () banked
  2473  00071A  59D1               	subwfb	(printf@val+1)& (0+255),w,b
  2474  00071C  A0D8               	btfss	status,0,c
  2475  00071E  D00F               	goto	l3783
  2476                           
  2477                           ; BSR set to: 0
  2478                           
  2479                           ; BSR set to: 0
  2480                           
  2481                           ; BSR set to: 0
  2482                           ;doprnt.c: 1318: break;
  2483  000720  0100               	movlb	0	; () banked
  2484  000722  2BD5               	incf	printf@c& (0+255),f,b
  2485  000724  D7E5               	goto	l3767
  2486  000726                     l3781:
  2487                           
  2488                           ; BSR set to: 0
  2489  000726  0100               	movlb	0	; () banked
  2490  000728  51D2               	movf	printf@flag& (0+255),w,b
  2491  00072A  0BC0               	andlw	192
  2492                           
  2493                           ; Switch size 1, requested type "space"
  2494                           ; Number of cases is 3, Range of values is 0 to 192
  2495                           ; switch strategies available:
  2496                           ; Name         Instructions Cycles
  2497                           ; simple_byte           10     6 (average)
  2498                           ;	Chosen strategy is simple_byte
  2499  00072C  0A00               	xorlw	0	; case 0
  2500  00072E  B4D8               	btfsc	status,2,c
  2501  000730  D7BE               	goto	l3751
  2502  000732  0A80               	xorlw	128	; case 128
  2503  000734  B4D8               	btfsc	status,2,c
  2504  000736  D7D9               	goto	l3765
  2505  000738  0A40               	xorlw	64	; case 192
  2506  00073A  B4D8               	btfsc	status,2,c
  2507  00073C  D7B8               	goto	l3751
  2508  00073E                     l3783:
  2509                           
  2510                           ; BSR set to: 0
  2511                           ;doprnt.c: 1345: if(width && flag & 0x03)
  2512  00073E  0100               	movlb	0	; () banked
  2513  000740  51D3               	movf	printf@width& (0+255),w,b
  2514  000742  0100               	movlb	0	; () banked
  2515  000744  11D4               	iorwf	(printf@width+1)& (0+255),w,b
  2516  000746  B4D8               	btfsc	status,2,c
  2517  000748  D00B               	goto	l3789
  2518                           
  2519                           ; BSR set to: 0
  2520  00074A  C0D2  F0C4         	movff	printf@flag,??_printf
  2521  00074E  0E03               	movlw	3
  2522  000750  0100               	movlb	0	; () banked
  2523  000752  17C4               	andwf	??_printf& (0+255),f,b
  2524  000754  B4D8               	btfsc	status,2,c
  2525  000756  D004               	goto	l3789
  2526                           
  2527                           ; BSR set to: 0
  2528                           ;doprnt.c: 1346: width--;
  2529  000758  0100               	movlb	0	; () banked
  2530  00075A  07D3               	decf	printf@width& (0+255),f,b
  2531  00075C  A0D8               	btfss	status,0,c
  2532  00075E  07D4               	decf	(printf@width+1)& (0+255),f,b
  2533  000760                     l3789:
  2534                           
  2535                           ; BSR set to: 0
  2536                           ;doprnt.c: 1381: if(width > c)
  2537  000760  0E80               	movlw	128
  2538  000762  0100               	movlb	0	; () banked
  2539  000764  BFD5               	btfsc	printf@c& (0+255),7,b
  2540  000766  0E7F               	movlw	127
  2541  000768  0100               	movlb	0	; () banked
  2542  00076A  6FC4               	movwf	??_printf& (0+255),b
  2543  00076C  0100               	movlb	0	; () banked
  2544  00076E  51D3               	movf	printf@width& (0+255),w,b
  2545  000770  0100               	movlb	0	; () banked
  2546  000772  5DD5               	subwf	printf@c& (0+255),w,b
  2547  000774  0100               	movlb	0	; () banked
  2548  000776  51D4               	movf	(printf@width+1)& (0+255),w,b
  2549  000778  0A80               	xorlw	128
  2550  00077A  0100               	movlb	0	; () banked
  2551  00077C  59C4               	subwfb	??_printf& (0+255),w,b
  2552  00077E  B0D8               	btfsc	status,0,c
  2553  000780  D00B               	goto	l3793
  2554                           
  2555                           ; BSR set to: 0
  2556                           ;doprnt.c: 1382: width -= c;
  2557  000782  0100               	movlb	0	; () banked
  2558  000784  51D5               	movf	printf@c& (0+255),w,b
  2559  000786  0100               	movlb	0	; () banked
  2560  000788  5FD3               	subwf	printf@width& (0+255),f,b
  2561  00078A  0E00               	movlw	0
  2562  00078C  0100               	movlb	0	; () banked
  2563  00078E  BFD5               	btfsc	printf@c& (0+255),7,b
  2564  000790  0EFF               	movlw	255
  2565  000792  0100               	movlb	0	; () banked
  2566  000794  5BD4               	subwfb	(printf@width+1)& (0+255),f,b
  2567  000796  D005               	goto	l3795
  2568  000798                     l3793:
  2569                           
  2570                           ; BSR set to: 0
  2571                           ;doprnt.c: 1383: else
  2572                           ;doprnt.c: 1384: width = 0;
  2573  000798  0E00               	movlw	0
  2574  00079A  0100               	movlb	0	; () banked
  2575  00079C  6FD4               	movwf	(printf@width+1)& (0+255),b
  2576  00079E  0E00               	movlw	0
  2577  0007A0  6FD3               	movwf	printf@width& (0+255),b
  2578  0007A2                     l3795:
  2579                           
  2580                           ; BSR set to: 0
  2581                           ;doprnt.c: 1387: if(flag & 0x04) {
  2582  0007A2  0100               	movlb	0	; () banked
  2583  0007A4  A5D2               	btfss	printf@flag& (0+255),2,b
  2584  0007A6  D018               	goto	l3807
  2585                           
  2586                           ; BSR set to: 0
  2587                           ;doprnt.c: 1392: if(flag & 0x03)
  2588  0007A8  C0D2  F0C4         	movff	printf@flag,??_printf
  2589  0007AC  0E03               	movlw	3
  2590  0007AE  0100               	movlb	0	; () banked
  2591  0007B0  17C4               	andwf	??_printf& (0+255),f,b
  2592  0007B2  B4D8               	btfsc	status,2,c
  2593  0007B4  D003               	goto	l3801
  2594                           
  2595                           ; BSR set to: 0
  2596                           ;doprnt.c: 1393: (putch('-') );
  2597  0007B6  0E2D               	movlw	45
  2598  0007B8  EC3D  F013         	call	_putch
  2599  0007BC                     l3801:
  2600                           
  2601                           ;doprnt.c: 1415: if(width)
  2602  0007BC  0100               	movlb	0	; () banked
  2603  0007BE  51D3               	movf	printf@width& (0+255),w,b
  2604  0007C0  0100               	movlb	0	; () banked
  2605  0007C2  11D4               	iorwf	(printf@width+1)& (0+255),w,b
  2606  0007C4  B4D8               	btfsc	status,2,c
  2607  0007C6  D025               	goto	l3817
  2608                           
  2609                           ; BSR set to: 0
  2610                           ;doprnt.c: 1417: (putch('0') );
  2611                           
  2612                           ; BSR set to: 0
  2613                           
  2614                           ;doprnt.c: 1416: do
  2615  0007C8  0E30               	movlw	48
  2616  0007CA  EC3D  F013         	call	_putch
  2617                           
  2618                           ;doprnt.c: 1418: while(--width);
  2619  0007CE  0100               	movlb	0	; () banked
  2620  0007D0  07D3               	decf	printf@width& (0+255),f,b
  2621  0007D2  A0D8               	btfss	status,0,c
  2622  0007D4  07D4               	decf	(printf@width+1)& (0+255),f,b
  2623  0007D6  D7F2               	goto	l3801
  2624  0007D8                     l3807:
  2625                           
  2626                           ; BSR set to: 0
  2627                           ;doprnt.c: 1422: {
  2628                           ;doprnt.c: 1424: if(width
  2629                           ;doprnt.c: 1428: )
  2630  0007D8  0100               	movlb	0	; () banked
  2631  0007DA  51D3               	movf	printf@width& (0+255),w,b
  2632  0007DC  0100               	movlb	0	; () banked
  2633  0007DE  11D4               	iorwf	(printf@width+1)& (0+255),w,b
  2634  0007E0  B4D8               	btfsc	status,2,c
  2635  0007E2  D00D               	goto	l3813
  2636  0007E4                     l3809:
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;doprnt.c: 1430: (putch(' ') );
  2640  0007E4  0E20               	movlw	32
  2641  0007E6  EC3D  F013         	call	_putch
  2642                           
  2643                           ;doprnt.c: 1431: while(--width);
  2644  0007EA  0100               	movlb	0	; () banked
  2645  0007EC  07D3               	decf	printf@width& (0+255),f,b
  2646  0007EE  A0D8               	btfss	status,0,c
  2647  0007F0  07D4               	decf	(printf@width+1)& (0+255),f,b
  2648  0007F2  0100               	movlb	0	; () banked
  2649  0007F4  51D3               	movf	printf@width& (0+255),w,b
  2650  0007F6  0100               	movlb	0	; () banked
  2651  0007F8  11D4               	iorwf	(printf@width+1)& (0+255),w,b
  2652  0007FA  A4D8               	btfss	status,2,c
  2653  0007FC  D7F3               	goto	l3809
  2654  0007FE                     l3813:
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;doprnt.c: 1438: if(flag & 0x03)
  2658  0007FE  C0D2  F0C4         	movff	printf@flag,??_printf
  2659  000802  0E03               	movlw	3
  2660  000804  0100               	movlb	0	; () banked
  2661  000806  17C4               	andwf	??_printf& (0+255),f,b
  2662  000808  B4D8               	btfsc	status,2,c
  2663  00080A  D003               	goto	l3817
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;doprnt.c: 1439: (putch('-') );
  2667  00080C  0E2D               	movlw	45
  2668  00080E  EC3D  F013         	call	_putch
  2669  000812                     l3817:
  2670                           
  2671                           ;doprnt.c: 1469: }
  2672                           ;doprnt.c: 1472: prec = c;
  2673  000812  C0D5  F0CF         	movff	printf@c,printf@prec
  2674                           
  2675                           ;doprnt.c: 1474: while(prec--) {
  2676  000816  D05D               	goto	l3831
  2677  000818                     l3819:
  2678                           
  2679                           ;doprnt.c: 1486: case 0xC0:
  2680                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2681  000818  0100               	movlb	0	; () banked
  2682  00081A  51CF               	movf	printf@prec& (0+255),w,b
  2683  00081C  0D02               	mullw	2
  2684  00081E  0EC1               	movlw	low _dpowers
  2685  000820  24F3               	addwf	prodl,w,c
  2686  000822  6EF6               	movwf	tblptrl,c
  2687  000824  0EFD               	movlw	high _dpowers
  2688  000826  20F4               	addwfc	prodh,w,c
  2689  000828  6EF7               	movwf	tblptrh,c
  2690  00082A                     	if	0	;There are less than 3 active tblptr bytes
  2691  00082A                     	endif
  2692  00082A  0009               	tblrd		*+
  2693  00082C  CFF5 F0B2          	movff	tablat,___lwdiv@divisor
  2694  000830  000A               	tblrd		*-
  2695  000832  CFF5 F0B3          	movff	tablat,___lwdiv@divisor+1
  2696  000836  C0D0  F0B0         	movff	printf@val,___lwdiv@dividend
  2697  00083A  C0D1  F0B1         	movff	printf@val+1,___lwdiv@dividend+1
  2698  00083E  ECE6  F00E         	call	___lwdiv	;wreg free
  2699  000842  C0B0  F0B7         	movff	?___lwdiv,___lwmod@dividend
  2700  000846  C0B1  F0B8         	movff	?___lwdiv+1,___lwmod@dividend+1
  2701  00084A  0E00               	movlw	0
  2702  00084C  0100               	movlb	0	; () banked
  2703  00084E  6FBA               	movwf	(___lwmod@divisor+1)& (0+255),b
  2704  000850  0E0A               	movlw	10
  2705  000852  6FB9               	movwf	___lwmod@divisor& (0+255),b
  2706  000854  EC40  F010         	call	___lwmod	;wreg free
  2707  000858  0100               	movlb	0	; () banked
  2708  00085A  51B7               	movf	?___lwmod& (0+255),w,b
  2709  00085C  0F30               	addlw	48
  2710  00085E  0100               	movlb	0	; () banked
  2711  000860  6FD5               	movwf	printf@c& (0+255),b
  2712                           
  2713                           ;doprnt.c: 1491: break;
  2714  000862  D033               	goto	l3829
  2715  000864                     l3821:
  2716                           
  2717                           ; BSR set to: 0
  2718                           ;doprnt.c: 1499: {
  2719                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  2720  000864  C0D0  F0B0         	movff	printf@val,___lwdiv@dividend
  2721  000868  C0D1  F0B1         	movff	printf@val+1,___lwdiv@dividend+1
  2722  00086C  0100               	movlb	0	; () banked
  2723  00086E  51CF               	movf	printf@prec& (0+255),w,b
  2724  000870  0D02               	mullw	2
  2725  000872  0ECB               	movlw	low _hexpowers
  2726  000874  24F3               	addwf	prodl,w,c
  2727  000876  6EF6               	movwf	tblptrl,c
  2728  000878  0EFD               	movlw	high _hexpowers
  2729  00087A  20F4               	addwfc	prodh,w,c
  2730  00087C  6EF7               	movwf	tblptrh,c
  2731  00087E                     	if	0	;There are less than 3 active tblptr bytes
  2732  00087E                     	endif
  2733  00087E  0009               	tblrd		*+
  2734  000880  CFF5 F0B2          	movff	tablat,___lwdiv@divisor
  2735  000884  000A               	tblrd		*-
  2736  000886  CFF5 F0B3          	movff	tablat,___lwdiv@divisor+1
  2737  00088A  ECE6  F00E         	call	___lwdiv	;wreg free
  2738  00088E  0100               	movlb	0	; () banked
  2739  000890  51B0               	movf	?___lwdiv& (0+255),w,b
  2740  000892  0B0F               	andlw	15
  2741  000894  0100               	movlb	0	; () banked
  2742  000896  6FCA               	movwf	printf@idx& (0+255),b
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  2746  000898  0100               	movlb	0	; () banked
  2747  00089A  51CA               	movf	printf@idx& (0+255),w,b
  2748  00089C  0D01               	mullw	1
  2749  00089E  0E9D               	movlw	low STR_47
  2750  0008A0  24F3               	addwf	prodl,w,c
  2751  0008A2  6EF6               	movwf	tblptrl,c
  2752  0008A4  0EFF               	movlw	high STR_47
  2753  0008A6  20F4               	addwfc	prodh,w,c
  2754  0008A8  6EF7               	movwf	tblptrh,c
  2755  0008AA                     	if	0	;There are less than 3 active tblptr bytes
  2756  0008AA                     	endif
  2757  0008AA  0008               	tblrd		*
  2758  0008AC  CFF5 F0D5          	movff	tablat,printf@c
  2759                           
  2760                           ; BSR set to: 0
  2761                           ;doprnt.c: 1523: }
  2762                           
  2763                           ;doprnt.c: 1508: }
  2764                           ;doprnt.c: 1510: break;
  2765  0008B0  D00C               	goto	l3829
  2766  0008B2                     l3827:
  2767  0008B2  0100               	movlb	0	; () banked
  2768  0008B4  51D2               	movf	printf@flag& (0+255),w,b
  2769  0008B6  0BC0               	andlw	192
  2770                           
  2771                           ; Switch size 1, requested type "space"
  2772                           ; Number of cases is 3, Range of values is 0 to 192
  2773                           ; switch strategies available:
  2774                           ; Name         Instructions Cycles
  2775                           ; simple_byte           10     6 (average)
  2776                           ;	Chosen strategy is simple_byte
  2777  0008B8  0A00               	xorlw	0	; case 0
  2778  0008BA  B4D8               	btfsc	status,2,c
  2779  0008BC  D7AD               	goto	l3819
  2780  0008BE  0A80               	xorlw	128	; case 128
  2781  0008C0  B4D8               	btfsc	status,2,c
  2782  0008C2  D7D0               	goto	l3821
  2783  0008C4  0A40               	xorlw	64	; case 192
  2784  0008C6  B4D8               	btfsc	status,2,c
  2785  0008C8  D7A7               	goto	l3819
  2786  0008CA                     l3829:
  2787                           
  2788                           ; BSR set to: 0
  2789                           ;doprnt.c: 1524: (putch(c) );
  2790  0008CA  0100               	movlb	0	; () banked
  2791  0008CC  51D5               	movf	printf@c& (0+255),w,b
  2792  0008CE  EC3D  F013         	call	_putch
  2793  0008D2                     l3831:
  2794  0008D2  0100               	movlb	0	; () banked
  2795  0008D4  07CF               	decf	printf@prec& (0+255),f,b
  2796  0008D6  0100               	movlb	0	; () banked
  2797  0008D8  29CF               	incf	printf@prec& (0+255),w,b
  2798  0008DA  A4D8               	btfss	status,2,c
  2799  0008DC  D7EA               	goto	l3827
  2800  0008DE                     l3833:
  2801  0008DE  C0BC  FFF6         	movff	printf@f,tblptrl
  2802  0008E2  C0BD  FFF7         	movff	printf@f+1,tblptrh
  2803  0008E6  0100               	movlb	0	; () banked
  2804  0008E8  4BBC               	infsnz	printf@f& (0+255),f,b
  2805  0008EA  2BBD               	incf	(printf@f+1)& (0+255),f,b
  2806  0008EC                     	if	0	;tblptru may be non-zero
  2807  0008EC                     	endif
  2808  0008EC                     	if	0	;tblptru may be non-zero
  2809  0008EC                     	endif
  2810  0008EC  0008               	tblrd		*
  2811  0008EE  CFF5 F0D5          	movff	tablat,printf@c
  2812  0008F2  0100               	movlb	0	; () banked
  2813  0008F4  51D5               	movf	printf@c& (0+255),w,b
  2814  0008F6  B4D8               	btfsc	status,2,c
  2815  0008F8  0012               	return	
  2816  0008FA  D5D2               	goto	l3683
  2817  0008FC                     __end_of_printf:
  2818                           	opt stack 0
  2819                           tblptru	equ	0xFF8
  2820                           tblptrh	equ	0xFF7
  2821                           tblptrl	equ	0xFF6
  2822                           tablat	equ	0xFF5
  2823                           prodh	equ	0xFF4
  2824                           prodl	equ	0xFF3
  2825                           intcon	equ	0xFF2
  2826                           intcon3	equ	0xFF0
  2827                           postinc0	equ	0xFEE
  2828                           wreg	equ	0xFE8
  2829                           postdec1	equ	0xFE5
  2830                           fsr1l	equ	0xFE1
  2831                           indf2	equ	0xFDF
  2832                           postinc2	equ	0xFDE
  2833                           postdec2	equ	0xFDD
  2834                           fsr2h	equ	0xFDA
  2835                           fsr2l	equ	0xFD9
  2836                           status	equ	0xFD8
  2837                           
  2838 ;; *************** function _putch *****************
  2839 ;; Defined at:
  2840 ;;		line 25 in file "lcd.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  data            1    wreg     unsigned char 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;  data            1    2[BANK0 ] unsigned char 
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  1    wreg      void 
  2847 ;; Registers used:
  2848 ;;		wreg, status,2, status,0, cstack
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2855 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2857 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2858 ;;Total ram usage:        1 bytes
  2859 ;; Hardware stack levels used:    1
  2860 ;; Hardware stack levels required when called:    8
  2861 ;; This function calls:
  2862 ;;		_lcdNibble
  2863 ;; This function is called by:
  2864 ;;		_printf
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text3
  2869  00267A                     __ptext3:
  2870                           	opt stack 0
  2871  00267A                     _putch:
  2872                           	opt stack 20
  2873                           
  2874                           ;incstack = 0
  2875                           ;putch@data stored from wreg
  2876  00267A  0100               	movlb	0	; () banked
  2877  00267C  6FB2               	movwf	putch@data& (0+255),b
  2878                           
  2879                           ;lcd.c: 26: LATDbits.LATD2 = 1;
  2880  00267E  848C               	bsf	3980,2,c	;volatile
  2881                           
  2882                           ;lcd.c: 27: lcdNibble(data);
  2883  002680  0100               	movlb	0	; () banked
  2884  002682  51B2               	movf	putch@data& (0+255),w,b
  2885  002684  EC0C  F010         	call	_lcdNibble
  2886  002688  0012               	return		;funcret
  2887  00268A                     __end_of_putch:
  2888                           	opt stack 0
  2889                           tblptru	equ	0xFF8
  2890                           tblptrh	equ	0xFF7
  2891                           tblptrl	equ	0xFF6
  2892                           tablat	equ	0xFF5
  2893                           prodh	equ	0xFF4
  2894                           prodl	equ	0xFF3
  2895                           intcon	equ	0xFF2
  2896                           intcon3	equ	0xFF0
  2897                           postinc0	equ	0xFEE
  2898                           wreg	equ	0xFE8
  2899                           postdec1	equ	0xFE5
  2900                           fsr1l	equ	0xFE1
  2901                           indf2	equ	0xFDF
  2902                           postinc2	equ	0xFDE
  2903                           postdec2	equ	0xFDD
  2904                           fsr2h	equ	0xFDA
  2905                           fsr2l	equ	0xFD9
  2906                           status	equ	0xFD8
  2907                           
  2908 ;; *************** function _isdigit *****************
  2909 ;; Defined at:
  2910 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\isdigit.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;  c               1    wreg     unsigned char 
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;  c               1    2[BANK0 ] unsigned char 
  2915 ;; Return value:  Size  Location     Type
  2916 ;;		None               void
  2917 ;; Registers used:
  2918 ;;		wreg, status,2, status,0
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2925 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2927 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2928 ;;Total ram usage:        3 bytes
  2929 ;; Hardware stack levels used:    1
  2930 ;; Hardware stack levels required when called:    7
  2931 ;; This function calls:
  2932 ;;		Nothing
  2933 ;; This function is called by:
  2934 ;;		_printf
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           	psect	text4
  2939  00247E                     __ptext4:
  2940                           	opt stack 0
  2941  00247E                     _isdigit:
  2942                           	opt stack 21
  2943                           
  2944                           ;incstack = 0
  2945                           ;isdigit@c stored from wreg
  2946  00247E  0100               	movlb	0	; () banked
  2947  002480  6FB2               	movwf	isdigit@c& (0+255),b
  2948  002482  0E00               	movlw	0
  2949  002484  0100               	movlb	0	; () banked
  2950  002486  6FB1               	movwf	_isdigit$1079& (0+255),b
  2951                           
  2952                           ; BSR set to: 0
  2953  002488  0E3A               	movlw	58
  2954  00248A  0100               	movlb	0	; () banked
  2955  00248C  61B2               	cpfslt	isdigit@c& (0+255),b
  2956  00248E  D007               	goto	l3539
  2957                           
  2958                           ; BSR set to: 0
  2959  002490  0E2F               	movlw	47
  2960  002492  0100               	movlb	0	; () banked
  2961  002494  65B2               	cpfsgt	isdigit@c& (0+255),b
  2962  002496  D003               	goto	l3539
  2963                           
  2964                           ; BSR set to: 0
  2965  002498  0E01               	movlw	1
  2966  00249A  0100               	movlb	0	; () banked
  2967  00249C  6FB1               	movwf	_isdigit$1079& (0+255),b
  2968  00249E                     l3539:
  2969                           
  2970                           ; BSR set to: 0
  2971  00249E  C0B1  F0B0         	movff	_isdigit$1079,??_isdigit
  2972  0024A2  0100               	movlb	0	; () banked
  2973  0024A4  31B0               	rrcf	??_isdigit& (0+255),w,b
  2974  0024A6  0012               	return	
  2975  0024A8                     __end_of_isdigit:
  2976                           	opt stack 0
  2977                           tblptru	equ	0xFF8
  2978                           tblptrh	equ	0xFF7
  2979                           tblptrl	equ	0xFF6
  2980                           tablat	equ	0xFF5
  2981                           prodh	equ	0xFF4
  2982                           prodl	equ	0xFF3
  2983                           intcon	equ	0xFF2
  2984                           intcon3	equ	0xFF0
  2985                           postinc0	equ	0xFEE
  2986                           wreg	equ	0xFE8
  2987                           postdec1	equ	0xFE5
  2988                           fsr1l	equ	0xFE1
  2989                           indf2	equ	0xFDF
  2990                           postinc2	equ	0xFDE
  2991                           postdec2	equ	0xFDD
  2992                           fsr2h	equ	0xFDA
  2993                           fsr2l	equ	0xFD9
  2994                           status	equ	0xFD8
  2995                           
  2996 ;; *************** function ___wmul *****************
  2997 ;; Defined at:
  2998 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3001 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;  product         2    4[BANK0 ] unsigned int 
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  2    0[BANK0 ] unsigned int 
  3006 ;; Registers used:
  3007 ;;		wreg, status,2, status,0, prodl, prodh
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3013 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3014 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3016 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3017 ;;Total ram usage:        6 bytes
  3018 ;; Hardware stack levels used:    1
  3019 ;; Hardware stack levels required when called:    7
  3020 ;; This function calls:
  3021 ;;		Nothing
  3022 ;; This function is called by:
  3023 ;;		_printf
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026                           
  3027                           	psect	text5
  3028  00241A                     __ptext5:
  3029                           	opt stack 0
  3030  00241A                     ___wmul:
  3031                           	opt stack 21
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;incstack = 0
  3035  00241A  0100               	movlb	0	; () banked
  3036  00241C  51B0               	movf	___wmul@multiplier& (0+255),w,b
  3037  00241E  0100               	movlb	0	; () banked
  3038  002420  03B2               	mulwf	___wmul@multiplicand& (0+255),b
  3039  002422  CFF3 F0B4          	movff	prodl,___wmul@product
  3040  002426  CFF4 F0B5          	movff	prodh,___wmul@product+1
  3041  00242A  0100               	movlb	0	; () banked
  3042  00242C  51B0               	movf	___wmul@multiplier& (0+255),w,b
  3043  00242E  0100               	movlb	0	; () banked
  3044  002430  03B3               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3045  002432  50F3               	movf	prodl,w,c
  3046  002434  0100               	movlb	0	; () banked
  3047  002436  27B5               	addwf	(___wmul@product+1)& (0+255),f,b
  3048  002438  0100               	movlb	0	; () banked
  3049  00243A  51B1               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3050  00243C  0100               	movlb	0	; () banked
  3051  00243E  03B2               	mulwf	___wmul@multiplicand& (0+255),b
  3052  002440  50F3               	movf	prodl,w,c
  3053  002442  0100               	movlb	0	; () banked
  3054  002444  27B5               	addwf	(___wmul@product+1)& (0+255),f,b
  3055                           
  3056                           ; BSR set to: 0
  3057  002446  C0B4  F0B0         	movff	___wmul@product,?___wmul
  3058  00244A  C0B5  F0B1         	movff	___wmul@product+1,?___wmul+1
  3059  00244E  0012               	return	
  3060  002450                     __end_of___wmul:
  3061                           	opt stack 0
  3062                           tblptru	equ	0xFF8
  3063                           tblptrh	equ	0xFF7
  3064                           tblptrl	equ	0xFF6
  3065                           tablat	equ	0xFF5
  3066                           prodh	equ	0xFF4
  3067                           prodl	equ	0xFF3
  3068                           intcon	equ	0xFF2
  3069                           intcon3	equ	0xFF0
  3070                           postinc0	equ	0xFEE
  3071                           wreg	equ	0xFE8
  3072                           postdec1	equ	0xFE5
  3073                           fsr1l	equ	0xFE1
  3074                           indf2	equ	0xFDF
  3075                           postinc2	equ	0xFDE
  3076                           postdec2	equ	0xFDD
  3077                           fsr2h	equ	0xFDA
  3078                           fsr2l	equ	0xFD9
  3079                           status	equ	0xFD8
  3080                           
  3081 ;; *************** function ___lwmod *****************
  3082 ;; Defined at:
  3083 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;  dividend        2    7[BANK0 ] unsigned int 
  3086 ;;  divisor         2    9[BANK0 ] unsigned int 
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;  counter         1   11[BANK0 ] unsigned char 
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  2    7[BANK0 ] unsigned int 
  3091 ;; Registers used:
  3092 ;;		wreg, status,2, status,0
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3098 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3099 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3101 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3102 ;;Total ram usage:        5 bytes
  3103 ;; Hardware stack levels used:    1
  3104 ;; Hardware stack levels required when called:    7
  3105 ;; This function calls:
  3106 ;;		Nothing
  3107 ;; This function is called by:
  3108 ;;		_printf
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           	psect	text6
  3113  002080                     __ptext6:
  3114                           	opt stack 0
  3115  002080                     ___lwmod:
  3116                           	opt stack 21
  3117                           
  3118                           ; BSR set to: 0
  3119                           ;incstack = 0
  3120  002080  0100               	movlb	0	; () banked
  3121  002082  51B9               	movf	___lwmod@divisor& (0+255),w,b
  3122  002084  0100               	movlb	0	; () banked
  3123  002086  11BA               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  3124  002088  B4D8               	btfsc	status,2,c
  3125  00208A  D026               	goto	l984
  3126                           
  3127                           ; BSR set to: 0
  3128  00208C  0E01               	movlw	1
  3129  00208E  0100               	movlb	0	; () banked
  3130  002090  6FBB               	movwf	___lwmod@counter& (0+255),b
  3131  002092  D006               	goto	l3599
  3132  002094                     l3597:
  3133                           
  3134                           ; BSR set to: 0
  3135  002094  0100               	movlb	0	; () banked
  3136  002096  90D8               	bcf	status,0,c
  3137  002098  37B9               	rlcf	___lwmod@divisor& (0+255),f,b
  3138  00209A  37BA               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  3139  00209C  0100               	movlb	0	; () banked
  3140  00209E  2BBB               	incf	___lwmod@counter& (0+255),f,b
  3141  0020A0                     l3599:
  3142                           
  3143                           ; BSR set to: 0
  3144  0020A0  0100               	movlb	0	; () banked
  3145  0020A2  AFBA               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  3146  0020A4  D7F7               	goto	l3597
  3147  0020A6                     l3601:
  3148                           
  3149                           ; BSR set to: 0
  3150  0020A6  0100               	movlb	0	; () banked
  3151  0020A8  51B9               	movf	___lwmod@divisor& (0+255),w,b
  3152  0020AA  0100               	movlb	0	; () banked
  3153  0020AC  5DB7               	subwf	___lwmod@dividend& (0+255),w,b
  3154  0020AE  0100               	movlb	0	; () banked
  3155  0020B0  51BA               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3156  0020B2  0100               	movlb	0	; () banked
  3157  0020B4  59B8               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  3158  0020B6  A0D8               	btfss	status,0,c
  3159  0020B8  D008               	goto	l3605
  3160                           
  3161                           ; BSR set to: 0
  3162  0020BA  0100               	movlb	0	; () banked
  3163  0020BC  51B9               	movf	___lwmod@divisor& (0+255),w,b
  3164  0020BE  0100               	movlb	0	; () banked
  3165  0020C0  5FB7               	subwf	___lwmod@dividend& (0+255),f,b
  3166  0020C2  0100               	movlb	0	; () banked
  3167  0020C4  51BA               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3168  0020C6  0100               	movlb	0	; () banked
  3169  0020C8  5BB8               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  3170  0020CA                     l3605:
  3171                           
  3172                           ; BSR set to: 0
  3173  0020CA  0100               	movlb	0	; () banked
  3174  0020CC  90D8               	bcf	status,0,c
  3175  0020CE  33BA               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  3176  0020D0  33B9               	rrcf	___lwmod@divisor& (0+255),f,b
  3177                           
  3178                           ; BSR set to: 0
  3179  0020D2  0100               	movlb	0	; () banked
  3180  0020D4  2FBB               	decfsz	___lwmod@counter& (0+255),f,b
  3181  0020D6  D7E7               	goto	l3601
  3182  0020D8                     l984:
  3183                           
  3184                           ; BSR set to: 0
  3185  0020D8  C0B7  F0B7         	movff	___lwmod@dividend,?___lwmod
  3186  0020DC  C0B8  F0B8         	movff	___lwmod@dividend+1,?___lwmod+1
  3187                           
  3188                           ; BSR set to: 0
  3189  0020E0  0012               	return		;funcret
  3190  0020E2                     __end_of___lwmod:
  3191                           	opt stack 0
  3192                           tblptru	equ	0xFF8
  3193                           tblptrh	equ	0xFF7
  3194                           tblptrl	equ	0xFF6
  3195                           tablat	equ	0xFF5
  3196                           prodh	equ	0xFF4
  3197                           prodl	equ	0xFF3
  3198                           intcon	equ	0xFF2
  3199                           intcon3	equ	0xFF0
  3200                           postinc0	equ	0xFEE
  3201                           wreg	equ	0xFE8
  3202                           postdec1	equ	0xFE5
  3203                           fsr1l	equ	0xFE1
  3204                           indf2	equ	0xFDF
  3205                           postinc2	equ	0xFDE
  3206                           postdec2	equ	0xFDD
  3207                           fsr2h	equ	0xFDA
  3208                           fsr2l	equ	0xFD9
  3209                           status	equ	0xFD8
  3210                           
  3211 ;; *************** function ___lwdiv *****************
  3212 ;; Defined at:
  3213 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;  dividend        2    0[BANK0 ] unsigned int 
  3216 ;;  divisor         2    2[BANK0 ] unsigned int 
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;  quotient        2    4[BANK0 ] unsigned int 
  3219 ;;  counter         1    6[BANK0 ] unsigned char 
  3220 ;; Return value:  Size  Location     Type
  3221 ;;                  2    0[BANK0 ] unsigned int 
  3222 ;; Registers used:
  3223 ;;		wreg, status,2, status,0
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3229 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3230 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3232 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3233 ;;Total ram usage:        7 bytes
  3234 ;; Hardware stack levels used:    1
  3235 ;; Hardware stack levels required when called:    7
  3236 ;; This function calls:
  3237 ;;		Nothing
  3238 ;; This function is called by:
  3239 ;;		_printf
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           	psect	text7
  3244  001DCC                     __ptext7:
  3245                           	opt stack 0
  3246  001DCC                     ___lwdiv:
  3247                           	opt stack 21
  3248                           
  3249                           ; BSR set to: 0
  3250                           ;incstack = 0
  3251  001DCC  0E00               	movlw	0
  3252  001DCE  0100               	movlb	0	; () banked
  3253  001DD0  6FB5               	movwf	(___lwdiv@quotient+1)& (0+255),b
  3254  001DD2  0E00               	movlw	0
  3255  001DD4  6FB4               	movwf	___lwdiv@quotient& (0+255),b
  3256                           
  3257                           ; BSR set to: 0
  3258  001DD6  0100               	movlb	0	; () banked
  3259  001DD8  51B2               	movf	___lwdiv@divisor& (0+255),w,b
  3260  001DDA  0100               	movlb	0	; () banked
  3261  001DDC  11B3               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  3262  001DDE  B4D8               	btfsc	status,2,c
  3263  001DE0  D02C               	goto	l974
  3264                           
  3265                           ; BSR set to: 0
  3266  001DE2  0E01               	movlw	1
  3267  001DE4  0100               	movlb	0	; () banked
  3268  001DE6  6FB6               	movwf	___lwdiv@counter& (0+255),b
  3269  001DE8  D006               	goto	l3579
  3270  001DEA                     l3577:
  3271                           
  3272                           ; BSR set to: 0
  3273  001DEA  0100               	movlb	0	; () banked
  3274  001DEC  90D8               	bcf	status,0,c
  3275  001DEE  37B2               	rlcf	___lwdiv@divisor& (0+255),f,b
  3276  001DF0  37B3               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  3277  001DF2  0100               	movlb	0	; () banked
  3278  001DF4  2BB6               	incf	___lwdiv@counter& (0+255),f,b
  3279  001DF6                     l3579:
  3280                           
  3281                           ; BSR set to: 0
  3282  001DF6  0100               	movlb	0	; () banked
  3283  001DF8  AFB3               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  3284  001DFA  D7F7               	goto	l3577
  3285  001DFC                     l3581:
  3286                           
  3287                           ; BSR set to: 0
  3288  001DFC  0100               	movlb	0	; () banked
  3289  001DFE  90D8               	bcf	status,0,c
  3290  001E00  37B4               	rlcf	___lwdiv@quotient& (0+255),f,b
  3291  001E02  37B5               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  3292                           
  3293                           ; BSR set to: 0
  3294  001E04  0100               	movlb	0	; () banked
  3295  001E06  51B2               	movf	___lwdiv@divisor& (0+255),w,b
  3296  001E08  0100               	movlb	0	; () banked
  3297  001E0A  5DB0               	subwf	___lwdiv@dividend& (0+255),w,b
  3298  001E0C  0100               	movlb	0	; () banked
  3299  001E0E  51B3               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3300  001E10  0100               	movlb	0	; () banked
  3301  001E12  59B1               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  3302  001E14  A0D8               	btfss	status,0,c
  3303  001E16  D00A               	goto	l3589
  3304                           
  3305                           ; BSR set to: 0
  3306  001E18  0100               	movlb	0	; () banked
  3307  001E1A  51B2               	movf	___lwdiv@divisor& (0+255),w,b
  3308  001E1C  0100               	movlb	0	; () banked
  3309  001E1E  5FB0               	subwf	___lwdiv@dividend& (0+255),f,b
  3310  001E20  0100               	movlb	0	; () banked
  3311  001E22  51B3               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3312  001E24  0100               	movlb	0	; () banked
  3313  001E26  5BB1               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  3314                           
  3315                           ; BSR set to: 0
  3316  001E28  0100               	movlb	0	; () banked
  3317  001E2A  81B4               	bsf	___lwdiv@quotient& (0+255),0,b
  3318  001E2C                     l3589:
  3319                           
  3320                           ; BSR set to: 0
  3321  001E2C  0100               	movlb	0	; () banked
  3322  001E2E  90D8               	bcf	status,0,c
  3323  001E30  33B3               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  3324  001E32  33B2               	rrcf	___lwdiv@divisor& (0+255),f,b
  3325                           
  3326                           ; BSR set to: 0
  3327  001E34  0100               	movlb	0	; () banked
  3328  001E36  2FB6               	decfsz	___lwdiv@counter& (0+255),f,b
  3329  001E38  D7E1               	goto	l3581
  3330  001E3A                     l974:
  3331                           
  3332                           ; BSR set to: 0
  3333  001E3A  C0B4  F0B0         	movff	___lwdiv@quotient,?___lwdiv
  3334  001E3E  C0B5  F0B1         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3335                           
  3336                           ; BSR set to: 0
  3337  001E42  0012               	return		;funcret
  3338  001E44                     __end_of___lwdiv:
  3339                           	opt stack 0
  3340                           tblptru	equ	0xFF8
  3341                           tblptrh	equ	0xFF7
  3342                           tblptrl	equ	0xFF6
  3343                           tablat	equ	0xFF5
  3344                           prodh	equ	0xFF4
  3345                           prodl	equ	0xFF3
  3346                           intcon	equ	0xFF2
  3347                           intcon3	equ	0xFF0
  3348                           postinc0	equ	0xFEE
  3349                           wreg	equ	0xFE8
  3350                           postdec1	equ	0xFE5
  3351                           fsr1l	equ	0xFE1
  3352                           indf2	equ	0xFDF
  3353                           postinc2	equ	0xFDE
  3354                           postdec2	equ	0xFDD
  3355                           fsr2h	equ	0xFDA
  3356                           fsr2l	equ	0xFD9
  3357                           status	equ	0xFD8
  3358                           
  3359 ;; *************** function _getTime *****************
  3360 ;; Defined at:
  3361 ;;		line 76 in file "modules.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;  time            2    3[BANK0 ] PTR unsigned char 
  3364 ;;		 -> time(7), 
  3365 ;; Auto vars:     Size  Location     Type
  3366 ;;  i               1    5[BANK0 ] unsigned char 
  3367 ;; Return value:  Size  Location     Type
  3368 ;;                  1    wreg      void 
  3369 ;; Registers used:
  3370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3371 ;; Tracked objects:
  3372 ;;		On entry : 0/0
  3373 ;;		On exit  : 0/0
  3374 ;;		Unchanged: 0/0
  3375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3376 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3377 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3379 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3380 ;;Total ram usage:        3 bytes
  3381 ;; Hardware stack levels used:    1
  3382 ;; Hardware stack levels required when called:    9
  3383 ;; This function calls:
  3384 ;;		_I2C_Master_Read
  3385 ;;		_I2C_Master_Start
  3386 ;;		_I2C_Master_Stop
  3387 ;;		_I2C_Master_Write
  3388 ;; This function is called by:
  3389 ;;		_showRTC
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393                           	psect	text8
  3394  001BAA                     __ptext8:
  3395                           	opt stack 0
  3396  001BAA                     _getTime:
  3397                           	opt stack 20
  3398                           
  3399                           ;modules.c: 77: (INTCONbits.GIE = 0);
  3400                           
  3401                           ; BSR set to: 0
  3402                           ;incstack = 0
  3403  001BAA  9EF2               	bcf	intcon,7,c	;volatile
  3404                           
  3405                           ;modules.c: 81: I2C_Master_Start();
  3406  001BAC  EC6C  F013         	call	_I2C_Master_Start	;wreg free
  3407                           
  3408                           ;modules.c: 82: I2C_Master_Write(0b11010000);
  3409  001BB0  0E00               	movlw	0
  3410  001BB2  0100               	movlb	0	; () banked
  3411  001BB4  6FB2               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  3412  001BB6  0ED0               	movlw	208
  3413  001BB8  6FB1               	movwf	I2C_Master_Write@d& (0+255),b
  3414  001BBA  EC5E  F013         	call	_I2C_Master_Write	;wreg free
  3415                           
  3416                           ;modules.c: 83: I2C_Master_Write(0x00);
  3417  001BBE  0E00               	movlw	0
  3418  001BC0  0100               	movlb	0	; () banked
  3419  001BC2  6FB2               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  3420  001BC4  0E00               	movlw	0
  3421  001BC6  6FB1               	movwf	I2C_Master_Write@d& (0+255),b
  3422  001BC8  EC5E  F013         	call	_I2C_Master_Write	;wreg free
  3423                           
  3424                           ;modules.c: 84: I2C_Master_Stop();
  3425  001BCC  EC68  F013         	call	_I2C_Master_Stop	;wreg free
  3426                           
  3427                           ;modules.c: 87: I2C_Master_Start();
  3428  001BD0  EC6C  F013         	call	_I2C_Master_Start	;wreg free
  3429                           
  3430                           ;modules.c: 88: I2C_Master_Write(0b11010001);
  3431  001BD4  0E00               	movlw	0
  3432  001BD6  0100               	movlb	0	; () banked
  3433  001BD8  6FB2               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  3434  001BDA  0ED1               	movlw	209
  3435  001BDC  6FB1               	movwf	I2C_Master_Write@d& (0+255),b
  3436  001BDE  EC5E  F013         	call	_I2C_Master_Write	;wreg free
  3437                           
  3438                           ;modules.c: 89: for (unsigned char i = 0; i < 0x06; i++) {
  3439  001BE2  0E00               	movlw	0
  3440  001BE4  0100               	movlb	0	; () banked
  3441  001BE6  6FB5               	movwf	getTime@i& (0+255),b
  3442  001BE8                     l4015:
  3443                           
  3444                           ; BSR set to: 0
  3445  001BE8  0E05               	movlw	5
  3446  001BEA  0100               	movlb	0	; () banked
  3447  001BEC  65B5               	cpfsgt	getTime@i& (0+255),b
  3448  001BEE  D001               	goto	l4019
  3449  001BF0  D012               	goto	l4025
  3450  001BF2                     l4019:
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;modules.c: 90: time[i] = I2C_Master_Read(1);
  3454  001BF2  0100               	movlb	0	; () banked
  3455  001BF4  51B5               	movf	getTime@i& (0+255),w,b
  3456  001BF6  0D01               	mullw	1
  3457  001BF8  50F3               	movf	prodl,w,c
  3458  001BFA  0100               	movlb	0	; () banked
  3459  001BFC  25B3               	addwf	getTime@time& (0+255),w,b
  3460  001BFE  6ED9               	movwf	fsr2l,c
  3461  001C00  50F4               	movf	prodh,w,c
  3462  001C02  0100               	movlb	0	; () banked
  3463  001C04  21B4               	addwfc	(getTime@time+1)& (0+255),w,b
  3464  001C06  6EDA               	movwf	fsr2h,c
  3465  001C08  0E01               	movlw	1
  3466  001C0A  EC28  F012         	call	_I2C_Master_Read
  3467  001C0E  6EDF               	movwf	indf2,c
  3468  001C10  0100               	movlb	0	; () banked
  3469  001C12  2BB5               	incf	getTime@i& (0+255),f,b
  3470  001C14  D7E9               	goto	l4015
  3471  001C16                     l4025:
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;modules.c: 91: }
  3475                           ;modules.c: 92: time[6] = I2C_Master_Read(0);
  3476  001C16  0100               	movlb	0	; () banked
  3477  001C18  EE20 F006          	lfsr	2,6
  3478  001C1C  51B3               	movf	getTime@time& (0+255),w,b
  3479  001C1E  26D9               	addwf	fsr2l,f,c
  3480  001C20  51B4               	movf	(getTime@time+1)& (0+255),w,b
  3481  001C22  22DA               	addwfc	fsr2h,f,c
  3482  001C24  0E00               	movlw	0
  3483  001C26  EC28  F012         	call	_I2C_Master_Read
  3484  001C2A  6EDF               	movwf	indf2,c
  3485                           
  3486                           ;modules.c: 93: I2C_Master_Stop();
  3487  001C2C  EC68  F013         	call	_I2C_Master_Stop	;wreg free
  3488                           
  3489                           ;modules.c: 94: (INTCONbits.GIE = 1);
  3490  001C30  8EF2               	bsf	intcon,7,c	;volatile
  3491  001C32  0012               	return		;funcret
  3492  001C34                     __end_of_getTime:
  3493                           	opt stack 0
  3494                           tblptru	equ	0xFF8
  3495                           tblptrh	equ	0xFF7
  3496                           tblptrl	equ	0xFF6
  3497                           tablat	equ	0xFF5
  3498                           prodh	equ	0xFF4
  3499                           prodl	equ	0xFF3
  3500                           intcon	equ	0xFF2
  3501                           intcon3	equ	0xFF0
  3502                           postinc0	equ	0xFEE
  3503                           wreg	equ	0xFE8
  3504                           postdec1	equ	0xFE5
  3505                           fsr1l	equ	0xFE1
  3506                           indf2	equ	0xFDF
  3507                           postinc2	equ	0xFDE
  3508                           postdec2	equ	0xFDD
  3509                           fsr2h	equ	0xFDA
  3510                           fsr2l	equ	0xFD9
  3511                           status	equ	0xFD8
  3512                           
  3513 ;; *************** function _I2C_Master_Write *****************
  3514 ;; Defined at:
  3515 ;;		line 42 in file "I2C.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;  d               2    1[BANK0 ] unsigned int 
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;		None
  3520 ;; Return value:  Size  Location     Type
  3521 ;;                  1    wreg      void 
  3522 ;; Registers used:
  3523 ;;		wreg, status,2, status,0, cstack
  3524 ;; Tracked objects:
  3525 ;;		On entry : 0/0
  3526 ;;		On exit  : 0/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3529 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3532 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3533 ;;Total ram usage:        2 bytes
  3534 ;; Hardware stack levels used:    1
  3535 ;; Hardware stack levels required when called:    8
  3536 ;; This function calls:
  3537 ;;		_I2C_Master_Wait
  3538 ;; This function is called by:
  3539 ;;		_getTime
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           	psect	text9
  3544  0026BC                     __ptext9:
  3545                           	opt stack 0
  3546  0026BC                     _I2C_Master_Write:
  3547                           	opt stack 20
  3548                           
  3549                           ;I2C.c: 43: I2C_Master_Wait();
  3550                           
  3551                           ;incstack = 0
  3552  0026BC  EC2A  F013         	call	_I2C_Master_Wait	;wreg free
  3553                           
  3554                           ;I2C.c: 44: SSPBUF = d;
  3555  0026C0  C0B1  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
  3556  0026C4  0012               	return		;funcret
  3557  0026C6                     __end_of_I2C_Master_Write:
  3558                           	opt stack 0
  3559                           tblptru	equ	0xFF8
  3560                           tblptrh	equ	0xFF7
  3561                           tblptrl	equ	0xFF6
  3562                           tablat	equ	0xFF5
  3563                           prodh	equ	0xFF4
  3564                           prodl	equ	0xFF3
  3565                           intcon	equ	0xFF2
  3566                           intcon3	equ	0xFF0
  3567                           postinc0	equ	0xFEE
  3568                           wreg	equ	0xFE8
  3569                           postdec1	equ	0xFE5
  3570                           fsr1l	equ	0xFE1
  3571                           indf2	equ	0xFDF
  3572                           postinc2	equ	0xFDE
  3573                           postdec2	equ	0xFDD
  3574                           fsr2h	equ	0xFDA
  3575                           fsr2l	equ	0xFD9
  3576                           status	equ	0xFD8
  3577                           
  3578 ;; *************** function _I2C_Master_Stop *****************
  3579 ;; Defined at:
  3580 ;;		line 37 in file "I2C.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;		None
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;		None
  3585 ;; Return value:  Size  Location     Type
  3586 ;;                  1    wreg      void 
  3587 ;; Registers used:
  3588 ;;		wreg, status,2, status,0, cstack
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3598 ;;Total ram usage:        0 bytes
  3599 ;; Hardware stack levels used:    1
  3600 ;; Hardware stack levels required when called:    8
  3601 ;; This function calls:
  3602 ;;		_I2C_Master_Wait
  3603 ;; This function is called by:
  3604 ;;		_getTime
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608                           	psect	text10
  3609  0026D0                     __ptext10:
  3610                           	opt stack 0
  3611  0026D0                     _I2C_Master_Stop:
  3612                           	opt stack 20
  3613                           
  3614                           ;I2C.c: 38: I2C_Master_Wait();
  3615                           
  3616                           ;incstack = 0
  3617  0026D0  EC2A  F013         	call	_I2C_Master_Wait	;wreg free
  3618                           
  3619                           ;I2C.c: 39: PEN = 1;
  3620  0026D4  84C5               	bsf	4037,2,c	;volatile
  3621  0026D6  0012               	return		;funcret
  3622  0026D8                     __end_of_I2C_Master_Stop:
  3623                           	opt stack 0
  3624                           tblptru	equ	0xFF8
  3625                           tblptrh	equ	0xFF7
  3626                           tblptrl	equ	0xFF6
  3627                           tablat	equ	0xFF5
  3628                           prodh	equ	0xFF4
  3629                           prodl	equ	0xFF3
  3630                           intcon	equ	0xFF2
  3631                           intcon3	equ	0xFF0
  3632                           postinc0	equ	0xFEE
  3633                           wreg	equ	0xFE8
  3634                           postdec1	equ	0xFE5
  3635                           fsr1l	equ	0xFE1
  3636                           indf2	equ	0xFDF
  3637                           postinc2	equ	0xFDE
  3638                           postdec2	equ	0xFDD
  3639                           fsr2h	equ	0xFDA
  3640                           fsr2l	equ	0xFD9
  3641                           status	equ	0xFD8
  3642                           
  3643 ;; *************** function _I2C_Master_Start *****************
  3644 ;; Defined at:
  3645 ;;		line 27 in file "I2C.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;		None
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;		None
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  1    wreg      void 
  3652 ;; Registers used:
  3653 ;;		wreg, status,2, status,0, cstack
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3663 ;;Total ram usage:        0 bytes
  3664 ;; Hardware stack levels used:    1
  3665 ;; Hardware stack levels required when called:    8
  3666 ;; This function calls:
  3667 ;;		_I2C_Master_Wait
  3668 ;; This function is called by:
  3669 ;;		_getTime
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           	psect	text11
  3674  0026D8                     __ptext11:
  3675                           	opt stack 0
  3676  0026D8                     _I2C_Master_Start:
  3677                           	opt stack 20
  3678                           
  3679                           ;I2C.c: 28: I2C_Master_Wait();
  3680                           
  3681                           ;incstack = 0
  3682  0026D8  EC2A  F013         	call	_I2C_Master_Wait	;wreg free
  3683                           
  3684                           ;I2C.c: 29: SEN = 1;
  3685  0026DC  80C5               	bsf	4037,0,c	;volatile
  3686  0026DE  0012               	return		;funcret
  3687  0026E0                     __end_of_I2C_Master_Start:
  3688                           	opt stack 0
  3689                           tblptru	equ	0xFF8
  3690                           tblptrh	equ	0xFF7
  3691                           tblptrl	equ	0xFF6
  3692                           tablat	equ	0xFF5
  3693                           prodh	equ	0xFF4
  3694                           prodl	equ	0xFF3
  3695                           intcon	equ	0xFF2
  3696                           intcon3	equ	0xFF0
  3697                           postinc0	equ	0xFEE
  3698                           wreg	equ	0xFE8
  3699                           postdec1	equ	0xFE5
  3700                           fsr1l	equ	0xFE1
  3701                           indf2	equ	0xFDF
  3702                           postinc2	equ	0xFDE
  3703                           postdec2	equ	0xFDD
  3704                           fsr2h	equ	0xFDA
  3705                           fsr2l	equ	0xFD9
  3706                           status	equ	0xFD8
  3707                           
  3708 ;; *************** function _I2C_Master_Read *****************
  3709 ;; Defined at:
  3710 ;;		line 47 in file "I2C.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;  a               1    wreg     unsigned char 
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;  a               1    1[BANK0 ] unsigned char 
  3715 ;;  temp            1    2[BANK0 ] unsigned char 
  3716 ;; Return value:  Size  Location     Type
  3717 ;;                  1    wreg      unsigned char 
  3718 ;; Registers used:
  3719 ;;		wreg, status,2, status,0, cstack
  3720 ;; Tracked objects:
  3721 ;;		On entry : 0/0
  3722 ;;		On exit  : 0/0
  3723 ;;		Unchanged: 0/0
  3724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3726 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3728 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3729 ;;Total ram usage:        2 bytes
  3730 ;; Hardware stack levels used:    1
  3731 ;; Hardware stack levels required when called:    8
  3732 ;; This function calls:
  3733 ;;		_I2C_Master_Wait
  3734 ;; This function is called by:
  3735 ;;		_getTime
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739                           	psect	text12
  3740  002450                     __ptext12:
  3741                           	opt stack 0
  3742  002450                     _I2C_Master_Read:
  3743                           	opt stack 20
  3744                           
  3745                           ;incstack = 0
  3746                           ;I2C_Master_Read@a stored from wreg
  3747  002450  0100               	movlb	0	; () banked
  3748  002452  6FB1               	movwf	I2C_Master_Read@a& (0+255),b
  3749                           
  3750                           ;I2C.c: 48: unsigned char temp;
  3751                           ;I2C.c: 49: I2C_Master_Wait();
  3752  002454  EC2A  F013         	call	_I2C_Master_Wait	;wreg free
  3753                           
  3754                           ;I2C.c: 50: RCEN = 1;
  3755  002458  86C5               	bsf	4037,3,c	;volatile
  3756                           
  3757                           ;I2C.c: 51: I2C_Master_Wait();
  3758  00245A  EC2A  F013         	call	_I2C_Master_Wait	;wreg free
  3759                           
  3760                           ;I2C.c: 52: temp = SSPBUF;
  3761  00245E  CFC9 F0B2          	movff	4041,I2C_Master_Read@temp	;volatile
  3762                           
  3763                           ;I2C.c: 53: I2C_Master_Wait();
  3764  002462  EC2A  F013         	call	_I2C_Master_Wait	;wreg free
  3765                           
  3766                           ;I2C.c: 54: ACKDT = (a) ? 0 : 1;
  3767  002466  0100               	movlb	0	; () banked
  3768  002468  51B1               	movf	I2C_Master_Read@a& (0+255),w,b
  3769  00246A  0100               	movlb	0	; () banked
  3770  00246C  A4D8               	btfss	status,2,c
  3771  00246E  D002               	goto	u2560
  3772  002470  8AC5               	bsf	4037,5,c	;volatile
  3773  002472  D001               	goto	l3457
  3774  002474                     u2560:
  3775  002474  9AC5               	bcf	4037,5,c	;volatile
  3776  002476                     l3457:
  3777                           
  3778                           ;I2C.c: 55: ACKEN = 1;
  3779  002476  88C5               	bsf	4037,4,c	;volatile
  3780                           
  3781                           ;I2C.c: 56: return temp;
  3782  002478  0100               	movlb	0	; () banked
  3783  00247A  51B2               	movf	I2C_Master_Read@temp& (0+255),w,b
  3784  00247C  0012               	return	
  3785  00247E                     __end_of_I2C_Master_Read:
  3786                           	opt stack 0
  3787                           tblptru	equ	0xFF8
  3788                           tblptrh	equ	0xFF7
  3789                           tblptrl	equ	0xFF6
  3790                           tablat	equ	0xFF5
  3791                           prodh	equ	0xFF4
  3792                           prodl	equ	0xFF3
  3793                           intcon	equ	0xFF2
  3794                           intcon3	equ	0xFF0
  3795                           postinc0	equ	0xFEE
  3796                           wreg	equ	0xFE8
  3797                           postdec1	equ	0xFE5
  3798                           fsr1l	equ	0xFE1
  3799                           indf2	equ	0xFDF
  3800                           postinc2	equ	0xFDE
  3801                           postdec2	equ	0xFDD
  3802                           fsr2h	equ	0xFDA
  3803                           fsr2l	equ	0xFD9
  3804                           status	equ	0xFD8
  3805                           
  3806 ;; *************** function _I2C_Master_Wait *****************
  3807 ;; Defined at:
  3808 ;;		line 23 in file "I2C.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;		None
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;		None
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  1    wreg      void 
  3815 ;; Registers used:
  3816 ;;		wreg, status,2, status,0
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3824 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3825 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3826 ;;Total ram usage:        1 bytes
  3827 ;; Hardware stack levels used:    1
  3828 ;; Hardware stack levels required when called:    7
  3829 ;; This function calls:
  3830 ;;		Nothing
  3831 ;; This function is called by:
  3832 ;;		_I2C_Master_Start
  3833 ;;		_I2C_Master_Stop
  3834 ;;		_I2C_Master_Write
  3835 ;;		_I2C_Master_Read
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           	psect	text13
  3840  002654                     __ptext13:
  3841                           	opt stack 0
  3842  002654                     _I2C_Master_Wait:
  3843                           	opt stack 20
  3844  002654                     l407:
  3845  002654  B4C7               	btfsc	4039,2,c	;volatile
  3846  002656  D7FE               	goto	l407
  3847  002658  CFC5 F0B0          	movff	4037,??_I2C_Master_Wait	;volatile
  3848  00265C  0E1F               	movlw	31
  3849  00265E  0100               	movlb	0	; () banked
  3850  002660  17B0               	andwf	??_I2C_Master_Wait& (0+255),f,b
  3851  002662  B4D8               	btfsc	status,2,c
  3852  002664  0012               	return	
  3853  002666  D7F6               	goto	l407
  3854  002668                     __end_of_I2C_Master_Wait:
  3855                           	opt stack 0
  3856                           tblptru	equ	0xFF8
  3857                           tblptrh	equ	0xFF7
  3858                           tblptrl	equ	0xFF6
  3859                           tablat	equ	0xFF5
  3860                           prodh	equ	0xFF4
  3861                           prodl	equ	0xFF3
  3862                           intcon	equ	0xFF2
  3863                           intcon3	equ	0xFF0
  3864                           postinc0	equ	0xFEE
  3865                           wreg	equ	0xFE8
  3866                           postdec1	equ	0xFE5
  3867                           fsr1l	equ	0xFE1
  3868                           indf2	equ	0xFDF
  3869                           postinc2	equ	0xFDE
  3870                           postdec2	equ	0xFDD
  3871                           fsr2h	equ	0xFDA
  3872                           fsr2l	equ	0xFD9
  3873                           status	equ	0xFD8
  3874                           
  3875 ;; *************** function _initialize *****************
  3876 ;; Defined at:
  3877 ;;		line 21 in file "main.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;		None
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;		None
  3882 ;; Return value:  Size  Location     Type
  3883 ;;                  1    wreg      void 
  3884 ;; Registers used:
  3885 ;;		wreg, status,2, status,0, cstack
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3895 ;;Total ram usage:        0 bytes
  3896 ;; Hardware stack levels used:    1
  3897 ;; Hardware stack levels required when called:   10
  3898 ;; This function calls:
  3899 ;;		_I2C_Master_Init
  3900 ;;		_initLCD
  3901 ;;		_initLatest
  3902 ;;		_lcdInst
  3903 ;; This function is called by:
  3904 ;;		_main
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           	psect	text14
  3909  002142                     __ptext14:
  3910                           	opt stack 0
  3911  002142                     _initialize:
  3912                           	opt stack 20
  3913                           
  3914                           ;main.c: 22: TRISA = 0xFF;
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;incstack = 0
  3918  002142  6892               	setf	3986,c	;volatile
  3919                           
  3920                           ;main.c: 23: TRISB = 0xFF;
  3921  002144  6893               	setf	3987,c	;volatile
  3922                           
  3923                           ;main.c: 24: TRISC = 0x00;
  3924  002146  0E00               	movlw	0
  3925  002148  6E94               	movwf	3988,c	;volatile
  3926                           
  3927                           ;main.c: 25: TRISD = 0x00;
  3928  00214A  0E00               	movlw	0
  3929  00214C  6E95               	movwf	3989,c	;volatile
  3930                           
  3931                           ;main.c: 26: TRISE = 0x0F;
  3932  00214E  0E0F               	movlw	15
  3933  002150  6E96               	movwf	3990,c	;volatile
  3934                           
  3935                           ;main.c: 28: initLCD();
  3936  002152  EC91  F011         	call	_initLCD	;wreg free
  3937                           
  3938                           ;main.c: 30: LATA = 0x00;
  3939  002156  0E00               	movlw	0
  3940  002158  6E89               	movwf	3977,c	;volatile
  3941                           
  3942                           ;main.c: 31: LATB = 0x00;
  3943  00215A  0E00               	movlw	0
  3944  00215C  6E8A               	movwf	3978,c	;volatile
  3945                           
  3946                           ;main.c: 32: LATB2 = 1;
  3947  00215E  848A               	bsf	3978,2,c	;volatile
  3948                           
  3949                           ;main.c: 33: LATC = 0x00;
  3950  002160  0E00               	movlw	0
  3951  002162  6E8B               	movwf	3979,c	;volatile
  3952                           
  3953                           ;main.c: 34: LATD = 0x00;
  3954  002164  0E00               	movlw	0
  3955  002166  6E8C               	movwf	3980,c	;volatile
  3956                           
  3957                           ;main.c: 35: LATE = 0x00;
  3958  002168  0E00               	movlw	0
  3959  00216A  6E8D               	movwf	3981,c	;volatile
  3960                           
  3961                           ;main.c: 37: ADCON0 = 0x00;
  3962  00216C  0E00               	movlw	0
  3963  00216E  6EC2               	movwf	4034,c	;volatile
  3964                           
  3965                           ;main.c: 38: ADCON1 = 0x09;
  3966  002170  0E09               	movlw	9
  3967  002172  6EC1               	movwf	4033,c	;volatile
  3968                           
  3969                           ;main.c: 39: CVRCON = 0x00;
  3970  002174  0E00               	movlw	0
  3971  002176  6EB5               	movwf	4021,c	;volatile
  3972                           
  3973                           ;main.c: 40: ADFM = 1;
  3974  002178  8EC0               	bsf	4032,7,c	;volatile
  3975                           
  3976                           ;main.c: 42: lcdInst(0x01);;
  3977  00217A  0E01               	movlw	1
  3978  00217C  EC45  F013         	call	_lcdInst
  3979                           
  3980                           ;main.c: 44: I2C_Master_Init(10000);
  3981  002180  0E10               	movlw	16
  3982  002182  0100               	movlb	0	; () banked
  3983  002184  6FBD               	movwf	I2C_Master_Init@c& (0+255),b
  3984  002186  0E27               	movlw	39
  3985  002188  6FBE               	movwf	(I2C_Master_Init@c+1)& (0+255),b
  3986  00218A  0E00               	movlw	0
  3987  00218C  6FBF               	movwf	(I2C_Master_Init@c+2)& (0+255),b
  3988  00218E  0E00               	movlw	0
  3989  002190  6FC0               	movwf	(I2C_Master_Init@c+3)& (0+255),b
  3990  002192  EC71  F010         	call	_I2C_Master_Init	;wreg free
  3991                           
  3992                           ;main.c: 47: initLatest();
  3993  002196  ECB6  F012         	call	_initLatest	;wreg free
  3994                           
  3995                           ;main.c: 48: INTEDG2 = 0;
  3996  00219A  98F1               	bcf	intcon2,4,c	;volatile
  3997  00219C  0012               	return		;funcret
  3998  00219E                     __end_of_initialize:
  3999                           	opt stack 0
  4000                           tblptru	equ	0xFF8
  4001                           tblptrh	equ	0xFF7
  4002                           tblptrl	equ	0xFF6
  4003                           tablat	equ	0xFF5
  4004                           prodh	equ	0xFF4
  4005                           prodl	equ	0xFF3
  4006                           intcon	equ	0xFF2
  4007                           intcon2	equ	0xFF1
  4008                           intcon3	equ	0xFF0
  4009                           postinc0	equ	0xFEE
  4010                           wreg	equ	0xFE8
  4011                           postdec1	equ	0xFE5
  4012                           fsr1l	equ	0xFE1
  4013                           indf2	equ	0xFDF
  4014                           postinc2	equ	0xFDE
  4015                           postdec2	equ	0xFDD
  4016                           fsr2h	equ	0xFDA
  4017                           fsr2l	equ	0xFD9
  4018                           status	equ	0xFD8
  4019                           
  4020 ;; *************** function _initLatest *****************
  4021 ;; Defined at:
  4022 ;;		line 9 in file "eeprom.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;		None
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;		None
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  1    wreg      void 
  4029 ;; Registers used:
  4030 ;;		wreg, status,2, status,0, cstack
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4040 ;;Total ram usage:        0 bytes
  4041 ;; Hardware stack levels used:    1
  4042 ;; Hardware stack levels required when called:    8
  4043 ;; This function calls:
  4044 ;;		_ReadEE
  4045 ;; This function is called by:
  4046 ;;		_initialize
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           
  4050                           	psect	text15
  4051  00256C                     __ptext15:
  4052                           	opt stack 0
  4053  00256C                     _initLatest:
  4054                           	opt stack 21
  4055                           
  4056                           ;eeprom.c: 10: Latest = ReadEE(160);
  4057                           
  4058                           ;incstack = 0
  4059  00256C  0E00               	movlw	0
  4060  00256E  0100               	movlb	0	; () banked
  4061  002570  6FB1               	movwf	(ReadEE@address+1)& (0+255),b
  4062  002572  0EA0               	movlw	160
  4063  002574  6FB0               	movwf	ReadEE@address& (0+255),b
  4064  002576  EC13  F013         	call	_ReadEE	;wreg free
  4065  00257A  0100               	movlb	0	; () banked
  4066  00257C  6FA8               	movwf	_Latest& (0+255),b
  4067                           
  4068                           ; BSR set to: 0
  4069                           ;eeprom.c: 11: if (Latest > 3) {
  4070  00257E  0E03               	movlw	3
  4071  002580  0100               	movlb	0	; () banked
  4072  002582  65A8               	cpfsgt	_Latest& (0+255),b
  4073  002584  0012               	return	
  4074                           
  4075                           ; BSR set to: 0
  4076                           ;eeprom.c: 12: Latest = 0;
  4077  002586  0E00               	movlw	0
  4078  002588  0100               	movlb	0	; () banked
  4079  00258A  6FA8               	movwf	_Latest& (0+255),b
  4080  00258C  0012               	return	
  4081  00258E                     __end_of_initLatest:
  4082                           	opt stack 0
  4083                           tblptru	equ	0xFF8
  4084                           tblptrh	equ	0xFF7
  4085                           tblptrl	equ	0xFF6
  4086                           tablat	equ	0xFF5
  4087                           prodh	equ	0xFF4
  4088                           prodl	equ	0xFF3
  4089                           intcon	equ	0xFF2
  4090                           intcon2	equ	0xFF1
  4091                           intcon3	equ	0xFF0
  4092                           postinc0	equ	0xFEE
  4093                           wreg	equ	0xFE8
  4094                           postdec1	equ	0xFE5
  4095                           fsr1l	equ	0xFE1
  4096                           indf2	equ	0xFDF
  4097                           postinc2	equ	0xFDE
  4098                           postdec2	equ	0xFDD
  4099                           fsr2h	equ	0xFDA
  4100                           fsr2l	equ	0xFD9
  4101                           status	equ	0xFD8
  4102                           
  4103 ;; *************** function _ReadEE *****************
  4104 ;; Defined at:
  4105 ;;		line 16 in file "eeprom.c"
  4106 ;; Parameters:    Size  Location     Type
  4107 ;;  address         2    0[BANK0 ] unsigned int 
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;		None
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  1    wreg      unsigned char 
  4112 ;; Registers used:
  4113 ;;		wreg, status,2
  4114 ;; Tracked objects:
  4115 ;;		On entry : 0/0
  4116 ;;		On exit  : 0/0
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4119 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4122 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4123 ;;Total ram usage:        2 bytes
  4124 ;; Hardware stack levels used:    1
  4125 ;; Hardware stack levels required when called:    7
  4126 ;; This function calls:
  4127 ;;		Nothing
  4128 ;; This function is called by:
  4129 ;;		_initLatest
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           
  4133                           	psect	text16
  4134  002626                     __ptext16:
  4135                           	opt stack 0
  4136  002626                     _ReadEE:
  4137                           	opt stack 21
  4138                           
  4139                           ;eeprom.c: 19: EEADRH = (unsigned char) (address >> 8);
  4140                           
  4141                           ; BSR set to: 0
  4142                           ;incstack = 0
  4143  002626  0100               	movlb	0	; () banked
  4144  002628  51B1               	movf	(ReadEE@address+1)& (0+255),w,b
  4145  00262A  6EAA               	movwf	4010,c	;volatile
  4146                           
  4147                           ; BSR set to: 0
  4148                           ;eeprom.c: 20: EEADR = (unsigned char) address;
  4149  00262C  C0B0  FFA9         	movff	ReadEE@address,4009	;volatile
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;eeprom.c: 22: EECON1bits.EEPGD = 0;
  4153  002630  9EA6               	bcf	4006,7,c	;volatile
  4154                           
  4155                           ; BSR set to: 0
  4156                           ;eeprom.c: 23: EECON1bits.CFGS = 0;
  4157  002632  9CA6               	bcf	4006,6,c	;volatile
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;eeprom.c: 24: EECON1bits.RD = 1;
  4161  002634  80A6               	bsf	4006,0,c	;volatile
  4162  002636                     l455:
  4163  002636  B0A6               	btfsc	4006,0,c	;volatile
  4164  002638  D7FE               	goto	l455
  4165                           
  4166                           ;eeprom.c: 30: return EEDATA;
  4167  00263A  50A8               	movf	4008,w,c	;volatile
  4168  00263C  0012               	return	
  4169  00263E                     __end_of_ReadEE:
  4170                           	opt stack 0
  4171                           tblptru	equ	0xFF8
  4172                           tblptrh	equ	0xFF7
  4173                           tblptrl	equ	0xFF6
  4174                           tablat	equ	0xFF5
  4175                           prodh	equ	0xFF4
  4176                           prodl	equ	0xFF3
  4177                           intcon	equ	0xFF2
  4178                           intcon2	equ	0xFF1
  4179                           intcon3	equ	0xFF0
  4180                           postinc0	equ	0xFEE
  4181                           wreg	equ	0xFE8
  4182                           postdec1	equ	0xFE5
  4183                           fsr1l	equ	0xFE1
  4184                           indf2	equ	0xFDF
  4185                           postinc2	equ	0xFDE
  4186                           postdec2	equ	0xFDD
  4187                           fsr2h	equ	0xFDA
  4188                           fsr2l	equ	0xFD9
  4189                           status	equ	0xFD8
  4190                           
  4191 ;; *************** function _initLCD *****************
  4192 ;; Defined at:
  4193 ;;		line 9 in file "lcd.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;		None
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;		None
  4198 ;; Return value:  Size  Location     Type
  4199 ;;                  1    wreg      void 
  4200 ;; Registers used:
  4201 ;;		wreg, status,2, status,0, cstack
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4209 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4210 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4211 ;;Total ram usage:        1 bytes
  4212 ;; Hardware stack levels used:    1
  4213 ;; Hardware stack levels required when called:    9
  4214 ;; This function calls:
  4215 ;;		_lcdInst
  4216 ;; This function is called by:
  4217 ;;		_initialize
  4218 ;; This function uses a non-reentrant model
  4219 ;;
  4220                           
  4221                           	psect	text17
  4222  002322                     __ptext17:
  4223                           	opt stack 0
  4224  002322                     _initLCD:
  4225                           	opt stack 20
  4226                           
  4227                           ;lcd.c: 10: _delay((unsigned long)((15)*(8000000/4000.0)));
  4228                           
  4229                           ;incstack = 0
  4230  002322  0E27               	movlw	39
  4231  002324  0100               	movlb	0	; () banked
  4232  002326  6FB3               	movwf	??_initLCD& (0+255),b
  4233  002328  0EF5               	movlw	245
  4234  00232A                     u3577:
  4235  00232A  2EE8               	decfsz	wreg,f,c
  4236  00232C  D7FE               	bra	u3577
  4237  00232E  2FB3               	decfsz	??_initLCD& (0+255),f,b
  4238  002330  D7FC               	bra	u3577
  4239                           
  4240                           ;lcd.c: 11: lcdInst(0b00110011);
  4241  002332  0E33               	movlw	51
  4242  002334  EC45  F013         	call	_lcdInst
  4243                           
  4244                           ;lcd.c: 12: lcdInst(0b00110010);
  4245  002338  0E32               	movlw	50
  4246  00233A  EC45  F013         	call	_lcdInst
  4247                           
  4248                           ;lcd.c: 13: lcdInst(0b00101000);
  4249  00233E  0E28               	movlw	40
  4250  002340  EC45  F013         	call	_lcdInst
  4251                           
  4252                           ;lcd.c: 14: lcdInst(0b00001111);
  4253  002344  0E0F               	movlw	15
  4254  002346  EC45  F013         	call	_lcdInst
  4255                           
  4256                           ;lcd.c: 15: lcdInst(0b00000110);
  4257  00234A  0E06               	movlw	6
  4258  00234C  EC45  F013         	call	_lcdInst
  4259                           
  4260                           ;lcd.c: 16: lcdInst(0b00000001);
  4261  002350  0E01               	movlw	1
  4262  002352  EC45  F013         	call	_lcdInst
  4263                           
  4264                           ;lcd.c: 17: _delay((unsigned long)((15)*(8000000/4000.0)));
  4265  002356  0E27               	movlw	39
  4266  002358  0100               	movlb	0	; () banked
  4267  00235A  6FB3               	movwf	??_initLCD& (0+255),b
  4268  00235C  0EF5               	movlw	245
  4269  00235E                     u3587:
  4270  00235E  2EE8               	decfsz	wreg,f,c
  4271  002360  D7FE               	bra	u3587
  4272  002362  2FB3               	decfsz	??_initLCD& (0+255),f,b
  4273  002364  D7FC               	bra	u3587
  4274  002366  0012               	return		;funcret
  4275  002368                     __end_of_initLCD:
  4276                           	opt stack 0
  4277                           tblptru	equ	0xFF8
  4278                           tblptrh	equ	0xFF7
  4279                           tblptrl	equ	0xFF6
  4280                           tablat	equ	0xFF5
  4281                           prodh	equ	0xFF4
  4282                           prodl	equ	0xFF3
  4283                           intcon	equ	0xFF2
  4284                           intcon2	equ	0xFF1
  4285                           intcon3	equ	0xFF0
  4286                           postinc0	equ	0xFEE
  4287                           wreg	equ	0xFE8
  4288                           postdec1	equ	0xFE5
  4289                           fsr1l	equ	0xFE1
  4290                           indf2	equ	0xFDF
  4291                           postinc2	equ	0xFDE
  4292                           postdec2	equ	0xFDD
  4293                           fsr2h	equ	0xFDA
  4294                           fsr2l	equ	0xFD9
  4295                           status	equ	0xFD8
  4296                           
  4297 ;; *************** function _lcdInst *****************
  4298 ;; Defined at:
  4299 ;;		line 20 in file "lcd.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;  data            1    wreg     unsigned char 
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;  data            1    2[BANK0 ] unsigned char 
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  1    wreg      void 
  4306 ;; Registers used:
  4307 ;;		wreg, status,2, status,0, cstack
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4314 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4316 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4317 ;;Total ram usage:        1 bytes
  4318 ;; Hardware stack levels used:    1
  4319 ;; Hardware stack levels required when called:    8
  4320 ;; This function calls:
  4321 ;;		_lcdNibble
  4322 ;; This function is called by:
  4323 ;;		_initialize
  4324 ;;		_showRTC
  4325 ;;		_main
  4326 ;;		_initLCD
  4327 ;;		_testAD
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331                           	psect	text18
  4332  00268A                     __ptext18:
  4333                           	opt stack 0
  4334  00268A                     _lcdInst:
  4335                           	opt stack 21
  4336                           
  4337                           ;incstack = 0
  4338                           ;lcdInst@data stored from wreg
  4339  00268A  0100               	movlb	0	; () banked
  4340  00268C  6FB2               	movwf	lcdInst@data& (0+255),b
  4341                           
  4342                           ;lcd.c: 21: LATDbits.LATD2 = 0;
  4343  00268E  948C               	bcf	3980,2,c	;volatile
  4344                           
  4345                           ;lcd.c: 22: lcdNibble(data);
  4346  002690  0100               	movlb	0	; () banked
  4347  002692  51B2               	movf	lcdInst@data& (0+255),w,b
  4348  002694  EC0C  F010         	call	_lcdNibble
  4349  002698  0012               	return		;funcret
  4350  00269A                     __end_of_lcdInst:
  4351                           	opt stack 0
  4352                           tblptru	equ	0xFF8
  4353                           tblptrh	equ	0xFF7
  4354                           tblptrl	equ	0xFF6
  4355                           tablat	equ	0xFF5
  4356                           prodh	equ	0xFF4
  4357                           prodl	equ	0xFF3
  4358                           intcon	equ	0xFF2
  4359                           intcon2	equ	0xFF1
  4360                           intcon3	equ	0xFF0
  4361                           postinc0	equ	0xFEE
  4362                           wreg	equ	0xFE8
  4363                           postdec1	equ	0xFE5
  4364                           fsr1l	equ	0xFE1
  4365                           indf2	equ	0xFDF
  4366                           postinc2	equ	0xFDE
  4367                           postdec2	equ	0xFDD
  4368                           fsr2h	equ	0xFDA
  4369                           fsr2l	equ	0xFD9
  4370                           status	equ	0xFD8
  4371                           
  4372 ;; *************** function _lcdNibble *****************
  4373 ;; Defined at:
  4374 ;;		line 30 in file "lcd.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;  data            1    wreg     unsigned char 
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;  data            1    1[BANK0 ] unsigned char 
  4379 ;;  temp            1    0[BANK0 ] unsigned char 
  4380 ;; Return value:  Size  Location     Type
  4381 ;;                  1    wreg      void 
  4382 ;; Registers used:
  4383 ;;		wreg, status,2, status,0
  4384 ;; Tracked objects:
  4385 ;;		On entry : 0/0
  4386 ;;		On exit  : 0/0
  4387 ;;		Unchanged: 0/0
  4388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4390 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4392 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4393 ;;Total ram usage:        2 bytes
  4394 ;; Hardware stack levels used:    1
  4395 ;; Hardware stack levels required when called:    7
  4396 ;; This function calls:
  4397 ;;		Nothing
  4398 ;; This function is called by:
  4399 ;;		_lcdInst
  4400 ;;		_putch
  4401 ;; This function uses a non-reentrant model
  4402 ;;
  4403                           
  4404                           	psect	text19
  4405  002018                     __ptext19:
  4406                           	opt stack 0
  4407  002018                     _lcdNibble:
  4408                           	opt stack 20
  4409                           
  4410                           ;incstack = 0
  4411                           ;lcdNibble@data stored from wreg
  4412  002018  0100               	movlb	0	; () banked
  4413  00201A  6FB1               	movwf	lcdNibble@data& (0+255),b
  4414                           
  4415                           ;lcd.c: 32: char temp = data & 0xF0;
  4416  00201C  0100               	movlb	0	; () banked
  4417  00201E  51B1               	movf	lcdNibble@data& (0+255),w,b
  4418  002020  0BF0               	andlw	240
  4419  002022  0100               	movlb	0	; () banked
  4420  002024  6FB0               	movwf	lcdNibble@temp& (0+255),b
  4421                           
  4422                           ;lcd.c: 33: LATD = LATD & 0x0F;
  4423  002026  508C               	movf	3980,w,c	;volatile
  4424  002028  0B0F               	andlw	15
  4425  00202A  6E8C               	movwf	3980,c	;volatile
  4426                           
  4427                           ;lcd.c: 34: LATD = temp | LATD;
  4428  00202C  0100               	movlb	0	; () banked
  4429  00202E  51B0               	movf	lcdNibble@temp& (0+255),w,b
  4430  002030  108C               	iorwf	3980,w,c	;volatile
  4431  002032  6E8C               	movwf	3980,c	;volatile
  4432                           
  4433                           ; BSR set to: 0
  4434                           ;lcd.c: 36: LATDbits.LATD3 = 0;
  4435  002034  968C               	bcf	3980,3,c	;volatile
  4436                           
  4437                           ; BSR set to: 0
  4438                           ;lcd.c: 37: _delay((unsigned long)((25)*(8000000/4000000.0)));
  4439  002036  0E10               	movlw	16
  4440  002038                     u3597:
  4441  002038  2EE8               	decfsz	wreg,f,c
  4442  00203A  D7FE               	bra	u3597
  4443  00203C  D000               	nop2	
  4444                           
  4445                           ;lcd.c: 38: LATDbits.LATD3 = 1;
  4446  00203E  868C               	bsf	3980,3,c	;volatile
  4447                           
  4448                           ;lcd.c: 39: _delay((unsigned long)((25)*(8000000/4000000.0)));
  4449  002040  0E10               	movlw	16
  4450  002042                     u3607:
  4451  002042  2EE8               	decfsz	wreg,f,c
  4452  002044  D7FE               	bra	u3607
  4453  002046  D000               	nop2	
  4454                           
  4455                           ;lcd.c: 41: data = data << 4;
  4456  002048  0100               	movlb	0	; () banked
  4457  00204A  39B1               	swapf	lcdNibble@data& (0+255),w,b
  4458  00204C  0BF0               	andlw	240
  4459  00204E  0100               	movlb	0	; () banked
  4460  002050  6FB1               	movwf	lcdNibble@data& (0+255),b
  4461                           
  4462                           ;lcd.c: 43: temp = data & 0xF0;
  4463  002052  0100               	movlb	0	; () banked
  4464  002054  51B1               	movf	lcdNibble@data& (0+255),w,b
  4465  002056  0BF0               	andlw	240
  4466  002058  0100               	movlb	0	; () banked
  4467  00205A  6FB0               	movwf	lcdNibble@temp& (0+255),b
  4468                           
  4469                           ;lcd.c: 44: LATD = LATD & 0x0F;
  4470  00205C  508C               	movf	3980,w,c	;volatile
  4471  00205E  0B0F               	andlw	15
  4472  002060  6E8C               	movwf	3980,c	;volatile
  4473                           
  4474                           ;lcd.c: 45: LATD = temp | LATD;
  4475  002062  0100               	movlb	0	; () banked
  4476  002064  51B0               	movf	lcdNibble@temp& (0+255),w,b
  4477  002066  108C               	iorwf	3980,w,c	;volatile
  4478  002068  6E8C               	movwf	3980,c	;volatile
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;lcd.c: 47: LATDbits.LATD3 = 0;
  4482  00206A  968C               	bcf	3980,3,c	;volatile
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;lcd.c: 48: _delay((unsigned long)((25)*(8000000/4000000.0)));
  4486  00206C  0E10               	movlw	16
  4487  00206E                     u3617:
  4488  00206E  2EE8               	decfsz	wreg,f,c
  4489  002070  D7FE               	bra	u3617
  4490  002072  D000               	nop2	
  4491                           
  4492                           ;lcd.c: 49: LATDbits.LATD3 = 1;
  4493  002074  868C               	bsf	3980,3,c	;volatile
  4494                           
  4495                           ;lcd.c: 50: _delay((unsigned long)((25)*(8000000/4000000.0)));
  4496  002076  0E10               	movlw	16
  4497  002078                     u3627:
  4498  002078  2EE8               	decfsz	wreg,f,c
  4499  00207A  D7FE               	bra	u3627
  4500  00207C  D000               	nop2	
  4501  00207E  0012               	return		;funcret
  4502  002080                     __end_of_lcdNibble:
  4503                           	opt stack 0
  4504                           tblptru	equ	0xFF8
  4505                           tblptrh	equ	0xFF7
  4506                           tblptrl	equ	0xFF6
  4507                           tablat	equ	0xFF5
  4508                           prodh	equ	0xFF4
  4509                           prodl	equ	0xFF3
  4510                           intcon	equ	0xFF2
  4511                           intcon2	equ	0xFF1
  4512                           intcon3	equ	0xFF0
  4513                           postinc0	equ	0xFEE
  4514                           wreg	equ	0xFE8
  4515                           postdec1	equ	0xFE5
  4516                           fsr1l	equ	0xFE1
  4517                           indf2	equ	0xFDF
  4518                           postinc2	equ	0xFDE
  4519                           postdec2	equ	0xFDD
  4520                           fsr2h	equ	0xFDA
  4521                           fsr2l	equ	0xFD9
  4522                           status	equ	0xFD8
  4523                           
  4524 ;; *************** function _I2C_Master_Init *****************
  4525 ;; Defined at:
  4526 ;;		line 13 in file "I2C.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;  c               4   13[BANK0 ] const unsigned long 
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;		None
  4531 ;; Return value:  Size  Location     Type
  4532 ;;                  1    wreg      void 
  4533 ;; Registers used:
  4534 ;;		wreg, status,2, status,0, cstack
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4540 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4542 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4543 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4544 ;;Total ram usage:        8 bytes
  4545 ;; Hardware stack levels used:    1
  4546 ;; Hardware stack levels required when called:    8
  4547 ;; This function calls:
  4548 ;;		___lldiv
  4549 ;; This function is called by:
  4550 ;;		_initialize
  4551 ;; This function uses a non-reentrant model
  4552 ;;
  4553                           
  4554                           	psect	text20
  4555  0020E2                     __ptext20:
  4556                           	opt stack 0
  4557  0020E2                     _I2C_Master_Init:
  4558                           	opt stack 21
  4559                           
  4560                           ;I2C.c: 15: SSPSTAT = 0b00000000;
  4561                           
  4562                           ;incstack = 0
  4563  0020E2  0E00               	movlw	0
  4564  0020E4  6EC7               	movwf	4039,c	;volatile
  4565                           
  4566                           ;I2C.c: 16: SSPCON1 = 0b00101000;
  4567  0020E6  0E28               	movlw	40
  4568  0020E8  6EC6               	movwf	4038,c	;volatile
  4569                           
  4570                           ;I2C.c: 17: SSPCON2 = 0b00000000;
  4571  0020EA  0E00               	movlw	0
  4572  0020EC  6EC5               	movwf	4037,c	;volatile
  4573                           
  4574                           ;I2C.c: 18: SSPADD = (8000000 / (4 * c)) - 1;
  4575  0020EE  0E00               	movlw	0
  4576  0020F0  0100               	movlb	0	; () banked
  4577  0020F2  6FB0               	movwf	___lldiv@dividend& (0+255),b
  4578  0020F4  0E12               	movlw	18
  4579  0020F6  6FB1               	movwf	(___lldiv@dividend+1)& (0+255),b
  4580  0020F8  0E7A               	movlw	122
  4581  0020FA  6FB2               	movwf	(___lldiv@dividend+2)& (0+255),b
  4582  0020FC  0E00               	movlw	0
  4583  0020FE  6FB3               	movwf	(___lldiv@dividend+3)& (0+255),b
  4584  002100  C0BD  F0C1         	movff	I2C_Master_Init@c,??_I2C_Master_Init
  4585  002104  C0BE  F0C2         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
  4586  002108  C0BF  F0C3         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
  4587  00210C  C0C0  F0C4         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
  4588  002110  0E02               	movlw	2
  4589  002112                     u2795:
  4590  002112  90D8               	bcf	status,0,c
  4591  002114  0100               	movlb	0	; () banked
  4592  002116  37C1               	rlcf	??_I2C_Master_Init& (0+255),f,b
  4593  002118  37C2               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
  4594  00211A  37C3               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
  4595  00211C  37C4               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
  4596  00211E  2EE8               	decfsz	wreg,f,c
  4597  002120  D7F8               	goto	u2795
  4598  002122  C0C1  F0B4         	movff	??_I2C_Master_Init,___lldiv@divisor
  4599  002126  C0C2  F0B5         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  4600  00212A  C0C3  F0B6         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  4601  00212E  C0C4  F0B7         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  4602  002132  EC93  F00C         	call	___lldiv	;wreg free
  4603  002136  0100               	movlb	0	; () banked
  4604  002138  05B0               	decf	?___lldiv& (0+255),w,b
  4605  00213A  6EC8               	movwf	4040,c	;volatile
  4606                           
  4607                           ; BSR set to: 0
  4608                           ;I2C.c: 19: TRISC3 = 1;
  4609  00213C  8694               	bsf	3988,3,c	;volatile
  4610                           
  4611                           ; BSR set to: 0
  4612                           ;I2C.c: 20: TRISC4 = 1;
  4613  00213E  8894               	bsf	3988,4,c	;volatile
  4614                           
  4615                           ; BSR set to: 0
  4616  002140  0012               	return		;funcret
  4617  002142                     __end_of_I2C_Master_Init:
  4618                           	opt stack 0
  4619                           tblptru	equ	0xFF8
  4620                           tblptrh	equ	0xFF7
  4621                           tblptrl	equ	0xFF6
  4622                           tablat	equ	0xFF5
  4623                           prodh	equ	0xFF4
  4624                           prodl	equ	0xFF3
  4625                           intcon	equ	0xFF2
  4626                           intcon2	equ	0xFF1
  4627                           intcon3	equ	0xFF0
  4628                           postinc0	equ	0xFEE
  4629                           wreg	equ	0xFE8
  4630                           postdec1	equ	0xFE5
  4631                           fsr1l	equ	0xFE1
  4632                           indf2	equ	0xFDF
  4633                           postinc2	equ	0xFDE
  4634                           postdec2	equ	0xFDD
  4635                           fsr2h	equ	0xFDA
  4636                           fsr2l	equ	0xFD9
  4637                           status	equ	0xFD8
  4638                           
  4639 ;; *************** function ___lldiv *****************
  4640 ;; Defined at:
  4641 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
  4642 ;; Parameters:    Size  Location     Type
  4643 ;;  dividend        4    0[BANK0 ] unsigned long 
  4644 ;;  divisor         4    4[BANK0 ] unsigned long 
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;  quotient        4    8[BANK0 ] unsigned long 
  4647 ;;  counter         1   12[BANK0 ] unsigned char 
  4648 ;; Return value:  Size  Location     Type
  4649 ;;                  4    0[BANK0 ] unsigned long 
  4650 ;; Registers used:
  4651 ;;		wreg, status,2, status,0
  4652 ;; Tracked objects:
  4653 ;;		On entry : 0/0
  4654 ;;		On exit  : 0/0
  4655 ;;		Unchanged: 0/0
  4656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4657 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4658 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4660 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4661 ;;Total ram usage:       13 bytes
  4662 ;; Hardware stack levels used:    1
  4663 ;; Hardware stack levels required when called:    7
  4664 ;; This function calls:
  4665 ;;		Nothing
  4666 ;; This function is called by:
  4667 ;;		_I2C_Master_Init
  4668 ;; This function uses a non-reentrant model
  4669 ;;
  4670                           
  4671                           	psect	text21
  4672  001926                     __ptext21:
  4673                           	opt stack 0
  4674  001926                     ___lldiv:
  4675                           	opt stack 21
  4676                           
  4677                           ; BSR set to: 0
  4678                           ;incstack = 0
  4679  001926  0E00               	movlw	0
  4680  001928  0100               	movlb	0	; () banked
  4681  00192A  6FB8               	movwf	___lldiv@quotient& (0+255),b
  4682  00192C  0E00               	movlw	0
  4683  00192E  6FB9               	movwf	(___lldiv@quotient+1)& (0+255),b
  4684  001930  0E00               	movlw	0
  4685  001932  6FBA               	movwf	(___lldiv@quotient+2)& (0+255),b
  4686  001934  0E00               	movlw	0
  4687  001936  6FBB               	movwf	(___lldiv@quotient+3)& (0+255),b
  4688                           
  4689                           ; BSR set to: 0
  4690  001938  0100               	movlb	0	; () banked
  4691  00193A  51B4               	movf	___lldiv@divisor& (0+255),w,b
  4692  00193C  0100               	movlb	0	; () banked
  4693  00193E  11B5               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  4694  001940  0100               	movlb	0	; () banked
  4695  001942  11B6               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  4696  001944  0100               	movlb	0	; () banked
  4697  001946  11B7               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  4698  001948  B4D8               	btfsc	status,2,c
  4699  00194A  D042               	goto	l921
  4700                           
  4701                           ; BSR set to: 0
  4702  00194C  0E01               	movlw	1
  4703  00194E  0100               	movlb	0	; () banked
  4704  001950  6FBC               	movwf	___lldiv@counter& (0+255),b
  4705  001952  D008               	goto	l3557
  4706  001954                     l3555:
  4707                           
  4708                           ; BSR set to: 0
  4709  001954  0100               	movlb	0	; () banked
  4710  001956  90D8               	bcf	status,0,c
  4711  001958  37B4               	rlcf	___lldiv@divisor& (0+255),f,b
  4712  00195A  37B5               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  4713  00195C  37B6               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  4714  00195E  37B7               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  4715  001960  0100               	movlb	0	; () banked
  4716  001962  2BBC               	incf	___lldiv@counter& (0+255),f,b
  4717  001964                     l3557:
  4718                           
  4719                           ; BSR set to: 0
  4720  001964  0100               	movlb	0	; () banked
  4721  001966  AFB7               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  4722  001968  D7F5               	goto	l3555
  4723  00196A                     l3559:
  4724                           
  4725                           ; BSR set to: 0
  4726  00196A  0100               	movlb	0	; () banked
  4727  00196C  90D8               	bcf	status,0,c
  4728  00196E  37B8               	rlcf	___lldiv@quotient& (0+255),f,b
  4729  001970  37B9               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  4730  001972  37BA               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  4731  001974  37BB               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  4732                           
  4733                           ; BSR set to: 0
  4734  001976  0100               	movlb	0	; () banked
  4735  001978  51B4               	movf	___lldiv@divisor& (0+255),w,b
  4736  00197A  0100               	movlb	0	; () banked
  4737  00197C  5DB0               	subwf	___lldiv@dividend& (0+255),w,b
  4738  00197E  0100               	movlb	0	; () banked
  4739  001980  51B5               	movf	(___lldiv@divisor+1)& (0+255),w,b
  4740  001982  0100               	movlb	0	; () banked
  4741  001984  59B1               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  4742  001986  0100               	movlb	0	; () banked
  4743  001988  51B6               	movf	(___lldiv@divisor+2)& (0+255),w,b
  4744  00198A  0100               	movlb	0	; () banked
  4745  00198C  59B2               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  4746  00198E  0100               	movlb	0	; () banked
  4747  001990  51B7               	movf	(___lldiv@divisor+3)& (0+255),w,b
  4748  001992  0100               	movlb	0	; () banked
  4749  001994  59B3               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  4750  001996  A0D8               	btfss	status,0,c
  4751  001998  D012               	goto	l3567
  4752                           
  4753                           ; BSR set to: 0
  4754  00199A  0100               	movlb	0	; () banked
  4755  00199C  51B4               	movf	___lldiv@divisor& (0+255),w,b
  4756  00199E  0100               	movlb	0	; () banked
  4757  0019A0  5FB0               	subwf	___lldiv@dividend& (0+255),f,b
  4758  0019A2  0100               	movlb	0	; () banked
  4759  0019A4  51B5               	movf	(___lldiv@divisor+1)& (0+255),w,b
  4760  0019A6  0100               	movlb	0	; () banked
  4761  0019A8  5BB1               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  4762  0019AA  0100               	movlb	0	; () banked
  4763  0019AC  51B6               	movf	(___lldiv@divisor+2)& (0+255),w,b
  4764  0019AE  0100               	movlb	0	; () banked
  4765  0019B0  5BB2               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  4766  0019B2  0100               	movlb	0	; () banked
  4767  0019B4  51B7               	movf	(___lldiv@divisor+3)& (0+255),w,b
  4768  0019B6  0100               	movlb	0	; () banked
  4769  0019B8  5BB3               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  4770                           
  4771                           ; BSR set to: 0
  4772  0019BA  0100               	movlb	0	; () banked
  4773  0019BC  81B8               	bsf	___lldiv@quotient& (0+255),0,b
  4774  0019BE                     l3567:
  4775                           
  4776                           ; BSR set to: 0
  4777  0019BE  0100               	movlb	0	; () banked
  4778  0019C0  90D8               	bcf	status,0,c
  4779  0019C2  33B7               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  4780  0019C4  33B6               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  4781  0019C6  33B5               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  4782  0019C8  33B4               	rrcf	___lldiv@divisor& (0+255),f,b
  4783                           
  4784                           ; BSR set to: 0
  4785  0019CA  0100               	movlb	0	; () banked
  4786  0019CC  2FBC               	decfsz	___lldiv@counter& (0+255),f,b
  4787  0019CE  D7CD               	goto	l3559
  4788  0019D0                     l921:
  4789                           
  4790                           ; BSR set to: 0
  4791  0019D0  C0B8  F0B0         	movff	___lldiv@quotient,?___lldiv
  4792  0019D4  C0B9  F0B1         	movff	___lldiv@quotient+1,?___lldiv+1
  4793  0019D8  C0BA  F0B2         	movff	___lldiv@quotient+2,?___lldiv+2
  4794  0019DC  C0BB  F0B3         	movff	___lldiv@quotient+3,?___lldiv+3
  4795                           
  4796                           ; BSR set to: 0
  4797  0019E0  0012               	return		;funcret
  4798  0019E2                     __end_of___lldiv:
  4799                           	opt stack 0
  4800                           tblptru	equ	0xFF8
  4801                           tblptrh	equ	0xFF7
  4802                           tblptrl	equ	0xFF6
  4803                           tablat	equ	0xFF5
  4804                           prodh	equ	0xFF4
  4805                           prodl	equ	0xFF3
  4806                           intcon	equ	0xFF2
  4807                           intcon2	equ	0xFF1
  4808                           intcon3	equ	0xFF0
  4809                           postinc0	equ	0xFEE
  4810                           wreg	equ	0xFE8
  4811                           postdec1	equ	0xFE5
  4812                           fsr1l	equ	0xFE1
  4813                           indf2	equ	0xFDF
  4814                           postinc2	equ	0xFDE
  4815                           postdec2	equ	0xFDD
  4816                           fsr2h	equ	0xFDA
  4817                           fsr2l	equ	0xFD9
  4818                           status	equ	0xFD8
  4819                           
  4820 ;; *************** function _intrpt *****************
  4821 ;; Defined at:
  4822 ;;		line 239 in file "main.c"
  4823 ;; Parameters:    Size  Location     Type
  4824 ;;		None
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;  port            6  112[COMRAM] int [3]
  4827 ;;  keypress        1  111[COMRAM] unsigned char 
  4828 ;; Return value:  Size  Location     Type
  4829 ;;                  1    wreg      void 
  4830 ;; Registers used:
  4831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4838 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4839 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4840 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4841 ;;Total ram usage:       23 bytes
  4842 ;; Hardware stack levels used:    1
  4843 ;; Hardware stack levels required when called:    6
  4844 ;; This function calls:
  4845 ;;		_PWMC
  4846 ;;		_PermLog
  4847 ;;		_mainloop
  4848 ;;		_simulate
  4849 ;;		_stopMoving
  4850 ;;		i2_lcdInst
  4851 ;; This function is called by:
  4852 ;;		Interrupt level 2
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           	psect	intcode
  4857  000008                     __pintcode:
  4858                           	opt stack 0
  4859  000008                     _intrpt:
  4860                           	opt stack 20
  4861                           
  4862                           ; BSR set to: 0
  4863                           ;incstack = 0
  4864  000008  827D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4865  00000A  ED4B  F006         	call	int_func,f	;refresh shadow registers
  4866                           tblptru	equ	0xFF8
  4867                           tblptrh	equ	0xFF7
  4868                           tblptrl	equ	0xFF6
  4869                           tablat	equ	0xFF5
  4870                           prodh	equ	0xFF4
  4871                           prodl	equ	0xFF3
  4872                           intcon	equ	0xFF2
  4873                           intcon2	equ	0xFF1
  4874                           intcon3	equ	0xFF0
  4875                           postinc0	equ	0xFEE
  4876                           wreg	equ	0xFE8
  4877                           postdec1	equ	0xFE5
  4878                           fsr1l	equ	0xFE1
  4879                           indf2	equ	0xFDF
  4880                           postinc2	equ	0xFDE
  4881                           postdec2	equ	0xFDD
  4882                           fsr2h	equ	0xFDA
  4883                           fsr2l	equ	0xFD9
  4884                           status	equ	0xFD8
  4885                           
  4886                           	psect	intcode_body
  4887  000C96                     __pintcode_body:
  4888                           	opt stack 20
  4889  000C96                     int_func:
  4890                           	opt stack 20
  4891  000C96  0006               	pop		; remove dummy address from shadow register refresh
  4892  000C98  CFFA F062          	movff	pclath,??_intrpt+2
  4893  000C9C  CFFB F063          	movff	pclatu,??_intrpt+3
  4894  000CA0  CFE9 F064          	movff	fsr0l,??_intrpt+4
  4895  000CA4  CFEA F065          	movff	fsr0h,??_intrpt+5
  4896  000CA8  CFE1 F066          	movff	fsr1l,??_intrpt+6
  4897  000CAC  CFE2 F067          	movff	fsr1h,??_intrpt+7
  4898  000CB0  CFD9 F068          	movff	fsr2l,??_intrpt+8
  4899  000CB4  CFDA F069          	movff	fsr2h,??_intrpt+9
  4900  000CB8  CFF3 F06A          	movff	prodl,??_intrpt+10
  4901  000CBC  CFF4 F06B          	movff	prodh,??_intrpt+11
  4902  000CC0  CFF6 F06C          	movff	tblptrl,??_intrpt+12
  4903  000CC4  CFF7 F06D          	movff	tblptrh,??_intrpt+13
  4904  000CC8  CFF8 F06E          	movff	tblptru,??_intrpt+14
  4905  000CCC  CFF5 F06F          	movff	tablat,??_intrpt+15
  4906                           
  4907                           ;main.c: 240: (INTCONbits.GIE = 0);
  4908  000CD0  9EF2               	bcf	intcon,7,c	;volatile
  4909                           
  4910                           ;main.c: 241: if (INT1IF) {
  4911  000CD2  A0F0               	btfss	intcon3,0,c	;volatile
  4912  000CD4  D0E5               	goto	i2l154
  4913                           
  4914                           ;main.c: 242: int port[] = {0, 0, 0};
  4915  000CD6  EE20  F080         	lfsr	2,intrpt@F3137
  4916  000CDA  EE10  F071         	lfsr	1,intrpt@port
  4917  000CDE  0E05               	movlw	5
  4918  000CE0                     i2u348_41:
  4919  000CE0  CFDB FFE3          	movff	plusw2,plusw1
  4920  000CE4  06E8               	decf	wreg,f,c
  4921  000CE6  E2FC               	bc	i2u348_41
  4922                           
  4923                           ;main.c: 243: unsigned char keypress = (PORTB & 0xF0) >> 4;
  4924  000CE8  3881               	swapf	3969,w,c	;volatile
  4925  000CEA  0B0F               	andlw	15
  4926  000CEC  0B0F               	andlw	15
  4927  000CEE  6E70               	movwf	intrpt@keypress,c
  4928                           
  4929                           ;main.c: 244: INT1IF = 0;
  4930  000CF0  90F0               	bcf	intcon3,0,c	;volatile
  4931  000CF2                     i2l157:
  4932  000CF2  A281               	btfss	3969,1,c	;volatile
  4933  000CF4  D0C9               	goto	i2l4455
  4934  000CF6  D7FD               	goto	i2l157
  4935  000CF8                     i2l4399:
  4936                           
  4937                           ;main.c: 251: port[2] = 1;
  4938  000CF8  0E00               	movlw	0
  4939  000CFA  6E76               	movwf	intrpt@port+5,c
  4940  000CFC  0E01               	movlw	1
  4941  000CFE  6E75               	movwf	intrpt@port+4,c
  4942                           
  4943                           ;main.c: 252: PWMC(3000, 30, port);
  4944  000D00  0E0B               	movlw	11
  4945  000D02  6E0A               	movwf	PWMC@widthus+1,c
  4946  000D04  0EB8               	movlw	184
  4947  000D06  6E09               	movwf	PWMC@widthus,c
  4948  000D08  0E00               	movlw	0
  4949  000D0A  6E0C               	movwf	PWMC@cycles+1,c
  4950  000D0C  0E1E               	movlw	30
  4951  000D0E  6E0B               	movwf	PWMC@cycles,c
  4952  000D10  0E71               	movlw	low intrpt@port
  4953  000D12  6E0D               	movwf	PWMC@port,c
  4954  000D14  0E00               	movlw	high intrpt@port
  4955  000D16  6E0E               	movwf	PWMC@port+1,c
  4956  000D18  EC34  F00B         	call	_PWMC	;wreg free
  4957                           
  4958                           ;main.c: 253: PWMC(400, 2, port);
  4959  000D1C  0E01               	movlw	1
  4960  000D1E  6E0A               	movwf	PWMC@widthus+1,c
  4961  000D20  0E90               	movlw	144
  4962  000D22  6E09               	movwf	PWMC@widthus,c
  4963  000D24  0E00               	movlw	0
  4964  000D26  6E0C               	movwf	PWMC@cycles+1,c
  4965  000D28  0E02               	movlw	2
  4966  000D2A  6E0B               	movwf	PWMC@cycles,c
  4967  000D2C  0E71               	movlw	low intrpt@port
  4968  000D2E  6E0D               	movwf	PWMC@port,c
  4969  000D30  0E00               	movlw	high intrpt@port
  4970  000D32  6E0E               	movwf	PWMC@port+1,c
  4971  000D34  EC34  F00B         	call	_PWMC	;wreg free
  4972                           
  4973                           ;main.c: 254: break;
  4974  000D38  D0B3               	goto	i2l154
  4975  000D3A                     i2l4405:
  4976                           
  4977                           ;main.c: 257: port[1] = 1;
  4978  000D3A  0E00               	movlw	0
  4979  000D3C  6E74               	movwf	intrpt@port+3,c
  4980  000D3E  0E01               	movlw	1
  4981  000D40  6E73               	movwf	intrpt@port+2,c
  4982                           
  4983                           ;main.c: 258: PWMC(3000, 30, port);
  4984  000D42  0E0B               	movlw	11
  4985  000D44  6E0A               	movwf	PWMC@widthus+1,c
  4986  000D46  0EB8               	movlw	184
  4987  000D48  6E09               	movwf	PWMC@widthus,c
  4988  000D4A  0E00               	movlw	0
  4989  000D4C  6E0C               	movwf	PWMC@cycles+1,c
  4990  000D4E  0E1E               	movlw	30
  4991  000D50  6E0B               	movwf	PWMC@cycles,c
  4992  000D52  0E71               	movlw	low intrpt@port
  4993  000D54  6E0D               	movwf	PWMC@port,c
  4994  000D56  0E00               	movlw	high intrpt@port
  4995  000D58  6E0E               	movwf	PWMC@port+1,c
  4996  000D5A  EC34  F00B         	call	_PWMC	;wreg free
  4997                           
  4998                           ;main.c: 259: PWMC(400, 2, port);
  4999  000D5E  0E01               	movlw	1
  5000  000D60  6E0A               	movwf	PWMC@widthus+1,c
  5001  000D62  0E90               	movlw	144
  5002  000D64  6E09               	movwf	PWMC@widthus,c
  5003  000D66  0E00               	movlw	0
  5004  000D68  6E0C               	movwf	PWMC@cycles+1,c
  5005  000D6A  0E02               	movlw	2
  5006  000D6C  6E0B               	movwf	PWMC@cycles,c
  5007  000D6E  0E71               	movlw	low intrpt@port
  5008  000D70  6E0D               	movwf	PWMC@port,c
  5009  000D72  0E00               	movlw	high intrpt@port
  5010  000D74  6E0E               	movwf	PWMC@port+1,c
  5011  000D76  EC34  F00B         	call	_PWMC	;wreg free
  5012                           
  5013                           ;main.c: 260: break;
  5014  000D7A  D092               	goto	i2l154
  5015  000D7C                     i2l166:
  5016                           
  5017                           ;main.c: 262: LATC6 = ~LATC6;
  5018  000D7C  BC8B               	btfsc	3979,6,c	;volatile
  5019  000D7E  D002               	goto	i2u350_40
  5020  000D80  8C8B               	bsf	3979,6,c	;volatile
  5021  000D82  D08E               	goto	i2l154
  5022  000D84                     i2u350_40:
  5023  000D84  9C8B               	bcf	3979,6,c	;volatile
  5024                           
  5025                           ;main.c: 263: break;
  5026  000D86  D08C               	goto	i2l154
  5027  000D88                     i2l167:
  5028                           
  5029                           ;main.c: 265: LATC7 = 0;
  5030  000D88  9E8B               	bcf	3979,7,c	;volatile
  5031                           
  5032                           ;main.c: 266: LATC5 = 1;
  5033  000D8A  8A8B               	bsf	3979,5,c	;volatile
  5034                           
  5035                           ;main.c: 267: _delay((unsigned long)((180)*(8000000/4000.0)));
  5036  000D8C  0E02               	movlw	2
  5037  000D8E  6E61               	movwf	(??_intrpt+1)& (0+255),c
  5038  000D90  0ED4               	movlw	212
  5039  000D92  6E60               	movwf	??_intrpt& (0+255),c
  5040  000D94  0E85               	movlw	133
  5041  000D96                     i2u363_47:
  5042  000D96  2EE8               	decfsz	wreg,f,c
  5043  000D98  D7FE               	bra	i2u363_47
  5044  000D9A  2E60               	decfsz	??_intrpt& (0+255),f,c
  5045  000D9C  D7FC               	bra	i2u363_47
  5046  000D9E  2E61               	decfsz	(??_intrpt+1)& (0+255),f,c
  5047  000DA0  D7FA               	bra	i2u363_47
  5048  000DA2  F000               	nop	
  5049                           
  5050                           ;main.c: 268: LATC5 = 0;
  5051  000DA4  9A8B               	bcf	3979,5,c	;volatile
  5052                           
  5053                           ;main.c: 269: break;
  5054  000DA6  D07C               	goto	i2l154
  5055  000DA8                     i2l168:
  5056                           
  5057                           ;main.c: 271: LATC5 = 0;
  5058  000DA8  9A8B               	bcf	3979,5,c	;volatile
  5059                           
  5060                           ;main.c: 272: LATC7 = 1;
  5061  000DAA  8E8B               	bsf	3979,7,c	;volatile
  5062                           
  5063                           ;main.c: 273: _delay((unsigned long)((100)*(8000000/4000.0)));
  5064  000DAC  0E02               	movlw	2
  5065  000DAE  6E61               	movwf	(??_intrpt+1)& (0+255),c
  5066  000DB0  0E04               	movlw	4
  5067  000DB2  6E60               	movwf	??_intrpt& (0+255),c
  5068  000DB4  0EBA               	movlw	186
  5069  000DB6                     i2u364_47:
  5070  000DB6  2EE8               	decfsz	wreg,f,c
  5071  000DB8  D7FE               	bra	i2u364_47
  5072  000DBA  2E60               	decfsz	??_intrpt& (0+255),f,c
  5073  000DBC  D7FC               	bra	i2u364_47
  5074  000DBE  2E61               	decfsz	(??_intrpt+1)& (0+255),f,c
  5075  000DC0  D7FA               	bra	i2u364_47
  5076  000DC2  D000               	nop2	
  5077                           
  5078                           ;main.c: 274: LATC7 = 0;
  5079  000DC4  9E8B               	bcf	3979,7,c	;volatile
  5080                           
  5081                           ;main.c: 275: break;
  5082  000DC6  D06C               	goto	i2l154
  5083  000DC8                     i2l4419:
  5084                           
  5085                           ;main.c: 277: port[0] = 1;
  5086  000DC8  0E00               	movlw	0
  5087  000DCA  6E72               	movwf	intrpt@port+1,c
  5088  000DCC  0E01               	movlw	1
  5089  000DCE  6E71               	movwf	intrpt@port,c
  5090                           
  5091                           ;main.c: 278: lcdInst(0b11000000);
  5092  000DD0  0EC0               	movlw	192
  5093  000DD2  EC53  F013         	call	i2_lcdInst
  5094                           
  5095                           ;main.c: 279: PWMC(3000, 30, port);
  5096  000DD6  0E0B               	movlw	11
  5097  000DD8  6E0A               	movwf	PWMC@widthus+1,c
  5098  000DDA  0EB8               	movlw	184
  5099  000DDC  6E09               	movwf	PWMC@widthus,c
  5100  000DDE  0E00               	movlw	0
  5101  000DE0  6E0C               	movwf	PWMC@cycles+1,c
  5102  000DE2  0E1E               	movlw	30
  5103  000DE4  6E0B               	movwf	PWMC@cycles,c
  5104  000DE6  0E71               	movlw	low intrpt@port
  5105  000DE8  6E0D               	movwf	PWMC@port,c
  5106  000DEA  0E00               	movlw	high intrpt@port
  5107  000DEC  6E0E               	movwf	PWMC@port+1,c
  5108  000DEE  EC34  F00B         	call	_PWMC	;wreg free
  5109                           
  5110                           ;main.c: 280: PWMC(400, 2, port);
  5111  000DF2  0E01               	movlw	1
  5112  000DF4  6E0A               	movwf	PWMC@widthus+1,c
  5113  000DF6  0E90               	movlw	144
  5114  000DF8  6E09               	movwf	PWMC@widthus,c
  5115  000DFA  0E00               	movlw	0
  5116  000DFC  6E0C               	movwf	PWMC@cycles+1,c
  5117  000DFE  0E02               	movlw	2
  5118  000E00  6E0B               	movwf	PWMC@cycles,c
  5119  000E02  0E71               	movlw	low intrpt@port
  5120  000E04  6E0D               	movwf	PWMC@port,c
  5121  000E06  0E00               	movlw	high intrpt@port
  5122  000E08  6E0E               	movwf	PWMC@port+1,c
  5123  000E0A  EC34  F00B         	call	_PWMC	;wreg free
  5124                           
  5125                           ;main.c: 281: break;
  5126  000E0E  D048               	goto	i2l154
  5127  000E10                     i2l4427:
  5128                           
  5129                           ;main.c: 285: mode = 2;
  5130  000E10  0E00               	movlw	0
  5131  000E12  6E7C               	movwf	_mode+1,c
  5132  000E14  0E02               	movlw	2
  5133  000E16  6E7B               	movwf	_mode,c
  5134                           
  5135                           ;main.c: 286: PermLog();
  5136  000E18  EC25  F00C         	call	_PermLog	;wreg free
  5137                           
  5138                           ;main.c: 287: mode = 0;
  5139  000E1C  0E00               	movlw	0
  5140  000E1E  6E7C               	movwf	_mode+1,c
  5141  000E20  0E00               	movlw	0
  5142  000E22  6E7B               	movwf	_mode,c
  5143                           
  5144                           ;main.c: 288: break;
  5145  000E24  D03D               	goto	i2l154
  5146  000E26                     i2l4433:
  5147                           
  5148                           ;main.c: 290: mode = 1;
  5149  000E26  0E00               	movlw	0
  5150  000E28  6E7C               	movwf	_mode+1,c
  5151  000E2A  0E01               	movlw	1
  5152  000E2C  6E7B               	movwf	_mode,c
  5153                           
  5154                           ;main.c: 291: (INTCONbits.GIE = 1);
  5155  000E2E  8EF2               	bsf	intcon,7,c	;volatile
  5156                           
  5157                           ;main.c: 292: mainloop();
  5158  000E30  ECA9  F008         	call	_mainloop	;wreg free
  5159  000E34  D007               	goto	i2l4447
  5160  000E36                     i2l4441:
  5161                           
  5162                           ;main.c: 296: mode = 1;
  5163  000E36  0E00               	movlw	0
  5164  000E38  6E7C               	movwf	_mode+1,c
  5165  000E3A  0E01               	movlw	1
  5166  000E3C  6E7B               	movwf	_mode,c
  5167                           
  5168                           ;main.c: 297: (INTCONbits.GIE = 1);
  5169  000E3E  8EF2               	bsf	intcon,7,c	;volatile
  5170                           
  5171                           ;main.c: 298: simulate();
  5172  000E40  EC09  F000         	call	_simulate	;wreg free
  5173  000E44                     i2l4447:
  5174                           
  5175                           ;main.c: 299: (INTCONbits.GIE = 0);
  5176  000E44  9EF2               	bcf	intcon,7,c	;volatile
  5177                           
  5178                           ;main.c: 301: }
  5179                           
  5180                           ;main.c: 300: break;
  5181  000E46  D02C               	goto	i2l154
  5182  000E48                     i2l4451:
  5183  000E48  5070               	movf	intrpt@keypress,w,c
  5184                           
  5185                           ; Switch size 1, requested type "space"
  5186                           ; Number of cases is 10, Range of values is 3 to 15
  5187                           ; switch strategies available:
  5188                           ; Name         Instructions Cycles
  5189                           ; simple_byte           31    16 (average)
  5190                           ;	Chosen strategy is simple_byte
  5191  000E4A  0A03               	xorlw	3	; case 3
  5192  000E4C  B4D8               	btfsc	status,2,c
  5193  000E4E  D754               	goto	i2l4399
  5194  000E50  0A04               	xorlw	4	; case 7
  5195  000E52  B4D8               	btfsc	status,2,c
  5196  000E54  D772               	goto	i2l4405
  5197  000E56  0A0F               	xorlw	15	; case 8
  5198  000E58  B4D8               	btfsc	status,2,c
  5199  000E5A  D790               	goto	i2l166
  5200  000E5C  0A01               	xorlw	1	; case 9
  5201  000E5E  B4D8               	btfsc	status,2,c
  5202  000E60  D793               	goto	i2l167
  5203  000E62  0A03               	xorlw	3	; case 10
  5204  000E64  B4D8               	btfsc	status,2,c
  5205  000E66  D7A0               	goto	i2l168
  5206  000E68  0A01               	xorlw	1	; case 11
  5207  000E6A  B4D8               	btfsc	status,2,c
  5208  000E6C  D7AD               	goto	i2l4419
  5209  000E6E  0A07               	xorlw	7	; case 12
  5210  000E70  B4D8               	btfsc	status,2,c
  5211  000E72  D03D               	goto	i2l171
  5212  000E74  0A01               	xorlw	1	; case 13
  5213  000E76  B4D8               	btfsc	status,2,c
  5214  000E78  D7D6               	goto	i2l4433
  5215  000E7A  0A03               	xorlw	3	; case 14
  5216  000E7C  B4D8               	btfsc	status,2,c
  5217  000E7E  D7C8               	goto	i2l4427
  5218  000E80  0A01               	xorlw	1	; case 15
  5219  000E82  B4D8               	btfsc	status,2,c
  5220  000E84  D7D8               	goto	i2l4441
  5221                           
  5222                           ;main.c: 305: }
  5223                           
  5224                           ;main.c: 304: break;
  5225                           
  5226                           ;main.c: 303: default:
  5227                           
  5228                           ;main.c: 302: break;
  5229  000E86  D00C               	goto	i2l154
  5230  000E88                     i2l4455:
  5231  000E88  C07B  F060         	movff	_mode,??_intrpt
  5232  000E8C  C07C  F061         	movff	_mode+1,??_intrpt+1
  5233                           
  5234                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5235                           ; Switch size 1, requested type "space"
  5236                           ; Number of cases is 1, Range of values is 0 to 0
  5237                           ; switch strategies available:
  5238                           ; Name         Instructions Cycles
  5239                           ; simple_byte            4     3 (average)
  5240                           ;	Chosen strategy is simple_byte
  5241  000E90  5061               	movf	??_intrpt+1,w,c
  5242  000E92  0A00               	xorlw	0	; case 0
  5243  000E94  A4D8               	btfss	status,2,c
  5244  000E96  D004               	goto	i2l154
  5245                           
  5246                           ; Switch size 1, requested type "space"
  5247                           ; Number of cases is 1, Range of values is 0 to 0
  5248                           ; switch strategies available:
  5249                           ; Name         Instructions Cycles
  5250                           ; simple_byte            4     3 (average)
  5251                           ;	Chosen strategy is simple_byte
  5252  000E98  5060               	movf	??_intrpt,w,c
  5253  000E9A  0A00               	xorlw	0	; case 0
  5254  000E9C  B4D8               	btfsc	status,2,c
  5255  000E9E  D7D4               	goto	i2l4451
  5256  000EA0                     i2l154:
  5257                           
  5258                           ;main.c: 306: }
  5259                           ;main.c: 307: if (INT2IF) {
  5260  000EA0  A2F0               	btfss	intcon3,1,c	;volatile
  5261  000EA2  D024               	goto	i2l177
  5262                           
  5263                           ;main.c: 308: INT2IF = 0;
  5264  000EA4  92F0               	bcf	intcon3,1,c	;volatile
  5265                           
  5266                           ;main.c: 309: _delay((unsigned long)((100)*(8000000/4000.0)));
  5267  000EA6  0E02               	movlw	2
  5268  000EA8  6E61               	movwf	(??_intrpt+1)& (0+255),c
  5269  000EAA  0E04               	movlw	4
  5270  000EAC  6E60               	movwf	??_intrpt& (0+255),c
  5271  000EAE  0EBA               	movlw	186
  5272  000EB0                     i2u365_47:
  5273  000EB0  2EE8               	decfsz	wreg,f,c
  5274  000EB2  D7FE               	bra	i2u365_47
  5275  000EB4  2E60               	decfsz	??_intrpt& (0+255),f,c
  5276  000EB6  D7FC               	bra	i2u365_47
  5277  000EB8  2E61               	decfsz	(??_intrpt+1)& (0+255),f,c
  5278  000EBA  D7FA               	bra	i2u365_47
  5279  000EBC  D000               	nop2	
  5280                           
  5281                           ;main.c: 310: if (!PORTBbits.RB2) {
  5282  000EBE  A481               	btfss	3969,2,c	;volatile
  5283  000EC0  D009               	goto	i2l4471
  5284  000EC2  D014               	goto	i2l177
  5285  000EC4                     i2l4465:
  5286                           
  5287                           ;main.c: 313: mode = 3;
  5288  000EC4  0E00               	movlw	0
  5289  000EC6  6E7C               	movwf	_mode+1,c
  5290  000EC8  0E03               	movlw	3
  5291  000ECA  6E7B               	movwf	_mode,c
  5292                           
  5293                           ;main.c: 314: stopMoving(1);
  5294  000ECC  0E01               	movlw	1
  5295  000ECE  ECF1  F011         	call	_stopMoving
  5296                           
  5297                           ;main.c: 318: }
  5298                           
  5299                           ;main.c: 317: break;
  5300                           
  5301                           ;main.c: 316: default:
  5302                           
  5303                           ;main.c: 315: break;
  5304  000ED2  D00C               	goto	i2l177
  5305  000ED4                     i2l4471:
  5306  000ED4  C07B  F060         	movff	_mode,??_intrpt
  5307  000ED8  C07C  F061         	movff	_mode+1,??_intrpt+1
  5308                           
  5309                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5310                           ; Switch size 1, requested type "space"
  5311                           ; Number of cases is 1, Range of values is 0 to 0
  5312                           ; switch strategies available:
  5313                           ; Name         Instructions Cycles
  5314                           ; simple_byte            4     3 (average)
  5315                           ;	Chosen strategy is simple_byte
  5316  000EDC  5061               	movf	??_intrpt+1,w,c
  5317  000EDE  0A00               	xorlw	0	; case 0
  5318  000EE0  A4D8               	btfss	status,2,c
  5319  000EE2  D004               	goto	i2l177
  5320                           
  5321                           ; Switch size 1, requested type "space"
  5322                           ; Number of cases is 1, Range of values is 1 to 1
  5323                           ; switch strategies available:
  5324                           ; Name         Instructions Cycles
  5325                           ; simple_byte            4     3 (average)
  5326                           ;	Chosen strategy is simple_byte
  5327  000EE4  5060               	movf	??_intrpt,w,c
  5328  000EE6  0A01               	xorlw	1	; case 1
  5329  000EE8  B4D8               	btfsc	status,2,c
  5330  000EEA  D7EC               	goto	i2l4465
  5331  000EEC                     i2l177:
  5332                           
  5333                           ;main.c: 319: }
  5334                           ;main.c: 320: }
  5335                           ;main.c: 321: (INTCONbits.GIE = 1);
  5336  000EEC  8EF2               	bsf	intcon,7,c	;volatile
  5337  000EEE                     i2l171:
  5338  000EEE  C06F  FFF5         	movff	??_intrpt+15,tablat
  5339  000EF2  C06E  FFF8         	movff	??_intrpt+14,tblptru
  5340  000EF6  C06D  FFF7         	movff	??_intrpt+13,tblptrh
  5341  000EFA  C06C  FFF6         	movff	??_intrpt+12,tblptrl
  5342  000EFE  C06B  FFF4         	movff	??_intrpt+11,prodh
  5343  000F02  C06A  FFF3         	movff	??_intrpt+10,prodl
  5344  000F06  C069  FFDA         	movff	??_intrpt+9,fsr2h
  5345  000F0A  C068  FFD9         	movff	??_intrpt+8,fsr2l
  5346  000F0E  C067  FFE2         	movff	??_intrpt+7,fsr1h
  5347  000F12  C066  FFE1         	movff	??_intrpt+6,fsr1l
  5348  000F16  C065  FFEA         	movff	??_intrpt+5,fsr0h
  5349  000F1A  C064  FFE9         	movff	??_intrpt+4,fsr0l
  5350  000F1E  C063  FFFB         	movff	??_intrpt+3,pclatu
  5351  000F22  C062  FFFA         	movff	??_intrpt+2,pclath
  5352  000F26  927D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5353  000F28  0011               	retfie		f
  5354  000F2A                     __end_of_intrpt:
  5355                           	opt stack 0
  5356                           pclatu	equ	0xFFB
  5357                           pclath	equ	0xFFA
  5358                           tblptru	equ	0xFF8
  5359                           tblptrh	equ	0xFF7
  5360                           tblptrl	equ	0xFF6
  5361                           tablat	equ	0xFF5
  5362                           prodh	equ	0xFF4
  5363                           prodl	equ	0xFF3
  5364                           intcon	equ	0xFF2
  5365                           intcon2	equ	0xFF1
  5366                           intcon3	equ	0xFF0
  5367                           postinc0	equ	0xFEE
  5368                           fsr0h	equ	0xFEA
  5369                           fsr0l	equ	0xFE9
  5370                           wreg	equ	0xFE8
  5371                           postdec1	equ	0xFE5
  5372                           plusw1	equ	0xFE3
  5373                           fsr1h	equ	0xFE2
  5374                           fsr1l	equ	0xFE1
  5375                           indf2	equ	0xFDF
  5376                           postinc2	equ	0xFDE
  5377                           postdec2	equ	0xFDD
  5378                           plusw2	equ	0xFDB
  5379                           fsr2h	equ	0xFDA
  5380                           fsr2l	equ	0xFD9
  5381                           status	equ	0xFD8
  5382                           
  5383 ;; *************** function _simulate *****************
  5384 ;; Defined at:
  5385 ;;		line 91 in file "main.c"
  5386 ;; Parameters:    Size  Location     Type
  5387 ;;		None
  5388 ;; Auto vars:     Size  Location     Type
  5389 ;;  portCCW         6   77[COMRAM] int [3]
  5390 ;;  portCW          6   71[COMRAM] int [3]
  5391 ;;  portShake       6   64[COMRAM] int [3]
  5392 ;;  sorted          4   91[COMRAM] unsigned char [4]
  5393 ;;  start           4   59[COMRAM] unsigned int [2]
  5394 ;;  now             4   55[COMRAM] unsigned int [2]
  5395 ;;  AA              2   89[COMRAM] int 
  5396 ;;  period          2   87[COMRAM] unsigned int 
  5397 ;;  V9              2   85[COMRAM] int 
  5398 ;;  C               2   83[COMRAM] int 
  5399 ;;  shakeCW         1   70[COMRAM] unsigned char 
  5400 ;;  notyet          1   63[COMRAM] unsigned char 
  5401 ;; Return value:  Size  Location     Type
  5402 ;;                  1    wreg      void 
  5403 ;; Registers used:
  5404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5405 ;; Tracked objects:
  5406 ;;		On entry : 0/0
  5407 ;;		On exit  : 0/0
  5408 ;;		Unchanged: 0/0
  5409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5411 ;;      Locals:        42       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5412 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5413 ;;      Totals:        44       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5414 ;;Total ram usage:       44 bytes
  5415 ;; Hardware stack levels used:    1
  5416 ;; Hardware stack levels required when called:    5
  5417 ;; This function calls:
  5418 ;;		_CCW90
  5419 ;;		_CW90
  5420 ;;		_HexDecToDec2
  5421 ;;		_PWMC
  5422 ;;		_WriteRun
  5423 ;;		_check9
  5424 ;;		_checkAA
  5425 ;;		_checkC
  5426 ;;		_closeGate
  5427 ;;		_openGate
  5428 ;;		_showInfo
  5429 ;;		_stopMoving
  5430 ;;		i2___wmul
  5431 ;;		i2_getTime
  5432 ;;		i2_lcdInst
  5433 ;;		i2_printf
  5434 ;; This function is called by:
  5435 ;;		_intrpt
  5436 ;; This function uses a non-reentrant model
  5437 ;;
  5438                           
  5439                           	psect	text23
  5440  000012                     __ptext23:
  5441                           	opt stack 0
  5442  000012                     _simulate:
  5443                           	opt stack 20
  5444                           
  5445                           ;main.c: 92: unsigned int now[] = {0, 0}, start[] = {0, 0};
  5446                           
  5447                           ;incstack = 0
  5448  000012  C077  F038         	movff	simulate@F3110,simulate@now
  5449  000016  C078  F039         	movff	simulate@F3110+1,simulate@now+1
  5450  00001A  C079  F03A         	movff	simulate@F3110+2,simulate@now+2
  5451  00001E  C07A  F03B         	movff	simulate@F3110+3,simulate@now+3
  5452  000022  C0A4  F03C         	movff	simulate@F3112,simulate@start
  5453  000026  C0A5  F03D         	movff	simulate@F3112+1,simulate@start+1
  5454  00002A  C0A6  F03E         	movff	simulate@F3112+2,simulate@start+2
  5455  00002E  C0A7  F03F         	movff	simulate@F3112+3,simulate@start+3
  5456                           
  5457                           ;main.c: 93: unsigned char sorted[] = {0, 0, 0, 0};
  5458  000032  C0A0  F05C         	movff	simulate@F3114,simulate@sorted
  5459  000036  C0A1  F05D         	movff	simulate@F3114+1,simulate@sorted+1
  5460  00003A  C0A2  F05E         	movff	simulate@F3114+2,simulate@sorted+2
  5461  00003E  C0A3  F05F         	movff	simulate@F3114+3,simulate@sorted+3
  5462                           
  5463                           ;main.c: 94: unsigned int period = 0;
  5464  000042  0E00               	movlw	0
  5465  000044  6E59               	movwf	simulate@period+1,c
  5466  000046  0E00               	movlw	0
  5467  000048  6E58               	movwf	simulate@period,c
  5468                           
  5469                           ;main.c: 95: unsigned char shakeCW = 0;
  5470  00004A  0E00               	movlw	0
  5471  00004C  6E47               	movwf	simulate@shakeCW,c
  5472                           
  5473                           ;main.c: 96: int AA, C, V9;
  5474                           ;main.c: 98: lcdInst(0b10000000);
  5475  00004E  0E80               	movlw	128
  5476  000050  EC53  F013         	call	i2_lcdInst
  5477                           
  5478                           ;main.c: 99: printf("Sorting...          ");
  5479  000054  0E2B               	movlw	low STR_3
  5480  000056  6E0D               	movwf	i2printf@f,c
  5481  000058  0EFF               	movlw	high STR_3
  5482  00005A  6E0E               	movwf	i2printf@f+1,c
  5483  00005C  EC7E  F004         	call	i2_printf	;wreg free
  5484                           
  5485                           ;main.c: 100: start[0] = time[0];
  5486  000060  C0A9  F03C         	movff	_time,simulate@start
  5487  000064  6A3D               	clrf	simulate@start+1,c
  5488                           
  5489                           ;main.c: 101: start[1] = time[1];
  5490  000066  C0AA  F03E         	movff	_time+1,simulate@start+2
  5491  00006A  6A3F               	clrf	simulate@start+3,c
  5492                           
  5493                           ;main.c: 103: LATC6 = 1;
  5494  00006C  8C8B               	bsf	3979,6,c	;volatile
  5495                           
  5496                           ;main.c: 104: INT2IE = 1;
  5497  00006E  88F0               	bsf	intcon3,4,c	;volatile
  5498                           
  5499                           ;main.c: 105: INT2IF = 0;
  5500  000070  92F0               	bcf	intcon3,1,c	;volatile
  5501                           
  5502                           ;main.c: 106: _delay((unsigned long)((20000)*(8000000/4000.0)));
  5503  000072  0ECB               	movlw	203
  5504  000074  6E35               	movwf	(??_simulate+1)& (0+255),c
  5505  000076  0EEC               	movlw	236
  5506  000078  6E34               	movwf	??_simulate& (0+255),c
  5507  00007A  0E84               	movlw	132
  5508  00007C                     i2u366_47:
  5509  00007C  2EE8               	decfsz	wreg,f,c
  5510  00007E  D7FE               	bra	i2u366_47
  5511  000080  2E34               	decfsz	??_simulate& (0+255),f,c
  5512  000082  D7FC               	bra	i2u366_47
  5513  000084  2E35               	decfsz	(??_simulate+1)& (0+255),f,c
  5514  000086  D7FA               	bra	i2u366_47
  5515  000088  D000               	nop2	
  5516                           
  5517                           ;main.c: 107: openGate();
  5518  00008A  ECC7  F012         	call	_openGate	;wreg free
  5519                           
  5520                           ;main.c: 108: char notyet = 0;
  5521  00008E  0E00               	movlw	0
  5522  000090  6E40               	movwf	simulate@notyet,c
  5523                           
  5524                           ;main.c: 109: while (mode == 1) {
  5525  000092  D1C7               	goto	i2l4329
  5526  000094                     i2l4205:
  5527                           
  5528                           ;main.c: 112: lcdInst(0b10000000);
  5529  000094  0E80               	movlw	128
  5530  000096  EC53  F013         	call	i2_lcdInst
  5531                           
  5532                           ;main.c: 113: V9 = check9(sorted);
  5533  00009A  0E5C               	movlw	low simulate@sorted
  5534  00009C  6E2E               	movwf	check9@sorted,c
  5535  00009E  0E00               	movlw	high simulate@sorted
  5536  0000A0  6E2F               	movwf	check9@sorted+1,c
  5537  0000A2  EC98  F00F         	call	_check9	;wreg free
  5538  0000A6  C02E  F056         	movff	?_check9,simulate@V9
  5539  0000AA  C02F  F057         	movff	?_check9+1,simulate@V9+1
  5540                           
  5541                           ;main.c: 114: C = checkC(sorted);
  5542  0000AE  0E5C               	movlw	low simulate@sorted
  5543  0000B0  6E2E               	movwf	checkC@sorted,c
  5544  0000B2  0E00               	movlw	high simulate@sorted
  5545  0000B4  6E2F               	movwf	checkC@sorted+1,c
  5546  0000B6  EC5D  F00F         	call	_checkC	;wreg free
  5547  0000BA  C02E  F054         	movff	?_checkC,simulate@C
  5548  0000BE  C02F  F055         	movff	?_checkC+1,simulate@C+1
  5549                           
  5550                           ;main.c: 115: AA = checkAA(sorted);
  5551  0000C2  0E5C               	movlw	low simulate@sorted
  5552  0000C4  6E2E               	movwf	checkAA@sorted,c
  5553  0000C6  0E00               	movlw	high simulate@sorted
  5554  0000C8  6E2F               	movwf	checkAA@sorted+1,c
  5555  0000CA  ECD3  F00F         	call	_checkAA	;wreg free
  5556  0000CE  C02E  F05A         	movff	?_checkAA,simulate@AA
  5557  0000D2  C02F  F05B         	movff	?_checkAA+1,simulate@AA+1
  5558                           
  5559                           ;main.c: 116: printf("    ");
  5560  0000D6  0EDB               	movlw	low (STR_29+11)
  5561  0000D8  6E0D               	movwf	i2printf@f,c
  5562  0000DA  0EFF               	movlw	high (STR_29+11)
  5563  0000DC  6E0E               	movwf	i2printf@f+1,c
  5564  0000DE  EC7E  F004         	call	i2_printf	;wreg free
  5565                           
  5566                           ;main.c: 117: if (V9 != -1 || C != -1 || AA != -1) {
  5567  0000E2  2856               	incf	simulate@V9,w,c
  5568  0000E4  E10D               	bnz	i2l4221
  5569  0000E6  2857               	incf	simulate@V9+1,w,c
  5570  0000E8  A4D8               	btfss	status,2,c
  5571  0000EA  D00A               	goto	i2l4221
  5572  0000EC  2854               	incf	simulate@C,w,c
  5573  0000EE  E108               	bnz	i2l4221
  5574  0000F0  2855               	incf	simulate@C+1,w,c
  5575  0000F2  A4D8               	btfss	status,2,c
  5576  0000F4  D005               	goto	i2l4221
  5577  0000F6  285A               	incf	simulate@AA,w,c
  5578  0000F8  E103               	bnz	i2l4221
  5579  0000FA  285B               	incf	simulate@AA+1,w,c
  5580  0000FC  B4D8               	btfsc	status,2,c
  5581  0000FE  D002               	goto	i2l4223
  5582  000100                     i2l4221:
  5583                           
  5584                           ;main.c: 118: notyet = 0;
  5585  000100  0E00               	movlw	0
  5586  000102  6E40               	movwf	simulate@notyet,c
  5587  000104                     i2l4223:
  5588                           
  5589                           ;main.c: 119: }
  5590                           ;main.c: 120: int portCW[] = {0, 0, 0};
  5591  000104  EE20  F092         	lfsr	2,simulate@F3123
  5592  000108  EE10  F048         	lfsr	1,simulate@portCW
  5593  00010C  0E05               	movlw	5
  5594  00010E                     i2u324_41:
  5595  00010E  CFDB FFE3          	movff	plusw2,plusw1
  5596  000112  06E8               	decf	wreg,f,c
  5597  000114  E2FC               	bc	i2u324_41
  5598                           
  5599                           ;main.c: 121: int portCCW[] = {0, 0, 0};
  5600  000116  EE20  F08C         	lfsr	2,simulate@F3125
  5601  00011A  EE10  F04E         	lfsr	1,simulate@portCCW
  5602  00011E  0E05               	movlw	5
  5603  000120                     i2u325_41:
  5604  000120  CFDB FFE3          	movff	plusw2,plusw1
  5605  000124  06E8               	decf	wreg,f,c
  5606  000126  E2FC               	bc	i2u325_41
  5607                           
  5608                           ;main.c: 124: lcdInst(0b11000000);
  5609  000128  0EC0               	movlw	192
  5610  00012A  EC53  F013         	call	i2_lcdInst
  5611                           
  5612                           ;main.c: 125: printf("9V:");
  5613  00012E  0EF2               	movlw	low STR_5
  5614  000130  6E0D               	movwf	i2printf@f,c
  5615  000132  0EFF               	movlw	high STR_5
  5616  000134  6E0E               	movwf	i2printf@f+1,c
  5617  000136  EC7E  F004         	call	i2_printf	;wreg free
  5618                           
  5619                           ;main.c: 126: if (!V9) {
  5620  00013A  5056               	movf	simulate@V9,w,c
  5621  00013C  1057               	iorwf	simulate@V9+1,w,c
  5622  00013E  A4D8               	btfss	status,2,c
  5623  000140  D00B               	goto	i2l4239
  5624                           
  5625                           ;main.c: 127: portCW[0] = 1;
  5626  000142  0E00               	movlw	0
  5627  000144  6E49               	movwf	simulate@portCW+1,c
  5628  000146  0E01               	movlw	1
  5629  000148  6E48               	movwf	simulate@portCW,c
  5630                           
  5631                           ;main.c: 128: printf(" +");
  5632  00014A  0EF6               	movlw	low STR_6
  5633  00014C  6E0D               	movwf	i2printf@f,c
  5634  00014E  0EFF               	movlw	high STR_6
  5635  000150  6E0E               	movwf	i2printf@f+1,c
  5636  000152  EC7E  F004         	call	i2_printf	;wreg free
  5637  000156  D00E               	goto	i2l4245
  5638  000158                     i2l4239:
  5639  000158  0456               	decf	simulate@V9,w,c
  5640  00015A  1057               	iorwf	simulate@V9+1,w,c
  5641  00015C  A4D8               	btfss	status,2,c
  5642  00015E  D00D               	goto	i2l4247
  5643                           
  5644                           ;main.c: 133: portCCW[0] = 1;
  5645  000160  0E00               	movlw	0
  5646  000162  6E4F               	movwf	simulate@portCCW+1,c
  5647  000164  0E01               	movlw	1
  5648  000166  6E4E               	movwf	simulate@portCCW,c
  5649                           
  5650                           ;main.c: 134: printf(" -");
  5651  000168  0EF9               	movlw	low STR_7
  5652  00016A  6E0D               	movwf	i2printf@f,c
  5653  00016C  0EFF               	movlw	high STR_7
  5654  00016E  6E0E               	movwf	i2printf@f+1,c
  5655  000170  EC7E  F004         	call	i2_printf	;wreg free
  5656  000174                     i2l4245:
  5657                           
  5658                           ;main.c: 135: AA = -1;
  5659  000174  685A               	setf	simulate@AA,c
  5660  000176  685B               	setf	simulate@AA+1,c
  5661                           
  5662                           ;main.c: 138: } else {
  5663  000178  D006               	goto	i2l129
  5664  00017A                     i2l4247:
  5665                           
  5666                           ;main.c: 139: printf(" 0");
  5667  00017A  0EFC               	movlw	low STR_8
  5668  00017C  6E0D               	movwf	i2printf@f,c
  5669  00017E  0EFF               	movlw	high STR_8
  5670  000180  6E0E               	movwf	i2printf@f+1,c
  5671  000182  EC7E  F004         	call	i2_printf	;wreg free
  5672  000186                     i2l129:
  5673                           
  5674                           ;main.c: 140: }
  5675                           ;main.c: 142: printf(" C:");
  5676  000186  0EEE               	movlw	low STR_9
  5677  000188  6E0D               	movwf	i2printf@f,c
  5678  00018A  0EFF               	movlw	high STR_9
  5679  00018C  6E0E               	movwf	i2printf@f+1,c
  5680  00018E  EC7E  F004         	call	i2_printf	;wreg free
  5681                           
  5682                           ;main.c: 144: if (!C) {
  5683  000192  5054               	movf	simulate@C,w,c
  5684  000194  1055               	iorwf	simulate@C+1,w,c
  5685  000196  A4D8               	btfss	status,2,c
  5686  000198  D00B               	goto	i2l4255
  5687                           
  5688                           ;main.c: 145: portCW[1] = 1;
  5689  00019A  0E00               	movlw	0
  5690  00019C  6E4B               	movwf	simulate@portCW+3,c
  5691  00019E  0E01               	movlw	1
  5692  0001A0  6E4A               	movwf	simulate@portCW+2,c
  5693                           
  5694                           ;main.c: 146: printf(" +");
  5695  0001A2  0EF6               	movlw	low STR_6
  5696  0001A4  6E0D               	movwf	i2printf@f,c
  5697  0001A6  0EFF               	movlw	high STR_6
  5698  0001A8  6E0E               	movwf	i2printf@f+1,c
  5699  0001AA  EC7E  F004         	call	i2_printf	;wreg free
  5700                           
  5701                           ;main.c: 150: } else if (C == 1) {
  5702  0001AE  D015               	goto	i2l133
  5703  0001B0                     i2l4255:
  5704  0001B0  0454               	decf	simulate@C,w,c
  5705  0001B2  1055               	iorwf	simulate@C+1,w,c
  5706  0001B4  A4D8               	btfss	status,2,c
  5707  0001B6  D00B               	goto	i2l4261
  5708                           
  5709                           ;main.c: 151: portCCW[1] = 1;
  5710  0001B8  0E00               	movlw	0
  5711  0001BA  6E51               	movwf	simulate@portCCW+3,c
  5712  0001BC  0E01               	movlw	1
  5713  0001BE  6E50               	movwf	simulate@portCCW+2,c
  5714                           
  5715                           ;main.c: 152: printf(" -");
  5716  0001C0  0EF9               	movlw	low STR_7
  5717  0001C2  6E0D               	movwf	i2printf@f,c
  5718  0001C4  0EFF               	movlw	high STR_7
  5719  0001C6  6E0E               	movwf	i2printf@f+1,c
  5720  0001C8  EC7E  F004         	call	i2_printf	;wreg free
  5721                           
  5722                           ;main.c: 156: } else {
  5723  0001CC  D006               	goto	i2l133
  5724  0001CE                     i2l4261:
  5725                           
  5726                           ;main.c: 157: printf(" 0");
  5727  0001CE  0EFC               	movlw	low STR_8
  5728  0001D0  6E0D               	movwf	i2printf@f,c
  5729  0001D2  0EFF               	movlw	high STR_8
  5730  0001D4  6E0E               	movwf	i2printf@f+1,c
  5731  0001D6  EC7E  F004         	call	i2_printf	;wreg free
  5732  0001DA                     i2l133:
  5733                           
  5734                           ;main.c: 158: }
  5735                           ;main.c: 160: printf(" AA:");
  5736  0001DA  0EE5               	movlw	low STR_13
  5737  0001DC  6E0D               	movwf	i2printf@f,c
  5738  0001DE  0EFF               	movlw	high STR_13
  5739  0001E0  6E0E               	movwf	i2printf@f+1,c
  5740  0001E2  EC7E  F004         	call	i2_printf	;wreg free
  5741                           
  5742                           ;main.c: 162: if (!AA) {
  5743  0001E6  505A               	movf	simulate@AA,w,c
  5744  0001E8  105B               	iorwf	simulate@AA+1,w,c
  5745  0001EA  A4D8               	btfss	status,2,c
  5746  0001EC  D00B               	goto	i2l4269
  5747                           
  5748                           ;main.c: 163: portCCW[2] = 1;
  5749  0001EE  0E00               	movlw	0
  5750  0001F0  6E53               	movwf	simulate@portCCW+5,c
  5751  0001F2  0E01               	movlw	1
  5752  0001F4  6E52               	movwf	simulate@portCCW+4,c
  5753                           
  5754                           ;main.c: 164: printf(" -");
  5755  0001F6  0EF9               	movlw	low STR_7
  5756  0001F8  6E0D               	movwf	i2printf@f,c
  5757  0001FA  0EFF               	movlw	high STR_7
  5758  0001FC  6E0E               	movwf	i2printf@f+1,c
  5759  0001FE  EC7E  F004         	call	i2_printf	;wreg free
  5760                           
  5761                           ;main.c: 168: } else if (AA == 1) {
  5762  000202  D015               	goto	i2l4277
  5763  000204                     i2l4269:
  5764  000204  045A               	decf	simulate@AA,w,c
  5765  000206  105B               	iorwf	simulate@AA+1,w,c
  5766  000208  A4D8               	btfss	status,2,c
  5767  00020A  D00B               	goto	i2l4275
  5768                           
  5769                           ;main.c: 169: portCW[2] = 1;
  5770  00020C  0E00               	movlw	0
  5771  00020E  6E4D               	movwf	simulate@portCW+5,c
  5772  000210  0E01               	movlw	1
  5773  000212  6E4C               	movwf	simulate@portCW+4,c
  5774                           
  5775                           ;main.c: 170: printf(" +");
  5776  000214  0EF6               	movlw	low STR_6
  5777  000216  6E0D               	movwf	i2printf@f,c
  5778  000218  0EFF               	movlw	high STR_6
  5779  00021A  6E0E               	movwf	i2printf@f+1,c
  5780  00021C  EC7E  F004         	call	i2_printf	;wreg free
  5781                           
  5782                           ;main.c: 174: } else {
  5783  000220  D006               	goto	i2l4277
  5784  000222                     i2l4275:
  5785                           
  5786                           ;main.c: 175: printf(" 0");
  5787  000222  0EFC               	movlw	low STR_8
  5788  000224  6E0D               	movwf	i2printf@f,c
  5789  000226  0EFF               	movlw	high STR_8
  5790  000228  6E0E               	movwf	i2printf@f+1,c
  5791  00022A  EC7E  F004         	call	i2_printf	;wreg free
  5792  00022E                     i2l4277:
  5793                           
  5794                           ;main.c: 176: }
  5795                           ;main.c: 180: CCW90(portCCW);
  5796  00022E  0E4E               	movlw	low simulate@portCCW
  5797  000230  6E16               	movwf	CCW90@port,c
  5798  000232  0E00               	movlw	high simulate@portCCW
  5799  000234  6E17               	movwf	CCW90@port+1,c
  5800  000236  EC5F  F00E         	call	_CCW90	;wreg free
  5801                           
  5802                           ;main.c: 181: CW90(portCW);
  5803  00023A  0E48               	movlw	low simulate@portCW
  5804  00023C  6E16               	movwf	CW90@port,c
  5805  00023E  0E00               	movlw	high simulate@portCW
  5806  000240  6E17               	movwf	CW90@port+1,c
  5807  000242  EC1A  F00E         	call	_CW90	;wreg free
  5808                           
  5809                           ;main.c: 182: LATC6 = 0;
  5810  000246  9C8B               	bcf	3979,6,c	;volatile
  5811                           
  5812                           ;main.c: 183: int portShake[]={0,0,0};
  5813  000248  EE20  F086         	lfsr	2,simulate@F3127
  5814  00024C  EE10  F041         	lfsr	1,simulate@portShake
  5815  000250  0E05               	movlw	5
  5816  000252                     i2u332_41:
  5817  000252  CFDB FFE3          	movff	plusw2,plusw1
  5818  000256  06E8               	decf	wreg,f,c
  5819  000258  E2FC               	bc	i2u332_41
  5820                           
  5821                           ;main.c: 184: portShake[0] = portCCW[0] == portCW[0];
  5822  00025A  5048               	movf	simulate@portCW,w,c
  5823  00025C  184E               	xorwf	simulate@portCCW,w,c
  5824  00025E  E106               	bnz	i2u333_40
  5825  000260  5049               	movf	simulate@portCW+1,w,c
  5826  000262  184F               	xorwf	simulate@portCCW+1,w,c
  5827  000264  A4D8               	btfss	status,2,c
  5828  000266  D002               	goto	i2u333_40
  5829  000268  0E01               	movlw	1
  5830  00026A  D001               	goto	i2u334_40
  5831  00026C                     i2u333_40:
  5832  00026C  0E00               	movlw	0
  5833  00026E                     i2u334_40:
  5834  00026E  6E41               	movwf	simulate@portShake,c
  5835  000270  6A42               	clrf	simulate@portShake+1,c
  5836                           
  5837                           ;main.c: 185: portShake[1] = portCCW[1] == portCW[1];
  5838  000272  504A               	movf	simulate@portCW+2,w,c
  5839  000274  1850               	xorwf	simulate@portCCW+2,w,c
  5840  000276  E106               	bnz	i2u335_40
  5841  000278  504B               	movf	simulate@portCW+3,w,c
  5842  00027A  1851               	xorwf	simulate@portCCW+3,w,c
  5843  00027C  A4D8               	btfss	status,2,c
  5844  00027E  D002               	goto	i2u335_40
  5845  000280  0E01               	movlw	1
  5846  000282  D001               	goto	i2u336_40
  5847  000284                     i2u335_40:
  5848  000284  0E00               	movlw	0
  5849  000286                     i2u336_40:
  5850  000286  6E43               	movwf	simulate@portShake+2,c
  5851  000288  6A44               	clrf	simulate@portShake+3,c
  5852                           
  5853                           ;main.c: 186: portShake[2] = portCCW[2] == portCW[2];
  5854  00028A  504C               	movf	simulate@portCW+4,w,c
  5855  00028C  1852               	xorwf	simulate@portCCW+4,w,c
  5856  00028E  E106               	bnz	i2u337_40
  5857  000290  504D               	movf	simulate@portCW+5,w,c
  5858  000292  1853               	xorwf	simulate@portCCW+5,w,c
  5859  000294  A4D8               	btfss	status,2,c
  5860  000296  D002               	goto	i2u337_40
  5861  000298  0E01               	movlw	1
  5862  00029A  D001               	goto	i2u338_40
  5863  00029C                     i2u337_40:
  5864  00029C  0E00               	movlw	0
  5865  00029E                     i2u338_40:
  5866  00029E  6E45               	movwf	simulate@portShake+4,c
  5867  0002A0  6A46               	clrf	simulate@portShake+5,c
  5868                           
  5869                           ;main.c: 187: if (shakeCW) {
  5870  0002A2  5047               	movf	simulate@shakeCW,w,c
  5871  0002A4  B4D8               	btfsc	status,2,c
  5872  0002A6  D028               	goto	i2l4297
  5873                           
  5874                           ;main.c: 188: PWMC(450, 160, portShake);
  5875  0002A8  0E01               	movlw	1
  5876  0002AA  6E0A               	movwf	PWMC@widthus+1,c
  5877  0002AC  0EC2               	movlw	194
  5878  0002AE  6E09               	movwf	PWMC@widthus,c
  5879  0002B0  0E00               	movlw	0
  5880  0002B2  6E0C               	movwf	PWMC@cycles+1,c
  5881  0002B4  0EA0               	movlw	160
  5882  0002B6  6E0B               	movwf	PWMC@cycles,c
  5883  0002B8  0E41               	movlw	low simulate@portShake
  5884  0002BA  6E0D               	movwf	PWMC@port,c
  5885  0002BC  0E00               	movlw	high simulate@portShake
  5886  0002BE  6E0E               	movwf	PWMC@port+1,c
  5887  0002C0  EC34  F00B         	call	_PWMC	;wreg free
  5888                           
  5889                           ;main.c: 189: PWMC(5000, 2, portShake);
  5890  0002C4  0E13               	movlw	19
  5891  0002C6  6E0A               	movwf	PWMC@widthus+1,c
  5892  0002C8  0E88               	movlw	136
  5893  0002CA  6E09               	movwf	PWMC@widthus,c
  5894  0002CC  0E00               	movlw	0
  5895  0002CE  6E0C               	movwf	PWMC@cycles+1,c
  5896  0002D0  0E02               	movlw	2
  5897  0002D2  6E0B               	movwf	PWMC@cycles,c
  5898  0002D4  0E41               	movlw	low simulate@portShake
  5899  0002D6  6E0D               	movwf	PWMC@port,c
  5900  0002D8  0E00               	movlw	high simulate@portShake
  5901  0002DA  6E0E               	movwf	PWMC@port+1,c
  5902  0002DC  EC34  F00B         	call	_PWMC	;wreg free
  5903                           
  5904                           ;main.c: 190: _delay((unsigned long)((100)*(8000000/4000.0)));
  5905  0002E0  0E02               	movlw	2
  5906  0002E2  6E35               	movwf	(??_simulate+1)& (0+255),c
  5907  0002E4  0E04               	movlw	4
  5908  0002E6  6E34               	movwf	??_simulate& (0+255),c
  5909  0002E8  0EBA               	movlw	186
  5910  0002EA                     i2u367_47:
  5911  0002EA  2EE8               	decfsz	wreg,f,c
  5912  0002EC  D7FE               	bra	i2u367_47
  5913  0002EE  2E34               	decfsz	??_simulate& (0+255),f,c
  5914  0002F0  D7FC               	bra	i2u367_47
  5915  0002F2  2E35               	decfsz	(??_simulate+1)& (0+255),f,c
  5916  0002F4  D7FA               	bra	i2u367_47
  5917  0002F6  D027               	goto	L1
  5918  0002F8                     i2l4297:
  5919                           
  5920                           ;main.c: 192: PWMC(5000, 20, portShake);
  5921  0002F8  0E13               	movlw	19
  5922  0002FA  6E0A               	movwf	PWMC@widthus+1,c
  5923  0002FC  0E88               	movlw	136
  5924  0002FE  6E09               	movwf	PWMC@widthus,c
  5925  000300  0E00               	movlw	0
  5926  000302  6E0C               	movwf	PWMC@cycles+1,c
  5927  000304  0E14               	movlw	20
  5928  000306  6E0B               	movwf	PWMC@cycles,c
  5929  000308  0E41               	movlw	low simulate@portShake
  5930  00030A  6E0D               	movwf	PWMC@port,c
  5931  00030C  0E00               	movlw	high simulate@portShake
  5932  00030E  6E0E               	movwf	PWMC@port+1,c
  5933  000310  EC34  F00B         	call	_PWMC	;wreg free
  5934                           
  5935                           ;main.c: 193: PWMC(450, 2, portShake);
  5936  000314  0E01               	movlw	1
  5937  000316  6E0A               	movwf	PWMC@widthus+1,c
  5938  000318  0EC2               	movlw	194
  5939  00031A  6E09               	movwf	PWMC@widthus,c
  5940  00031C  0E00               	movlw	0
  5941  00031E  6E0C               	movwf	PWMC@cycles+1,c
  5942  000320  0E02               	movlw	2
  5943  000322  6E0B               	movwf	PWMC@cycles,c
  5944  000324  0E41               	movlw	low simulate@portShake
  5945  000326  6E0D               	movwf	PWMC@port,c
  5946  000328  0E00               	movlw	high simulate@portShake
  5947  00032A  6E0E               	movwf	PWMC@port+1,c
  5948  00032C  EC34  F00B         	call	_PWMC	;wreg free
  5949                           
  5950                           ;main.c: 194: _delay((unsigned long)((100)*(8000000/4000.0)));
  5951  000330  0E02               	movlw	2
  5952  000332  6E35               	movwf	(??_simulate+1)& (0+255),c
  5953  000334  0E04               	movlw	4
  5954  000336  6E34               	movwf	??_simulate& (0+255),c
  5955  000338  0EBA               	movlw	186
  5956  00033A                     i2u368_47:
  5957  00033A  2EE8               	decfsz	wreg,f,c
  5958  00033C  D7FE               	bra	i2u368_47
  5959  00033E  2E34               	decfsz	??_simulate& (0+255),f,c
  5960  000340  D7FC               	bra	i2u368_47
  5961  000342  2E35               	decfsz	(??_simulate+1)& (0+255),f,c
  5962  000344  D7FA               	bra	i2u368_47
  5963  000346                     L1:
  5964  000346  D000               	nop2	
  5965                           
  5966                           ;main.c: 195: }
  5967                           ;main.c: 196: shakeCW = ~shakeCW;
  5968  000348  1E47               	comf	simulate@shakeCW,f,c
  5969                           
  5970                           ;main.c: 197: LATC6 = 1;
  5971  00034A  8C8B               	bsf	3979,6,c	;volatile
  5972                           
  5973                           ;main.c: 199: if (sorted[0] & sorted[1] & sorted[2] & sorted[3]) {
  5974  00034C  505D               	movf	simulate@sorted+1,w,c
  5975  00034E  145E               	andwf	simulate@sorted+2,w,c
  5976  000350  145F               	andwf	simulate@sorted+3,w,c
  5977  000352  145C               	andwf	simulate@sorted,w,c
  5978  000354  0900               	iorlw	0
  5979  000356  B4D8               	btfsc	status,2,c
  5980  000358  D004               	goto	i2l4309
  5981                           
  5982                           ;main.c: 200: mode = 2;
  5983  00035A  0E00               	movlw	0
  5984  00035C  6E7C               	movwf	_mode+1,c
  5985  00035E  0E02               	movlw	2
  5986  000360  6E7B               	movwf	_mode,c
  5987  000362                     i2l4309:
  5988                           
  5989                           ;main.c: 201: }
  5990                           ;main.c: 202: getTime(time);
  5991  000362  0EA9               	movlw	low _time
  5992  000364  6E04               	movwf	i2getTime@time,c
  5993  000366  0E00               	movlw	high _time
  5994  000368  6E05               	movwf	i2getTime@time+1,c
  5995  00036A  EC22  F00F         	call	i2_getTime	;wreg free
  5996                           
  5997                           ;main.c: 203: now[0] = time[0];
  5998  00036E  C0A9  F038         	movff	_time,simulate@now
  5999  000372  6A39               	clrf	simulate@now+1,c
  6000                           
  6001                           ;main.c: 204: now[1] = time[1];
  6002  000374  C0AA  F03A         	movff	_time+1,simulate@now+2
  6003  000378  6A3B               	clrf	simulate@now+3,c
  6004                           
  6005                           ;main.c: 207: period = (HexDecToDec2(now[1]) - HexDecToDec2(start[1]))*60 + HexDecToDec2
      +                          (now[0]) - HexDecToDec2(start[0]);
  6006  00037A  C03A  F007         	movff	simulate@now+2,HexDecToDec2@hex
  6007  00037E  C03B  F008         	movff	simulate@now+3,HexDecToDec2@hex+1
  6008  000382  EC4A  F011         	call	_HexDecToDec2	;wreg free
  6009  000386  C007  F034         	movff	?_HexDecToDec2,??_simulate
  6010  00038A  C008  F035         	movff	?_HexDecToDec2+1,??_simulate+1
  6011  00038E  C03E  F007         	movff	simulate@start+2,HexDecToDec2@hex
  6012  000392  C03F  F008         	movff	simulate@start+3,HexDecToDec2@hex+1
  6013  000396  EC4A  F011         	call	_HexDecToDec2	;wreg free
  6014  00039A  1E07               	comf	?_HexDecToDec2,f,c
  6015  00039C  1E08               	comf	?_HexDecToDec2+1,f,c
  6016  00039E  4A07               	infsnz	?_HexDecToDec2,f,c
  6017  0003A0  2A08               	incf	?_HexDecToDec2+1,f,c
  6018  0003A2  5007               	movf	?_HexDecToDec2,w,c
  6019  0003A4  2434               	addwf	??_simulate,w,c
  6020  0003A6  6E36               	movwf	_simulate$1521,c
  6021  0003A8  5008               	movf	?_HexDecToDec2+1,w,c
  6022  0003AA  2035               	addwfc	??_simulate+1,w,c
  6023  0003AC  6E37               	movwf	_simulate$1521+1,c
  6024                           
  6025                           ;main.c: 207: period = (HexDecToDec2(now[1]) - HexDecToDec2(start[1]))*60 + HexDecToDec2
      +                          (now[0]) - HexDecToDec2(start[0]);
  6026  0003AE  C036  F001         	movff	_simulate$1521,i2___wmul@multiplier
  6027  0003B2  C037  F002         	movff	_simulate$1521+1,i2___wmul@multiplier+1
  6028  0003B6  0E00               	movlw	0
  6029  0003B8  6E04               	movwf	i2___wmul@multiplicand+1,c
  6030  0003BA  0E3C               	movlw	60
  6031  0003BC  6E03               	movwf	i2___wmul@multiplicand,c
  6032  0003BE  ECA3  F012         	call	i2___wmul	;wreg free
  6033  0003C2  C001  F034         	movff	?i2___wmul,??_simulate
  6034  0003C6  C002  F035         	movff	?i2___wmul+1,??_simulate+1
  6035  0003CA  C038  F007         	movff	simulate@now,HexDecToDec2@hex
  6036  0003CE  C039  F008         	movff	simulate@now+1,HexDecToDec2@hex+1
  6037  0003D2  EC4A  F011         	call	_HexDecToDec2	;wreg free
  6038  0003D6  5007               	movf	?_HexDecToDec2,w,c
  6039  0003D8  2634               	addwf	??_simulate,f,c
  6040  0003DA  5008               	movf	?_HexDecToDec2+1,w,c
  6041  0003DC  2235               	addwfc	??_simulate+1,f,c
  6042  0003DE  C03C  F007         	movff	simulate@start,HexDecToDec2@hex
  6043  0003E2  C03D  F008         	movff	simulate@start+1,HexDecToDec2@hex+1
  6044  0003E6  EC4A  F011         	call	_HexDecToDec2	;wreg free
  6045  0003EA  1E07               	comf	?_HexDecToDec2,f,c
  6046  0003EC  1E08               	comf	?_HexDecToDec2+1,f,c
  6047  0003EE  4A07               	infsnz	?_HexDecToDec2,f,c
  6048  0003F0  2A08               	incf	?_HexDecToDec2+1,f,c
  6049  0003F2  5007               	movf	?_HexDecToDec2,w,c
  6050  0003F4  2434               	addwf	??_simulate,w,c
  6051  0003F6  6E58               	movwf	simulate@period,c
  6052  0003F8  5008               	movf	?_HexDecToDec2+1,w,c
  6053  0003FA  2035               	addwfc	??_simulate+1,w,c
  6054  0003FC  6E59               	movwf	simulate@period+1,c
  6055                           
  6056                           ;main.c: 210: if (period > 150) {
  6057  0003FE  5059               	movf	simulate@period+1,w,c
  6058  000400  E104               	bnz	i2u341_40
  6059  000402  0E97               	movlw	151
  6060  000404  5C58               	subwf	simulate@period,w,c
  6061  000406  A0D8               	btfss	status,0,c
  6062  000408  D004               	goto	i2l4323
  6063  00040A                     i2u341_40:
  6064                           
  6065                           ;main.c: 211: mode = 2;
  6066  00040A  0E00               	movlw	0
  6067  00040C  6E7C               	movwf	_mode+1,c
  6068  00040E  0E02               	movlw	2
  6069  000410  6E7B               	movwf	_mode,c
  6070  000412                     i2l4323:
  6071                           
  6072                           ;main.c: 212: }
  6073                           ;main.c: 213: notyet++;
  6074  000412  2A40               	incf	simulate@notyet,f,c
  6075                           
  6076                           ;main.c: 214: if (notyet > 200) {
  6077  000414  0EC8               	movlw	200
  6078  000416  6440               	cpfsgt	simulate@notyet,c
  6079  000418  D004               	goto	i2l4329
  6080                           
  6081                           ;main.c: 215: mode = 2;
  6082  00041A  0E00               	movlw	0
  6083  00041C  6E7C               	movwf	_mode+1,c
  6084  00041E  0E02               	movlw	2
  6085  000420  6E7B               	movwf	_mode,c
  6086  000422                     i2l4329:
  6087  000422  047B               	decf	_mode,w,c
  6088  000424  107C               	iorwf	_mode+1,w,c
  6089  000426  B4D8               	btfsc	status,2,c
  6090  000428  D635               	goto	i2l4205
  6091                           
  6092                           ;main.c: 216: }
  6093                           ;main.c: 217: }
  6094                           ;main.c: 218: INT2IE = 0;
  6095  00042A  98F0               	bcf	intcon3,4,c	;volatile
  6096                           
  6097                           ;main.c: 219: stopMoving(0);
  6098  00042C  0E00               	movlw	0
  6099  00042E  ECF1  F011         	call	_stopMoving
  6100                           
  6101                           ;main.c: 220: closeGate();
  6102  000432  ECD7  F012         	call	_closeGate	;wreg free
  6103                           
  6104                           ;main.c: 221: lcdInst(0b11000000);
  6105  000436  0EC0               	movlw	192
  6106  000438  EC53  F013         	call	i2_lcdInst
  6107                           
  6108                           ;main.c: 222: printf("Sorting Complete          ");
  6109  00043C  0ED3               	movlw	low STR_2
  6110  00043E  6E0D               	movwf	i2printf@f,c
  6111  000440  0EFD               	movlw	high STR_2
  6112  000442  6E0E               	movwf	i2printf@f+1,c
  6113  000444  EC7E  F004         	call	i2_printf	;wreg free
  6114                           
  6115                           ;main.c: 223: WriteRun(sorted, period);
  6116  000448  0E5C               	movlw	low simulate@sorted
  6117  00044A  6E07               	movwf	WriteRun@sorted,c
  6118  00044C  0E00               	movlw	high simulate@sorted
  6119  00044E  6E08               	movwf	WriteRun@sorted+1,c
  6120  000450  C058  F009         	movff	simulate@period,WriteRun@time
  6121  000454  C059  F00A         	movff	simulate@period+1,WriteRun@time+1
  6122  000458  EC70  F009         	call	_WriteRun	;wreg free
  6123                           
  6124                           ;main.c: 224: _delay((unsigned long)((700)*(8000000/4000.0)));
  6125  00045C  0E08               	movlw	8
  6126  00045E  6E35               	movwf	(??_simulate+1)& (0+255),c
  6127  000460  0E1B               	movlw	27
  6128  000462  6E34               	movwf	??_simulate& (0+255),c
  6129  000464  0E27               	movlw	39
  6130  000466                     i2u369_47:
  6131  000466  2EE8               	decfsz	wreg,f,c
  6132  000468  D7FE               	bra	i2u369_47
  6133  00046A  2E34               	decfsz	??_simulate& (0+255),f,c
  6134  00046C  D7FC               	bra	i2u369_47
  6135  00046E  2E35               	decfsz	(??_simulate+1)& (0+255),f,c
  6136  000470  D7FA               	bra	i2u369_47
  6137  000472  F000               	nop	
  6138                           
  6139                           ;main.c: 225: showInfo(period, sorted);
  6140  000474  C058  F023         	movff	simulate@period,showInfo@time
  6141  000478  C059  F024         	movff	simulate@period+1,showInfo@time+1
  6142  00047C  0E5C               	movlw	low simulate@sorted
  6143  00047E  6E25               	movwf	showInfo@sorted,c
  6144  000480  0E00               	movlw	high simulate@sorted
  6145  000482  6E26               	movwf	showInfo@sorted+1,c
  6146  000484  EC95  F007         	call	_showInfo	;wreg free
  6147                           
  6148                           ;main.c: 226: mode = 0;
  6149  000488  0E00               	movlw	0
  6150  00048A  6E7C               	movwf	_mode+1,c
  6151  00048C  0E00               	movlw	0
  6152  00048E  6E7B               	movwf	_mode,c
  6153  000490  0012               	return		;funcret
  6154  000492                     __end_of_simulate:
  6155                           	opt stack 0
  6156                           pclatu	equ	0xFFB
  6157                           pclath	equ	0xFFA
  6158                           tblptru	equ	0xFF8
  6159                           tblptrh	equ	0xFF7
  6160                           tblptrl	equ	0xFF6
  6161                           tablat	equ	0xFF5
  6162                           prodh	equ	0xFF4
  6163                           prodl	equ	0xFF3
  6164                           intcon	equ	0xFF2
  6165                           intcon2	equ	0xFF1
  6166                           intcon3	equ	0xFF0
  6167                           postinc0	equ	0xFEE
  6168                           fsr0h	equ	0xFEA
  6169                           fsr0l	equ	0xFE9
  6170                           wreg	equ	0xFE8
  6171                           postdec1	equ	0xFE5
  6172                           plusw1	equ	0xFE3
  6173                           fsr1h	equ	0xFE2
  6174                           fsr1l	equ	0xFE1
  6175                           indf2	equ	0xFDF
  6176                           postinc2	equ	0xFDE
  6177                           postdec2	equ	0xFDD
  6178                           plusw2	equ	0xFDB
  6179                           fsr2h	equ	0xFDA
  6180                           fsr2l	equ	0xFD9
  6181                           status	equ	0xFD8
  6182                           
  6183 ;; *************** function i2_getTime *****************
  6184 ;; Defined at:
  6185 ;;		line 76 in file "modules.c"
  6186 ;; Parameters:    Size  Location     Type
  6187 ;;  time            2    3[COMRAM] PTR unsigned char 
  6188 ;;		 -> time(7), 
  6189 ;; Auto vars:     Size  Location     Type
  6190 ;;  getTime         1    5[COMRAM] unsigned char 
  6191 ;; Return value:  Size  Location     Type
  6192 ;;                  1    wreg      void 
  6193 ;; Registers used:
  6194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6195 ;; Tracked objects:
  6196 ;;		On entry : 0/0
  6197 ;;		On exit  : 0/0
  6198 ;;		Unchanged: 0/0
  6199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6200 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6201 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6203 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6204 ;;Total ram usage:        3 bytes
  6205 ;; Hardware stack levels used:    1
  6206 ;; Hardware stack levels required when called:    2
  6207 ;; This function calls:
  6208 ;;		i2_I2C_Master_Read
  6209 ;;		i2_I2C_Master_Start
  6210 ;;		i2_I2C_Master_Stop
  6211 ;;		i2_I2C_Master_Write
  6212 ;; This function is called by:
  6213 ;;		_simulate
  6214 ;; This function uses a non-reentrant model
  6215 ;;
  6216                           
  6217                           	psect	text24
  6218  001E44                     __ptext24:
  6219                           	opt stack 0
  6220  001E44                     i2_getTime:
  6221                           	opt stack 22
  6222                           
  6223                           ;modules.c: 77: (INTCONbits.GIE = 0);
  6224                           
  6225                           ;incstack = 0
  6226  001E44  9EF2               	bcf	intcon,7,c	;volatile
  6227                           
  6228                           ;modules.c: 81: I2C_Master_Start();
  6229  001E46  EC74  F013         	call	i2_I2C_Master_Start	;wreg free
  6230                           
  6231                           ;modules.c: 82: I2C_Master_Write(0b11010000);
  6232  001E4A  0E00               	movlw	0
  6233  001E4C  6E03               	movwf	i2I2C_Master_Write@d+1,c
  6234  001E4E  0ED0               	movlw	208
  6235  001E50  6E02               	movwf	i2I2C_Master_Write@d,c
  6236  001E52  EC63  F013         	call	i2_I2C_Master_Write	;wreg free
  6237                           
  6238                           ;modules.c: 83: I2C_Master_Write(0x00);
  6239  001E56  0E00               	movlw	0
  6240  001E58  6E03               	movwf	i2I2C_Master_Write@d+1,c
  6241  001E5A  0E00               	movlw	0
  6242  001E5C  6E02               	movwf	i2I2C_Master_Write@d,c
  6243  001E5E  EC63  F013         	call	i2_I2C_Master_Write	;wreg free
  6244                           
  6245                           ;modules.c: 84: I2C_Master_Stop();
  6246  001E62  EC70  F013         	call	i2_I2C_Master_Stop	;wreg free
  6247                           
  6248                           ;modules.c: 87: I2C_Master_Start();
  6249  001E66  EC74  F013         	call	i2_I2C_Master_Start	;wreg free
  6250                           
  6251                           ;modules.c: 88: I2C_Master_Write(0b11010001);
  6252  001E6A  0E00               	movlw	0
  6253  001E6C  6E03               	movwf	i2I2C_Master_Write@d+1,c
  6254  001E6E  0ED1               	movlw	209
  6255  001E70  6E02               	movwf	i2I2C_Master_Write@d,c
  6256  001E72  EC63  F013         	call	i2_I2C_Master_Write	;wreg free
  6257                           
  6258                           ;modules.c: 89: for (unsigned char i = 0; i < 0x06; i++) {
  6259  001E76  0E00               	movlw	0
  6260  001E78  6E06               	movwf	i2getTime@i,c
  6261  001E7A                     i2l4065:
  6262  001E7A  0E05               	movlw	5
  6263  001E7C  6406               	cpfsgt	i2getTime@i,c
  6264  001E7E  D001               	goto	i2l4069
  6265  001E80  D00E               	goto	i2l4075
  6266  001E82                     i2l4069:
  6267                           
  6268                           ;modules.c: 90: time[i] = I2C_Master_Read(1);
  6269  001E82  5006               	movf	i2getTime@i,w,c
  6270  001E84  0D01               	mullw	1
  6271  001E86  50F3               	movf	prodl,w,c
  6272  001E88  2404               	addwf	i2getTime@time,w,c
  6273  001E8A  6ED9               	movwf	fsr2l,c
  6274  001E8C  50F4               	movf	prodh,w,c
  6275  001E8E  2005               	addwfc	i2getTime@time+1,w,c
  6276  001E90  6EDA               	movwf	fsr2h,c
  6277  001E92  0E01               	movlw	1
  6278  001E94  EC7D  F012         	call	i2_I2C_Master_Read
  6279  001E98  6EDF               	movwf	indf2,c
  6280  001E9A  2A06               	incf	i2getTime@i,f,c
  6281  001E9C  D7EE               	goto	i2l4065
  6282  001E9E                     i2l4075:
  6283                           
  6284                           ;modules.c: 91: }
  6285                           ;modules.c: 92: time[6] = I2C_Master_Read(0);
  6286  001E9E  EE20 F006          	lfsr	2,6
  6287  001EA2  5004               	movf	i2getTime@time,w,c
  6288  001EA4  26D9               	addwf	fsr2l,f,c
  6289  001EA6  5005               	movf	i2getTime@time+1,w,c
  6290  001EA8  22DA               	addwfc	fsr2h,f,c
  6291  001EAA  0E00               	movlw	0
  6292  001EAC  EC7D  F012         	call	i2_I2C_Master_Read
  6293  001EB0  6EDF               	movwf	indf2,c
  6294                           
  6295                           ;modules.c: 93: I2C_Master_Stop();
  6296  001EB2  EC70  F013         	call	i2_I2C_Master_Stop	;wreg free
  6297                           
  6298                           ;modules.c: 94: (INTCONbits.GIE = 1);
  6299  001EB6  8EF2               	bsf	intcon,7,c	;volatile
  6300  001EB8  0012               	return		;funcret
  6301  001EBA                     __end_ofi2_getTime:
  6302                           	opt stack 0
  6303                           pclatu	equ	0xFFB
  6304                           pclath	equ	0xFFA
  6305                           tblptru	equ	0xFF8
  6306                           tblptrh	equ	0xFF7
  6307                           tblptrl	equ	0xFF6
  6308                           tablat	equ	0xFF5
  6309                           prodh	equ	0xFF4
  6310                           prodl	equ	0xFF3
  6311                           intcon	equ	0xFF2
  6312                           intcon2	equ	0xFF1
  6313                           intcon3	equ	0xFF0
  6314                           postinc0	equ	0xFEE
  6315                           fsr0h	equ	0xFEA
  6316                           fsr0l	equ	0xFE9
  6317                           wreg	equ	0xFE8
  6318                           postdec1	equ	0xFE5
  6319                           plusw1	equ	0xFE3
  6320                           fsr1h	equ	0xFE2
  6321                           fsr1l	equ	0xFE1
  6322                           indf2	equ	0xFDF
  6323                           postinc2	equ	0xFDE
  6324                           postdec2	equ	0xFDD
  6325                           plusw2	equ	0xFDB
  6326                           fsr2h	equ	0xFDA
  6327                           fsr2l	equ	0xFD9
  6328                           status	equ	0xFD8
  6329                           
  6330 ;; *************** function i2_I2C_Master_Write *****************
  6331 ;; Defined at:
  6332 ;;		line 42 in file "I2C.c"
  6333 ;; Parameters:    Size  Location     Type
  6334 ;;  d               2    1[COMRAM] unsigned int 
  6335 ;; Auto vars:     Size  Location     Type
  6336 ;;		None
  6337 ;; Return value:  Size  Location     Type
  6338 ;;                  1    wreg      void 
  6339 ;; Registers used:
  6340 ;;		wreg, status,2, status,0, cstack
  6341 ;; Tracked objects:
  6342 ;;		On entry : 0/0
  6343 ;;		On exit  : 0/0
  6344 ;;		Unchanged: 0/0
  6345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6346 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6349 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6350 ;;Total ram usage:        2 bytes
  6351 ;; Hardware stack levels used:    1
  6352 ;; Hardware stack levels required when called:    1
  6353 ;; This function calls:
  6354 ;;		i2_I2C_Master_Wait
  6355 ;; This function is called by:
  6356 ;;		i2_getTime
  6357 ;; This function uses a non-reentrant model
  6358 ;;
  6359                           
  6360                           	psect	text25
  6361  0026C6                     __ptext25:
  6362                           	opt stack 0
  6363  0026C6                     i2_I2C_Master_Write:
  6364                           	opt stack 22
  6365                           
  6366                           ;I2C.c: 43: I2C_Master_Wait();
  6367                           
  6368                           ;incstack = 0
  6369  0026C6  EC34  F013         	call	i2_I2C_Master_Wait	;wreg free
  6370                           
  6371                           ;I2C.c: 44: SSPBUF = d;
  6372  0026CA  C002  FFC9         	movff	i2I2C_Master_Write@d,4041	;volatile
  6373  0026CE  0012               	return		;funcret
  6374  0026D0                     __end_ofi2_I2C_Master_Write:
  6375                           	opt stack 0
  6376                           pclatu	equ	0xFFB
  6377                           pclath	equ	0xFFA
  6378                           tblptru	equ	0xFF8
  6379                           tblptrh	equ	0xFF7
  6380                           tblptrl	equ	0xFF6
  6381                           tablat	equ	0xFF5
  6382                           prodh	equ	0xFF4
  6383                           prodl	equ	0xFF3
  6384                           intcon	equ	0xFF2
  6385                           intcon2	equ	0xFF1
  6386                           intcon3	equ	0xFF0
  6387                           postinc0	equ	0xFEE
  6388                           fsr0h	equ	0xFEA
  6389                           fsr0l	equ	0xFE9
  6390                           wreg	equ	0xFE8
  6391                           postdec1	equ	0xFE5
  6392                           plusw1	equ	0xFE3
  6393                           fsr1h	equ	0xFE2
  6394                           fsr1l	equ	0xFE1
  6395                           indf2	equ	0xFDF
  6396                           postinc2	equ	0xFDE
  6397                           postdec2	equ	0xFDD
  6398                           plusw2	equ	0xFDB
  6399                           fsr2h	equ	0xFDA
  6400                           fsr2l	equ	0xFD9
  6401                           status	equ	0xFD8
  6402                           
  6403 ;; *************** function i2_I2C_Master_Stop *****************
  6404 ;; Defined at:
  6405 ;;		line 37 in file "I2C.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;		None
  6408 ;; Auto vars:     Size  Location     Type
  6409 ;;		None
  6410 ;; Return value:  Size  Location     Type
  6411 ;;                  1    wreg      void 
  6412 ;; Registers used:
  6413 ;;		wreg, status,2, status,0, cstack
  6414 ;; Tracked objects:
  6415 ;;		On entry : 0/0
  6416 ;;		On exit  : 0/0
  6417 ;;		Unchanged: 0/0
  6418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6423 ;;Total ram usage:        0 bytes
  6424 ;; Hardware stack levels used:    1
  6425 ;; Hardware stack levels required when called:    1
  6426 ;; This function calls:
  6427 ;;		i2_I2C_Master_Wait
  6428 ;; This function is called by:
  6429 ;;		i2_getTime
  6430 ;; This function uses a non-reentrant model
  6431 ;;
  6432                           
  6433                           	psect	text26
  6434  0026E0                     __ptext26:
  6435                           	opt stack 0
  6436  0026E0                     i2_I2C_Master_Stop:
  6437                           	opt stack 22
  6438                           
  6439                           ;I2C.c: 38: I2C_Master_Wait();
  6440                           
  6441                           ;incstack = 0
  6442  0026E0  EC34  F013         	call	i2_I2C_Master_Wait	;wreg free
  6443                           
  6444                           ;I2C.c: 39: PEN = 1;
  6445  0026E4  84C5               	bsf	4037,2,c	;volatile
  6446  0026E6  0012               	return		;funcret
  6447  0026E8                     __end_ofi2_I2C_Master_Stop:
  6448                           	opt stack 0
  6449                           pclatu	equ	0xFFB
  6450                           pclath	equ	0xFFA
  6451                           tblptru	equ	0xFF8
  6452                           tblptrh	equ	0xFF7
  6453                           tblptrl	equ	0xFF6
  6454                           tablat	equ	0xFF5
  6455                           prodh	equ	0xFF4
  6456                           prodl	equ	0xFF3
  6457                           intcon	equ	0xFF2
  6458                           intcon2	equ	0xFF1
  6459                           intcon3	equ	0xFF0
  6460                           postinc0	equ	0xFEE
  6461                           fsr0h	equ	0xFEA
  6462                           fsr0l	equ	0xFE9
  6463                           wreg	equ	0xFE8
  6464                           postdec1	equ	0xFE5
  6465                           plusw1	equ	0xFE3
  6466                           fsr1h	equ	0xFE2
  6467                           fsr1l	equ	0xFE1
  6468                           indf2	equ	0xFDF
  6469                           postinc2	equ	0xFDE
  6470                           postdec2	equ	0xFDD
  6471                           plusw2	equ	0xFDB
  6472                           fsr2h	equ	0xFDA
  6473                           fsr2l	equ	0xFD9
  6474                           status	equ	0xFD8
  6475                           
  6476 ;; *************** function i2_I2C_Master_Start *****************
  6477 ;; Defined at:
  6478 ;;		line 27 in file "I2C.c"
  6479 ;; Parameters:    Size  Location     Type
  6480 ;;		None
  6481 ;; Auto vars:     Size  Location     Type
  6482 ;;		None
  6483 ;; Return value:  Size  Location     Type
  6484 ;;                  1    wreg      void 
  6485 ;; Registers used:
  6486 ;;		wreg, status,2, status,0, cstack
  6487 ;; Tracked objects:
  6488 ;;		On entry : 0/0
  6489 ;;		On exit  : 0/0
  6490 ;;		Unchanged: 0/0
  6491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6496 ;;Total ram usage:        0 bytes
  6497 ;; Hardware stack levels used:    1
  6498 ;; Hardware stack levels required when called:    1
  6499 ;; This function calls:
  6500 ;;		i2_I2C_Master_Wait
  6501 ;; This function is called by:
  6502 ;;		i2_getTime
  6503 ;; This function uses a non-reentrant model
  6504 ;;
  6505                           
  6506                           	psect	text27
  6507  0026E8                     __ptext27:
  6508                           	opt stack 0
  6509  0026E8                     i2_I2C_Master_Start:
  6510                           	opt stack 22
  6511                           
  6512                           ;I2C.c: 28: I2C_Master_Wait();
  6513                           
  6514                           ;incstack = 0
  6515  0026E8  EC34  F013         	call	i2_I2C_Master_Wait	;wreg free
  6516                           
  6517                           ;I2C.c: 29: SEN = 1;
  6518  0026EC  80C5               	bsf	4037,0,c	;volatile
  6519  0026EE  0012               	return		;funcret
  6520  0026F0                     __end_ofi2_I2C_Master_Start:
  6521                           	opt stack 0
  6522                           pclatu	equ	0xFFB
  6523                           pclath	equ	0xFFA
  6524                           tblptru	equ	0xFF8
  6525                           tblptrh	equ	0xFF7
  6526                           tblptrl	equ	0xFF6
  6527                           tablat	equ	0xFF5
  6528                           prodh	equ	0xFF4
  6529                           prodl	equ	0xFF3
  6530                           intcon	equ	0xFF2
  6531                           intcon2	equ	0xFF1
  6532                           intcon3	equ	0xFF0
  6533                           postinc0	equ	0xFEE
  6534                           fsr0h	equ	0xFEA
  6535                           fsr0l	equ	0xFE9
  6536                           wreg	equ	0xFE8
  6537                           postdec1	equ	0xFE5
  6538                           plusw1	equ	0xFE3
  6539                           fsr1h	equ	0xFE2
  6540                           fsr1l	equ	0xFE1
  6541                           indf2	equ	0xFDF
  6542                           postinc2	equ	0xFDE
  6543                           postdec2	equ	0xFDD
  6544                           plusw2	equ	0xFDB
  6545                           fsr2h	equ	0xFDA
  6546                           fsr2l	equ	0xFD9
  6547                           status	equ	0xFD8
  6548                           
  6549 ;; *************** function i2_I2C_Master_Read *****************
  6550 ;; Defined at:
  6551 ;;		line 47 in file "I2C.c"
  6552 ;; Parameters:    Size  Location     Type
  6553 ;;  a               1    wreg     unsigned char 
  6554 ;; Auto vars:     Size  Location     Type
  6555 ;;  a               1    1[COMRAM] unsigned char 
  6556 ;;  I2C_Master_R    1    2[COMRAM] unsigned char 
  6557 ;; Return value:  Size  Location     Type
  6558 ;;                  1    wreg      unsigned char 
  6559 ;; Registers used:
  6560 ;;		wreg, status,2, status,0, cstack
  6561 ;; Tracked objects:
  6562 ;;		On entry : 0/0
  6563 ;;		On exit  : 0/0
  6564 ;;		Unchanged: 0/0
  6565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6567 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6569 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6570 ;;Total ram usage:        2 bytes
  6571 ;; Hardware stack levels used:    1
  6572 ;; Hardware stack levels required when called:    1
  6573 ;; This function calls:
  6574 ;;		i2_I2C_Master_Wait
  6575 ;; This function is called by:
  6576 ;;		i2_getTime
  6577 ;; This function uses a non-reentrant model
  6578 ;;
  6579                           
  6580                           	psect	text28
  6581  0024FA                     __ptext28:
  6582                           	opt stack 0
  6583  0024FA                     i2_I2C_Master_Read:
  6584                           	opt stack 22
  6585                           
  6586                           ;incstack = 0
  6587                           ;i2I2C_Master_Read@a stored from wreg
  6588  0024FA  6E02               	movwf	i2I2C_Master_Read@a,c
  6589                           
  6590                           ;I2C.c: 48: unsigned char temp;
  6591                           ;I2C.c: 49: I2C_Master_Wait();
  6592  0024FC  EC34  F013         	call	i2_I2C_Master_Wait	;wreg free
  6593                           
  6594                           ;I2C.c: 50: RCEN = 1;
  6595  002500  86C5               	bsf	4037,3,c	;volatile
  6596                           
  6597                           ;I2C.c: 51: I2C_Master_Wait();
  6598  002502  EC34  F013         	call	i2_I2C_Master_Wait	;wreg free
  6599                           
  6600                           ;I2C.c: 52: temp = SSPBUF;
  6601  002506  CFC9 F003          	movff	4041,i2I2C_Master_Read@temp	;volatile
  6602                           
  6603                           ;I2C.c: 53: I2C_Master_Wait();
  6604  00250A  EC34  F013         	call	i2_I2C_Master_Wait	;wreg free
  6605                           
  6606                           ;I2C.c: 54: ACKDT = (a) ? 0 : 1;
  6607  00250E  5002               	movf	i2I2C_Master_Read@a,w,c
  6608  002510  A4D8               	btfss	status,2,c
  6609  002512  D002               	goto	i2u276_40
  6610  002514  8AC5               	bsf	4037,5,c	;volatile
  6611  002516  D001               	goto	i2l3633
  6612  002518                     i2u276_40:
  6613  002518  9AC5               	bcf	4037,5,c	;volatile
  6614  00251A                     i2l3633:
  6615                           
  6616                           ;I2C.c: 55: ACKEN = 1;
  6617  00251A  88C5               	bsf	4037,4,c	;volatile
  6618                           
  6619                           ;I2C.c: 56: return temp;
  6620  00251C  5003               	movf	i2I2C_Master_Read@temp,w,c
  6621  00251E  0012               	return	
  6622  002520                     __end_ofi2_I2C_Master_Read:
  6623                           	opt stack 0
  6624                           pclatu	equ	0xFFB
  6625                           pclath	equ	0xFFA
  6626                           tblptru	equ	0xFF8
  6627                           tblptrh	equ	0xFF7
  6628                           tblptrl	equ	0xFF6
  6629                           tablat	equ	0xFF5
  6630                           prodh	equ	0xFF4
  6631                           prodl	equ	0xFF3
  6632                           intcon	equ	0xFF2
  6633                           intcon2	equ	0xFF1
  6634                           intcon3	equ	0xFF0
  6635                           postinc0	equ	0xFEE
  6636                           fsr0h	equ	0xFEA
  6637                           fsr0l	equ	0xFE9
  6638                           wreg	equ	0xFE8
  6639                           postdec1	equ	0xFE5
  6640                           plusw1	equ	0xFE3
  6641                           fsr1h	equ	0xFE2
  6642                           fsr1l	equ	0xFE1
  6643                           indf2	equ	0xFDF
  6644                           postinc2	equ	0xFDE
  6645                           postdec2	equ	0xFDD
  6646                           plusw2	equ	0xFDB
  6647                           fsr2h	equ	0xFDA
  6648                           fsr2l	equ	0xFD9
  6649                           status	equ	0xFD8
  6650                           
  6651 ;; *************** function i2_I2C_Master_Wait *****************
  6652 ;; Defined at:
  6653 ;;		line 23 in file "I2C.c"
  6654 ;; Parameters:    Size  Location     Type
  6655 ;;		None
  6656 ;; Auto vars:     Size  Location     Type
  6657 ;;		None
  6658 ;; Return value:  Size  Location     Type
  6659 ;;                  1    wreg      void 
  6660 ;; Registers used:
  6661 ;;		wreg, status,2, status,0
  6662 ;; Tracked objects:
  6663 ;;		On entry : 0/0
  6664 ;;		On exit  : 0/0
  6665 ;;		Unchanged: 0/0
  6666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6669 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6670 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6671 ;;Total ram usage:        1 bytes
  6672 ;; Hardware stack levels used:    1
  6673 ;; This function calls:
  6674 ;;		Nothing
  6675 ;; This function is called by:
  6676 ;;		i2_I2C_Master_Start
  6677 ;;		i2_I2C_Master_Stop
  6678 ;;		i2_I2C_Master_Write
  6679 ;;		i2_I2C_Master_Read
  6680 ;; This function uses a non-reentrant model
  6681 ;;
  6682                           
  6683                           	psect	text29
  6684  002668                     __ptext29:
  6685                           	opt stack 0
  6686  002668                     i2_I2C_Master_Wait:
  6687                           	opt stack 22
  6688  002668                     i2l407:
  6689  002668  B4C7               	btfsc	4039,2,c	;volatile
  6690  00266A  D7FE               	goto	i2l407
  6691  00266C  CFC5 F001          	movff	4037,??i2_I2C_Master_Wait	;volatile
  6692  002670  0E1F               	movlw	31
  6693  002672  1601               	andwf	??i2_I2C_Master_Wait,f,c
  6694  002674  B4D8               	btfsc	status,2,c
  6695  002676  0012               	return	
  6696  002678  D7F7               	goto	i2l407
  6697  00267A                     __end_ofi2_I2C_Master_Wait:
  6698                           	opt stack 0
  6699                           pclatu	equ	0xFFB
  6700                           pclath	equ	0xFFA
  6701                           tblptru	equ	0xFF8
  6702                           tblptrh	equ	0xFF7
  6703                           tblptrl	equ	0xFF6
  6704                           tablat	equ	0xFF5
  6705                           prodh	equ	0xFF4
  6706                           prodl	equ	0xFF3
  6707                           intcon	equ	0xFF2
  6708                           intcon2	equ	0xFF1
  6709                           intcon3	equ	0xFF0
  6710                           postinc0	equ	0xFEE
  6711                           fsr0h	equ	0xFEA
  6712                           fsr0l	equ	0xFE9
  6713                           wreg	equ	0xFE8
  6714                           postdec1	equ	0xFE5
  6715                           plusw1	equ	0xFE3
  6716                           fsr1h	equ	0xFE2
  6717                           fsr1l	equ	0xFE1
  6718                           indf2	equ	0xFDF
  6719                           postinc2	equ	0xFDE
  6720                           postdec2	equ	0xFDD
  6721                           plusw2	equ	0xFDB
  6722                           fsr2h	equ	0xFDA
  6723                           fsr2l	equ	0xFD9
  6724                           status	equ	0xFD8
  6725                           
  6726 ;; *************** function _checkC *****************
  6727 ;; Defined at:
  6728 ;;		line 53 in file "sensors.c"
  6729 ;; Parameters:    Size  Location     Type
  6730 ;;  sorted          2   45[COMRAM] PTR unsigned char 
  6731 ;;		 -> simulate@sorted(4), 
  6732 ;; Auto vars:     Size  Location     Type
  6733 ;;  V               2   49[COMRAM] int 
  6734 ;; Return value:  Size  Location     Type
  6735 ;;                  2   45[COMRAM] int 
  6736 ;; Registers used:
  6737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6738 ;; Tracked objects:
  6739 ;;		On entry : 0/0
  6740 ;;		On exit  : 0/0
  6741 ;;		Unchanged: 0/0
  6742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6743 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6744 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6745 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6746 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6747 ;;Total ram usage:        6 bytes
  6748 ;; Hardware stack levels used:    1
  6749 ;; Hardware stack levels required when called:    4
  6750 ;; This function calls:
  6751 ;;		_checkV
  6752 ;;		_printV
  6753 ;;		i2_printf
  6754 ;; This function is called by:
  6755 ;;		_simulate
  6756 ;; This function uses a non-reentrant model
  6757 ;;
  6758                           
  6759                           	psect	text30
  6760  001EBA                     __ptext30:
  6761                           	opt stack 0
  6762  001EBA                     _checkC:
  6763                           	opt stack 20
  6764                           
  6765                           ;sensors.c: 56: printf("C:");
  6766                           
  6767                           ;incstack = 0
  6768  001EBA  0EEF               	movlw	low (STR_9+1)
  6769  001EBC  6E0D               	movwf	i2printf@f,c
  6770  001EBE  0EFF               	movlw	high (STR_9+1)
  6771  001EC0  6E0E               	movwf	i2printf@f+1,c
  6772  001EC2  EC7E  F004         	call	i2_printf	;wreg free
  6773                           
  6774                           ;sensors.c: 57: int V = checkV(0, 1.5 / 5 * 1023);
  6775  001EC6  0E01               	movlw	1
  6776  001EC8  6E26               	movwf	checkV@threshhold+1,c
  6777  001ECA  0E32               	movlw	50
  6778  001ECC  6E25               	movwf	checkV@threshhold,c
  6779  001ECE  0E00               	movlw	0
  6780  001ED0  ECAD  F00B         	call	_checkV
  6781  001ED4  C025  F032         	movff	?_checkV,checkC@V
  6782  001ED8  C026  F033         	movff	?_checkV+1,checkC@V+1
  6783                           
  6784                           ;sensors.c: 58: printV(V);
  6785  001EDC  C032  F023         	movff	checkC@V,printV@charged
  6786  001EE0  C033  F024         	movff	checkC@V+1,printV@charged+1
  6787  001EE4  EC69  F012         	call	_printV	;wreg free
  6788                           
  6789                           ;sensors.c: 59: switch (V) {
  6790  001EE8  D00F               	goto	i2l3987
  6791  001EEA                     i2l3985:
  6792                           
  6793                           ;sensors.c: 61: sorted[1]++;
  6794  001EEA  EE20 F001          	lfsr	2,1
  6795  001EEE  502E               	movf	checkC@sorted,w,c
  6796  001EF0  26D9               	addwf	fsr2l,f,c
  6797  001EF2  502F               	movf	checkC@sorted+1,w,c
  6798  001EF4  22DA               	addwfc	fsr2h,f,c
  6799  001EF6  2ADF               	incf	indf2,f,c
  6800  001EF8                     i2l368:
  6801                           
  6802                           ;sensors.c: 63: sorted[3]++;
  6803  001EF8  EE20 F003          	lfsr	2,3
  6804  001EFC  502E               	movf	checkC@sorted,w,c
  6805  001EFE  26D9               	addwf	fsr2l,f,c
  6806  001F00  502F               	movf	checkC@sorted+1,w,c
  6807  001F02  22DA               	addwfc	fsr2h,f,c
  6808  001F04  2ADF               	incf	indf2,f,c
  6809                           
  6810                           ;sensors.c: 64: }
  6811  001F06  D00F               	goto	i2l369
  6812  001F08                     i2l3987:
  6813  001F08  C032  F030         	movff	checkC@V,??_checkC
  6814  001F0C  C033  F031         	movff	checkC@V+1,??_checkC+1
  6815                           
  6816                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6817                           ; Switch size 1, requested type "space"
  6818                           ; Number of cases is 1, Range of values is 0 to 0
  6819                           ; switch strategies available:
  6820                           ; Name         Instructions Cycles
  6821                           ; simple_byte            4     3 (average)
  6822                           ;	Chosen strategy is simple_byte
  6823  001F10  5031               	movf	??_checkC+1,w,c
  6824  001F12  0A00               	xorlw	0	; case 0
  6825  001F14  A4D8               	btfss	status,2,c
  6826  001F16  D007               	goto	i2l369
  6827                           
  6828                           ; Switch size 1, requested type "space"
  6829                           ; Number of cases is 2, Range of values is 0 to 1
  6830                           ; switch strategies available:
  6831                           ; Name         Instructions Cycles
  6832                           ; simple_byte            7     4 (average)
  6833                           ;	Chosen strategy is simple_byte
  6834  001F18  5030               	movf	??_checkC,w,c
  6835  001F1A  0A00               	xorlw	0	; case 0
  6836  001F1C  B4D8               	btfsc	status,2,c
  6837  001F1E  D7EC               	goto	i2l368
  6838  001F20  0A01               	xorlw	1	; case 1
  6839  001F22  B4D8               	btfsc	status,2,c
  6840  001F24  D7E2               	goto	i2l3985
  6841  001F26                     i2l369:
  6842                           
  6843                           ;sensors.c: 65: return V;
  6844  001F26  C032  F02E         	movff	checkC@V,?_checkC
  6845  001F2A  C033  F02F         	movff	checkC@V+1,?_checkC+1
  6846  001F2E  0012               	return		;funcret
  6847  001F30                     __end_of_checkC:
  6848                           	opt stack 0
  6849                           pclatu	equ	0xFFB
  6850                           pclath	equ	0xFFA
  6851                           tblptru	equ	0xFF8
  6852                           tblptrh	equ	0xFF7
  6853                           tblptrl	equ	0xFF6
  6854                           tablat	equ	0xFF5
  6855                           prodh	equ	0xFF4
  6856                           prodl	equ	0xFF3
  6857                           intcon	equ	0xFF2
  6858                           intcon2	equ	0xFF1
  6859                           intcon3	equ	0xFF0
  6860                           postinc0	equ	0xFEE
  6861                           fsr0h	equ	0xFEA
  6862                           fsr0l	equ	0xFE9
  6863                           wreg	equ	0xFE8
  6864                           postdec1	equ	0xFE5
  6865                           plusw1	equ	0xFE3
  6866                           fsr1h	equ	0xFE2
  6867                           fsr1l	equ	0xFE1
  6868                           indf2	equ	0xFDF
  6869                           postinc2	equ	0xFDE
  6870                           postdec2	equ	0xFDD
  6871                           plusw2	equ	0xFDB
  6872                           fsr2h	equ	0xFDA
  6873                           fsr2l	equ	0xFD9
  6874                           status	equ	0xFD8
  6875                           
  6876 ;; *************** function _checkAA *****************
  6877 ;; Defined at:
  6878 ;;		line 39 in file "sensors.c"
  6879 ;; Parameters:    Size  Location     Type
  6880 ;;  sorted          2   45[COMRAM] PTR unsigned char 
  6881 ;;		 -> simulate@sorted(4), 
  6882 ;; Auto vars:     Size  Location     Type
  6883 ;;  V               2   49[COMRAM] int 
  6884 ;; Return value:  Size  Location     Type
  6885 ;;                  2   45[COMRAM] int 
  6886 ;; Registers used:
  6887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6888 ;; Tracked objects:
  6889 ;;		On entry : 0/0
  6890 ;;		On exit  : 0/0
  6891 ;;		Unchanged: 0/0
  6892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6893 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6894 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6895 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6896 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6897 ;;Total ram usage:        6 bytes
  6898 ;; Hardware stack levels used:    1
  6899 ;; Hardware stack levels required when called:    4
  6900 ;; This function calls:
  6901 ;;		_checkV
  6902 ;;		_printV
  6903 ;;		i2_printf
  6904 ;; This function is called by:
  6905 ;;		_simulate
  6906 ;; This function uses a non-reentrant model
  6907 ;;
  6908                           
  6909                           	psect	text31
  6910  001FA6                     __ptext31:
  6911                           	opt stack 0
  6912  001FA6                     _checkAA:
  6913                           	opt stack 20
  6914                           
  6915                           ;sensors.c: 40: printf("AA:");
  6916                           
  6917                           ;incstack = 0
  6918  001FA6  0EE6               	movlw	low (STR_13+1)
  6919  001FA8  6E0D               	movwf	i2printf@f,c
  6920  001FAA  0EFF               	movlw	high (STR_13+1)
  6921  001FAC  6E0E               	movwf	i2printf@f+1,c
  6922  001FAE  EC7E  F004         	call	i2_printf	;wreg free
  6923                           
  6924                           ;sensors.c: 42: int V = checkV(2, 1.5 / 5 * 1023);
  6925  001FB2  0E01               	movlw	1
  6926  001FB4  6E26               	movwf	checkV@threshhold+1,c
  6927  001FB6  0E32               	movlw	50
  6928  001FB8  6E25               	movwf	checkV@threshhold,c
  6929  001FBA  0E02               	movlw	2
  6930  001FBC  ECAD  F00B         	call	_checkV
  6931  001FC0  C025  F032         	movff	?_checkV,checkAA@V
  6932  001FC4  C026  F033         	movff	?_checkV+1,checkAA@V+1
  6933                           
  6934                           ;sensors.c: 43: printV(V);
  6935  001FC8  C032  F023         	movff	checkAA@V,printV@charged
  6936  001FCC  C033  F024         	movff	checkAA@V+1,printV@charged+1
  6937  001FD0  EC69  F012         	call	_printV	;wreg free
  6938                           
  6939                           ;sensors.c: 44: switch (V) {
  6940  001FD4  D00D               	goto	i2l4003
  6941  001FD6                     i2l3999:
  6942                           
  6943                           ;sensors.c: 46: sorted[0]++;
  6944  001FD6  C02E  FFD9         	movff	checkAA@sorted,fsr2l
  6945  001FDA  C02F  FFDA         	movff	checkAA@sorted+1,fsr2h
  6946  001FDE  2ADF               	incf	indf2,f,c
  6947  001FE0                     i2l4001:
  6948                           
  6949                           ;sensors.c: 48: sorted[3]++;
  6950  001FE0  EE20 F003          	lfsr	2,3
  6951  001FE4  502E               	movf	checkAA@sorted,w,c
  6952  001FE6  26D9               	addwf	fsr2l,f,c
  6953  001FE8  502F               	movf	checkAA@sorted+1,w,c
  6954  001FEA  22DA               	addwfc	fsr2h,f,c
  6955  001FEC  2ADF               	incf	indf2,f,c
  6956                           
  6957                           ;sensors.c: 49: }
  6958  001FEE  D00F               	goto	i2l362
  6959  001FF0                     i2l4003:
  6960  001FF0  C032  F030         	movff	checkAA@V,??_checkAA
  6961  001FF4  C033  F031         	movff	checkAA@V+1,??_checkAA+1
  6962                           
  6963                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6964                           ; Switch size 1, requested type "space"
  6965                           ; Number of cases is 1, Range of values is 0 to 0
  6966                           ; switch strategies available:
  6967                           ; Name         Instructions Cycles
  6968                           ; simple_byte            4     3 (average)
  6969                           ;	Chosen strategy is simple_byte
  6970  001FF8  5031               	movf	??_checkAA+1,w,c
  6971  001FFA  0A00               	xorlw	0	; case 0
  6972  001FFC  A4D8               	btfss	status,2,c
  6973  001FFE  D007               	goto	i2l362
  6974                           
  6975                           ; Switch size 1, requested type "space"
  6976                           ; Number of cases is 2, Range of values is 0 to 1
  6977                           ; switch strategies available:
  6978                           ; Name         Instructions Cycles
  6979                           ; simple_byte            7     4 (average)
  6980                           ;	Chosen strategy is simple_byte
  6981  002000  5030               	movf	??_checkAA,w,c
  6982  002002  0A00               	xorlw	0	; case 0
  6983  002004  B4D8               	btfsc	status,2,c
  6984  002006  D7EC               	goto	i2l4001
  6985  002008  0A01               	xorlw	1	; case 1
  6986  00200A  B4D8               	btfsc	status,2,c
  6987  00200C  D7E4               	goto	i2l3999
  6988  00200E                     i2l362:
  6989                           
  6990                           ;sensors.c: 50: return V;
  6991  00200E  C032  F02E         	movff	checkAA@V,?_checkAA
  6992  002012  C033  F02F         	movff	checkAA@V+1,?_checkAA+1
  6993  002016  0012               	return		;funcret
  6994  002018                     __end_of_checkAA:
  6995                           	opt stack 0
  6996                           pclatu	equ	0xFFB
  6997                           pclath	equ	0xFFA
  6998                           tblptru	equ	0xFF8
  6999                           tblptrh	equ	0xFF7
  7000                           tblptrl	equ	0xFF6
  7001                           tablat	equ	0xFF5
  7002                           prodh	equ	0xFF4
  7003                           prodl	equ	0xFF3
  7004                           intcon	equ	0xFF2
  7005                           intcon2	equ	0xFF1
  7006                           intcon3	equ	0xFF0
  7007                           postinc0	equ	0xFEE
  7008                           fsr0h	equ	0xFEA
  7009                           fsr0l	equ	0xFE9
  7010                           wreg	equ	0xFE8
  7011                           postdec1	equ	0xFE5
  7012                           plusw1	equ	0xFE3
  7013                           fsr1h	equ	0xFE2
  7014                           fsr1l	equ	0xFE1
  7015                           indf2	equ	0xFDF
  7016                           postinc2	equ	0xFDE
  7017                           postdec2	equ	0xFDD
  7018                           plusw2	equ	0xFDB
  7019                           fsr2h	equ	0xFDA
  7020                           fsr2l	equ	0xFD9
  7021                           status	equ	0xFD8
  7022                           
  7023 ;; *************** function _check9 *****************
  7024 ;; Defined at:
  7025 ;;		line 68 in file "sensors.c"
  7026 ;; Parameters:    Size  Location     Type
  7027 ;;  sorted          2   45[COMRAM] PTR unsigned char 
  7028 ;;		 -> simulate@sorted(4), 
  7029 ;; Auto vars:     Size  Location     Type
  7030 ;;  V               2   49[COMRAM] int 
  7031 ;; Return value:  Size  Location     Type
  7032 ;;                  2   45[COMRAM] int 
  7033 ;; Registers used:
  7034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7035 ;; Tracked objects:
  7036 ;;		On entry : 0/0
  7037 ;;		On exit  : 0/0
  7038 ;;		Unchanged: 0/0
  7039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7040 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7041 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7042 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7043 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7044 ;;Total ram usage:        6 bytes
  7045 ;; Hardware stack levels used:    1
  7046 ;; Hardware stack levels required when called:    4
  7047 ;; This function calls:
  7048 ;;		_checkV
  7049 ;;		_printV
  7050 ;;		i2_printf
  7051 ;; This function is called by:
  7052 ;;		_simulate
  7053 ;; This function uses a non-reentrant model
  7054 ;;
  7055                           
  7056                           	psect	text32
  7057  001F30                     __ptext32:
  7058                           	opt stack 0
  7059  001F30                     _check9:
  7060                           	opt stack 20
  7061                           
  7062                           ;sensors.c: 71: printf("9V:");
  7063                           
  7064                           ;incstack = 0
  7065  001F30  0EF2               	movlw	low STR_5
  7066  001F32  6E0D               	movwf	i2printf@f,c
  7067  001F34  0EFF               	movlw	high STR_5
  7068  001F36  6E0E               	movwf	i2printf@f+1,c
  7069  001F38  EC7E  F004         	call	i2_printf	;wreg free
  7070                           
  7071                           ;sensors.c: 72: int V = checkV(5, 3.65 / 5 * 1023);
  7072  001F3C  0E02               	movlw	2
  7073  001F3E  6E26               	movwf	checkV@threshhold+1,c
  7074  001F40  0EEA               	movlw	234
  7075  001F42  6E25               	movwf	checkV@threshhold,c
  7076  001F44  0E05               	movlw	5
  7077  001F46  ECAD  F00B         	call	_checkV
  7078  001F4A  C025  F032         	movff	?_checkV,check9@V
  7079  001F4E  C026  F033         	movff	?_checkV+1,check9@V+1
  7080                           
  7081                           ;sensors.c: 73: printV(V);
  7082  001F52  C032  F023         	movff	check9@V,printV@charged
  7083  001F56  C033  F024         	movff	check9@V+1,printV@charged+1
  7084  001F5A  EC69  F012         	call	_printV	;wreg free
  7085                           
  7086                           ;sensors.c: 74: switch (V) {
  7087  001F5E  D00F               	goto	i2l3973
  7088  001F60                     i2l3971:
  7089                           
  7090                           ;sensors.c: 76: sorted[2]++;
  7091  001F60  EE20 F002          	lfsr	2,2
  7092  001F64  502E               	movf	check9@sorted,w,c
  7093  001F66  26D9               	addwf	fsr2l,f,c
  7094  001F68  502F               	movf	check9@sorted+1,w,c
  7095  001F6A  22DA               	addwfc	fsr2h,f,c
  7096  001F6C  2ADF               	incf	indf2,f,c
  7097  001F6E                     i2l375:
  7098                           
  7099                           ;sensors.c: 78: sorted[3]++;
  7100  001F6E  EE20 F003          	lfsr	2,3
  7101  001F72  502E               	movf	check9@sorted,w,c
  7102  001F74  26D9               	addwf	fsr2l,f,c
  7103  001F76  502F               	movf	check9@sorted+1,w,c
  7104  001F78  22DA               	addwfc	fsr2h,f,c
  7105  001F7A  2ADF               	incf	indf2,f,c
  7106                           
  7107                           ;sensors.c: 79: }
  7108  001F7C  D00F               	goto	i2l376
  7109  001F7E                     i2l3973:
  7110  001F7E  C032  F030         	movff	check9@V,??_check9
  7111  001F82  C033  F031         	movff	check9@V+1,??_check9+1
  7112                           
  7113                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7114                           ; Switch size 1, requested type "space"
  7115                           ; Number of cases is 1, Range of values is 0 to 0
  7116                           ; switch strategies available:
  7117                           ; Name         Instructions Cycles
  7118                           ; simple_byte            4     3 (average)
  7119                           ;	Chosen strategy is simple_byte
  7120  001F86  5031               	movf	??_check9+1,w,c
  7121  001F88  0A00               	xorlw	0	; case 0
  7122  001F8A  A4D8               	btfss	status,2,c
  7123  001F8C  D007               	goto	i2l376
  7124                           
  7125                           ; Switch size 1, requested type "space"
  7126                           ; Number of cases is 2, Range of values is 0 to 1
  7127                           ; switch strategies available:
  7128                           ; Name         Instructions Cycles
  7129                           ; simple_byte            7     4 (average)
  7130                           ;	Chosen strategy is simple_byte
  7131  001F8E  5030               	movf	??_check9,w,c
  7132  001F90  0A00               	xorlw	0	; case 0
  7133  001F92  B4D8               	btfsc	status,2,c
  7134  001F94  D7EC               	goto	i2l375
  7135  001F96  0A01               	xorlw	1	; case 1
  7136  001F98  B4D8               	btfsc	status,2,c
  7137  001F9A  D7E2               	goto	i2l3971
  7138  001F9C                     i2l376:
  7139                           
  7140                           ;sensors.c: 80: return V;
  7141  001F9C  C032  F02E         	movff	check9@V,?_check9
  7142  001FA0  C033  F02F         	movff	check9@V+1,?_check9+1
  7143  001FA4  0012               	return		;funcret
  7144  001FA6                     __end_of_check9:
  7145                           	opt stack 0
  7146                           pclatu	equ	0xFFB
  7147                           pclath	equ	0xFFA
  7148                           tblptru	equ	0xFF8
  7149                           tblptrh	equ	0xFF7
  7150                           tblptrl	equ	0xFF6
  7151                           tablat	equ	0xFF5
  7152                           prodh	equ	0xFF4
  7153                           prodl	equ	0xFF3
  7154                           intcon	equ	0xFF2
  7155                           intcon2	equ	0xFF1
  7156                           intcon3	equ	0xFF0
  7157                           postinc0	equ	0xFEE
  7158                           fsr0h	equ	0xFEA
  7159                           fsr0l	equ	0xFE9
  7160                           wreg	equ	0xFE8
  7161                           postdec1	equ	0xFE5
  7162                           plusw1	equ	0xFE3
  7163                           fsr1h	equ	0xFE2
  7164                           fsr1l	equ	0xFE1
  7165                           indf2	equ	0xFDF
  7166                           postinc2	equ	0xFDE
  7167                           postdec2	equ	0xFDD
  7168                           plusw2	equ	0xFDB
  7169                           fsr2h	equ	0xFDA
  7170                           fsr2l	equ	0xFD9
  7171                           status	equ	0xFD8
  7172                           
  7173 ;; *************** function _printV *****************
  7174 ;; Defined at:
  7175 ;;		line 28 in file "sensors.c"
  7176 ;; Parameters:    Size  Location     Type
  7177 ;;  charged         2   34[COMRAM] int 
  7178 ;; Auto vars:     Size  Location     Type
  7179 ;;		None
  7180 ;; Return value:  Size  Location     Type
  7181 ;;                  1    wreg      void 
  7182 ;; Registers used:
  7183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7184 ;; Tracked objects:
  7185 ;;		On entry : 0/0
  7186 ;;		On exit  : 0/0
  7187 ;;		Unchanged: 0/0
  7188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7189 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7192 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7193 ;;Total ram usage:        2 bytes
  7194 ;; Hardware stack levels used:    1
  7195 ;; Hardware stack levels required when called:    3
  7196 ;; This function calls:
  7197 ;;		i2_printf
  7198 ;; This function is called by:
  7199 ;;		_checkAA
  7200 ;;		_checkC
  7201 ;;		_check9
  7202 ;; This function uses a non-reentrant model
  7203 ;;
  7204                           
  7205                           	psect	text33
  7206  0024D2                     __ptext33:
  7207                           	opt stack 0
  7208  0024D2                     _printV:
  7209                           	opt stack 20
  7210                           
  7211                           ;sensors.c: 31: if (charged < 0) {
  7212                           
  7213                           ;incstack = 0
  7214  0024D2  AE24               	btfss	printV@charged+1,7,c
  7215  0024D4  D007               	goto	i2l3493
  7216                           
  7217                           ;sensors.c: 32: printf("-1 ");
  7218  0024D6  0EEA               	movlw	low STR_38
  7219  0024D8  6E0D               	movwf	i2printf@f,c
  7220  0024DA  0EFF               	movlw	high STR_38
  7221  0024DC  6E0E               	movwf	i2printf@f+1,c
  7222  0024DE  EC7E  F004         	call	i2_printf	;wreg free
  7223                           
  7224                           ;sensors.c: 33: } else {
  7225  0024E2  0012               	return	
  7226  0024E4                     i2l3493:
  7227                           
  7228                           ;sensors.c: 34: printf(" %d ", charged);
  7229  0024E4  0EE0               	movlw	low STR_39
  7230  0024E6  6E0D               	movwf	i2printf@f,c
  7231  0024E8  0EFF               	movlw	high STR_39
  7232  0024EA  6E0E               	movwf	i2printf@f+1,c
  7233  0024EC  C023  F00F         	movff	printV@charged,?i2_printf+2
  7234  0024F0  C024  F010         	movff	printV@charged+1,?i2_printf+3
  7235  0024F4  EC7E  F004         	call	i2_printf	;wreg free
  7236  0024F8  0012               	return	
  7237  0024FA                     __end_of_printV:
  7238                           	opt stack 0
  7239                           pclatu	equ	0xFFB
  7240                           pclath	equ	0xFFA
  7241                           tblptru	equ	0xFF8
  7242                           tblptrh	equ	0xFF7
  7243                           tblptrl	equ	0xFF6
  7244                           tablat	equ	0xFF5
  7245                           prodh	equ	0xFF4
  7246                           prodl	equ	0xFF3
  7247                           intcon	equ	0xFF2
  7248                           intcon2	equ	0xFF1
  7249                           intcon3	equ	0xFF0
  7250                           postinc0	equ	0xFEE
  7251                           fsr0h	equ	0xFEA
  7252                           fsr0l	equ	0xFE9
  7253                           wreg	equ	0xFE8
  7254                           postdec1	equ	0xFE5
  7255                           plusw1	equ	0xFE3
  7256                           fsr1h	equ	0xFE2
  7257                           fsr1l	equ	0xFE1
  7258                           indf2	equ	0xFDF
  7259                           postinc2	equ	0xFDE
  7260                           postdec2	equ	0xFDD
  7261                           plusw2	equ	0xFDB
  7262                           fsr2h	equ	0xFDA
  7263                           fsr2l	equ	0xFD9
  7264                           status	equ	0xFD8
  7265                           
  7266 ;; *************** function _checkV *****************
  7267 ;; Defined at:
  7268 ;;		line 13 in file "sensors.c"
  7269 ;; Parameters:    Size  Location     Type
  7270 ;;  channel         1    wreg     unsigned char 
  7271 ;;  threshhold      2   36[COMRAM] int 
  7272 ;; Auto vars:     Size  Location     Type
  7273 ;;  channel         1   42[COMRAM] unsigned char 
  7274 ;;  voltage         2   43[COMRAM] int 
  7275 ;;  tmp             2   40[COMRAM] int 
  7276 ;; Return value:  Size  Location     Type
  7277 ;;                  2   36[COMRAM] int 
  7278 ;; Registers used:
  7279 ;;		wreg, status,2, status,0, cstack
  7280 ;; Tracked objects:
  7281 ;;		On entry : 0/0
  7282 ;;		On exit  : 0/0
  7283 ;;		Unchanged: 0/0
  7284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7285 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7286 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7287 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7288 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7289 ;;Total ram usage:        9 bytes
  7290 ;; Hardware stack levels used:    1
  7291 ;; Hardware stack levels required when called:    2
  7292 ;; This function calls:
  7293 ;;		_AD
  7294 ;;		___awtoft
  7295 ;;		___ftge
  7296 ;;		___ftmul
  7297 ;; This function is called by:
  7298 ;;		_checkAA
  7299 ;;		_checkC
  7300 ;;		_check9
  7301 ;; This function uses a non-reentrant model
  7302 ;;
  7303                           
  7304                           	psect	text34
  7305  00175A                     __ptext34:
  7306                           	opt stack 0
  7307  00175A                     _checkV:
  7308                           	opt stack 21
  7309                           
  7310                           ;incstack = 0
  7311                           ;checkV@channel stored from wreg
  7312  00175A  6E2B               	movwf	checkV@channel,c
  7313                           
  7314                           ;sensors.c: 15: int voltage = AD(channel);
  7315  00175C  502B               	movf	checkV@channel,w,c
  7316  00175E  EC54  F012         	call	_AD
  7317  001762  C001  F02C         	movff	?_AD,checkV@voltage
  7318  001766  C002  F02D         	movff	?_AD+1,checkV@voltage+1
  7319                           
  7320                           ;sensors.c: 16: if (voltage < 20) return -1;
  7321  00176A  BE2D               	btfsc	checkV@voltage+1,7,c
  7322  00176C  D006               	goto	i2l3467
  7323  00176E  502D               	movf	checkV@voltage+1,w,c
  7324  001770  E107               	bnz	i2l3469
  7325  001772  0E14               	movlw	20
  7326  001774  5C2C               	subwf	checkV@voltage,w,c
  7327  001776  B0D8               	btfsc	status,0,c
  7328  001778  D003               	goto	i2l3469
  7329  00177A                     i2l3467:
  7330  00177A  6825               	setf	?_checkV,c
  7331  00177C  6826               	setf	?_checkV+1,c
  7332  00177E  0012               	return	
  7333  001780                     i2l3469:
  7334                           
  7335                           ;sensors.c: 17: _delay((unsigned long)((1)*(8000000/4000.0)));
  7336  001780  0E03               	movlw	3
  7337  001782  6E27               	movwf	??_checkV& (0+255),c
  7338  001784  0E98               	movlw	152
  7339  001786                     i2u370_47:
  7340  001786  2EE8               	decfsz	wreg,f,c
  7341  001788  D7FE               	bra	i2u370_47
  7342  00178A  2E27               	decfsz	??_checkV& (0+255),f,c
  7343  00178C  D7FC               	bra	i2u370_47
  7344                           
  7345                           ;sensors.c: 18: int tmp = AD(channel);
  7346  00178E  502B               	movf	checkV@channel,w,c
  7347  001790  EC54  F012         	call	_AD
  7348  001794  D00E               	goto	L2
  7349  001796                     i2l349:
  7350                           
  7351                           ;sensors.c: 20: voltage = tmp;
  7352  001796  C029  F02C         	movff	checkV@tmp,checkV@voltage
  7353  00179A  C02A  F02D         	movff	checkV@tmp+1,checkV@voltage+1
  7354                           
  7355                           ;sensors.c: 21: _delay((unsigned long)((1)*(8000000/4000.0)));
  7356  00179E  0E03               	movlw	3
  7357  0017A0  6E27               	movwf	??_checkV& (0+255),c
  7358  0017A2  0E98               	movlw	152
  7359  0017A4                     i2u371_47:
  7360  0017A4  2EE8               	decfsz	wreg,f,c
  7361  0017A6  D7FE               	bra	i2u371_47
  7362  0017A8  2E27               	decfsz	??_checkV& (0+255),f,c
  7363  0017AA  D7FC               	bra	i2u371_47
  7364                           
  7365                           ;sensors.c: 22: tmp = AD(channel);
  7366  0017AC  502B               	movf	checkV@channel,w,c
  7367  0017AE  EC54  F012         	call	_AD
  7368  0017B2                     L2:
  7369  0017B2  C001  F029         	movff	?_AD,checkV@tmp
  7370  0017B6  C002  F02A         	movff	?_AD+1,checkV@tmp+1
  7371  0017BA  C02C  F027         	movff	checkV@voltage,??_checkV
  7372  0017BE  C02D  F028         	movff	checkV@voltage+1,??_checkV+1
  7373  0017C2  1E27               	comf	??_checkV,f,c
  7374  0017C4  1E28               	comf	??_checkV+1,f,c
  7375  0017C6  4A27               	infsnz	??_checkV,f,c
  7376  0017C8  2A28               	incf	??_checkV+1,f,c
  7377  0017CA  5029               	movf	checkV@tmp,w,c
  7378  0017CC  2627               	addwf	??_checkV,f,c
  7379  0017CE  502A               	movf	checkV@tmp+1,w,c
  7380  0017D0  2228               	addwfc	??_checkV+1,f,c
  7381  0017D2  BE28               	btfsc	??_checkV+1,7,c
  7382  0017D4  D006               	goto	i2l3479
  7383  0017D6  5028               	movf	??_checkV+1,w,c
  7384  0017D8  E1DE               	bnz	i2l349
  7385  0017DA  0E06               	movlw	6
  7386  0017DC  5C27               	subwf	??_checkV,w,c
  7387  0017DE  B0D8               	btfsc	status,0,c
  7388  0017E0  D7DA               	goto	i2l349
  7389  0017E2                     i2l3479:
  7390                           
  7391                           ;sensors.c: 23: };
  7392                           ;sensors.c: 24: if (voltage > 0.85 * threshhold)return 1;
  7393  0017E2  0E9A               	movlw	154
  7394  0017E4  6E10               	movwf	___ftmul@f2,c
  7395  0017E6  0E59               	movlw	89
  7396  0017E8  6E11               	movwf	___ftmul@f2+1,c
  7397  0017EA  0E3F               	movlw	63
  7398  0017EC  6E12               	movwf	___ftmul@f2+2,c
  7399  0017EE  C025  F009         	movff	checkV@threshhold,___awtoft@c
  7400  0017F2  C026  F00A         	movff	checkV@threshhold+1,___awtoft@c+1
  7401  0017F6  ECD5  F011         	call	___awtoft	;wreg free
  7402  0017FA  C009  F00D         	movff	?___awtoft,___ftmul@f1
  7403  0017FE  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  7404  001802  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  7405  001806  ECBA  F00A         	call	___ftmul	;wreg free
  7406  00180A  C00D  F01C         	movff	?___ftmul,___ftge@ff1
  7407  00180E  C00E  F01D         	movff	?___ftmul+1,___ftge@ff1+1
  7408  001812  C00F  F01E         	movff	?___ftmul+2,___ftge@ff1+2
  7409  001816  C02C  F009         	movff	checkV@voltage,___awtoft@c
  7410  00181A  C02D  F00A         	movff	checkV@voltage+1,___awtoft@c+1
  7411  00181E  ECD5  F011         	call	___awtoft	;wreg free
  7412  001822  C009  F01F         	movff	?___awtoft,___ftge@ff2
  7413  001826  C00A  F020         	movff	?___awtoft+1,___ftge@ff2+1
  7414  00182A  C00B  F021         	movff	?___awtoft+2,___ftge@ff2+2
  7415  00182E  EC48  F00D         	call	___ftge	;wreg free
  7416  001832  B0D8               	btfsc	status,0,c
  7417  001834  D005               	goto	i2l3485
  7418  001836  0E00               	movlw	0
  7419  001838  6E26               	movwf	?_checkV+1,c
  7420  00183A  0E01               	movlw	1
  7421  00183C  6E25               	movwf	?_checkV,c
  7422  00183E  0012               	return	
  7423  001840                     i2l3485:
  7424                           
  7425                           ;sensors.c: 25: return 0;
  7426  001840  0E00               	movlw	0
  7427  001842  6E26               	movwf	?_checkV+1,c
  7428  001844  0E00               	movlw	0
  7429  001846  6E25               	movwf	?_checkV,c
  7430  001848  0012               	return	
  7431  00184A                     __end_of_checkV:
  7432                           	opt stack 0
  7433                           pclatu	equ	0xFFB
  7434                           pclath	equ	0xFFA
  7435                           tblptru	equ	0xFF8
  7436                           tblptrh	equ	0xFF7
  7437                           tblptrl	equ	0xFF6
  7438                           tablat	equ	0xFF5
  7439                           prodh	equ	0xFF4
  7440                           prodl	equ	0xFF3
  7441                           intcon	equ	0xFF2
  7442                           intcon2	equ	0xFF1
  7443                           intcon3	equ	0xFF0
  7444                           postinc0	equ	0xFEE
  7445                           fsr0h	equ	0xFEA
  7446                           fsr0l	equ	0xFE9
  7447                           wreg	equ	0xFE8
  7448                           postdec1	equ	0xFE5
  7449                           plusw1	equ	0xFE3
  7450                           fsr1h	equ	0xFE2
  7451                           fsr1l	equ	0xFE1
  7452                           indf2	equ	0xFDF
  7453                           postinc2	equ	0xFDE
  7454                           postdec2	equ	0xFDD
  7455                           plusw2	equ	0xFDB
  7456                           fsr2h	equ	0xFDA
  7457                           fsr2l	equ	0xFD9
  7458                           status	equ	0xFD8
  7459                           
  7460 ;; *************** function ___ftmul *****************
  7461 ;; Defined at:
  7462 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
  7463 ;; Parameters:    Size  Location     Type
  7464 ;;  f1              3   12[COMRAM] float 
  7465 ;;  f2              3   15[COMRAM] float 
  7466 ;; Auto vars:     Size  Location     Type
  7467 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  7468 ;;  sign            1   26[COMRAM] unsigned char 
  7469 ;;  cntr            1   25[COMRAM] unsigned char 
  7470 ;;  exp             1   21[COMRAM] unsigned char 
  7471 ;; Return value:  Size  Location     Type
  7472 ;;                  3   12[COMRAM] float 
  7473 ;; Registers used:
  7474 ;;		wreg, status,2, status,0, cstack
  7475 ;; Tracked objects:
  7476 ;;		On entry : 0/0
  7477 ;;		On exit  : 0/0
  7478 ;;		Unchanged: 0/0
  7479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7480 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7481 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7482 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7483 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7484 ;;Total ram usage:       15 bytes
  7485 ;; Hardware stack levels used:    1
  7486 ;; Hardware stack levels required when called:    1
  7487 ;; This function calls:
  7488 ;;		___ftpack
  7489 ;; This function is called by:
  7490 ;;		_checkV
  7491 ;; This function uses a non-reentrant model
  7492 ;;
  7493                           
  7494                           	psect	text35
  7495  001574                     __ptext35:
  7496                           	opt stack 0
  7497  001574                     ___ftmul:
  7498                           	opt stack 21
  7499                           
  7500                           ;incstack = 0
  7501  001574  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  7502  001578  6A14               	clrf	(??___ftmul+1)& (0+255),c
  7503  00157A  6A15               	clrf	(??___ftmul+2)& (0+255),c
  7504  00157C  340E               	rlcf	___ftmul@f1+1,w,c
  7505  00157E  3613               	rlcf	??___ftmul& (0+255),f,c
  7506  001580  E301               	bnc	u197_41
  7507  001582  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  7508  001584                     u197_41:
  7509  001584  5013               	movf	??___ftmul,w,c
  7510  001586  6E16               	movwf	___ftmul@exp,c
  7511  001588  5016               	movf	___ftmul@exp,w,c
  7512  00158A  A4D8               	btfss	status,2,c
  7513  00158C  D007               	goto	i2l3103
  7514  00158E  0E00               	movlw	0
  7515  001590  6E0D               	movwf	?___ftmul,c
  7516  001592  0E00               	movlw	0
  7517  001594  6E0E               	movwf	?___ftmul+1,c
  7518  001596  0E00               	movlw	0
  7519  001598  6E0F               	movwf	?___ftmul+2,c
  7520  00159A  0012               	return	
  7521  00159C                     i2l3103:
  7522  00159C  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  7523  0015A0  6A14               	clrf	(??___ftmul+1)& (0+255),c
  7524  0015A2  6A15               	clrf	(??___ftmul+2)& (0+255),c
  7525  0015A4  3411               	rlcf	___ftmul@f2+1,w,c
  7526  0015A6  3613               	rlcf	??___ftmul& (0+255),f,c
  7527  0015A8  E301               	bnc	u199_41
  7528  0015AA  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  7529  0015AC                     u199_41:
  7530  0015AC  5013               	movf	??___ftmul,w,c
  7531  0015AE  6E1B               	movwf	___ftmul@sign,c
  7532  0015B0  501B               	movf	___ftmul@sign,w,c
  7533  0015B2  A4D8               	btfss	status,2,c
  7534  0015B4  D007               	goto	i2l3109
  7535  0015B6  0E00               	movlw	0
  7536  0015B8  6E0D               	movwf	?___ftmul,c
  7537  0015BA  0E00               	movlw	0
  7538  0015BC  6E0E               	movwf	?___ftmul+1,c
  7539  0015BE  0E00               	movlw	0
  7540  0015C0  6E0F               	movwf	?___ftmul+2,c
  7541  0015C2  0012               	return	
  7542  0015C4                     i2l3109:
  7543  0015C4  501B               	movf	___ftmul@sign,w,c
  7544  0015C6  0F7B               	addlw	123
  7545  0015C8  2616               	addwf	___ftmul@exp,f,c
  7546  0015CA  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  7547  0015CE  5012               	movf	___ftmul@f2+2,w,c
  7548  0015D0  1A1B               	xorwf	___ftmul@sign,f,c
  7549  0015D2  0E80               	movlw	128
  7550  0015D4  161B               	andwf	___ftmul@sign,f,c
  7551  0015D6  8E0E               	bsf	___ftmul@f1+1,7,c
  7552  0015D8  8E11               	bsf	___ftmul@f2+1,7,c
  7553  0015DA  0EFF               	movlw	255
  7554  0015DC  1610               	andwf	___ftmul@f2,f,c
  7555  0015DE  0EFF               	movlw	255
  7556  0015E0  1611               	andwf	___ftmul@f2+1,f,c
  7557  0015E2  0E00               	movlw	0
  7558  0015E4  1612               	andwf	___ftmul@f2+2,f,c
  7559  0015E6  0E00               	movlw	0
  7560  0015E8  6E17               	movwf	___ftmul@f3_as_product,c
  7561  0015EA  0E00               	movlw	0
  7562  0015EC  6E18               	movwf	___ftmul@f3_as_product+1,c
  7563  0015EE  0E00               	movlw	0
  7564  0015F0  6E19               	movwf	___ftmul@f3_as_product+2,c
  7565  0015F2  0E07               	movlw	7
  7566  0015F4  6E1A               	movwf	___ftmul@cntr,c
  7567  0015F6                     i2l3123:
  7568  0015F6  A00D               	btfss	___ftmul@f1,0,c
  7569  0015F8  D006               	goto	i2l3127
  7570  0015FA  5010               	movf	___ftmul@f2,w,c
  7571  0015FC  2617               	addwf	___ftmul@f3_as_product,f,c
  7572  0015FE  5011               	movf	___ftmul@f2+1,w,c
  7573  001600  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  7574  001602  5012               	movf	___ftmul@f2+2,w,c
  7575  001604  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  7576  001606                     i2l3127:
  7577  001606  90D8               	bcf	status,0,c
  7578  001608  320F               	rrcf	___ftmul@f1+2,f,c
  7579  00160A  320E               	rrcf	___ftmul@f1+1,f,c
  7580  00160C  320D               	rrcf	___ftmul@f1,f,c
  7581  00160E  90D8               	bcf	status,0,c
  7582  001610  3610               	rlcf	___ftmul@f2,f,c
  7583  001612  3611               	rlcf	___ftmul@f2+1,f,c
  7584  001614  3612               	rlcf	___ftmul@f2+2,f,c
  7585  001616  2E1A               	decfsz	___ftmul@cntr,f,c
  7586  001618  D7EE               	goto	i2l3123
  7587  00161A  0E09               	movlw	9
  7588  00161C  6E1A               	movwf	___ftmul@cntr,c
  7589  00161E                     i2l3133:
  7590  00161E  A00D               	btfss	___ftmul@f1,0,c
  7591  001620  D006               	goto	i2l3137
  7592  001622  5010               	movf	___ftmul@f2,w,c
  7593  001624  2617               	addwf	___ftmul@f3_as_product,f,c
  7594  001626  5011               	movf	___ftmul@f2+1,w,c
  7595  001628  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  7596  00162A  5012               	movf	___ftmul@f2+2,w,c
  7597  00162C  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  7598  00162E                     i2l3137:
  7599  00162E  90D8               	bcf	status,0,c
  7600  001630  320F               	rrcf	___ftmul@f1+2,f,c
  7601  001632  320E               	rrcf	___ftmul@f1+1,f,c
  7602  001634  320D               	rrcf	___ftmul@f1,f,c
  7603  001636  90D8               	bcf	status,0,c
  7604  001638  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  7605  00163A  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  7606  00163C  3217               	rrcf	___ftmul@f3_as_product,f,c
  7607  00163E  2E1A               	decfsz	___ftmul@cntr,f,c
  7608  001640  D7EE               	goto	i2l3133
  7609  001642  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  7610  001646  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  7611  00164A  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  7612  00164E  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  7613  001652  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  7614  001656  ECF1  F00C         	call	___ftpack	;wreg free
  7615  00165A  C001  F00D         	movff	?___ftpack,?___ftmul
  7616  00165E  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  7617  001662  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  7618  001666  0012               	return	
  7619  001668                     __end_of___ftmul:
  7620                           	opt stack 0
  7621                           pclatu	equ	0xFFB
  7622                           pclath	equ	0xFFA
  7623                           tblptru	equ	0xFF8
  7624                           tblptrh	equ	0xFF7
  7625                           tblptrl	equ	0xFF6
  7626                           tablat	equ	0xFF5
  7627                           prodh	equ	0xFF4
  7628                           prodl	equ	0xFF3
  7629                           intcon	equ	0xFF2
  7630                           intcon2	equ	0xFF1
  7631                           intcon3	equ	0xFF0
  7632                           postinc0	equ	0xFEE
  7633                           fsr0h	equ	0xFEA
  7634                           fsr0l	equ	0xFE9
  7635                           wreg	equ	0xFE8
  7636                           postdec1	equ	0xFE5
  7637                           plusw1	equ	0xFE3
  7638                           fsr1h	equ	0xFE2
  7639                           fsr1l	equ	0xFE1
  7640                           indf2	equ	0xFDF
  7641                           postinc2	equ	0xFDE
  7642                           postdec2	equ	0xFDD
  7643                           plusw2	equ	0xFDB
  7644                           fsr2h	equ	0xFDA
  7645                           fsr2l	equ	0xFD9
  7646                           status	equ	0xFD8
  7647                           
  7648 ;; *************** function ___ftge *****************
  7649 ;; Defined at:
  7650 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftge.c"
  7651 ;; Parameters:    Size  Location     Type
  7652 ;;  ff1             3   27[COMRAM] float 
  7653 ;;  ff2             3   30[COMRAM] float 
  7654 ;; Auto vars:     Size  Location     Type
  7655 ;;		None
  7656 ;; Return value:  Size  Location     Type
  7657 ;;		None               void
  7658 ;; Registers used:
  7659 ;;		wreg, status,2, status,0
  7660 ;; Tracked objects:
  7661 ;;		On entry : 0/0
  7662 ;;		On exit  : 0/0
  7663 ;;		Unchanged: 0/0
  7664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7665 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7667 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7668 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7669 ;;Total ram usage:        9 bytes
  7670 ;; Hardware stack levels used:    1
  7671 ;; This function calls:
  7672 ;;		Nothing
  7673 ;; This function is called by:
  7674 ;;		_checkV
  7675 ;; This function uses a non-reentrant model
  7676 ;;
  7677                           
  7678                           	psect	text36
  7679  001A90                     __ptext36:
  7680                           	opt stack 0
  7681  001A90                     ___ftge:
  7682                           	opt stack 22
  7683                           
  7684                           ;incstack = 0
  7685  001A90  AE1E               	btfss	___ftge@ff1+2,7,c
  7686  001A92  D016               	goto	i2l3205
  7687  001A94  C01C  F022         	movff	___ftge@ff1,??___ftge
  7688  001A98  C01D  F023         	movff	___ftge@ff1+1,??___ftge+1
  7689  001A9C  C01E  F024         	movff	___ftge@ff1+2,??___ftge+2
  7690  001AA0  1E22               	comf	??___ftge,f,c
  7691  001AA2  1E23               	comf	??___ftge+1,f,c
  7692  001AA4  1E24               	comf	??___ftge+2,f,c
  7693  001AA6  2A22               	incf	??___ftge,f,c
  7694  001AA8  0E00               	movlw	0
  7695  001AAA  2223               	addwfc	??___ftge+1,f,c
  7696  001AAC  2224               	addwfc	??___ftge+2,f,c
  7697  001AAE  0E00               	movlw	0
  7698  001AB0  2422               	addwf	??___ftge,w,c
  7699  001AB2  6E1C               	movwf	___ftge@ff1,c
  7700  001AB4  0E00               	movlw	0
  7701  001AB6  2023               	addwfc	??___ftge+1,w,c
  7702  001AB8  6E1D               	movwf	___ftge@ff1+1,c
  7703  001ABA  0E80               	movlw	128
  7704  001ABC  2024               	addwfc	??___ftge+2,w,c
  7705  001ABE  6E1E               	movwf	___ftge@ff1+2,c
  7706  001AC0                     i2l3205:
  7707  001AC0  AE21               	btfss	___ftge@ff2+2,7,c
  7708  001AC2  D016               	goto	i2l3209
  7709  001AC4  C01F  F022         	movff	___ftge@ff2,??___ftge
  7710  001AC8  C020  F023         	movff	___ftge@ff2+1,??___ftge+1
  7711  001ACC  C021  F024         	movff	___ftge@ff2+2,??___ftge+2
  7712  001AD0  1E22               	comf	??___ftge,f,c
  7713  001AD2  1E23               	comf	??___ftge+1,f,c
  7714  001AD4  1E24               	comf	??___ftge+2,f,c
  7715  001AD6  2A22               	incf	??___ftge,f,c
  7716  001AD8  0E00               	movlw	0
  7717  001ADA  2223               	addwfc	??___ftge+1,f,c
  7718  001ADC  2224               	addwfc	??___ftge+2,f,c
  7719  001ADE  0E00               	movlw	0
  7720  001AE0  2422               	addwf	??___ftge,w,c
  7721  001AE2  6E1F               	movwf	___ftge@ff2,c
  7722  001AE4  0E00               	movlw	0
  7723  001AE6  2023               	addwfc	??___ftge+1,w,c
  7724  001AE8  6E20               	movwf	___ftge@ff2+1,c
  7725  001AEA  0E80               	movlw	128
  7726  001AEC  2024               	addwfc	??___ftge+2,w,c
  7727  001AEE  6E21               	movwf	___ftge@ff2+2,c
  7728  001AF0                     i2l3209:
  7729  001AF0  0E00               	movlw	0
  7730  001AF2  1A1C               	xorwf	___ftge@ff1,f,c
  7731  001AF4  0E00               	movlw	0
  7732  001AF6  1A1D               	xorwf	___ftge@ff1+1,f,c
  7733  001AF8  0E80               	movlw	128
  7734  001AFA  1A1E               	xorwf	___ftge@ff1+2,f,c
  7735  001AFC  0E00               	movlw	0
  7736  001AFE  1A1F               	xorwf	___ftge@ff2,f,c
  7737  001B00  0E00               	movlw	0
  7738  001B02  1A20               	xorwf	___ftge@ff2+1,f,c
  7739  001B04  0E80               	movlw	128
  7740  001B06  1A21               	xorwf	___ftge@ff2+2,f,c
  7741  001B08  501F               	movf	___ftge@ff2,w,c
  7742  001B0A  5C1C               	subwf	___ftge@ff1,w,c
  7743  001B0C  5020               	movf	___ftge@ff2+1,w,c
  7744  001B0E  581D               	subwfb	___ftge@ff1+1,w,c
  7745  001B10  5021               	movf	___ftge@ff2+2,w,c
  7746  001B12  581E               	subwfb	___ftge@ff1+2,w,c
  7747  001B14  B0D8               	btfsc	status,0,c
  7748  001B16  D002               	goto	i2l3215
  7749  001B18  90D8               	bcf	status,0,c
  7750  001B1A  0012               	return	
  7751  001B1C                     i2l3215:
  7752  001B1C  80D8               	bsf	status,0,c
  7753  001B1E  0012               	return	
  7754  001B20                     __end_of___ftge:
  7755                           	opt stack 0
  7756                           pclatu	equ	0xFFB
  7757                           pclath	equ	0xFFA
  7758                           tblptru	equ	0xFF8
  7759                           tblptrh	equ	0xFF7
  7760                           tblptrl	equ	0xFF6
  7761                           tablat	equ	0xFF5
  7762                           prodh	equ	0xFF4
  7763                           prodl	equ	0xFF3
  7764                           intcon	equ	0xFF2
  7765                           intcon2	equ	0xFF1
  7766                           intcon3	equ	0xFF0
  7767                           postinc0	equ	0xFEE
  7768                           fsr0h	equ	0xFEA
  7769                           fsr0l	equ	0xFE9
  7770                           wreg	equ	0xFE8
  7771                           postdec1	equ	0xFE5
  7772                           plusw1	equ	0xFE3
  7773                           fsr1h	equ	0xFE2
  7774                           fsr1l	equ	0xFE1
  7775                           indf2	equ	0xFDF
  7776                           postinc2	equ	0xFDE
  7777                           postdec2	equ	0xFDD
  7778                           plusw2	equ	0xFDB
  7779                           fsr2h	equ	0xFDA
  7780                           fsr2l	equ	0xFD9
  7781                           status	equ	0xFD8
  7782                           
  7783 ;; *************** function ___awtoft *****************
  7784 ;; Defined at:
  7785 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awtoft.c"
  7786 ;; Parameters:    Size  Location     Type
  7787 ;;  c               2    8[COMRAM] int 
  7788 ;; Auto vars:     Size  Location     Type
  7789 ;;  sign            1   11[COMRAM] unsigned char 
  7790 ;; Return value:  Size  Location     Type
  7791 ;;                  3    8[COMRAM] float 
  7792 ;; Registers used:
  7793 ;;		wreg, status,2, status,0, cstack
  7794 ;; Tracked objects:
  7795 ;;		On entry : 0/0
  7796 ;;		On exit  : 0/0
  7797 ;;		Unchanged: 0/0
  7798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7799 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7800 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7802 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7803 ;;Total ram usage:        4 bytes
  7804 ;; Hardware stack levels used:    1
  7805 ;; Hardware stack levels required when called:    1
  7806 ;; This function calls:
  7807 ;;		___ftpack
  7808 ;; This function is called by:
  7809 ;;		_checkV
  7810 ;; This function uses a non-reentrant model
  7811 ;;
  7812                           
  7813                           	psect	text37
  7814  0023AA                     __ptext37:
  7815                           	opt stack 0
  7816  0023AA                     ___awtoft:
  7817                           	opt stack 21
  7818                           
  7819                           ;incstack = 0
  7820  0023AA  0E00               	movlw	0
  7821  0023AC  6E0C               	movwf	___awtoft@sign,c
  7822  0023AE  AE0A               	btfss	___awtoft@c+1,7,c
  7823  0023B0  D006               	goto	i2l3197
  7824  0023B2  6C09               	negf	___awtoft@c,c
  7825  0023B4  1E0A               	comf	___awtoft@c+1,f,c
  7826  0023B6  B0D8               	btfsc	status,0,c
  7827  0023B8  2A0A               	incf	___awtoft@c+1,f,c
  7828  0023BA  0E01               	movlw	1
  7829  0023BC  6E0C               	movwf	___awtoft@sign,c
  7830  0023BE                     i2l3197:
  7831  0023BE  C009  F001         	movff	___awtoft@c,___ftpack@arg
  7832  0023C2  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  7833  0023C6  6A03               	clrf	___ftpack@arg+2,c
  7834  0023C8  0E8E               	movlw	142
  7835  0023CA  6E04               	movwf	___ftpack@exp,c
  7836  0023CC  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  7837  0023D0  ECF1  F00C         	call	___ftpack	;wreg free
  7838  0023D4  C001  F009         	movff	?___ftpack,?___awtoft
  7839  0023D8  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  7840  0023DC  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  7841  0023E0  0012               	return	
  7842  0023E2                     __end_of___awtoft:
  7843                           	opt stack 0
  7844                           pclatu	equ	0xFFB
  7845                           pclath	equ	0xFFA
  7846                           tblptru	equ	0xFF8
  7847                           tblptrh	equ	0xFF7
  7848                           tblptrl	equ	0xFF6
  7849                           tablat	equ	0xFF5
  7850                           prodh	equ	0xFF4
  7851                           prodl	equ	0xFF3
  7852                           intcon	equ	0xFF2
  7853                           intcon2	equ	0xFF1
  7854                           intcon3	equ	0xFF0
  7855                           postinc0	equ	0xFEE
  7856                           fsr0h	equ	0xFEA
  7857                           fsr0l	equ	0xFE9
  7858                           wreg	equ	0xFE8
  7859                           postdec1	equ	0xFE5
  7860                           plusw1	equ	0xFE3
  7861                           fsr1h	equ	0xFE2
  7862                           fsr1l	equ	0xFE1
  7863                           indf2	equ	0xFDF
  7864                           postinc2	equ	0xFDE
  7865                           postdec2	equ	0xFDD
  7866                           plusw2	equ	0xFDB
  7867                           fsr2h	equ	0xFDA
  7868                           fsr2l	equ	0xFD9
  7869                           status	equ	0xFD8
  7870                           
  7871 ;; *************** function ___ftpack *****************
  7872 ;; Defined at:
  7873 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
  7874 ;; Parameters:    Size  Location     Type
  7875 ;;  arg             3    0[COMRAM] unsigned um
  7876 ;;  exp             1    3[COMRAM] unsigned char 
  7877 ;;  sign            1    4[COMRAM] unsigned char 
  7878 ;; Auto vars:     Size  Location     Type
  7879 ;;		None
  7880 ;; Return value:  Size  Location     Type
  7881 ;;                  3    0[COMRAM] float 
  7882 ;; Registers used:
  7883 ;;		wreg, status,2, status,0
  7884 ;; Tracked objects:
  7885 ;;		On entry : 0/0
  7886 ;;		On exit  : 0/0
  7887 ;;		Unchanged: 0/0
  7888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7889 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7891 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7892 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7893 ;;Total ram usage:        8 bytes
  7894 ;; Hardware stack levels used:    1
  7895 ;; This function calls:
  7896 ;;		Nothing
  7897 ;; This function is called by:
  7898 ;;		___awtoft
  7899 ;;		___ftmul
  7900 ;; This function uses a non-reentrant model
  7901 ;;
  7902                           
  7903                           	psect	text38
  7904  0019E2                     __ptext38:
  7905                           	opt stack 0
  7906  0019E2                     ___ftpack:
  7907                           	opt stack 21
  7908                           
  7909                           ;incstack = 0
  7910  0019E2  5004               	movf	___ftpack@exp,w,c
  7911  0019E4  B4D8               	btfsc	status,2,c
  7912  0019E6  D005               	goto	i2l2973
  7913  0019E8  5001               	movf	___ftpack@arg,w,c
  7914  0019EA  1002               	iorwf	___ftpack@arg+1,w,c
  7915  0019EC  1003               	iorwf	___ftpack@arg+2,w,c
  7916  0019EE  A4D8               	btfss	status,2,c
  7917  0019F0  D00C               	goto	i2l2979
  7918  0019F2                     i2l2973:
  7919  0019F2  0E00               	movlw	0
  7920  0019F4  6E01               	movwf	?___ftpack,c
  7921  0019F6  0E00               	movlw	0
  7922  0019F8  6E02               	movwf	?___ftpack+1,c
  7923  0019FA  0E00               	movlw	0
  7924  0019FC  6E03               	movwf	?___ftpack+2,c
  7925  0019FE  0012               	return	
  7926  001A00                     i2l2977:
  7927  001A00  2A04               	incf	___ftpack@exp,f,c
  7928  001A02  90D8               	bcf	status,0,c
  7929  001A04  3203               	rrcf	___ftpack@arg+2,f,c
  7930  001A06  3202               	rrcf	___ftpack@arg+1,f,c
  7931  001A08  3201               	rrcf	___ftpack@arg,f,c
  7932  001A0A                     i2l2979:
  7933  001A0A  0E00               	movlw	0
  7934  001A0C  1401               	andwf	___ftpack@arg,w,c
  7935  001A0E  6E06               	movwf	??___ftpack& (0+255),c
  7936  001A10  0E00               	movlw	0
  7937  001A12  1402               	andwf	___ftpack@arg+1,w,c
  7938  001A14  6E07               	movwf	(??___ftpack+1)& (0+255),c
  7939  001A16  0EFE               	movlw	254
  7940  001A18  1403               	andwf	___ftpack@arg+2,w,c
  7941  001A1A  6E08               	movwf	(??___ftpack+2)& (0+255),c
  7942  001A1C  5006               	movf	??___ftpack,w,c
  7943  001A1E  1007               	iorwf	??___ftpack+1,w,c
  7944  001A20  1008               	iorwf	??___ftpack+2,w,c
  7945  001A22  B4D8               	btfsc	status,2,c
  7946  001A24  D00C               	goto	i2l2985
  7947  001A26  D7EC               	goto	i2l2977
  7948  001A28                     i2l2981:
  7949  001A28  2A04               	incf	___ftpack@exp,f,c
  7950  001A2A  0E01               	movlw	1
  7951  001A2C  2601               	addwf	___ftpack@arg,f,c
  7952  001A2E  0E00               	movlw	0
  7953  001A30  2202               	addwfc	___ftpack@arg+1,f,c
  7954  001A32  0E00               	movlw	0
  7955  001A34  2203               	addwfc	___ftpack@arg+2,f,c
  7956  001A36  90D8               	bcf	status,0,c
  7957  001A38  3203               	rrcf	___ftpack@arg+2,f,c
  7958  001A3A  3202               	rrcf	___ftpack@arg+1,f,c
  7959  001A3C  3201               	rrcf	___ftpack@arg,f,c
  7960  001A3E                     i2l2985:
  7961  001A3E  0E00               	movlw	0
  7962  001A40  1401               	andwf	___ftpack@arg,w,c
  7963  001A42  6E06               	movwf	??___ftpack& (0+255),c
  7964  001A44  0E00               	movlw	0
  7965  001A46  1402               	andwf	___ftpack@arg+1,w,c
  7966  001A48  6E07               	movwf	(??___ftpack+1)& (0+255),c
  7967  001A4A  0EFF               	movlw	255
  7968  001A4C  1403               	andwf	___ftpack@arg+2,w,c
  7969  001A4E  6E08               	movwf	(??___ftpack+2)& (0+255),c
  7970  001A50  5006               	movf	??___ftpack,w,c
  7971  001A52  1007               	iorwf	??___ftpack+1,w,c
  7972  001A54  1008               	iorwf	??___ftpack+2,w,c
  7973  001A56  B4D8               	btfsc	status,2,c
  7974  001A58  D006               	goto	i2l2989
  7975  001A5A  D7E6               	goto	i2l2981
  7976  001A5C                     i2l2987:
  7977  001A5C  0604               	decf	___ftpack@exp,f,c
  7978  001A5E  90D8               	bcf	status,0,c
  7979  001A60  3601               	rlcf	___ftpack@arg,f,c
  7980  001A62  3602               	rlcf	___ftpack@arg+1,f,c
  7981  001A64  3603               	rlcf	___ftpack@arg+2,f,c
  7982  001A66                     i2l2989:
  7983  001A66  BE02               	btfsc	___ftpack@arg+1,7,c
  7984  001A68  D003               	goto	i2l791
  7985  001A6A  0E02               	movlw	2
  7986  001A6C  6004               	cpfslt	___ftpack@exp,c
  7987  001A6E  D7F6               	goto	i2l2987
  7988  001A70                     i2l791:
  7989  001A70  A004               	btfss	___ftpack@exp,0,c
  7990  001A72  9E02               	bcf	___ftpack@arg+1,7,c
  7991  001A74  90D8               	bcf	status,0,c
  7992  001A76  3204               	rrcf	___ftpack@exp,f,c
  7993  001A78  5004               	movf	___ftpack@exp,w,c
  7994  001A7A  1203               	iorwf	___ftpack@arg+2,f,c
  7995  001A7C  5005               	movf	___ftpack@sign,w,c
  7996  001A7E  A4D8               	btfss	status,2,c
  7997  001A80  8E03               	bsf	___ftpack@arg+2,7,c
  7998  001A82  C001  F001         	movff	___ftpack@arg,?___ftpack
  7999  001A86  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  8000  001A8A  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  8001  001A8E  0012               	return	
  8002  001A90                     __end_of___ftpack:
  8003                           	opt stack 0
  8004                           pclatu	equ	0xFFB
  8005                           pclath	equ	0xFFA
  8006                           tblptru	equ	0xFF8
  8007                           tblptrh	equ	0xFF7
  8008                           tblptrl	equ	0xFF6
  8009                           tablat	equ	0xFF5
  8010                           prodh	equ	0xFF4
  8011                           prodl	equ	0xFF3
  8012                           intcon	equ	0xFF2
  8013                           intcon2	equ	0xFF1
  8014                           intcon3	equ	0xFF0
  8015                           postinc0	equ	0xFEE
  8016                           fsr0h	equ	0xFEA
  8017                           fsr0l	equ	0xFE9
  8018                           wreg	equ	0xFE8
  8019                           postdec1	equ	0xFE5
  8020                           plusw1	equ	0xFE3
  8021                           fsr1h	equ	0xFE2
  8022                           fsr1l	equ	0xFE1
  8023                           indf2	equ	0xFDF
  8024                           postinc2	equ	0xFDE
  8025                           postdec2	equ	0xFDD
  8026                           plusw2	equ	0xFDB
  8027                           fsr2h	equ	0xFDA
  8028                           fsr2l	equ	0xFD9
  8029                           status	equ	0xFD8
  8030                           
  8031 ;; *************** function _AD *****************
  8032 ;; Defined at:
  8033 ;;		line 4 in file "sensors.c"
  8034 ;; Parameters:    Size  Location     Type
  8035 ;;  channel         1    wreg     unsigned char 
  8036 ;; Auto vars:     Size  Location     Type
  8037 ;;  channel         1    4[COMRAM] unsigned char 
  8038 ;; Return value:  Size  Location     Type
  8039 ;;                  2    0[COMRAM] int 
  8040 ;; Registers used:
  8041 ;;		wreg, status,2, status,0
  8042 ;; Tracked objects:
  8043 ;;		On entry : 0/0
  8044 ;;		On exit  : 0/0
  8045 ;;		Unchanged: 0/0
  8046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8047 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8048 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8049 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8050 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8051 ;;Total ram usage:        5 bytes
  8052 ;; Hardware stack levels used:    1
  8053 ;; This function calls:
  8054 ;;		Nothing
  8055 ;; This function is called by:
  8056 ;;		_checkV
  8057 ;;		_testAD
  8058 ;; This function uses a non-reentrant model
  8059 ;;
  8060                           
  8061                           	psect	text39
  8062  0024A8                     __ptext39:
  8063                           	opt stack 0
  8064  0024A8                     _AD:
  8065                           	opt stack 22
  8066                           
  8067                           ;incstack = 0
  8068                           ;AD@channel stored from wreg
  8069  0024A8  6E05               	movwf	AD@channel,c
  8070                           
  8071                           ;sensors.c: 6: ADCON0 = ((channel << 2));
  8072  0024AA  4405               	rlncf	AD@channel,w,c
  8073  0024AC  46E8               	rlncf	wreg,f,c
  8074  0024AE  0BFC               	andlw	252
  8075  0024B0  6EC2               	movwf	4034,c	;volatile
  8076                           
  8077                           ;sensors.c: 7: ADON = 1;
  8078  0024B2  80C2               	bsf	4034,0,c	;volatile
  8079                           
  8080                           ;sensors.c: 8: ADCON0bits.GO = 1;
  8081  0024B4  82C2               	bsf	4034,1,c	;volatile
  8082  0024B6                     i2l340:
  8083  0024B6  B2C2               	btfsc	4034,1,c	;volatile
  8084  0024B8  D7FE               	goto	i2l340
  8085                           
  8086                           ;sensors.c: 10: return (ADRESH << 8) | ADRESL;
  8087  0024BA  50C3               	movf	4035,w,c	;volatile
  8088  0024BC  CFC4 F003          	movff	4036,??_AD	;volatile
  8089  0024C0  6A04               	clrf	(??_AD+1)& (0+255),c
  8090  0024C2  C003  F004         	movff	??_AD,??_AD+1
  8091  0024C6  6A03               	clrf	??_AD,c
  8092  0024C8  1003               	iorwf	??_AD,w,c
  8093  0024CA  6E01               	movwf	?_AD,c
  8094  0024CC  5004               	movf	??_AD+1,w,c
  8095  0024CE  6E02               	movwf	?_AD+1,c
  8096  0024D0  0012               	return	
  8097  0024D2                     __end_of_AD:
  8098                           	opt stack 0
  8099                           pclatu	equ	0xFFB
  8100                           pclath	equ	0xFFA
  8101                           tblptru	equ	0xFF8
  8102                           tblptrh	equ	0xFF7
  8103                           tblptrl	equ	0xFF6
  8104                           tablat	equ	0xFF5
  8105                           prodh	equ	0xFF4
  8106                           prodl	equ	0xFF3
  8107                           intcon	equ	0xFF2
  8108                           intcon2	equ	0xFF1
  8109                           intcon3	equ	0xFF0
  8110                           postinc0	equ	0xFEE
  8111                           fsr0h	equ	0xFEA
  8112                           fsr0l	equ	0xFE9
  8113                           wreg	equ	0xFE8
  8114                           postdec1	equ	0xFE5
  8115                           plusw1	equ	0xFE3
  8116                           fsr1h	equ	0xFE2
  8117                           fsr1l	equ	0xFE1
  8118                           indf2	equ	0xFDF
  8119                           postinc2	equ	0xFDE
  8120                           postdec2	equ	0xFDD
  8121                           plusw2	equ	0xFDB
  8122                           fsr2h	equ	0xFDA
  8123                           fsr2l	equ	0xFD9
  8124                           status	equ	0xFD8
  8125                           
  8126 ;; *************** function _HexDecToDec2 *****************
  8127 ;; Defined at:
  8128 ;;		line 6 in file "modules.c"
  8129 ;; Parameters:    Size  Location     Type
  8130 ;;  hex             2    6[COMRAM] unsigned int 
  8131 ;; Auto vars:     Size  Location     Type
  8132 ;;  digit           2   13[COMRAM] unsigned int 
  8133 ;;  tenth           2   11[COMRAM] unsigned int 
  8134 ;; Return value:  Size  Location     Type
  8135 ;;                  2    6[COMRAM] unsigned int 
  8136 ;; Registers used:
  8137 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8138 ;; Tracked objects:
  8139 ;;		On entry : 0/0
  8140 ;;		On exit  : 0/0
  8141 ;;		Unchanged: 0/0
  8142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8143 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8144 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8145 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8146 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8147 ;;Total ram usage:        9 bytes
  8148 ;; Hardware stack levels used:    1
  8149 ;; Hardware stack levels required when called:    1
  8150 ;; This function calls:
  8151 ;;		i2___wmul
  8152 ;; This function is called by:
  8153 ;;		_simulate
  8154 ;; This function uses a non-reentrant model
  8155 ;;
  8156                           
  8157                           	psect	text40
  8158  002294                     __ptext40:
  8159                           	opt stack 0
  8160  002294                     _HexDecToDec2:
  8161                           	opt stack 23
  8162                           
  8163                           ;modules.c: 8: unsigned tenth = hex / 16;
  8164                           
  8165                           ;incstack = 0
  8166  002294  C007  F009         	movff	HexDecToDec2@hex,??_HexDecToDec2
  8167  002298  C008  F00A         	movff	HexDecToDec2@hex+1,??_HexDecToDec2+1
  8168  00229C  0E04               	movlw	4
  8169  00229E  6E0B               	movwf	(??_HexDecToDec2+2)& (0+255),c
  8170  0022A0                     i2u315_45:
  8171  0022A0  90D8               	bcf	status,0,c
  8172  0022A2  320A               	rrcf	??_HexDecToDec2+1,f,c
  8173  0022A4  3209               	rrcf	??_HexDecToDec2,f,c
  8174  0022A6  2E0B               	decfsz	(??_HexDecToDec2+2)& (0+255),f,c
  8175  0022A8  D7FB               	goto	i2u315_45
  8176  0022AA  C009  F00C         	movff	??_HexDecToDec2,HexDecToDec2@tenth
  8177  0022AE  C00A  F00D         	movff	??_HexDecToDec2+1,HexDecToDec2@tenth+1
  8178                           
  8179                           ;modules.c: 9: unsigned digit = hex % 16;
  8180  0022B2  0E0F               	movlw	15
  8181  0022B4  1407               	andwf	HexDecToDec2@hex,w,c
  8182  0022B6  6E0E               	movwf	HexDecToDec2@digit,c
  8183  0022B8  6A0F               	clrf	HexDecToDec2@digit+1,c
  8184                           
  8185                           ;modules.c: 10: return tenth * 10 + digit;
  8186  0022BA  C00C  F001         	movff	HexDecToDec2@tenth,i2___wmul@multiplier
  8187  0022BE  C00D  F002         	movff	HexDecToDec2@tenth+1,i2___wmul@multiplier+1
  8188  0022C2  0E00               	movlw	0
  8189  0022C4  6E04               	movwf	i2___wmul@multiplicand+1,c
  8190  0022C6  0E0A               	movlw	10
  8191  0022C8  6E03               	movwf	i2___wmul@multiplicand,c
  8192  0022CA  ECA3  F012         	call	i2___wmul	;wreg free
  8193  0022CE  500E               	movf	HexDecToDec2@digit,w,c
  8194  0022D0  2401               	addwf	?i2___wmul,w,c
  8195  0022D2  6E07               	movwf	?_HexDecToDec2,c
  8196  0022D4  500F               	movf	HexDecToDec2@digit+1,w,c
  8197  0022D6  2002               	addwfc	?i2___wmul+1,w,c
  8198  0022D8  6E08               	movwf	?_HexDecToDec2+1,c
  8199  0022DA  0012               	return	
  8200  0022DC                     __end_of_HexDecToDec2:
  8201                           	opt stack 0
  8202                           pclatu	equ	0xFFB
  8203                           pclath	equ	0xFFA
  8204                           tblptru	equ	0xFF8
  8205                           tblptrh	equ	0xFF7
  8206                           tblptrl	equ	0xFF6
  8207                           tablat	equ	0xFF5
  8208                           prodh	equ	0xFF4
  8209                           prodl	equ	0xFF3
  8210                           intcon	equ	0xFF2
  8211                           intcon2	equ	0xFF1
  8212                           intcon3	equ	0xFF0
  8213                           postinc0	equ	0xFEE
  8214                           fsr0h	equ	0xFEA
  8215                           fsr0l	equ	0xFE9
  8216                           wreg	equ	0xFE8
  8217                           postdec1	equ	0xFE5
  8218                           plusw1	equ	0xFE3
  8219                           fsr1h	equ	0xFE2
  8220                           fsr1l	equ	0xFE1
  8221                           indf2	equ	0xFDF
  8222                           postinc2	equ	0xFDE
  8223                           postdec2	equ	0xFDD
  8224                           plusw2	equ	0xFDB
  8225                           fsr2h	equ	0xFDA
  8226                           fsr2l	equ	0xFD9
  8227                           status	equ	0xFD8
  8228                           
  8229 ;; *************** function _mainloop *****************
  8230 ;; Defined at:
  8231 ;;		line 51 in file "main.c"
  8232 ;; Parameters:    Size  Location     Type
  8233 ;;		None
  8234 ;; Auto vars:     Size  Location     Type
  8235 ;;  i               2   61[COMRAM] int 
  8236 ;;  portCW          6   53[COMRAM] int [3]
  8237 ;;  sorted          4   49[COMRAM] unsigned char [4]
  8238 ;;  period          2   59[COMRAM] unsigned int 
  8239 ;; Return value:  Size  Location     Type
  8240 ;;                  1    wreg      void 
  8241 ;; Registers used:
  8242 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8243 ;; Tracked objects:
  8244 ;;		On entry : 0/0
  8245 ;;		On exit  : 0/0
  8246 ;;		Unchanged: 0/0
  8247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8249 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8250 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8251 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8252 ;;Total ram usage:       16 bytes
  8253 ;; Hardware stack levels used:    1
  8254 ;; Hardware stack levels required when called:    4
  8255 ;; This function calls:
  8256 ;;		_CCW90
  8257 ;;		_CW90
  8258 ;;		_WriteRun
  8259 ;;		_closeGate
  8260 ;;		_openGate
  8261 ;;		_showInfo
  8262 ;;		_stopMoving
  8263 ;;		i2_lcdInst
  8264 ;;		i2_printf
  8265 ;; This function is called by:
  8266 ;;		_intrpt
  8267 ;; This function uses a non-reentrant model
  8268 ;;
  8269                           
  8270                           	psect	text41
  8271  001152                     __ptext41:
  8272                           	opt stack 0
  8273  001152                     _mainloop:
  8274                           	opt stack 21
  8275                           
  8276                           ;main.c: 52: unsigned char sorted[] = {2, 2, 2, 6};
  8277                           
  8278                           ;incstack = 0
  8279  001152  C0E0  F032         	movff	mainloop@F3096,mainloop@sorted
  8280  001156  C0E1  F033         	movff	mainloop@F3096+1,mainloop@sorted+1
  8281  00115A  C0E2  F034         	movff	mainloop@F3096+2,mainloop@sorted+2
  8282  00115E  C0E3  F035         	movff	mainloop@F3096+3,mainloop@sorted+3
  8283                           
  8284                           ;main.c: 53: unsigned int period = 30;
  8285  001162  0E00               	movlw	0
  8286  001164  6E3D               	movwf	mainloop@period+1,c
  8287  001166  0E1E               	movlw	30
  8288  001168  6E3C               	movwf	mainloop@period,c
  8289                           
  8290                           ;main.c: 54: lcdInst(0b10000000);
  8291  00116A  0E80               	movlw	128
  8292  00116C  EC53  F013         	call	i2_lcdInst
  8293                           
  8294                           ;main.c: 55: printf("Dumming...          ");
  8295  001170  0E16               	movlw	low STR_1
  8296  001172  6E0D               	movwf	i2printf@f,c
  8297  001174  0EFF               	movlw	high STR_1
  8298  001176  6E0E               	movwf	i2printf@f+1,c
  8299  001178  EC7E  F004         	call	i2_printf	;wreg free
  8300                           
  8301                           ;main.c: 57: LATC6 = 1;
  8302  00117C  8C8B               	bsf	3979,6,c	;volatile
  8303                           
  8304                           ;main.c: 58: INT2IE = 1;
  8305  00117E  88F0               	bsf	intcon3,4,c	;volatile
  8306                           
  8307                           ;main.c: 59: INT2IF = 0;
  8308  001180  92F0               	bcf	intcon3,1,c	;volatile
  8309                           
  8310                           ;main.c: 60: _delay((unsigned long)((20000)*(8000000/4000.0)));
  8311  001182  0ECB               	movlw	203
  8312  001184  6E31               	movwf	(??_mainloop+1)& (0+255),c
  8313  001186  0EEC               	movlw	236
  8314  001188  6E30               	movwf	??_mainloop& (0+255),c
  8315  00118A  0E84               	movlw	132
  8316  00118C                     i2u372_47:
  8317  00118C  2EE8               	decfsz	wreg,f,c
  8318  00118E  D7FE               	bra	i2u372_47
  8319  001190  2E30               	decfsz	??_mainloop& (0+255),f,c
  8320  001192  D7FC               	bra	i2u372_47
  8321  001194  2E31               	decfsz	(??_mainloop+1)& (0+255),f,c
  8322  001196  D7FA               	bra	i2u372_47
  8323  001198  D000               	nop2	
  8324                           
  8325                           ;main.c: 61: openGate();
  8326  00119A  ECC7  F012         	call	_openGate	;wreg free
  8327                           
  8328                           ;main.c: 62: LATC6 = 0;
  8329  00119E  9C8B               	bcf	3979,6,c	;volatile
  8330                           
  8331                           ;main.c: 63: _delay((unsigned long)((2000)*(8000000/4000.0)));
  8332  0011A0  0E15               	movlw	21
  8333  0011A2  6E31               	movwf	(??_mainloop+1)& (0+255),c
  8334  0011A4  0E4B               	movlw	75
  8335  0011A6  6E30               	movwf	??_mainloop& (0+255),c
  8336  0011A8  0EBE               	movlw	190
  8337  0011AA                     i2u373_47:
  8338  0011AA  2EE8               	decfsz	wreg,f,c
  8339  0011AC  D7FE               	bra	i2u373_47
  8340  0011AE  2E30               	decfsz	??_mainloop& (0+255),f,c
  8341  0011B0  D7FC               	bra	i2u373_47
  8342  0011B2  2E31               	decfsz	(??_mainloop+1)& (0+255),f,c
  8343  0011B4  D7FA               	bra	i2u373_47
  8344  0011B6  D000               	nop2	
  8345                           
  8346                           ;main.c: 64: int portCW[] = {1, 1, 1};
  8347  0011B8  EE20  F0DA         	lfsr	2,mainloop@F3101
  8348  0011BC  EE10  F036         	lfsr	1,mainloop@portCW
  8349  0011C0  0E05               	movlw	5
  8350  0011C2                     i2u318_41:
  8351  0011C2  CFDB FFE3          	movff	plusw2,plusw1
  8352  0011C6  06E8               	decf	wreg,f,c
  8353  0011C8  E2FC               	bc	i2u318_41
  8354                           
  8355                           ;main.c: 65: CCW90(portCW);
  8356  0011CA  0E36               	movlw	low mainloop@portCW
  8357  0011CC  6E16               	movwf	CCW90@port,c
  8358  0011CE  0E00               	movlw	high mainloop@portCW
  8359  0011D0  6E17               	movwf	CCW90@port+1,c
  8360  0011D2  EC5F  F00E         	call	_CCW90	;wreg free
  8361                           
  8362                           ;main.c: 67: for (int i = 0; i < 8; i++) {
  8363  0011D6  0E00               	movlw	0
  8364  0011D8  6E3F               	movwf	mainloop@i+1,c
  8365  0011DA  0E00               	movlw	0
  8366  0011DC  6E3E               	movwf	mainloop@i,c
  8367  0011DE  BE3F               	btfsc	mainloop@i+1,7,c
  8368  0011E0  D006               	goto	i2l108
  8369  0011E2  503F               	movf	mainloop@i+1,w,c
  8370  0011E4  E149               	bnz	i2l109
  8371  0011E6  0E08               	movlw	8
  8372  0011E8  5C3E               	subwf	mainloop@i,w,c
  8373  0011EA  B0D8               	btfsc	status,0,c
  8374  0011EC  D045               	goto	i2l109
  8375  0011EE                     i2l108:
  8376                           
  8377                           ;main.c: 68: LATC6 = 1;
  8378  0011EE  8C8B               	bsf	3979,6,c	;volatile
  8379                           
  8380                           ;main.c: 69: _delay((unsigned long)((500)*(8000000/4000.0)));
  8381  0011F0  0E06               	movlw	6
  8382  0011F2  6E31               	movwf	(??_mainloop+1)& (0+255),c
  8383  0011F4  0E13               	movlw	19
  8384  0011F6  6E30               	movwf	??_mainloop& (0+255),c
  8385  0011F8  0EAE               	movlw	174
  8386  0011FA                     i2u374_47:
  8387  0011FA  2EE8               	decfsz	wreg,f,c
  8388  0011FC  D7FE               	bra	i2u374_47
  8389  0011FE  2E30               	decfsz	??_mainloop& (0+255),f,c
  8390  001200  D7FC               	bra	i2u374_47
  8391  001202  2E31               	decfsz	(??_mainloop+1)& (0+255),f,c
  8392  001204  D7FA               	bra	i2u374_47
  8393                           
  8394                           ;main.c: 70: LATC6 = 0;
  8395  001206  9C8B               	bcf	3979,6,c	;volatile
  8396                           
  8397                           ;main.c: 71: _delay((unsigned long)((2000)*(8000000/4000.0)));
  8398  001208  0E15               	movlw	21
  8399  00120A  6E31               	movwf	(??_mainloop+1)& (0+255),c
  8400  00120C  0E4B               	movlw	75
  8401  00120E  6E30               	movwf	??_mainloop& (0+255),c
  8402  001210  0EBE               	movlw	190
  8403  001212                     i2u375_47:
  8404  001212  2EE8               	decfsz	wreg,f,c
  8405  001214  D7FE               	bra	i2u375_47
  8406  001216  2E30               	decfsz	??_mainloop& (0+255),f,c
  8407  001218  D7FC               	bra	i2u375_47
  8408  00121A  2E31               	decfsz	(??_mainloop+1)& (0+255),f,c
  8409  00121C  D7FA               	bra	i2u375_47
  8410  00121E  D000               	nop2	
  8411                           
  8412                           ;main.c: 72: CW90(portCW);
  8413  001220  0E36               	movlw	low mainloop@portCW
  8414  001222  6E16               	movwf	CW90@port,c
  8415  001224  0E00               	movlw	high mainloop@portCW
  8416  001226  6E17               	movwf	CW90@port+1,c
  8417  001228  EC1A  F00E         	call	_CW90	;wreg free
  8418                           
  8419                           ;main.c: 73: LATC6 = 1;
  8420  00122C  8C8B               	bsf	3979,6,c	;volatile
  8421                           
  8422                           ;main.c: 74: _delay((unsigned long)((500)*(8000000/4000.0)));
  8423  00122E  0E06               	movlw	6
  8424  001230  6E31               	movwf	(??_mainloop+1)& (0+255),c
  8425  001232  0E13               	movlw	19
  8426  001234  6E30               	movwf	??_mainloop& (0+255),c
  8427  001236  0EAE               	movlw	174
  8428  001238                     i2u376_47:
  8429  001238  2EE8               	decfsz	wreg,f,c
  8430  00123A  D7FE               	bra	i2u376_47
  8431  00123C  2E30               	decfsz	??_mainloop& (0+255),f,c
  8432  00123E  D7FC               	bra	i2u376_47
  8433  001240  2E31               	decfsz	(??_mainloop+1)& (0+255),f,c
  8434  001242  D7FA               	bra	i2u376_47
  8435                           
  8436                           ;main.c: 75: LATC6 = 0;
  8437  001244  9C8B               	bcf	3979,6,c	;volatile
  8438                           
  8439                           ;main.c: 76: _delay((unsigned long)((2000)*(8000000/4000.0)));
  8440  001246  0E15               	movlw	21
  8441  001248  6E31               	movwf	(??_mainloop+1)& (0+255),c
  8442  00124A  0E4B               	movlw	75
  8443  00124C  6E30               	movwf	??_mainloop& (0+255),c
  8444  00124E  0EBE               	movlw	190
  8445  001250                     i2u377_47:
  8446  001250  2EE8               	decfsz	wreg,f,c
  8447  001252  D7FE               	bra	i2u377_47
  8448  001254  2E30               	decfsz	??_mainloop& (0+255),f,c
  8449  001256  D7FC               	bra	i2u377_47
  8450  001258  2E31               	decfsz	(??_mainloop+1)& (0+255),f,c
  8451  00125A  D7FA               	bra	i2u377_47
  8452  00125C  D000               	nop2	
  8453                           
  8454                           ;main.c: 77: CCW90(portCW);
  8455  00125E  0E36               	movlw	low mainloop@portCW
  8456  001260  6E16               	movwf	CCW90@port,c
  8457  001262  0E00               	movlw	high mainloop@portCW
  8458  001264  6E17               	movwf	CCW90@port+1,c
  8459  001266  EC5F  F00E         	call	_CCW90	;wreg free
  8460  00126A  4A3E               	infsnz	mainloop@i,f,c
  8461  00126C  2A3F               	incf	mainloop@i+1,f,c
  8462  00126E  BE3F               	btfsc	mainloop@i+1,7,c
  8463  001270  D7BE               	goto	i2l108
  8464  001272  503F               	movf	mainloop@i+1,w,c
  8465  001274  E101               	bnz	i2u320_40
  8466  001276  D7B7               	goto	L3
  8467  001278                     i2u320_40:
  8468  001278                     i2l109:
  8469                           
  8470                           ;main.c: 78: }
  8471                           ;main.c: 80: INT2IE = 0;
  8472  001278  98F0               	bcf	intcon3,4,c	;volatile
  8473                           
  8474                           ;main.c: 81: stopMoving(0);
  8475  00127A  0E00               	movlw	0
  8476  00127C  ECF1  F011         	call	_stopMoving
  8477                           
  8478                           ;main.c: 82: closeGate();
  8479  001280  ECD7  F012         	call	_closeGate	;wreg free
  8480                           
  8481                           ;main.c: 83: lcdInst(0b11000000);
  8482  001284  0EC0               	movlw	192
  8483  001286  EC53  F013         	call	i2_lcdInst
  8484                           
  8485                           ;main.c: 84: printf("Sorting Complete          ");
  8486  00128A  0ED3               	movlw	low STR_2
  8487  00128C  6E0D               	movwf	i2printf@f,c
  8488  00128E  0EFD               	movlw	high STR_2
  8489  001290  6E0E               	movwf	i2printf@f+1,c
  8490  001292  EC7E  F004         	call	i2_printf	;wreg free
  8491                           
  8492                           ;main.c: 85: WriteRun(sorted, period);
  8493  001296  0E32               	movlw	low mainloop@sorted
  8494  001298  6E07               	movwf	WriteRun@sorted,c
  8495  00129A  0E00               	movlw	high mainloop@sorted
  8496  00129C  6E08               	movwf	WriteRun@sorted+1,c
  8497  00129E  C03C  F009         	movff	mainloop@period,WriteRun@time
  8498  0012A2  C03D  F00A         	movff	mainloop@period+1,WriteRun@time+1
  8499  0012A6  EC70  F009         	call	_WriteRun	;wreg free
  8500                           
  8501                           ;main.c: 86: _delay((unsigned long)((700)*(8000000/4000.0)));
  8502  0012AA  0E08               	movlw	8
  8503  0012AC  6E31               	movwf	(??_mainloop+1)& (0+255),c
  8504  0012AE  0E1B               	movlw	27
  8505  0012B0  6E30               	movwf	??_mainloop& (0+255),c
  8506  0012B2  0E27               	movlw	39
  8507  0012B4                     i2u378_47:
  8508  0012B4  2EE8               	decfsz	wreg,f,c
  8509  0012B6  D7FE               	bra	i2u378_47
  8510  0012B8  2E30               	decfsz	??_mainloop& (0+255),f,c
  8511  0012BA  D7FC               	bra	i2u378_47
  8512  0012BC  2E31               	decfsz	(??_mainloop+1)& (0+255),f,c
  8513  0012BE  D7FA               	bra	i2u378_47
  8514  0012C0  F000               	nop	
  8515                           
  8516                           ;main.c: 87: showInfo(period, sorted);
  8517  0012C2  C03C  F023         	movff	mainloop@period,showInfo@time
  8518  0012C6  C03D  F024         	movff	mainloop@period+1,showInfo@time+1
  8519  0012CA  0E32               	movlw	low mainloop@sorted
  8520  0012CC  6E25               	movwf	showInfo@sorted,c
  8521  0012CE  0E00               	movlw	high mainloop@sorted
  8522  0012D0  6E26               	movwf	showInfo@sorted+1,c
  8523  0012D2  EC95  F007         	call	_showInfo	;wreg free
  8524                           
  8525                           ;main.c: 88: mode = 0;
  8526  0012D6  0E00               	movlw	0
  8527  0012D8  6E7C               	movwf	_mode+1,c
  8528  0012DA  0E00               	movlw	0
  8529  0012DC  6E7B               	movwf	_mode,c
  8530  0012DE  0012               	return		;funcret
  8531  0012E0                     __end_of_mainloop:
  8532                           	opt stack 0
  8533                           pclatu	equ	0xFFB
  8534                           pclath	equ	0xFFA
  8535                           tblptru	equ	0xFF8
  8536                           tblptrh	equ	0xFF7
  8537                           tblptrl	equ	0xFF6
  8538                           tablat	equ	0xFF5
  8539                           prodh	equ	0xFF4
  8540                           prodl	equ	0xFF3
  8541                           intcon	equ	0xFF2
  8542                           intcon2	equ	0xFF1
  8543                           intcon3	equ	0xFF0
  8544                           postinc0	equ	0xFEE
  8545                           fsr0h	equ	0xFEA
  8546                           fsr0l	equ	0xFE9
  8547                           wreg	equ	0xFE8
  8548                           postdec1	equ	0xFE5
  8549                           plusw1	equ	0xFE3
  8550                           fsr1h	equ	0xFE2
  8551                           fsr1l	equ	0xFE1
  8552                           indf2	equ	0xFDF
  8553                           postinc2	equ	0xFDE
  8554                           postdec2	equ	0xFDD
  8555                           plusw2	equ	0xFDB
  8556                           fsr2h	equ	0xFDA
  8557                           fsr2l	equ	0xFD9
  8558                           status	equ	0xFD8
  8559                           
  8560 ;; *************** function _stopMoving *****************
  8561 ;; Defined at:
  8562 ;;		line 111 in file "motors.c"
  8563 ;; Parameters:    Size  Location     Type
  8564 ;;  em              1    wreg     unsigned char 
  8565 ;; Auto vars:     Size  Location     Type
  8566 ;;  em              1   36[COMRAM] unsigned char 
  8567 ;; Return value:  Size  Location     Type
  8568 ;;                  1    wreg      void 
  8569 ;; Registers used:
  8570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8571 ;; Tracked objects:
  8572 ;;		On entry : 0/0
  8573 ;;		On exit  : 0/0
  8574 ;;		Unchanged: 0/0
  8575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8577 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8579 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8580 ;;Total ram usage:        3 bytes
  8581 ;; Hardware stack levels used:    1
  8582 ;; Hardware stack levels required when called:    3
  8583 ;; This function calls:
  8584 ;;		i2_lcdInst
  8585 ;;		i2_printf
  8586 ;; This function is called by:
  8587 ;;		_mainloop
  8588 ;;		_simulate
  8589 ;;		_intrpt
  8590 ;; This function uses a non-reentrant model
  8591 ;;
  8592                           
  8593                           	psect	text42
  8594  0023E2                     __ptext42:
  8595                           	opt stack 0
  8596  0023E2                     _stopMoving:
  8597                           	opt stack 22
  8598                           
  8599                           ;incstack = 0
  8600                           ;stopMoving@em stored from wreg
  8601  0023E2  6E25               	movwf	stopMoving@em,c
  8602                           
  8603                           ;motors.c: 112: (INTCONbits.GIE = 0);
  8604  0023E4  9EF2               	bcf	intcon,7,c	;volatile
  8605                           
  8606                           ;motors.c: 113: LATC = 0;
  8607  0023E6  0E00               	movlw	0
  8608  0023E8  6E8B               	movwf	3979,c	;volatile
  8609                           
  8610                           ;motors.c: 114: lcdInst(0b10000000);
  8611  0023EA  0E80               	movlw	128
  8612  0023EC  EC53  F013         	call	i2_lcdInst
  8613                           
  8614                           ;motors.c: 115: printf(em ? "Emergency          " : "Stopped          ");
  8615  0023F0  5025               	movf	stopMoving@em,w,c
  8616  0023F2  A4D8               	btfss	status,2,c
  8617  0023F4  D004               	goto	i2l3863
  8618  0023F6  0E79               	movlw	low STR_37
  8619  0023F8  6E23               	movwf	_stopMoving$577,c
  8620  0023FA  0EFF               	movlw	high STR_37
  8621  0023FC  D003               	goto	L4
  8622  0023FE                     i2l3863:
  8623  0023FE  0E40               	movlw	low STR_36
  8624  002400  6E23               	movwf	_stopMoving$577,c
  8625  002402  0EFF               	movlw	high STR_36
  8626  002404                     L4:
  8627  002404  6E24               	movwf	_stopMoving$577+1,c
  8628  002406  C023  F00D         	movff	_stopMoving$577,i2printf@f
  8629  00240A  C024  F00E         	movff	_stopMoving$577+1,i2printf@f+1
  8630  00240E  EC7E  F004         	call	i2_printf	;wreg free
  8631                           
  8632                           ;motors.c: 116: if (em) while(1);
  8633  002412  5025               	movf	stopMoving@em,w,c
  8634  002414  B4D8               	btfsc	status,2,c
  8635  002416  0012               	return	
  8636  002418                     i2l314:
  8637  002418  D7FF               	goto	i2l314
  8638  00241A                     __end_of_stopMoving:
  8639                           	opt stack 0
  8640                           pclatu	equ	0xFFB
  8641                           pclath	equ	0xFFA
  8642                           tblptru	equ	0xFF8
  8643                           tblptrh	equ	0xFF7
  8644                           tblptrl	equ	0xFF6
  8645                           tablat	equ	0xFF5
  8646                           prodh	equ	0xFF4
  8647                           prodl	equ	0xFF3
  8648                           intcon	equ	0xFF2
  8649                           intcon2	equ	0xFF1
  8650                           intcon3	equ	0xFF0
  8651                           postinc0	equ	0xFEE
  8652                           fsr0h	equ	0xFEA
  8653                           fsr0l	equ	0xFE9
  8654                           wreg	equ	0xFE8
  8655                           postdec1	equ	0xFE5
  8656                           plusw1	equ	0xFE3
  8657                           fsr1h	equ	0xFE2
  8658                           fsr1l	equ	0xFE1
  8659                           indf2	equ	0xFDF
  8660                           postinc2	equ	0xFDE
  8661                           postdec2	equ	0xFDD
  8662                           plusw2	equ	0xFDB
  8663                           fsr2h	equ	0xFDA
  8664                           fsr2l	equ	0xFD9
  8665                           status	equ	0xFD8
  8666                           
  8667 ;; *************** function _openGate *****************
  8668 ;; Defined at:
  8669 ;;		line 119 in file "motors.c"
  8670 ;; Parameters:    Size  Location     Type
  8671 ;;		None
  8672 ;; Auto vars:     Size  Location     Type
  8673 ;;		None
  8674 ;; Return value:  Size  Location     Type
  8675 ;;                  1    wreg      void 
  8676 ;; Registers used:
  8677 ;;		wreg
  8678 ;; Tracked objects:
  8679 ;;		On entry : 0/0
  8680 ;;		On exit  : 0/0
  8681 ;;		Unchanged: 0/0
  8682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8685 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8686 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8687 ;;Total ram usage:        2 bytes
  8688 ;; Hardware stack levels used:    1
  8689 ;; This function calls:
  8690 ;;		Nothing
  8691 ;; This function is called by:
  8692 ;;		_mainloop
  8693 ;;		_simulate
  8694 ;; This function uses a non-reentrant model
  8695 ;;
  8696                           
  8697                           	psect	text43
  8698  00258E                     __ptext43:
  8699                           	opt stack 0
  8700  00258E                     _openGate:
  8701                           	opt stack 24
  8702                           
  8703                           ;motors.c: 120: LATC7 = 0;
  8704                           
  8705                           ;incstack = 0
  8706  00258E  9E8B               	bcf	3979,7,c	;volatile
  8707                           
  8708                           ;motors.c: 121: LATC5 = 1;
  8709  002590  8A8B               	bsf	3979,5,c	;volatile
  8710                           
  8711                           ;motors.c: 122: _delay((unsigned long)((180)*(8000000/4000.0)));
  8712  002592  0E02               	movlw	2
  8713  002594  6E02               	movwf	(??_openGate+1)& (0+255),c
  8714  002596  0ED4               	movlw	212
  8715  002598  6E01               	movwf	??_openGate& (0+255),c
  8716  00259A  0E85               	movlw	133
  8717  00259C                     i2u379_47:
  8718  00259C  2EE8               	decfsz	wreg,f,c
  8719  00259E  D7FE               	bra	i2u379_47
  8720  0025A0  2E01               	decfsz	??_openGate& (0+255),f,c
  8721  0025A2  D7FC               	bra	i2u379_47
  8722  0025A4  2E02               	decfsz	(??_openGate+1)& (0+255),f,c
  8723  0025A6  D7FA               	bra	i2u379_47
  8724  0025A8  F000               	nop	
  8725                           
  8726                           ;motors.c: 123: LATC5 = 0;
  8727  0025AA  9A8B               	bcf	3979,5,c	;volatile
  8728  0025AC  0012               	return		;funcret
  8729  0025AE                     __end_of_openGate:
  8730                           	opt stack 0
  8731                           pclatu	equ	0xFFB
  8732                           pclath	equ	0xFFA
  8733                           tblptru	equ	0xFF8
  8734                           tblptrh	equ	0xFF7
  8735                           tblptrl	equ	0xFF6
  8736                           tablat	equ	0xFF5
  8737                           prodh	equ	0xFF4
  8738                           prodl	equ	0xFF3
  8739                           intcon	equ	0xFF2
  8740                           intcon2	equ	0xFF1
  8741                           intcon3	equ	0xFF0
  8742                           postinc0	equ	0xFEE
  8743                           fsr0h	equ	0xFEA
  8744                           fsr0l	equ	0xFE9
  8745                           wreg	equ	0xFE8
  8746                           postdec1	equ	0xFE5
  8747                           plusw1	equ	0xFE3
  8748                           fsr1h	equ	0xFE2
  8749                           fsr1l	equ	0xFE1
  8750                           indf2	equ	0xFDF
  8751                           postinc2	equ	0xFDE
  8752                           postdec2	equ	0xFDD
  8753                           plusw2	equ	0xFDB
  8754                           fsr2h	equ	0xFDA
  8755                           fsr2l	equ	0xFD9
  8756                           status	equ	0xFD8
  8757                           
  8758 ;; *************** function _closeGate *****************
  8759 ;; Defined at:
  8760 ;;		line 126 in file "motors.c"
  8761 ;; Parameters:    Size  Location     Type
  8762 ;;		None
  8763 ;; Auto vars:     Size  Location     Type
  8764 ;;		None
  8765 ;; Return value:  Size  Location     Type
  8766 ;;                  1    wreg      void 
  8767 ;; Registers used:
  8768 ;;		wreg
  8769 ;; Tracked objects:
  8770 ;;		On entry : 0/0
  8771 ;;		On exit  : 0/0
  8772 ;;		Unchanged: 0/0
  8773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8776 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8777 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8778 ;;Total ram usage:        2 bytes
  8779 ;; Hardware stack levels used:    1
  8780 ;; This function calls:
  8781 ;;		Nothing
  8782 ;; This function is called by:
  8783 ;;		_mainloop
  8784 ;;		_simulate
  8785 ;; This function uses a non-reentrant model
  8786 ;;
  8787                           
  8788                           	psect	text44
  8789  0025AE                     __ptext44:
  8790                           	opt stack 0
  8791  0025AE                     _closeGate:
  8792                           	opt stack 24
  8793                           
  8794                           ;motors.c: 127: LATC5 = 0;
  8795                           
  8796                           ;incstack = 0
  8797  0025AE  9A8B               	bcf	3979,5,c	;volatile
  8798                           
  8799                           ;motors.c: 128: LATC7 = 1;
  8800  0025B0  8E8B               	bsf	3979,7,c	;volatile
  8801                           
  8802                           ;motors.c: 129: _delay((unsigned long)((180)*(8000000/4000.0)));
  8803  0025B2  0E02               	movlw	2
  8804  0025B4  6E02               	movwf	(??_closeGate+1)& (0+255),c
  8805  0025B6  0ED4               	movlw	212
  8806  0025B8  6E01               	movwf	??_closeGate& (0+255),c
  8807  0025BA  0E85               	movlw	133
  8808  0025BC                     i2u380_47:
  8809  0025BC  2EE8               	decfsz	wreg,f,c
  8810  0025BE  D7FE               	bra	i2u380_47
  8811  0025C0  2E01               	decfsz	??_closeGate& (0+255),f,c
  8812  0025C2  D7FC               	bra	i2u380_47
  8813  0025C4  2E02               	decfsz	(??_closeGate+1)& (0+255),f,c
  8814  0025C6  D7FA               	bra	i2u380_47
  8815  0025C8  F000               	nop	
  8816                           
  8817                           ;motors.c: 130: LATC7 = 0;
  8818  0025CA  9E8B               	bcf	3979,7,c	;volatile
  8819  0025CC  0012               	return		;funcret
  8820  0025CE                     __end_of_closeGate:
  8821                           	opt stack 0
  8822                           pclatu	equ	0xFFB
  8823                           pclath	equ	0xFFA
  8824                           tblptru	equ	0xFF8
  8825                           tblptrh	equ	0xFF7
  8826                           tblptrl	equ	0xFF6
  8827                           tablat	equ	0xFF5
  8828                           prodh	equ	0xFF4
  8829                           prodl	equ	0xFF3
  8830                           intcon	equ	0xFF2
  8831                           intcon2	equ	0xFF1
  8832                           intcon3	equ	0xFF0
  8833                           postinc0	equ	0xFEE
  8834                           fsr0h	equ	0xFEA
  8835                           fsr0l	equ	0xFE9
  8836                           wreg	equ	0xFE8
  8837                           postdec1	equ	0xFE5
  8838                           plusw1	equ	0xFE3
  8839                           fsr1h	equ	0xFE2
  8840                           fsr1l	equ	0xFE1
  8841                           indf2	equ	0xFDF
  8842                           postinc2	equ	0xFDE
  8843                           postdec2	equ	0xFDD
  8844                           plusw2	equ	0xFDB
  8845                           fsr2h	equ	0xFDA
  8846                           fsr2l	equ	0xFD9
  8847                           status	equ	0xFD8
  8848                           
  8849 ;; *************** function _WriteRun *****************
  8850 ;; Defined at:
  8851 ;;		line 75 in file "eeprom.c"
  8852 ;; Parameters:    Size  Location     Type
  8853 ;;  sorted          2    6[COMRAM] PTR unsigned char 
  8854 ;;		 -> simulate@sorted(4), mainloop@sorted(4), 
  8855 ;;  time            2    8[COMRAM] unsigned int 
  8856 ;; Auto vars:     Size  Location     Type
  8857 ;;  add             2   12[COMRAM] unsigned int 
  8858 ;; Return value:  Size  Location     Type
  8859 ;;                  1    wreg      void 
  8860 ;; Registers used:
  8861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8862 ;; Tracked objects:
  8863 ;;		On entry : 0/0
  8864 ;;		On exit  : 0/0
  8865 ;;		Unchanged: 0/0
  8866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8867 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8868 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8869 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8870 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8871 ;;Total ram usage:        8 bytes
  8872 ;; Hardware stack levels used:    1
  8873 ;; Hardware stack levels required when called:    1
  8874 ;; This function calls:
  8875 ;;		_WriteEE
  8876 ;;		i2___wmul
  8877 ;; This function is called by:
  8878 ;;		_mainloop
  8879 ;;		_simulate
  8880 ;; This function uses a non-reentrant model
  8881 ;;
  8882                           
  8883                           	psect	text45
  8884  0012E0                     __ptext45:
  8885                           	opt stack 0
  8886  0012E0                     _WriteRun:
  8887                           	opt stack 23
  8888                           
  8889                           ;eeprom.c: 76: unsigned int add = ++Latest;
  8890                           
  8891                           ;incstack = 0
  8892  0012E0  0100               	movlb	0	; () banked
  8893  0012E2  2BA8               	incf	_Latest& (0+255),f,b
  8894  0012E4  C0A8  F00D         	movff	_Latest,WriteRun@add
  8895  0012E8  6A0E               	clrf	WriteRun@add+1,c
  8896                           
  8897                           ; BSR set to: 0
  8898                           ;eeprom.c: 77: if (add > 3) {
  8899  0012EA  500E               	movf	WriteRun@add+1,w,c
  8900  0012EC  E104               	bnz	i2u311_40
  8901  0012EE  0E04               	movlw	4
  8902  0012F0  5C0D               	subwf	WriteRun@add,w,c
  8903  0012F2  A0D8               	btfss	status,0,c
  8904  0012F4  D006               	goto	i2l3883
  8905  0012F6                     i2u311_40:
  8906                           
  8907                           ; BSR set to: 0
  8908                           ;eeprom.c: 78: add -= 4;
  8909  0012F6  0E04               	movlw	4
  8910  0012F8  5E0D               	subwf	WriteRun@add,f,c
  8911  0012FA  0E00               	movlw	0
  8912  0012FC  5A0E               	subwfb	WriteRun@add+1,f,c
  8913                           
  8914                           ; BSR set to: 0
  8915                           ;eeprom.c: 79: Latest = add;
  8916  0012FE  C00D  F0A8         	movff	WriteRun@add,_Latest
  8917  001302                     i2l3883:
  8918                           
  8919                           ; BSR set to: 0
  8920                           ;eeprom.c: 80: }
  8921                           ;eeprom.c: 81: add *= 5;
  8922  001302  C00D  F001         	movff	WriteRun@add,i2___wmul@multiplier
  8923  001306  C00E  F002         	movff	WriteRun@add+1,i2___wmul@multiplier+1
  8924  00130A  0E00               	movlw	0
  8925  00130C  6E04               	movwf	i2___wmul@multiplicand+1,c
  8926  00130E  0E05               	movlw	5
  8927  001310  6E03               	movwf	i2___wmul@multiplicand,c
  8928  001312  ECA3  F012         	call	i2___wmul	;wreg free
  8929  001316  C001  F00D         	movff	?i2___wmul,WriteRun@add
  8930  00131A  C002  F00E         	movff	?i2___wmul+1,WriteRun@add+1
  8931                           
  8932                           ;eeprom.c: 82: WriteEE(add++ *8, time);
  8933  00131E  C00D  F00B         	movff	WriteRun@add,??_WriteRun
  8934  001322  C00E  F00C         	movff	WriteRun@add+1,??_WriteRun+1
  8935  001326  90D8               	bcf	status,0,c
  8936  001328  360B               	rlcf	??_WriteRun,f,c
  8937  00132A  360C               	rlcf	??_WriteRun+1,f,c
  8938  00132C  90D8               	bcf	status,0,c
  8939  00132E  360B               	rlcf	??_WriteRun,f,c
  8940  001330  360C               	rlcf	??_WriteRun+1,f,c
  8941  001332  90D8               	bcf	status,0,c
  8942  001334  360B               	rlcf	??_WriteRun,f,c
  8943  001336  360C               	rlcf	??_WriteRun+1,f,c
  8944  001338  C00B  F001         	movff	??_WriteRun,WriteEE@address
  8945  00133C  C00C  F002         	movff	??_WriteRun+1,WriteEE@address+1
  8946  001340  C009  F003         	movff	WriteRun@time,WriteEE@data
  8947  001344  EC90  F012         	call	_WriteEE	;wreg free
  8948  001348  4A0D               	infsnz	WriteRun@add,f,c
  8949  00134A  2A0E               	incf	WriteRun@add+1,f,c
  8950                           
  8951                           ;eeprom.c: 83: WriteEE(add++ *8, sorted[0]);
  8952  00134C  C00D  F00B         	movff	WriteRun@add,??_WriteRun
  8953  001350  C00E  F00C         	movff	WriteRun@add+1,??_WriteRun+1
  8954  001354  90D8               	bcf	status,0,c
  8955  001356  360B               	rlcf	??_WriteRun,f,c
  8956  001358  360C               	rlcf	??_WriteRun+1,f,c
  8957  00135A  90D8               	bcf	status,0,c
  8958  00135C  360B               	rlcf	??_WriteRun,f,c
  8959  00135E  360C               	rlcf	??_WriteRun+1,f,c
  8960  001360  90D8               	bcf	status,0,c
  8961  001362  360B               	rlcf	??_WriteRun,f,c
  8962  001364  360C               	rlcf	??_WriteRun+1,f,c
  8963  001366  C00B  F001         	movff	??_WriteRun,WriteEE@address
  8964  00136A  C00C  F002         	movff	??_WriteRun+1,WriteEE@address+1
  8965  00136E  C007  FFD9         	movff	WriteRun@sorted,fsr2l
  8966  001372  C008  FFDA         	movff	WriteRun@sorted+1,fsr2h
  8967  001376  50DF               	movf	indf2,w,c
  8968  001378  6E03               	movwf	WriteEE@data,c
  8969  00137A  EC90  F012         	call	_WriteEE	;wreg free
  8970  00137E  4A0D               	infsnz	WriteRun@add,f,c
  8971  001380  2A0E               	incf	WriteRun@add+1,f,c
  8972                           
  8973                           ;eeprom.c: 84: WriteEE(add++ *8, sorted[1]);
  8974  001382  C00D  F00B         	movff	WriteRun@add,??_WriteRun
  8975  001386  C00E  F00C         	movff	WriteRun@add+1,??_WriteRun+1
  8976  00138A  90D8               	bcf	status,0,c
  8977  00138C  360B               	rlcf	??_WriteRun,f,c
  8978  00138E  360C               	rlcf	??_WriteRun+1,f,c
  8979  001390  90D8               	bcf	status,0,c
  8980  001392  360B               	rlcf	??_WriteRun,f,c
  8981  001394  360C               	rlcf	??_WriteRun+1,f,c
  8982  001396  90D8               	bcf	status,0,c
  8983  001398  360B               	rlcf	??_WriteRun,f,c
  8984  00139A  360C               	rlcf	??_WriteRun+1,f,c
  8985  00139C  C00B  F001         	movff	??_WriteRun,WriteEE@address
  8986  0013A0  C00C  F002         	movff	??_WriteRun+1,WriteEE@address+1
  8987  0013A4  EE20 F001          	lfsr	2,1
  8988  0013A8  5007               	movf	WriteRun@sorted,w,c
  8989  0013AA  26D9               	addwf	fsr2l,f,c
  8990  0013AC  5008               	movf	WriteRun@sorted+1,w,c
  8991  0013AE  22DA               	addwfc	fsr2h,f,c
  8992  0013B0  50DF               	movf	indf2,w,c
  8993  0013B2  6E03               	movwf	WriteEE@data,c
  8994  0013B4  EC90  F012         	call	_WriteEE	;wreg free
  8995  0013B8  4A0D               	infsnz	WriteRun@add,f,c
  8996  0013BA  2A0E               	incf	WriteRun@add+1,f,c
  8997                           
  8998                           ;eeprom.c: 85: WriteEE(add++ *8, sorted[2]);
  8999  0013BC  C00D  F00B         	movff	WriteRun@add,??_WriteRun
  9000  0013C0  C00E  F00C         	movff	WriteRun@add+1,??_WriteRun+1
  9001  0013C4  90D8               	bcf	status,0,c
  9002  0013C6  360B               	rlcf	??_WriteRun,f,c
  9003  0013C8  360C               	rlcf	??_WriteRun+1,f,c
  9004  0013CA  90D8               	bcf	status,0,c
  9005  0013CC  360B               	rlcf	??_WriteRun,f,c
  9006  0013CE  360C               	rlcf	??_WriteRun+1,f,c
  9007  0013D0  90D8               	bcf	status,0,c
  9008  0013D2  360B               	rlcf	??_WriteRun,f,c
  9009  0013D4  360C               	rlcf	??_WriteRun+1,f,c
  9010  0013D6  C00B  F001         	movff	??_WriteRun,WriteEE@address
  9011  0013DA  C00C  F002         	movff	??_WriteRun+1,WriteEE@address+1
  9012  0013DE  EE20 F002          	lfsr	2,2
  9013  0013E2  5007               	movf	WriteRun@sorted,w,c
  9014  0013E4  26D9               	addwf	fsr2l,f,c
  9015  0013E6  5008               	movf	WriteRun@sorted+1,w,c
  9016  0013E8  22DA               	addwfc	fsr2h,f,c
  9017  0013EA  50DF               	movf	indf2,w,c
  9018  0013EC  6E03               	movwf	WriteEE@data,c
  9019  0013EE  EC90  F012         	call	_WriteEE	;wreg free
  9020  0013F2  4A0D               	infsnz	WriteRun@add,f,c
  9021  0013F4  2A0E               	incf	WriteRun@add+1,f,c
  9022                           
  9023                           ;eeprom.c: 86: WriteEE(add++ *8, sorted[3]);
  9024  0013F6  C00D  F00B         	movff	WriteRun@add,??_WriteRun
  9025  0013FA  C00E  F00C         	movff	WriteRun@add+1,??_WriteRun+1
  9026  0013FE  90D8               	bcf	status,0,c
  9027  001400  360B               	rlcf	??_WriteRun,f,c
  9028  001402  360C               	rlcf	??_WriteRun+1,f,c
  9029  001404  90D8               	bcf	status,0,c
  9030  001406  360B               	rlcf	??_WriteRun,f,c
  9031  001408  360C               	rlcf	??_WriteRun+1,f,c
  9032  00140A  90D8               	bcf	status,0,c
  9033  00140C  360B               	rlcf	??_WriteRun,f,c
  9034  00140E  360C               	rlcf	??_WriteRun+1,f,c
  9035  001410  C00B  F001         	movff	??_WriteRun,WriteEE@address
  9036  001414  C00C  F002         	movff	??_WriteRun+1,WriteEE@address+1
  9037  001418  EE20 F003          	lfsr	2,3
  9038  00141C  5007               	movf	WriteRun@sorted,w,c
  9039  00141E  26D9               	addwf	fsr2l,f,c
  9040  001420  5008               	movf	WriteRun@sorted+1,w,c
  9041  001422  22DA               	addwfc	fsr2h,f,c
  9042  001424  50DF               	movf	indf2,w,c
  9043  001426  6E03               	movwf	WriteEE@data,c
  9044  001428  EC90  F012         	call	_WriteEE	;wreg free
  9045  00142C  4A0D               	infsnz	WriteRun@add,f,c
  9046  00142E  2A0E               	incf	WriteRun@add+1,f,c
  9047                           
  9048                           ;eeprom.c: 87: WriteEE(160, Latest);
  9049  001430  0E00               	movlw	0
  9050  001432  6E02               	movwf	WriteEE@address+1,c
  9051  001434  0EA0               	movlw	160
  9052  001436  6E01               	movwf	WriteEE@address,c
  9053  001438  C0A8  F003         	movff	_Latest,WriteEE@data
  9054  00143C  EC90  F012         	call	_WriteEE	;wreg free
  9055  001440  0012               	return		;funcret
  9056  001442                     __end_of_WriteRun:
  9057                           	opt stack 0
  9058                           pclatu	equ	0xFFB
  9059                           pclath	equ	0xFFA
  9060                           tblptru	equ	0xFF8
  9061                           tblptrh	equ	0xFF7
  9062                           tblptrl	equ	0xFF6
  9063                           tablat	equ	0xFF5
  9064                           prodh	equ	0xFF4
  9065                           prodl	equ	0xFF3
  9066                           intcon	equ	0xFF2
  9067                           intcon2	equ	0xFF1
  9068                           intcon3	equ	0xFF0
  9069                           postinc0	equ	0xFEE
  9070                           fsr0h	equ	0xFEA
  9071                           fsr0l	equ	0xFE9
  9072                           wreg	equ	0xFE8
  9073                           postdec1	equ	0xFE5
  9074                           plusw1	equ	0xFE3
  9075                           fsr1h	equ	0xFE2
  9076                           fsr1l	equ	0xFE1
  9077                           indf2	equ	0xFDF
  9078                           postinc2	equ	0xFDE
  9079                           postdec2	equ	0xFDD
  9080                           plusw2	equ	0xFDB
  9081                           fsr2h	equ	0xFDA
  9082                           fsr2l	equ	0xFD9
  9083                           status	equ	0xFD8
  9084                           
  9085 ;; *************** function _WriteEE *****************
  9086 ;; Defined at:
  9087 ;;		line 34 in file "eeprom.c"
  9088 ;; Parameters:    Size  Location     Type
  9089 ;;  address         2    0[COMRAM] unsigned int 
  9090 ;;  data            1    2[COMRAM] unsigned char 
  9091 ;; Auto vars:     Size  Location     Type
  9092 ;;		None
  9093 ;; Return value:  Size  Location     Type
  9094 ;;                  1    wreg      void 
  9095 ;; Registers used:
  9096 ;;		wreg, status,2
  9097 ;; Tracked objects:
  9098 ;;		On entry : 0/0
  9099 ;;		On exit  : 0/0
  9100 ;;		Unchanged: 0/0
  9101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9102 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9105 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9106 ;;Total ram usage:        3 bytes
  9107 ;; Hardware stack levels used:    1
  9108 ;; This function calls:
  9109 ;;		Nothing
  9110 ;; This function is called by:
  9111 ;;		_WriteRun
  9112 ;; This function uses a non-reentrant model
  9113 ;;
  9114                           
  9115                           	psect	text46
  9116  002520                     __ptext46:
  9117                           	opt stack 0
  9118  002520                     _WriteEE:
  9119                           	opt stack 23
  9120                           
  9121                           ;eeprom.c: 36: EEADRH = (unsigned char) (address >> 8);
  9122                           
  9123                           ;incstack = 0
  9124  002520  5002               	movf	WriteEE@address+1,w,c
  9125  002522  6EAA               	movwf	4010,c	;volatile
  9126                           
  9127                           ;eeprom.c: 37: EEADR = (unsigned char) address;
  9128  002524  C001  FFA9         	movff	WriteEE@address,4009	;volatile
  9129                           
  9130                           ;eeprom.c: 39: EEDATA = data;
  9131  002528  C003  FFA8         	movff	WriteEE@data,4008	;volatile
  9132                           
  9133                           ;eeprom.c: 40: EECON1bits.EEPGD = 0;
  9134  00252C  9EA6               	bcf	4006,7,c	;volatile
  9135                           
  9136                           ;eeprom.c: 41: EECON1bits.CFGS = 0;
  9137  00252E  9CA6               	bcf	4006,6,c	;volatile
  9138                           
  9139                           ;eeprom.c: 42: EECON1bits.WREN = 1;
  9140  002530  84A6               	bsf	4006,2,c	;volatile
  9141                           
  9142                           ;eeprom.c: 46: EECON2 = 0x55;
  9143  002532  0E55               	movlw	85
  9144  002534  6EA7               	movwf	4007,c	;volatile
  9145                           
  9146                           ;eeprom.c: 47: EECON2 = 0xAA;
  9147  002536  0EAA               	movlw	170
  9148  002538  6EA7               	movwf	4007,c	;volatile
  9149                           
  9150                           ;eeprom.c: 48: EECON1bits.WR = 1;
  9151  00253A  82A6               	bsf	4006,1,c	;volatile
  9152  00253C                     i2l461:
  9153  00253C  A8A1               	btfss	4001,4,c	;volatile
  9154  00253E  D7FE               	goto	i2l461
  9155                           
  9156                           ;eeprom.c: 53: PIR2bits.EEIF = 0;
  9157  002540  98A1               	bcf	4001,4,c	;volatile
  9158                           
  9159                           ;eeprom.c: 54: EECON1bits.WREN = 0;
  9160  002542  94A6               	bcf	4006,2,c	;volatile
  9161  002544  0012               	return		;funcret
  9162  002546                     __end_of_WriteEE:
  9163                           	opt stack 0
  9164                           pclatu	equ	0xFFB
  9165                           pclath	equ	0xFFA
  9166                           tblptru	equ	0xFF8
  9167                           tblptrh	equ	0xFF7
  9168                           tblptrl	equ	0xFF6
  9169                           tablat	equ	0xFF5
  9170                           prodh	equ	0xFF4
  9171                           prodl	equ	0xFF3
  9172                           intcon	equ	0xFF2
  9173                           intcon2	equ	0xFF1
  9174                           intcon3	equ	0xFF0
  9175                           postinc0	equ	0xFEE
  9176                           fsr0h	equ	0xFEA
  9177                           fsr0l	equ	0xFE9
  9178                           wreg	equ	0xFE8
  9179                           postdec1	equ	0xFE5
  9180                           plusw1	equ	0xFE3
  9181                           fsr1h	equ	0xFE2
  9182                           fsr1l	equ	0xFE1
  9183                           indf2	equ	0xFDF
  9184                           postinc2	equ	0xFDE
  9185                           postdec2	equ	0xFDD
  9186                           plusw2	equ	0xFDB
  9187                           fsr2h	equ	0xFDA
  9188                           fsr2l	equ	0xFD9
  9189                           status	equ	0xFD8
  9190                           
  9191 ;; *************** function _CW90 *****************
  9192 ;; Defined at:
  9193 ;;		line 86 in file "motors.c"
  9194 ;; Parameters:    Size  Location     Type
  9195 ;;  port            2   21[COMRAM] PTR int 
  9196 ;;		 -> simulate@portCW(6), mainloop@portCW(6), 
  9197 ;; Auto vars:     Size  Location     Type
  9198 ;;		None
  9199 ;; Return value:  Size  Location     Type
  9200 ;;                  1    wreg      void 
  9201 ;; Registers used:
  9202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9203 ;; Tracked objects:
  9204 ;;		On entry : 0/0
  9205 ;;		On exit  : 0/0
  9206 ;;		Unchanged: 0/0
  9207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9208 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9210 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9211 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9212 ;;Total ram usage:        8 bytes
  9213 ;; Hardware stack levels used:    1
  9214 ;; Hardware stack levels required when called:    2
  9215 ;; This function calls:
  9216 ;;		_PWMC
  9217 ;; This function is called by:
  9218 ;;		_mainloop
  9219 ;;		_simulate
  9220 ;; This function uses a non-reentrant model
  9221 ;;
  9222                           
  9223                           	psect	text47
  9224  001C34                     __ptext47:
  9225                           	opt stack 0
  9226  001C34                     _CW90:
  9227                           	opt stack 22
  9228                           
  9229                           ;motors.c: 88: if (port[0] + port[1] + port[2] == 0)return;
  9230                           
  9231                           ;incstack = 0
  9232  001C34  EE20 F004          	lfsr	2,4
  9233  001C38  5016               	movf	CW90@port,w,c
  9234  001C3A  26D9               	addwf	fsr2l,f,c
  9235  001C3C  5017               	movf	CW90@port+1,w,c
  9236  001C3E  22DA               	addwfc	fsr2h,f,c
  9237  001C40  CFDE F018          	movff	postinc2,??_CW90
  9238  001C44  CFDD F019          	movff	postdec2,??_CW90+1
  9239  001C48  EE20 F002          	lfsr	2,2
  9240  001C4C  5016               	movf	CW90@port,w,c
  9241  001C4E  26D9               	addwf	fsr2l,f,c
  9242  001C50  5017               	movf	CW90@port+1,w,c
  9243  001C52  22DA               	addwfc	fsr2h,f,c
  9244  001C54  CFDE F01A          	movff	postinc2,??_CW90+2
  9245  001C58  CFDD F01B          	movff	postdec2,??_CW90+3
  9246  001C5C  C016  FFD9         	movff	CW90@port,fsr2l
  9247  001C60  C017  FFDA         	movff	CW90@port+1,fsr2h
  9248  001C64  CFDE F01C          	movff	postinc2,??_CW90+4
  9249  001C68  CFDD F01D          	movff	postdec2,??_CW90+5
  9250  001C6C  501A               	movf	??_CW90+2,w,c
  9251  001C6E  261C               	addwf	??_CW90+4,f,c
  9252  001C70  501B               	movf	??_CW90+3,w,c
  9253  001C72  221D               	addwfc	??_CW90+5,f,c
  9254  001C74  5018               	movf	??_CW90,w,c
  9255  001C76  261C               	addwf	??_CW90+4,f,c
  9256  001C78  5019               	movf	??_CW90+1,w,c
  9257  001C7A  221D               	addwfc	??_CW90+5,f,c
  9258  001C7C  501C               	movf	??_CW90+4,w,c
  9259  001C7E  101D               	iorwf	??_CW90+5,w,c
  9260  001C80  B4D8               	btfsc	status,2,c
  9261  001C82  0012               	return	
  9262                           
  9263                           ;motors.c: 89: PWMC(3000, 120, port);
  9264  001C84  0E0B               	movlw	11
  9265  001C86  6E0A               	movwf	PWMC@widthus+1,c
  9266  001C88  0EB8               	movlw	184
  9267  001C8A  6E09               	movwf	PWMC@widthus,c
  9268  001C8C  0E00               	movlw	0
  9269  001C8E  6E0C               	movwf	PWMC@cycles+1,c
  9270  001C90  0E78               	movlw	120
  9271  001C92  6E0B               	movwf	PWMC@cycles,c
  9272  001C94  C016  F00D         	movff	CW90@port,PWMC@port
  9273  001C98  C017  F00E         	movff	CW90@port+1,PWMC@port+1
  9274  001C9C  EC34  F00B         	call	_PWMC	;wreg free
  9275                           
  9276                           ;motors.c: 90: PWMC(400, 2, port);
  9277  001CA0  0E01               	movlw	1
  9278  001CA2  6E0A               	movwf	PWMC@widthus+1,c
  9279  001CA4  0E90               	movlw	144
  9280  001CA6  6E09               	movwf	PWMC@widthus,c
  9281  001CA8  0E00               	movlw	0
  9282  001CAA  6E0C               	movwf	PWMC@cycles+1,c
  9283  001CAC  0E02               	movlw	2
  9284  001CAE  6E0B               	movwf	PWMC@cycles,c
  9285  001CB0  C016  F00D         	movff	CW90@port,PWMC@port
  9286  001CB4  C017  F00E         	movff	CW90@port+1,PWMC@port+1
  9287  001CB8  EC34  F00B         	call	_PWMC	;wreg free
  9288  001CBC  0012               	return		;funcret
  9289  001CBE                     __end_of_CW90:
  9290                           	opt stack 0
  9291                           pclatu	equ	0xFFB
  9292                           pclath	equ	0xFFA
  9293                           tblptru	equ	0xFF8
  9294                           tblptrh	equ	0xFF7
  9295                           tblptrl	equ	0xFF6
  9296                           tablat	equ	0xFF5
  9297                           prodh	equ	0xFF4
  9298                           prodl	equ	0xFF3
  9299                           intcon	equ	0xFF2
  9300                           intcon2	equ	0xFF1
  9301                           intcon3	equ	0xFF0
  9302                           postinc0	equ	0xFEE
  9303                           fsr0h	equ	0xFEA
  9304                           fsr0l	equ	0xFE9
  9305                           wreg	equ	0xFE8
  9306                           postdec1	equ	0xFE5
  9307                           plusw1	equ	0xFE3
  9308                           fsr1h	equ	0xFE2
  9309                           fsr1l	equ	0xFE1
  9310                           indf2	equ	0xFDF
  9311                           postinc2	equ	0xFDE
  9312                           postdec2	equ	0xFDD
  9313                           plusw2	equ	0xFDB
  9314                           fsr2h	equ	0xFDA
  9315                           fsr2l	equ	0xFD9
  9316                           status	equ	0xFD8
  9317                           
  9318 ;; *************** function _CCW90 *****************
  9319 ;; Defined at:
  9320 ;;		line 93 in file "motors.c"
  9321 ;; Parameters:    Size  Location     Type
  9322 ;;  port            2   21[COMRAM] PTR int 
  9323 ;;		 -> simulate@portCCW(6), mainloop@portCW(6), 
  9324 ;; Auto vars:     Size  Location     Type
  9325 ;;		None
  9326 ;; Return value:  Size  Location     Type
  9327 ;;                  1    wreg      void 
  9328 ;; Registers used:
  9329 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9330 ;; Tracked objects:
  9331 ;;		On entry : 0/0
  9332 ;;		On exit  : 0/0
  9333 ;;		Unchanged: 0/0
  9334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9335 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9337 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9338 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9339 ;;Total ram usage:        8 bytes
  9340 ;; Hardware stack levels used:    1
  9341 ;; Hardware stack levels required when called:    2
  9342 ;; This function calls:
  9343 ;;		_PWMC
  9344 ;; This function is called by:
  9345 ;;		_mainloop
  9346 ;;		_simulate
  9347 ;; This function uses a non-reentrant model
  9348 ;;
  9349                           
  9350                           	psect	text48
  9351  001CBE                     __ptext48:
  9352                           	opt stack 0
  9353  001CBE                     _CCW90:
  9354                           	opt stack 22
  9355                           
  9356                           ;motors.c: 95: if (port[0] + port[1] + port[2] == 0)return;
  9357                           
  9358                           ;incstack = 0
  9359  001CBE  EE20 F004          	lfsr	2,4
  9360  001CC2  5016               	movf	CCW90@port,w,c
  9361  001CC4  26D9               	addwf	fsr2l,f,c
  9362  001CC6  5017               	movf	CCW90@port+1,w,c
  9363  001CC8  22DA               	addwfc	fsr2h,f,c
  9364  001CCA  CFDE F018          	movff	postinc2,??_CCW90
  9365  001CCE  CFDD F019          	movff	postdec2,??_CCW90+1
  9366  001CD2  EE20 F002          	lfsr	2,2
  9367  001CD6  5016               	movf	CCW90@port,w,c
  9368  001CD8  26D9               	addwf	fsr2l,f,c
  9369  001CDA  5017               	movf	CCW90@port+1,w,c
  9370  001CDC  22DA               	addwfc	fsr2h,f,c
  9371  001CDE  CFDE F01A          	movff	postinc2,??_CCW90+2
  9372  001CE2  CFDD F01B          	movff	postdec2,??_CCW90+3
  9373  001CE6  C016  FFD9         	movff	CCW90@port,fsr2l
  9374  001CEA  C017  FFDA         	movff	CCW90@port+1,fsr2h
  9375  001CEE  CFDE F01C          	movff	postinc2,??_CCW90+4
  9376  001CF2  CFDD F01D          	movff	postdec2,??_CCW90+5
  9377  001CF6  501A               	movf	??_CCW90+2,w,c
  9378  001CF8  261C               	addwf	??_CCW90+4,f,c
  9379  001CFA  501B               	movf	??_CCW90+3,w,c
  9380  001CFC  221D               	addwfc	??_CCW90+5,f,c
  9381  001CFE  5018               	movf	??_CCW90,w,c
  9382  001D00  261C               	addwf	??_CCW90+4,f,c
  9383  001D02  5019               	movf	??_CCW90+1,w,c
  9384  001D04  221D               	addwfc	??_CCW90+5,f,c
  9385  001D06  501C               	movf	??_CCW90+4,w,c
  9386  001D08  101D               	iorwf	??_CCW90+5,w,c
  9387  001D0A  B4D8               	btfsc	status,2,c
  9388  001D0C  0012               	return	
  9389                           
  9390                           ;motors.c: 96: PWMC(400, 1000, port);
  9391  001D0E  0E01               	movlw	1
  9392  001D10  6E0A               	movwf	PWMC@widthus+1,c
  9393  001D12  0E90               	movlw	144
  9394  001D14  6E09               	movwf	PWMC@widthus,c
  9395  001D16  0E03               	movlw	3
  9396  001D18  6E0C               	movwf	PWMC@cycles+1,c
  9397  001D1A  0EE8               	movlw	232
  9398  001D1C  6E0B               	movwf	PWMC@cycles,c
  9399  001D1E  C016  F00D         	movff	CCW90@port,PWMC@port
  9400  001D22  C017  F00E         	movff	CCW90@port+1,PWMC@port+1
  9401  001D26  EC34  F00B         	call	_PWMC	;wreg free
  9402                           
  9403                           ;motors.c: 97: PWMC(3000, 2, port);
  9404  001D2A  0E0B               	movlw	11
  9405  001D2C  6E0A               	movwf	PWMC@widthus+1,c
  9406  001D2E  0EB8               	movlw	184
  9407  001D30  6E09               	movwf	PWMC@widthus,c
  9408  001D32  0E00               	movlw	0
  9409  001D34  6E0C               	movwf	PWMC@cycles+1,c
  9410  001D36  0E02               	movlw	2
  9411  001D38  6E0B               	movwf	PWMC@cycles,c
  9412  001D3A  C016  F00D         	movff	CCW90@port,PWMC@port
  9413  001D3E  C017  F00E         	movff	CCW90@port+1,PWMC@port+1
  9414  001D42  EC34  F00B         	call	_PWMC	;wreg free
  9415  001D46  0012               	return		;funcret
  9416  001D48                     __end_of_CCW90:
  9417                           	opt stack 0
  9418                           pclatu	equ	0xFFB
  9419                           pclath	equ	0xFFA
  9420                           tblptru	equ	0xFF8
  9421                           tblptrh	equ	0xFF7
  9422                           tblptrl	equ	0xFF6
  9423                           tablat	equ	0xFF5
  9424                           prodh	equ	0xFF4
  9425                           prodl	equ	0xFF3
  9426                           intcon	equ	0xFF2
  9427                           intcon2	equ	0xFF1
  9428                           intcon3	equ	0xFF0
  9429                           postinc0	equ	0xFEE
  9430                           fsr0h	equ	0xFEA
  9431                           fsr0l	equ	0xFE9
  9432                           wreg	equ	0xFE8
  9433                           postdec1	equ	0xFE5
  9434                           plusw1	equ	0xFE3
  9435                           fsr1h	equ	0xFE2
  9436                           fsr1l	equ	0xFE1
  9437                           indf2	equ	0xFDF
  9438                           postinc2	equ	0xFDE
  9439                           postdec2	equ	0xFDD
  9440                           plusw2	equ	0xFDB
  9441                           fsr2h	equ	0xFDA
  9442                           fsr2l	equ	0xFD9
  9443                           status	equ	0xFD8
  9444                           
  9445 ;; *************** function _PWMC *****************
  9446 ;; Defined at:
  9447 ;;		line 5 in file "motors.c"
  9448 ;; Parameters:    Size  Location     Type
  9449 ;;  widthus         2    8[COMRAM] int 
  9450 ;;  cycles          2   10[COMRAM] int 
  9451 ;;  port            2   12[COMRAM] PTR int 
  9452 ;;		 -> intrpt@port(6), simulate@portShake(6), simulate@portCCW(6), simulate@portCW(6), 
  9453 ;;		 -> mainloop@portCW(6), 
  9454 ;; Auto vars:     Size  Location     Type
  9455 ;;  countdown       2   19[COMRAM] int 
  9456 ;; Return value:  Size  Location     Type
  9457 ;;                  1    wreg      void 
  9458 ;; Registers used:
  9459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9460 ;; Tracked objects:
  9461 ;;		On entry : 0/0
  9462 ;;		On exit  : 0/0
  9463 ;;		Unchanged: 0/0
  9464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9465 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9466 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9467 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9468 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9469 ;;Total ram usage:       13 bytes
  9470 ;; Hardware stack levels used:    1
  9471 ;; Hardware stack levels required when called:    1
  9472 ;; This function calls:
  9473 ;;		___awdiv
  9474 ;; This function is called by:
  9475 ;;		_simulate
  9476 ;;		_intrpt
  9477 ;;		_CW90
  9478 ;;		_CCW90
  9479 ;;		_shake
  9480 ;; This function uses a non-reentrant model
  9481 ;;
  9482                           
  9483                           	psect	text49
  9484  001668                     __ptext49:
  9485                           	opt stack 0
  9486  001668                     _PWMC:
  9487                           	opt stack 23
  9488                           
  9489                           ;motors.c: 6: widthus /= 10;
  9490                           
  9491                           ;incstack = 0
  9492  001668  C009  F001         	movff	PWMC@widthus,___awdiv@dividend
  9493  00166C  C00A  F002         	movff	PWMC@widthus+1,___awdiv@dividend+1
  9494  001670  0E00               	movlw	0
  9495  001672  6E04               	movwf	___awdiv@divisor+1,c
  9496  001674  0E0A               	movlw	10
  9497  001676  6E03               	movwf	___awdiv@divisor,c
  9498  001678  ECA4  F00E         	call	___awdiv	;wreg free
  9499  00167C  C001  F009         	movff	?___awdiv,PWMC@widthus
  9500  001680  C002  F00A         	movff	?___awdiv+1,PWMC@widthus+1
  9501                           
  9502                           ;motors.c: 7: widthus -= 1;
  9503  001684  0609               	decf	PWMC@widthus,f,c
  9504  001686  A0D8               	btfss	status,0,c
  9505  001688  060A               	decf	PWMC@widthus+1,f,c
  9506                           
  9507                           ;motors.c: 8: int countdown = widthus;
  9508  00168A  C009  F014         	movff	PWMC@widthus,PWMC@countdown
  9509  00168E  C00A  F015         	movff	PWMC@widthus+1,PWMC@countdown+1
  9510  001692                     i2l3387:
  9511  001692  BE0C               	btfsc	PWMC@cycles+1,7,c
  9512  001694  0012               	return	
  9513  001696  500C               	movf	PWMC@cycles+1,w,c
  9514  001698  E103               	bnz	i2l290
  9515  00169A  040B               	decf	PWMC@cycles,w,c
  9516  00169C  A0D8               	btfss	status,0,c
  9517  00169E  0012               	return	
  9518  0016A0                     i2l290:
  9519                           
  9520                           ;motors.c: 10: countdown = widthus;
  9521  0016A0  C009  F014         	movff	PWMC@widthus,PWMC@countdown
  9522  0016A4  C00A  F015         	movff	PWMC@widthus+1,PWMC@countdown+1
  9523                           
  9524                           ;motors.c: 11: LATC0 = (1 ^ LATC0) & port[0];
  9525  0016A8  0E00               	movlw	0
  9526  0016AA  6E11               	movwf	_PWMC$1423,c
  9527  0016AC  B08B               	btfsc	3979,0,c	;volatile
  9528  0016AE  D00D               	goto	i2l3399
  9529  0016B0  C00D  FFD9         	movff	PWMC@port,fsr2l
  9530  0016B4  C00E  FFDA         	movff	PWMC@port+1,fsr2h
  9531  0016B8  CFDE F00F          	movff	postinc2,??_PWMC
  9532  0016BC  CFDD F010          	movff	postdec2,??_PWMC+1
  9533  0016C0  300F               	rrcf	??_PWMC,w,c
  9534  0016C2  A0D8               	btfss	status,0,c
  9535  0016C4  D002               	goto	i2l3399
  9536  0016C6  0E01               	movlw	1
  9537  0016C8  6E11               	movwf	_PWMC$1423,c
  9538  0016CA                     i2l3399:
  9539  0016CA  B011               	btfsc	_PWMC$1423,0,c
  9540  0016CC  D002               	bra	i2u244_45
  9541  0016CE  908B               	bcf	3979,0,c	;volatile
  9542  0016D0  D001               	bra	i2u244_46
  9543  0016D2                     i2u244_45:
  9544  0016D2  808B               	bsf	3979,0,c	;volatile
  9545  0016D4                     i2u244_46:
  9546                           
  9547                           ;motors.c: 12: LATC1 = (1 ^ LATC1) & port[1];
  9548  0016D4  0E00               	movlw	0
  9549  0016D6  6E12               	movwf	_PWMC$1424,c
  9550  0016D8  B28B               	btfsc	3979,1,c	;volatile
  9551  0016DA  D00F               	goto	i2l3407
  9552  0016DC  EE20 F002          	lfsr	2,2
  9553  0016E0  500D               	movf	PWMC@port,w,c
  9554  0016E2  26D9               	addwf	fsr2l,f,c
  9555  0016E4  500E               	movf	PWMC@port+1,w,c
  9556  0016E6  22DA               	addwfc	fsr2h,f,c
  9557  0016E8  CFDE F00F          	movff	postinc2,??_PWMC
  9558  0016EC  CFDD F010          	movff	postdec2,??_PWMC+1
  9559  0016F0  300F               	rrcf	??_PWMC,w,c
  9560  0016F2  A0D8               	btfss	status,0,c
  9561  0016F4  D002               	goto	i2l3407
  9562  0016F6  0E01               	movlw	1
  9563  0016F8  6E12               	movwf	_PWMC$1424,c
  9564  0016FA                     i2l3407:
  9565  0016FA  B012               	btfsc	_PWMC$1424,0,c
  9566  0016FC  D002               	bra	i2u247_45
  9567  0016FE  928B               	bcf	3979,1,c	;volatile
  9568  001700  D001               	bra	i2u247_46
  9569  001702                     i2u247_45:
  9570  001702  828B               	bsf	3979,1,c	;volatile
  9571  001704                     i2u247_46:
  9572                           
  9573                           ;motors.c: 13: LATC2 = (1 ^ LATC2) & port[2];
  9574  001704  0E00               	movlw	0
  9575  001706  6E13               	movwf	_PWMC$1425,c
  9576  001708  B48B               	btfsc	3979,2,c	;volatile
  9577  00170A  D00F               	goto	i2l3415
  9578  00170C  EE20 F004          	lfsr	2,4
  9579  001710  500D               	movf	PWMC@port,w,c
  9580  001712  26D9               	addwf	fsr2l,f,c
  9581  001714  500E               	movf	PWMC@port+1,w,c
  9582  001716  22DA               	addwfc	fsr2h,f,c
  9583  001718  CFDE F00F          	movff	postinc2,??_PWMC
  9584  00171C  CFDD F010          	movff	postdec2,??_PWMC+1
  9585  001720  300F               	rrcf	??_PWMC,w,c
  9586  001722  A0D8               	btfss	status,0,c
  9587  001724  D002               	goto	i2l3415
  9588  001726  0E01               	movlw	1
  9589  001728  6E13               	movwf	_PWMC$1425,c
  9590  00172A                     i2l3415:
  9591  00172A  B013               	btfsc	_PWMC$1425,0,c
  9592  00172C  D002               	bra	i2u250_45
  9593  00172E  948B               	bcf	3979,2,c	;volatile
  9594  001730  D001               	bra	i2u250_46
  9595  001732                     i2u250_45:
  9596  001732  848B               	bsf	3979,2,c	;volatile
  9597  001734                     i2u250_46:
  9598  001734                     i2l3417:
  9599  001734  BE15               	btfsc	PWMC@countdown+1,7,c
  9600  001736  D00D               	goto	i2l3425
  9601  001738  5015               	movf	PWMC@countdown+1,w,c
  9602  00173A  E103               	bnz	i2l3421
  9603  00173C  0414               	decf	PWMC@countdown,w,c
  9604  00173E  A0D8               	btfss	status,0,c
  9605  001740  D008               	goto	i2l3425
  9606  001742                     i2l3421:
  9607                           
  9608                           ;motors.c: 15: _delay((unsigned long)((5)*(8000000/4000000.0)));
  9609  001742  0E03               	movlw	3
  9610  001744                     i2u381_47:
  9611  001744  2EE8               	decfsz	wreg,f,c
  9612  001746  D7FE               	bra	i2u381_47
  9613  001748  F000               	nop	
  9614  00174A  0614               	decf	PWMC@countdown,f,c
  9615  00174C  A0D8               	btfss	status,0,c
  9616  00174E  0615               	decf	PWMC@countdown+1,f,c
  9617  001750  D7F1               	goto	i2l3417
  9618  001752                     i2l3425:
  9619  001752  060B               	decf	PWMC@cycles,f,c
  9620  001754  A0D8               	btfss	status,0,c
  9621  001756  060C               	decf	PWMC@cycles+1,f,c
  9622  001758  D79C               	goto	i2l3387
  9623  00175A                     __end_of_PWMC:
  9624                           	opt stack 0
  9625                           pclatu	equ	0xFFB
  9626                           pclath	equ	0xFFA
  9627                           tblptru	equ	0xFF8
  9628                           tblptrh	equ	0xFF7
  9629                           tblptrl	equ	0xFF6
  9630                           tablat	equ	0xFF5
  9631                           prodh	equ	0xFF4
  9632                           prodl	equ	0xFF3
  9633                           intcon	equ	0xFF2
  9634                           intcon2	equ	0xFF1
  9635                           intcon3	equ	0xFF0
  9636                           postinc0	equ	0xFEE
  9637                           fsr0h	equ	0xFEA
  9638                           fsr0l	equ	0xFE9
  9639                           wreg	equ	0xFE8
  9640                           postdec1	equ	0xFE5
  9641                           plusw1	equ	0xFE3
  9642                           fsr1h	equ	0xFE2
  9643                           fsr1l	equ	0xFE1
  9644                           indf2	equ	0xFDF
  9645                           postinc2	equ	0xFDE
  9646                           postdec2	equ	0xFDD
  9647                           plusw2	equ	0xFDB
  9648                           fsr2h	equ	0xFDA
  9649                           fsr2l	equ	0xFD9
  9650                           status	equ	0xFD8
  9651                           
  9652 ;; *************** function ___awdiv *****************
  9653 ;; Defined at:
  9654 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
  9655 ;; Parameters:    Size  Location     Type
  9656 ;;  dividend        2    0[COMRAM] int 
  9657 ;;  divisor         2    2[COMRAM] int 
  9658 ;; Auto vars:     Size  Location     Type
  9659 ;;  quotient        2    6[COMRAM] int 
  9660 ;;  sign            1    5[COMRAM] unsigned char 
  9661 ;;  counter         1    4[COMRAM] unsigned char 
  9662 ;; Return value:  Size  Location     Type
  9663 ;;                  2    0[COMRAM] int 
  9664 ;; Registers used:
  9665 ;;		wreg, status,2, status,0
  9666 ;; Tracked objects:
  9667 ;;		On entry : 0/0
  9668 ;;		On exit  : 0/0
  9669 ;;		Unchanged: 0/0
  9670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9671 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9672 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9674 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9675 ;;Total ram usage:        8 bytes
  9676 ;; Hardware stack levels used:    1
  9677 ;; This function calls:
  9678 ;;		Nothing
  9679 ;; This function is called by:
  9680 ;;		_PWMC
  9681 ;; This function uses a non-reentrant model
  9682 ;;
  9683                           
  9684                           	psect	text50
  9685  001D48                     __ptext50:
  9686                           	opt stack 0
  9687  001D48                     ___awdiv:
  9688                           	opt stack 23
  9689                           
  9690                           ;incstack = 0
  9691  001D48  0E00               	movlw	0
  9692  001D4A  6E06               	movwf	___awdiv@sign,c
  9693  001D4C  AE04               	btfss	___awdiv@divisor+1,7,c
  9694  001D4E  D006               	goto	i2l3153
  9695  001D50  6C03               	negf	___awdiv@divisor,c
  9696  001D52  1E04               	comf	___awdiv@divisor+1,f,c
  9697  001D54  B0D8               	btfsc	status,0,c
  9698  001D56  2A04               	incf	___awdiv@divisor+1,f,c
  9699  001D58  0E01               	movlw	1
  9700  001D5A  6E06               	movwf	___awdiv@sign,c
  9701  001D5C                     i2l3153:
  9702  001D5C  AE02               	btfss	___awdiv@dividend+1,7,c
  9703  001D5E  D006               	goto	i2l3159
  9704  001D60  6C01               	negf	___awdiv@dividend,c
  9705  001D62  1E02               	comf	___awdiv@dividend+1,f,c
  9706  001D64  B0D8               	btfsc	status,0,c
  9707  001D66  2A02               	incf	___awdiv@dividend+1,f,c
  9708  001D68  0E01               	movlw	1
  9709  001D6A  1A06               	xorwf	___awdiv@sign,f,c
  9710  001D6C                     i2l3159:
  9711  001D6C  0E00               	movlw	0
  9712  001D6E  6E08               	movwf	___awdiv@quotient+1,c
  9713  001D70  0E00               	movlw	0
  9714  001D72  6E07               	movwf	___awdiv@quotient,c
  9715  001D74  5003               	movf	___awdiv@divisor,w,c
  9716  001D76  1004               	iorwf	___awdiv@divisor+1,w,c
  9717  001D78  B4D8               	btfsc	status,2,c
  9718  001D7A  D01C               	goto	i2l3181
  9719  001D7C  0E01               	movlw	1
  9720  001D7E  6E05               	movwf	___awdiv@counter,c
  9721  001D80  D004               	goto	i2l3167
  9722  001D82                     i2l3165:
  9723  001D82  90D8               	bcf	status,0,c
  9724  001D84  3603               	rlcf	___awdiv@divisor,f,c
  9725  001D86  3604               	rlcf	___awdiv@divisor+1,f,c
  9726  001D88  2A05               	incf	___awdiv@counter,f,c
  9727  001D8A                     i2l3167:
  9728  001D8A  AE04               	btfss	___awdiv@divisor+1,7,c
  9729  001D8C  D7FA               	goto	i2l3165
  9730  001D8E                     i2l3169:
  9731  001D8E  90D8               	bcf	status,0,c
  9732  001D90  3607               	rlcf	___awdiv@quotient,f,c
  9733  001D92  3608               	rlcf	___awdiv@quotient+1,f,c
  9734  001D94  5003               	movf	___awdiv@divisor,w,c
  9735  001D96  5C01               	subwf	___awdiv@dividend,w,c
  9736  001D98  5004               	movf	___awdiv@divisor+1,w,c
  9737  001D9A  5802               	subwfb	___awdiv@dividend+1,w,c
  9738  001D9C  A0D8               	btfss	status,0,c
  9739  001D9E  D005               	goto	i2l3177
  9740  001DA0  5003               	movf	___awdiv@divisor,w,c
  9741  001DA2  5E01               	subwf	___awdiv@dividend,f,c
  9742  001DA4  5004               	movf	___awdiv@divisor+1,w,c
  9743  001DA6  5A02               	subwfb	___awdiv@dividend+1,f,c
  9744  001DA8  8007               	bsf	___awdiv@quotient,0,c
  9745  001DAA                     i2l3177:
  9746  001DAA  90D8               	bcf	status,0,c
  9747  001DAC  3204               	rrcf	___awdiv@divisor+1,f,c
  9748  001DAE  3203               	rrcf	___awdiv@divisor,f,c
  9749  001DB0  2E05               	decfsz	___awdiv@counter,f,c
  9750  001DB2  D7ED               	goto	i2l3169
  9751  001DB4                     i2l3181:
  9752  001DB4  5006               	movf	___awdiv@sign,w,c
  9753  001DB6  B4D8               	btfsc	status,2,c
  9754  001DB8  D004               	goto	i2l3185
  9755  001DBA  6C07               	negf	___awdiv@quotient,c
  9756  001DBC  1E08               	comf	___awdiv@quotient+1,f,c
  9757  001DBE  B0D8               	btfsc	status,0,c
  9758  001DC0  2A08               	incf	___awdiv@quotient+1,f,c
  9759  001DC2                     i2l3185:
  9760  001DC2  C007  F001         	movff	___awdiv@quotient,?___awdiv
  9761  001DC6  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  9762  001DCA  0012               	return	
  9763  001DCC                     __end_of___awdiv:
  9764                           	opt stack 0
  9765                           pclatu	equ	0xFFB
  9766                           pclath	equ	0xFFA
  9767                           tblptru	equ	0xFF8
  9768                           tblptrh	equ	0xFF7
  9769                           tblptrl	equ	0xFF6
  9770                           tablat	equ	0xFF5
  9771                           prodh	equ	0xFF4
  9772                           prodl	equ	0xFF3
  9773                           intcon	equ	0xFF2
  9774                           intcon2	equ	0xFF1
  9775                           intcon3	equ	0xFF0
  9776                           postinc0	equ	0xFEE
  9777                           fsr0h	equ	0xFEA
  9778                           fsr0l	equ	0xFE9
  9779                           wreg	equ	0xFE8
  9780                           postdec1	equ	0xFE5
  9781                           plusw1	equ	0xFE3
  9782                           fsr1h	equ	0xFE2
  9783                           fsr1l	equ	0xFE1
  9784                           indf2	equ	0xFDF
  9785                           postinc2	equ	0xFDE
  9786                           postdec2	equ	0xFDD
  9787                           plusw2	equ	0xFDB
  9788                           fsr2h	equ	0xFDA
  9789                           fsr2l	equ	0xFD9
  9790                           status	equ	0xFD8
  9791                           
  9792 ;; *************** function _PermLog *****************
  9793 ;; Defined at:
  9794 ;;		line 90 in file "eeprom.c"
  9795 ;; Parameters:    Size  Location     Type
  9796 ;;		None
  9797 ;; Auto vars:     Size  Location     Type
  9798 ;;  sorted          4   49[COMRAM] unsigned char [4]
  9799 ;;  time            2   54[COMRAM] unsigned int 
  9800 ;;  backruns        2   56[COMRAM] int 
  9801 ;;  goback          1   53[COMRAM] unsigned char 
  9802 ;; Return value:  Size  Location     Type
  9803 ;;                  1    wreg      void 
  9804 ;; Registers used:
  9805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9806 ;; Tracked objects:
  9807 ;;		On entry : 0/0
  9808 ;;		On exit  : 0/0
  9809 ;;		Unchanged: 0/0
  9810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9812 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9813 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9814 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9815 ;;Total ram usage:       11 bytes
  9816 ;; Hardware stack levels used:    1
  9817 ;; Hardware stack levels required when called:    4
  9818 ;; This function calls:
  9819 ;;		_ReadRun
  9820 ;;		_captureKeypad
  9821 ;;		_showInfo
  9822 ;;		i2_lcdInst
  9823 ;;		i2_printf
  9824 ;; This function is called by:
  9825 ;;		_intrpt
  9826 ;; This function uses a non-reentrant model
  9827 ;;
  9828                           
  9829                           	psect	text51
  9830  00184A                     __ptext51:
  9831                           	opt stack 0
  9832  00184A                     _PermLog:
  9833                           	opt stack 21
  9834                           
  9835                           ;eeprom.c: 91: unsigned char goback = 0;
  9836                           
  9837                           ;incstack = 0
  9838  00184A  0E00               	movlw	0
  9839  00184C  D067               	goto	L5
  9840  00184E                     i2l4361:
  9841                           
  9842                           ;eeprom.c: 93: lcdInst(0b10000000);
  9843  00184E  0E80               	movlw	128
  9844  001850  EC53  F013         	call	i2_lcdInst
  9845                           
  9846                           ;eeprom.c: 94: printf("Permanent log:       ");
  9847  001854  0E7F               	movlw	low STR_43
  9848  001856  6E0D               	movwf	i2printf@f,c
  9849  001858  0EFE               	movlw	high STR_43
  9850  00185A  6E0E               	movwf	i2printf@f+1,c
  9851  00185C  EC7E  F004         	call	i2_printf	;wreg free
  9852                           
  9853                           ;eeprom.c: 95: lcdInst(0b11000000);
  9854  001860  0EC0               	movlw	192
  9855  001862  EC53  F013         	call	i2_lcdInst
  9856                           
  9857                           ;eeprom.c: 96: printf("Which run?       ");
  9858  001866  0E67               	movlw	low STR_44
  9859  001868  6E0D               	movwf	i2printf@f,c
  9860  00186A  0EFF               	movlw	high STR_44
  9861  00186C  6E0E               	movwf	i2printf@f+1,c
  9862  00186E  EC7E  F004         	call	i2_printf	;wreg free
  9863                           
  9864                           ;eeprom.c: 97: int backruns = captureKeypad() - 8;
  9865  001872  ECF6  F012         	call	_captureKeypad	;wreg free
  9866  001876  0EF8               	movlw	248
  9867  001878  2401               	addwf	?_captureKeypad,w,c
  9868  00187A  6E39               	movwf	PermLog@backruns,c
  9869  00187C  0EFF               	movlw	255
  9870  00187E  2002               	addwfc	?_captureKeypad+1,w,c
  9871  001880  6E3A               	movwf	PermLog@backruns+1,c
  9872                           
  9873                           ;eeprom.c: 98: if (backruns>=0 && backruns < 4){
  9874  001882  BE3A               	btfsc	PermLog@backruns+1,7,c
  9875  001884  D04A               	goto	i2l4389
  9876  001886  BE3A               	btfsc	PermLog@backruns+1,7,c
  9877  001888  D006               	goto	i2l4373
  9878  00188A  503A               	movf	PermLog@backruns+1,w,c
  9879  00188C  E146               	bnz	i2l4389
  9880  00188E  0E04               	movlw	4
  9881  001890  5C39               	subwf	PermLog@backruns,w,c
  9882  001892  B0D8               	btfsc	status,0,c
  9883  001894  D042               	goto	i2l4389
  9884  001896                     i2l4373:
  9885                           
  9886                           ;eeprom.c: 99: unsigned int time;
  9887                           ;eeprom.c: 100: unsigned char sorted[] = {0, 0, 0, 0};
  9888  001896  C098  F032         	movff	PermLog@F3082,PermLog@sorted
  9889  00189A  C099  F033         	movff	PermLog@F3082+1,PermLog@sorted+1
  9890  00189E  C09A  F034         	movff	PermLog@F3082+2,PermLog@sorted+2
  9891  0018A2  C09B  F035         	movff	PermLog@F3082+3,PermLog@sorted+3
  9892                           
  9893                           ;eeprom.c: 101: ReadRun(backruns, sorted, &time);
  9894  0018A6  0E32               	movlw	low PermLog@sorted
  9895  0018A8  6E03               	movwf	ReadRun@sorted,c
  9896  0018AA  0E00               	movlw	high PermLog@sorted
  9897  0018AC  6E04               	movwf	ReadRun@sorted+1,c
  9898  0018AE  0E37               	movlw	low PermLog@time
  9899  0018B0  6E05               	movwf	ReadRun@time,c
  9900  0018B2  0E00               	movlw	high PermLog@time
  9901  0018B4  6E06               	movwf	ReadRun@time+1,c
  9902  0018B6  5039               	movf	PermLog@backruns,w,c
  9903  0018B8  EC21  F00A         	call	_ReadRun
  9904                           
  9905                           ;eeprom.c: 102: lcdInst(0b10000000);
  9906  0018BC  0E80               	movlw	128
  9907  0018BE  EC53  F013         	call	i2_lcdInst
  9908                           
  9909                           ;eeprom.c: 103: printf("showing %u      ", backruns+1);
  9910  0018C2  0EAE               	movlw	low STR_45
  9911  0018C4  6E0D               	movwf	i2printf@f,c
  9912  0018C6  0EFF               	movlw	high STR_45
  9913  0018C8  6E0E               	movwf	i2printf@f+1,c
  9914  0018CA  0E01               	movlw	1
  9915  0018CC  2439               	addwf	PermLog@backruns,w,c
  9916  0018CE  6E0F               	movwf	?i2_printf+2,c
  9917  0018D0  0E00               	movlw	0
  9918  0018D2  203A               	addwfc	PermLog@backruns+1,w,c
  9919  0018D4  6E10               	movwf	?i2_printf+3,c
  9920  0018D6  EC7E  F004         	call	i2_printf	;wreg free
  9921                           
  9922                           ;eeprom.c: 104: lcdInst(0b11000000);
  9923  0018DA  0EC0               	movlw	192
  9924  0018DC  EC53  F013         	call	i2_lcdInst
  9925                           
  9926                           ;eeprom.c: 105: printf("runs before     ");
  9927  0018E0  0EBF               	movlw	low STR_46
  9928  0018E2  6E0D               	movwf	i2printf@f,c
  9929  0018E4  0EFF               	movlw	high STR_46
  9930  0018E6  6E0E               	movwf	i2printf@f+1,c
  9931  0018E8  EC7E  F004         	call	i2_printf	;wreg free
  9932                           
  9933                           ;eeprom.c: 106: _delay((unsigned long)((700)*(8000000/4000.0)));
  9934  0018EC  0E08               	movlw	8
  9935  0018EE  6E31               	movwf	(??_PermLog+1)& (0+255),c
  9936  0018F0  0E1B               	movlw	27
  9937  0018F2  6E30               	movwf	??_PermLog& (0+255),c
  9938  0018F4  0E27               	movlw	39
  9939  0018F6                     i2u382_47:
  9940  0018F6  2EE8               	decfsz	wreg,f,c
  9941  0018F8  D7FE               	bra	i2u382_47
  9942  0018FA  2E30               	decfsz	??_PermLog& (0+255),f,c
  9943  0018FC  D7FC               	bra	i2u382_47
  9944  0018FE  2E31               	decfsz	(??_PermLog+1)& (0+255),f,c
  9945  001900  D7FA               	bra	i2u382_47
  9946  001902  F000               	nop	
  9947                           
  9948                           ;eeprom.c: 107: showInfo(time, sorted);
  9949  001904  C037  F023         	movff	PermLog@time,showInfo@time
  9950  001908  C038  F024         	movff	PermLog@time+1,showInfo@time+1
  9951  00190C  0E32               	movlw	low PermLog@sorted
  9952  00190E  6E25               	movwf	showInfo@sorted,c
  9953  001910  0E00               	movlw	high PermLog@sorted
  9954  001912  6E26               	movwf	showInfo@sorted+1,c
  9955  001914  EC95  F007         	call	_showInfo	;wreg free
  9956                           
  9957                           ;eeprom.c: 108: } else goback = 1;
  9958  001918  D002               	goto	i2l478
  9959  00191A                     i2l4389:
  9960  00191A  0E01               	movlw	1
  9961  00191C                     L5:
  9962  00191C  6E36               	movwf	PermLog@goback,c
  9963  00191E                     i2l478:
  9964  00191E  5036               	movf	PermLog@goback,w,c
  9965  001920  A4D8               	btfss	status,2,c
  9966  001922  0012               	return	
  9967  001924  D794               	goto	i2l4361
  9968  001926                     __end_of_PermLog:
  9969                           	opt stack 0
  9970                           pclatu	equ	0xFFB
  9971                           pclath	equ	0xFFA
  9972                           tblptru	equ	0xFF8
  9973                           tblptrh	equ	0xFF7
  9974                           tblptrl	equ	0xFF6
  9975                           tablat	equ	0xFF5
  9976                           prodh	equ	0xFF4
  9977                           prodl	equ	0xFF3
  9978                           intcon	equ	0xFF2
  9979                           intcon2	equ	0xFF1
  9980                           intcon3	equ	0xFF0
  9981                           postinc0	equ	0xFEE
  9982                           fsr0h	equ	0xFEA
  9983                           fsr0l	equ	0xFE9
  9984                           wreg	equ	0xFE8
  9985                           postdec1	equ	0xFE5
  9986                           plusw1	equ	0xFE3
  9987                           fsr1h	equ	0xFE2
  9988                           fsr1l	equ	0xFE1
  9989                           indf2	equ	0xFDF
  9990                           postinc2	equ	0xFDE
  9991                           postdec2	equ	0xFDD
  9992                           plusw2	equ	0xFDB
  9993                           fsr2h	equ	0xFDA
  9994                           fsr2l	equ	0xFD9
  9995                           status	equ	0xFD8
  9996                           
  9997 ;; *************** function _showInfo *****************
  9998 ;; Defined at:
  9999 ;;		line 23 in file "modules.c"
 10000 ;; Parameters:    Size  Location     Type
 10001 ;;  time            2   34[COMRAM] unsigned int 
 10002 ;;  sorted          2   36[COMRAM] PTR unsigned char 
 10003 ;;		 -> PermLog@sorted(4), simulate@sorted(4), mainloop@sorted(4), 
 10004 ;; Auto vars:     Size  Location     Type
 10005 ;;  stop            2   45[COMRAM] int 
 10006 ;;  type            2   43[COMRAM] int 
 10007 ;; Return value:  Size  Location     Type
 10008 ;;                  1    wreg      void 
 10009 ;; Registers used:
 10010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10011 ;; Tracked objects:
 10012 ;;		On entry : 0/0
 10013 ;;		On exit  : 0/0
 10014 ;;		Unchanged: 0/0
 10015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10016 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10017 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10018 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10019 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10020 ;;Total ram usage:       13 bytes
 10021 ;; Hardware stack levels used:    1
 10022 ;; Hardware stack levels required when called:    3
 10023 ;; This function calls:
 10024 ;;		_captureKeypad
 10025 ;;		i2_lcdInst
 10026 ;;		i2_printf
 10027 ;; This function is called by:
 10028 ;;		_mainloop
 10029 ;;		_simulate
 10030 ;;		_PermLog
 10031 ;; This function uses a non-reentrant model
 10032 ;;
 10033                           
 10034                           	psect	text52
 10035  000F2A                     __ptext52:
 10036                           	opt stack 0
 10037  000F2A                     _showInfo:
 10038                           	opt stack 21
 10039                           
 10040                           ;modules.c: 24: lcdInst(0b10000000);
 10041                           
 10042                           ;incstack = 0
 10043  000F2A  0E80               	movlw	128
 10044  000F2C  EC53  F013         	call	i2_lcdInst
 10045                           
 10046                           ;modules.c: 25: printf("Press a key          ");
 10047  000F30  0EC1               	movlw	low STR_22
 10048  000F32  6E0D               	movwf	i2printf@f,c
 10049  000F34  0EFE               	movlw	high STR_22
 10050  000F36  6E0E               	movwf	i2printf@f+1,c
 10051  000F38  EC7E  F004         	call	i2_printf	;wreg free
 10052                           
 10053                           ;modules.c: 26: lcdInst(0b11000000);
 10054  000F3C  0EC0               	movlw	192
 10055  000F3E  EC53  F013         	call	i2_lcdInst
 10056                           
 10057                           ;modules.c: 27: printf("For more info          ");
 10058  000F42  0E50               	movlw	low STR_23
 10059  000F44  6E0D               	movwf	i2printf@f,c
 10060  000F46  0EFE               	movlw	high STR_23
 10061  000F48  6E0E               	movwf	i2printf@f+1,c
 10062  000F4A  EC7E  F004         	call	i2_printf	;wreg free
 10063                           
 10064                           ;modules.c: 28: int type = 0;
 10065  000F4E  0E00               	movlw	0
 10066  000F50  6E2D               	movwf	showInfo@type+1,c
 10067  000F52  0E00               	movlw	0
 10068  000F54  6E2C               	movwf	showInfo@type,c
 10069                           
 10070                           ;modules.c: 29: int stop = 0;
 10071  000F56  0E00               	movlw	0
 10072  000F58  6E2F               	movwf	showInfo@stop+1,c
 10073  000F5A  0E00               	movlw	0
 10074  000F5C  D0D7               	goto	L6
 10075  000F5E                     i2l3917:
 10076                           
 10077                           ;modules.c: 31: type = captureKeypad();
 10078  000F5E  ECF6  F012         	call	_captureKeypad	;wreg free
 10079  000F62  C001  F02C         	movff	?_captureKeypad,showInfo@type
 10080  000F66  C002  F02D         	movff	?_captureKeypad+1,showInfo@type+1
 10081                           
 10082                           ;modules.c: 33: switch (type) {
 10083  000F6A  D0D2               	goto	i2l3957
 10084  000F6C                     i2l3919:
 10085                           
 10086                           ;modules.c: 35: lcdInst(0b10000000);
 10087  000F6C  0E80               	movlw	128
 10088  000F6E  EC53  F013         	call	i2_lcdInst
 10089                           
 10090                           ;modules.c: 36: printf("Time Elapsed:          ");
 10091  000F72  0E20               	movlw	low STR_24
 10092  000F74  6E0D               	movwf	i2printf@f,c
 10093  000F76  0EFE               	movlw	high STR_24
 10094  000F78  6E0E               	movwf	i2printf@f+1,c
 10095  000F7A  EC7E  F004         	call	i2_printf	;wreg free
 10096                           
 10097                           ;modules.c: 37: lcdInst(0b11000000);
 10098  000F7E  0EC0               	movlw	192
 10099  000F80  EC53  F013         	call	i2_lcdInst
 10100                           
 10101                           ;modules.c: 38: printf("%u seconds          ", time);
 10102  000F84  0E01               	movlw	low STR_25
 10103  000F86  6E0D               	movwf	i2printf@f,c
 10104  000F88  0EFF               	movlw	high STR_25
 10105  000F8A  6E0E               	movwf	i2printf@f+1,c
 10106  000F8C  C023  F00F         	movff	showInfo@time,?i2_printf+2
 10107  000F90  C024  F010         	movff	showInfo@time+1,?i2_printf+3
 10108  000F94  EC7E  F004         	call	i2_printf	;wreg free
 10109                           
 10110                           ;modules.c: 39: break;
 10111  000F98  D0D7               	goto	i2l3959
 10112  000F9A                     i2l3925:
 10113                           
 10114                           ;modules.c: 41: lcdInst(0b10000000);
 10115  000F9A  0E80               	movlw	128
 10116  000F9C  EC53  F013         	call	i2_lcdInst
 10117                           
 10118                           ;modules.c: 42: printf("Total Sorted:          ");
 10119  000FA0  0E38               	movlw	low STR_26
 10120  000FA2  6E0D               	movwf	i2printf@f,c
 10121  000FA4  0EFE               	movlw	high STR_26
 10122  000FA6  6E0E               	movwf	i2printf@f+1,c
 10123  000FA8  EC7E  F004         	call	i2_printf	;wreg free
 10124                           
 10125                           ;modules.c: 43: lcdInst(0b11000000);
 10126  000FAC  0EC0               	movlw	192
 10127  000FAE  EC53  F013         	call	i2_lcdInst
 10128                           
 10129                           ;modules.c: 44: printf("%u batteries          ", sorted[0] + sorted[1] + sorted[2] + sor
      +                          ted[3]);
 10130  000FB2  0E68               	movlw	low STR_27
 10131  000FB4  6E0D               	movwf	i2printf@f,c
 10132  000FB6  0EFE               	movlw	high STR_27
 10133  000FB8  6E0E               	movwf	i2printf@f+1,c
 10134  000FBA  EE20 F003          	lfsr	2,3
 10135  000FBE  5025               	movf	showInfo@sorted,w,c
 10136  000FC0  26D9               	addwf	fsr2l,f,c
 10137  000FC2  5026               	movf	showInfo@sorted+1,w,c
 10138  000FC4  22DA               	addwfc	fsr2h,f,c
 10139  000FC6  50DF               	movf	indf2,w,c
 10140  000FC8  6E27               	movwf	??_showInfo& (0+255),c
 10141  000FCA  C025  FFD9         	movff	showInfo@sorted,fsr2l
 10142  000FCE  C026  FFDA         	movff	showInfo@sorted+1,fsr2h
 10143  000FD2  50DF               	movf	indf2,w,c
 10144  000FD4  6E28               	movwf	(??_showInfo+1)& (0+255),c
 10145  000FD6  6A29               	clrf	(??_showInfo+2)& (0+255),c
 10146  000FD8  EE20 F001          	lfsr	2,1
 10147  000FDC  5025               	movf	showInfo@sorted,w,c
 10148  000FDE  26D9               	addwf	fsr2l,f,c
 10149  000FE0  5026               	movf	showInfo@sorted+1,w,c
 10150  000FE2  22DA               	addwfc	fsr2h,f,c
 10151  000FE4  50DF               	movf	indf2,w,c
 10152  000FE6  6E2A               	movwf	(??_showInfo+3)& (0+255),c
 10153  000FE8  502A               	movf	??_showInfo+3,w,c
 10154  000FEA  2628               	addwf	??_showInfo+1,f,c
 10155  000FEC  0E00               	movlw	0
 10156  000FEE  2229               	addwfc	??_showInfo+2,f,c
 10157  000FF0  EE20 F002          	lfsr	2,2
 10158  000FF4  5025               	movf	showInfo@sorted,w,c
 10159  000FF6  26D9               	addwf	fsr2l,f,c
 10160  000FF8  5026               	movf	showInfo@sorted+1,w,c
 10161  000FFA  22DA               	addwfc	fsr2h,f,c
 10162  000FFC  50DF               	movf	indf2,w,c
 10163  000FFE  6E2B               	movwf	(??_showInfo+4)& (0+255),c
 10164  001000  502B               	movf	??_showInfo+4,w,c
 10165  001002  2628               	addwf	??_showInfo+1,f,c
 10166  001004  0E00               	movlw	0
 10167  001006  2229               	addwfc	??_showInfo+2,f,c
 10168  001008  5027               	movf	??_showInfo,w,c
 10169  00100A  2428               	addwf	??_showInfo+1,w,c
 10170  00100C  6E0F               	movwf	?i2_printf+2,c
 10171  00100E  0E00               	movlw	0
 10172  001010  2029               	addwfc	??_showInfo+2,w,c
 10173  001012  6E10               	movwf	?i2_printf+3,c
 10174  001014  EC7E  F004         	call	i2_printf	;wreg free
 10175                           
 10176                           ;modules.c: 45: break;
 10177  001018  D097               	goto	i2l3959
 10178  00101A                     i2l3931:
 10179                           
 10180                           ;modules.c: 47: lcdInst(0b10000000);
 10181  00101A  0E80               	movlw	128
 10182  00101C  EC53  F013         	call	i2_lcdInst
 10183                           
 10184                           ;modules.c: 48: printf("Charged AA:          ");
 10185  001020  0E95               	movlw	low STR_28
 10186  001022  6E0D               	movwf	i2printf@f,c
 10187  001024  0EFE               	movlw	high STR_28
 10188  001026  6E0E               	movwf	i2printf@f+1,c
 10189  001028  EC7E  F004         	call	i2_printf	;wreg free
 10190                           
 10191                           ;modules.c: 49: lcdInst(0b11000000);
 10192  00102C  0EC0               	movlw	192
 10193  00102E  EC53  F013         	call	i2_lcdInst
 10194                           
 10195                           ;modules.c: 50: printf("%u             ", sorted[0]);
 10196  001032  0ED0               	movlw	low STR_29
 10197  001034  6E0D               	movwf	i2printf@f,c
 10198  001036  0EFF               	movlw	high STR_29
 10199  001038  6E0E               	movwf	i2printf@f+1,c
 10200  00103A  C025  FFD9         	movff	showInfo@sorted,fsr2l
 10201  00103E  C026  FFDA         	movff	showInfo@sorted+1,fsr2h
 10202  001042  50DF               	movf	indf2,w,c
 10203  001044  6E27               	movwf	??_showInfo& (0+255),c
 10204  001046  5027               	movf	??_showInfo,w,c
 10205  001048  6E0F               	movwf	?i2_printf+2,c
 10206  00104A  6A10               	clrf	?i2_printf+3,c
 10207  00104C  EC7E  F004         	call	i2_printf	;wreg free
 10208                           
 10209                           ;modules.c: 51: break;
 10210  001050  D07B               	goto	i2l3959
 10211  001052                     i2l3937:
 10212                           
 10213                           ;modules.c: 53: lcdInst(0b10000000);
 10214  001052  0E80               	movlw	128
 10215  001054  EC53  F013         	call	i2_lcdInst
 10216                           
 10217                           ;modules.c: 54: printf("Charged C:          ");
 10218  001058  0ED7               	movlw	low STR_30
 10219  00105A  6E0D               	movwf	i2printf@f,c
 10220  00105C  0EFE               	movlw	high STR_30
 10221  00105E  6E0E               	movwf	i2printf@f+1,c
 10222  001060  EC7E  F004         	call	i2_printf	;wreg free
 10223                           
 10224                           ;modules.c: 55: lcdInst(0b11000000);
 10225  001064  0EC0               	movlw	192
 10226  001066  EC53  F013         	call	i2_lcdInst
 10227                           
 10228                           ;modules.c: 56: printf("%u             ", sorted[1]);
 10229  00106A  0ED0               	movlw	low STR_29
 10230  00106C  6E0D               	movwf	i2printf@f,c
 10231  00106E  0EFF               	movlw	high STR_29
 10232  001070  6E0E               	movwf	i2printf@f+1,c
 10233  001072  EE20 F001          	lfsr	2,1
 10234  001076  5025               	movf	showInfo@sorted,w,c
 10235  001078  26D9               	addwf	fsr2l,f,c
 10236  00107A  5026               	movf	showInfo@sorted+1,w,c
 10237  00107C  22DA               	addwfc	fsr2h,f,c
 10238  00107E  50DF               	movf	indf2,w,c
 10239  001080  6E27               	movwf	??_showInfo& (0+255),c
 10240  001082  5027               	movf	??_showInfo,w,c
 10241  001084  6E0F               	movwf	?i2_printf+2,c
 10242  001086  6A10               	clrf	?i2_printf+3,c
 10243  001088  EC7E  F004         	call	i2_printf	;wreg free
 10244                           
 10245                           ;modules.c: 57: break;
 10246  00108C  D05D               	goto	i2l3959
 10247  00108E                     i2l3943:
 10248                           
 10249                           ;modules.c: 59: lcdInst(0b10000000);
 10250  00108E  0E80               	movlw	128
 10251  001090  EC53  F013         	call	i2_lcdInst
 10252                           
 10253                           ;modules.c: 60: printf("Charged 9V:          ");
 10254  001094  0EAB               	movlw	low STR_32
 10255  001096  6E0D               	movwf	i2printf@f,c
 10256  001098  0EFE               	movlw	high STR_32
 10257  00109A  6E0E               	movwf	i2printf@f+1,c
 10258  00109C  EC7E  F004         	call	i2_printf	;wreg free
 10259                           
 10260                           ;modules.c: 61: lcdInst(0b11000000);
 10261  0010A0  0EC0               	movlw	192
 10262  0010A2  EC53  F013         	call	i2_lcdInst
 10263                           
 10264                           ;modules.c: 62: printf("%u             ", sorted[2]);
 10265  0010A6  0ED0               	movlw	low STR_29
 10266  0010A8  6E0D               	movwf	i2printf@f,c
 10267  0010AA  0EFF               	movlw	high STR_29
 10268  0010AC  6E0E               	movwf	i2printf@f+1,c
 10269  0010AE  EE20 F002          	lfsr	2,2
 10270  0010B2  5025               	movf	showInfo@sorted,w,c
 10271  0010B4  26D9               	addwf	fsr2l,f,c
 10272  0010B6  5026               	movf	showInfo@sorted+1,w,c
 10273  0010B8  22DA               	addwfc	fsr2h,f,c
 10274  0010BA  50DF               	movf	indf2,w,c
 10275  0010BC  6E27               	movwf	??_showInfo& (0+255),c
 10276  0010BE  5027               	movf	??_showInfo,w,c
 10277  0010C0  6E0F               	movwf	?i2_printf+2,c
 10278  0010C2  6A10               	clrf	?i2_printf+3,c
 10279  0010C4  EC7E  F004         	call	i2_printf	;wreg free
 10280                           
 10281                           ;modules.c: 63: break;
 10282  0010C8  D03F               	goto	i2l3959
 10283  0010CA                     i2l3949:
 10284                           
 10285                           ;modules.c: 65: lcdInst(0b10000000);
 10286  0010CA  0E80               	movlw	128
 10287  0010CC  EC53  F013         	call	i2_lcdInst
 10288                           
 10289                           ;modules.c: 66: printf("Uncharged:          ");
 10290  0010D0  0EEC               	movlw	low STR_34
 10291  0010D2  6E0D               	movwf	i2printf@f,c
 10292  0010D4  0EFE               	movlw	high STR_34
 10293  0010D6  6E0E               	movwf	i2printf@f+1,c
 10294  0010D8  EC7E  F004         	call	i2_printf	;wreg free
 10295                           
 10296                           ;modules.c: 67: lcdInst(0b11000000);
 10297  0010DC  0EC0               	movlw	192
 10298  0010DE  EC53  F013         	call	i2_lcdInst
 10299                           
 10300                           ;modules.c: 68: printf("%u             ", sorted[3]);
 10301  0010E2  0ED0               	movlw	low STR_29
 10302  0010E4  6E0D               	movwf	i2printf@f,c
 10303  0010E6  0EFF               	movlw	high STR_29
 10304  0010E8  6E0E               	movwf	i2printf@f+1,c
 10305  0010EA  EE20 F003          	lfsr	2,3
 10306  0010EE  5025               	movf	showInfo@sorted,w,c
 10307  0010F0  26D9               	addwf	fsr2l,f,c
 10308  0010F2  5026               	movf	showInfo@sorted+1,w,c
 10309  0010F4  22DA               	addwfc	fsr2h,f,c
 10310  0010F6  50DF               	movf	indf2,w,c
 10311  0010F8  6E27               	movwf	??_showInfo& (0+255),c
 10312  0010FA  5027               	movf	??_showInfo,w,c
 10313  0010FC  6E0F               	movwf	?i2_printf+2,c
 10314  0010FE  6A10               	clrf	?i2_printf+3,c
 10315  001100  EC7E  F004         	call	i2_printf	;wreg free
 10316                           
 10317                           ;modules.c: 69: break;
 10318  001104  D021               	goto	i2l3959
 10319  001106                     i2l3955:
 10320                           
 10321                           ;modules.c: 71: stop = 1;
 10322  001106  0E00               	movlw	0
 10323  001108  6E2F               	movwf	showInfo@stop+1,c
 10324  00110A  0E01               	movlw	1
 10325  00110C                     L6:
 10326  00110C  6E2E               	movwf	showInfo@stop,c
 10327                           
 10328                           ;modules.c: 72: }
 10329  00110E  D01C               	goto	i2l3959
 10330  001110                     i2l3957:
 10331  001110  C02C  F027         	movff	showInfo@type,??_showInfo
 10332  001114  C02D  F028         	movff	showInfo@type+1,??_showInfo+1
 10333                           
 10334                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10335                           ; Switch size 1, requested type "space"
 10336                           ; Number of cases is 1, Range of values is 0 to 0
 10337                           ; switch strategies available:
 10338                           ; Name         Instructions Cycles
 10339                           ; simple_byte            4     3 (average)
 10340                           ;	Chosen strategy is simple_byte
 10341  001118  5028               	movf	??_showInfo+1,w,c
 10342  00111A  0A00               	xorlw	0	; case 0
 10343  00111C  A4D8               	btfss	status,2,c
 10344  00111E  D7F3               	goto	i2l3955
 10345                           
 10346                           ; Switch size 1, requested type "space"
 10347                           ; Number of cases is 6, Range of values is 0 to 6
 10348                           ; switch strategies available:
 10349                           ; Name         Instructions Cycles
 10350                           ; simple_byte           19    10 (average)
 10351                           ;	Chosen strategy is simple_byte
 10352  001120  5027               	movf	??_showInfo,w,c
 10353  001122  0A00               	xorlw	0	; case 0
 10354  001124  B4D8               	btfsc	status,2,c
 10355  001126  D722               	goto	i2l3919
 10356  001128  0A01               	xorlw	1	; case 1
 10357  00112A  B4D8               	btfsc	status,2,c
 10358  00112C  D736               	goto	i2l3925
 10359  00112E  0A03               	xorlw	3	; case 2
 10360  001130  B4D8               	btfsc	status,2,c
 10361  001132  D773               	goto	i2l3931
 10362  001134  0A06               	xorlw	6	; case 4
 10363  001136  B4D8               	btfsc	status,2,c
 10364  001138  D78C               	goto	i2l3937
 10365  00113A  0A01               	xorlw	1	; case 5
 10366  00113C  B4D8               	btfsc	status,2,c
 10367  00113E  D7A7               	goto	i2l3943
 10368  001140  0A03               	xorlw	3	; case 6
 10369  001142  B4D8               	btfsc	status,2,c
 10370  001144  D7C2               	goto	i2l3949
 10371  001146  D7DF               	goto	i2l3955
 10372  001148                     i2l3959:
 10373  001148  502E               	movf	showInfo@stop,w,c
 10374  00114A  102F               	iorwf	showInfo@stop+1,w,c
 10375  00114C  A4D8               	btfss	status,2,c
 10376  00114E  0012               	return	
 10377  001150  D706               	goto	i2l3917
 10378  001152                     __end_of_showInfo:
 10379                           	opt stack 0
 10380                           pclatu	equ	0xFFB
 10381                           pclath	equ	0xFFA
 10382                           tblptru	equ	0xFF8
 10383                           tblptrh	equ	0xFF7
 10384                           tblptrl	equ	0xFF6
 10385                           tablat	equ	0xFF5
 10386                           prodh	equ	0xFF4
 10387                           prodl	equ	0xFF3
 10388                           intcon	equ	0xFF2
 10389                           intcon2	equ	0xFF1
 10390                           intcon3	equ	0xFF0
 10391                           postinc0	equ	0xFEE
 10392                           fsr0h	equ	0xFEA
 10393                           fsr0l	equ	0xFE9
 10394                           wreg	equ	0xFE8
 10395                           postdec1	equ	0xFE5
 10396                           plusw1	equ	0xFE3
 10397                           fsr1h	equ	0xFE2
 10398                           fsr1l	equ	0xFE1
 10399                           indf2	equ	0xFDF
 10400                           postinc2	equ	0xFDE
 10401                           postdec2	equ	0xFDD
 10402                           plusw2	equ	0xFDB
 10403                           fsr2h	equ	0xFDA
 10404                           fsr2l	equ	0xFD9
 10405                           status	equ	0xFD8
 10406                           
 10407 ;; *************** function i2_printf *****************
 10408 ;; Defined at:
 10409 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
 10410 ;; Parameters:    Size  Location     Type
 10411 ;;  f               2   12[COMRAM] PTR const unsigned char 
 10412 ;;		 -> STR_46(17), STR_45(17), STR_44(18), STR_43(22), 
 10413 ;;		 -> STR_42(4), STR_41(3), STR_40(4), STR_39(5), 
 10414 ;;		 -> STR_38(4), STR_37(18), STR_36(20), STR_35(16), 
 10415 ;;		 -> STR_34(21), STR_33(16), STR_32(22), STR_31(16), 
 10416 ;;		 -> STR_30(21), STR_29(16), STR_28(22), STR_27(23), 
 10417 ;;		 -> STR_26(24), STR_25(21), STR_24(24), STR_23(24), 
 10418 ;;		 -> STR_22(22), STR_21(19), STR_20(18), STR_19(25), 
 10419 ;;		 -> STR_18(25), STR_17(27), STR_16(3), STR_15(3), 
 10420 ;;		 -> STR_14(3), STR_13(5), STR_12(3), STR_11(3), 
 10421 ;;		 -> STR_10(3), STR_9(4), STR_8(3), STR_7(3), 
 10422 ;;		 -> STR_6(3), STR_5(4), STR_4(5), STR_3(21), 
 10423 ;;		 -> STR_2(27), STR_1(21), 
 10424 ;; Auto vars:     Size  Location     Type
 10425 ;;  printf          4    0        struct .
 10426 ;;  printf          2   31[COMRAM] int 
 10427 ;;  printf          2   28[COMRAM] unsigned int 
 10428 ;;  printf          2   25[COMRAM] unsigned int 
 10429 ;;  printf          2   23[COMRAM] PTR void [1]
 10430 ;;		 -> ?i2_printf(2), ?_printf(2), 
 10431 ;;  printf          2   20[COMRAM] PTR const unsigned char 
 10432 ;;		 -> printf@c(1), 
 10433 ;;  printf          1   33[COMRAM] char 
 10434 ;;  printf          1   30[COMRAM] unsigned char 
 10435 ;;  printf          1   27[COMRAM] char 
 10436 ;;  printf          1   22[COMRAM] unsigned char 
 10437 ;; Return value:  Size  Location     Type
 10438 ;;                  2   12[COMRAM] int 
 10439 ;; Registers used:
 10440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10441 ;; Tracked objects:
 10442 ;;		On entry : 0/0
 10443 ;;		On exit  : 0/0
 10444 ;;		Unchanged: 0/0
 10445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10446 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10447 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10448 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10449 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10450 ;;Total ram usage:       22 bytes
 10451 ;; Hardware stack levels used:    1
 10452 ;; Hardware stack levels required when called:    2
 10453 ;; This function calls:
 10454 ;;		i2___lwdiv
 10455 ;;		i2___lwmod
 10456 ;;		i2___wmul
 10457 ;;		i2_isdigit
 10458 ;;		i2_putch
 10459 ;; This function is called by:
 10460 ;;		_mainloop
 10461 ;;		_simulate
 10462 ;;		_showInfo
 10463 ;;		_stopMoving
 10464 ;;		_printV
 10465 ;;		_checkAA
 10466 ;;		_checkC
 10467 ;;		_check9
 10468 ;;		_PermLog
 10469 ;; This function uses a non-reentrant model
 10470 ;;
 10471                           
 10472                           	psect	text53
 10473  0008FC                     __ptext53:
 10474                           	opt stack 0
 10475  0008FC                     i2_printf:
 10476                           	opt stack 22
 10477                           
 10478                           ;doprnt.c: 466: va_list ap;
 10479                           ;doprnt.c: 499: signed char c;
 10480                           ;doprnt.c: 501: int width;
 10481                           ;doprnt.c: 506: signed char prec;
 10482                           ;doprnt.c: 508: unsigned char flag;
 10483                           ;doprnt.c: 523: union {
 10484                           ;doprnt.c: 524: unsigned long vd;
 10485                           ;doprnt.c: 525: double integ;
 10486                           ;doprnt.c: 526: } tmpval;
 10487                           ;doprnt.c: 528: unsigned int val;
 10488                           ;doprnt.c: 529: unsigned len;
 10489                           ;doprnt.c: 530: const char * cp;
 10490                           ;doprnt.c: 533: *ap = __va_start();
 10491                           
 10492                           ;incstack = 0
 10493  0008FC  0E0F               	movlw	low (?i2_printf+2)
 10494  0008FE  6E18               	movwf	i2printf@ap,c
 10495  000900  0E00               	movlw	high (?i2_printf+2)
 10496  000902  6E19               	movwf	i2printf@ap+1,c
 10497                           
 10498                           ;doprnt.c: 536: while(c = *f++) {
 10499  000904  D1BB               	goto	i2l3375
 10500  000906                     i2l3225:
 10501                           
 10502                           ;doprnt.c: 538: if(c != '%')
 10503  000906  0E25               	movlw	37
 10504  000908  1822               	xorwf	i2printf@c,w,c
 10505  00090A  B4D8               	btfsc	status,2,c
 10506  00090C  D004               	goto	i2l3229
 10507                           
 10508                           ;doprnt.c: 540: {
 10509                           ;doprnt.c: 541: (putch(c) );
 10510  00090E  5022               	movf	i2printf@c,w,c
 10511  000910  EC4D  F013         	call	i2_putch
 10512                           
 10513                           ;doprnt.c: 542: continue;
 10514  000914  D1B3               	goto	i2l3375
 10515  000916                     i2l3229:
 10516                           
 10517                           ;doprnt.c: 543: }
 10518                           ;doprnt.c: 546: width = 0;
 10519  000916  0E00               	movlw	0
 10520  000918  6E21               	movwf	i2printf@width+1,c
 10521  00091A  0E00               	movlw	0
 10522  00091C  6E20               	movwf	i2printf@width,c
 10523                           
 10524                           ;doprnt.c: 548: flag = 0;
 10525  00091E  0E00               	movlw	0
 10526  000920  6E1F               	movwf	i2printf@flag,c
 10527                           
 10528                           ;doprnt.c: 551: switch(*f) {
 10529                           
 10530                           ;doprnt.c: 550: for(;;) {
 10531  000922  D003               	goto	i2l3235
 10532  000924                     i2l3231:
 10533                           
 10534                           ;doprnt.c: 580: flag |= 0x04;
 10535  000924  841F               	bsf	i2printf@flag,2,c
 10536                           
 10537                           ;doprnt.c: 581: f++;
 10538  000926  4A0D               	infsnz	i2printf@f,f,c
 10539  000928  2A0E               	incf	i2printf@f+1,f,c
 10540  00092A                     i2l3235:
 10541  00092A  C00D  FFF6         	movff	i2printf@f,tblptrl
 10542  00092E  C00E  FFF7         	movff	i2printf@f+1,tblptrh
 10543  000932                     	if	0	;tblptru may be non-zero
 10544  000932                     	endif
 10545  000932                     	if	0	;tblptru may be non-zero
 10546  000932                     	endif
 10547  000932  0008               	tblrd		*
 10548  000934  50F5               	movf	tablat,w,c
 10549                           
 10550                           ; Switch size 1, requested type "space"
 10551                           ; Number of cases is 1, Range of values is 48 to 48
 10552                           ; switch strategies available:
 10553                           ; Name         Instructions Cycles
 10554                           ; simple_byte            4     3 (average)
 10555                           ;	Chosen strategy is simple_byte
 10556  000936  0A30               	xorlw	48	; case 48
 10557  000938  B4D8               	btfsc	status,2,c
 10558  00093A  D7F4               	goto	i2l3231
 10559                           
 10560                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 10561                           
 10562                           ;doprnt.c: 586: }
 10563                           
 10564                           ;doprnt.c: 585: break;
 10565  00093C  C00D  FFF6         	movff	i2printf@f,tblptrl
 10566  000940  C00E  FFF7         	movff	i2printf@f+1,tblptrh
 10567  000944                     	if	0	;tblptru may be non-zero
 10568  000944                     	endif
 10569  000944                     	if	0	;tblptru may be non-zero
 10570  000944                     	endif
 10571  000944  0008               	tblrd		*
 10572  000946  50F5               	movf	tablat,w,c
 10573  000948  ECE7  F012         	call	i2_isdigit
 10574  00094C  A0D8               	btfss	status,0,c
 10575  00094E  D06F               	goto	i2l3275
 10576                           
 10577                           ;doprnt.c: 598: width = 0;
 10578  000950  0E00               	movlw	0
 10579  000952  6E21               	movwf	i2printf@width+1,c
 10580  000954  0E00               	movlw	0
 10581  000956  6E20               	movwf	i2printf@width,c
 10582  000958                     i2l3241:
 10583                           
 10584                           ;doprnt.c: 600: width *= 10;
 10585  000958  C020  F001         	movff	i2printf@width,i2___wmul@multiplier
 10586  00095C  C021  F002         	movff	i2printf@width+1,i2___wmul@multiplier+1
 10587  000960  0E00               	movlw	0
 10588  000962  6E04               	movwf	i2___wmul@multiplicand+1,c
 10589  000964  0E0A               	movlw	10
 10590  000966  6E03               	movwf	i2___wmul@multiplicand,c
 10591  000968  ECA3  F012         	call	i2___wmul	;wreg free
 10592  00096C  C001  F020         	movff	?i2___wmul,i2printf@width
 10593  000970  C002  F021         	movff	?i2___wmul+1,i2printf@width+1
 10594                           
 10595                           ;doprnt.c: 601: width += *f++ - '0';
 10596  000974  0ED0               	movlw	208
 10597  000976  6E11               	movwf	??i2_printf& (0+255),c
 10598  000978  0EFF               	movlw	255
 10599  00097A  6E12               	movwf	(??i2_printf+1)& (0+255),c
 10600  00097C  C00D  FFF6         	movff	i2printf@f,tblptrl
 10601  000980  C00E  FFF7         	movff	i2printf@f+1,tblptrh
 10602  000984                     	if	0	;tblptru may be non-zero
 10603  000984                     	endif
 10604  000984                     	if	0	;tblptru may be non-zero
 10605  000984                     	endif
 10606  000984  0008               	tblrd		*
 10607  000986  50F5               	movf	tablat,w,c
 10608  000988  6E13               	movwf	(??i2_printf+2)& (0+255),c
 10609  00098A  6A14               	clrf	(??i2_printf+3)& (0+255),c
 10610  00098C  5011               	movf	??i2_printf,w,c
 10611  00098E  2613               	addwf	??i2_printf+2,f,c
 10612  000990  5012               	movf	??i2_printf+1,w,c
 10613  000992  2214               	addwfc	??i2_printf+3,f,c
 10614  000994  5013               	movf	??i2_printf+2,w,c
 10615  000996  2620               	addwf	i2printf@width,f,c
 10616  000998  5014               	movf	??i2_printf+3,w,c
 10617  00099A  2221               	addwfc	i2printf@width+1,f,c
 10618  00099C  4A0D               	infsnz	i2printf@f,f,c
 10619  00099E  2A0E               	incf	i2printf@f+1,f,c
 10620                           
 10621                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 10622  0009A0  C00D  FFF6         	movff	i2printf@f,tblptrl
 10623  0009A4  C00E  FFF7         	movff	i2printf@f+1,tblptrh
 10624  0009A8                     	if	0	;tblptru may be non-zero
 10625  0009A8                     	endif
 10626  0009A8                     	if	0	;tblptru may be non-zero
 10627  0009A8                     	endif
 10628  0009A8  0008               	tblrd		*
 10629  0009AA  50F5               	movf	tablat,w,c
 10630  0009AC  ECE7  F012         	call	i2_isdigit
 10631  0009B0  A0D8               	btfss	status,0,c
 10632  0009B2  D03D               	goto	i2l3275
 10633  0009B4  D7D1               	goto	i2l3241
 10634  0009B6                     i2l3249:
 10635                           
 10636                           ;doprnt.c: 721: flag |= 0x80;
 10637  0009B6  8E1F               	bsf	i2printf@flag,7,c
 10638                           
 10639                           ;doprnt.c: 723: break;
 10640  0009B8  D054               	goto	i2l3277
 10641  0009BA                     i2l3251:
 10642                           
 10643                           ;doprnt.c: 757: if(width > len)
 10644  0009BA  5020               	movf	i2printf@width,w,c
 10645  0009BC  5C1A               	subwf	i2printf@len,w,c
 10646  0009BE  5021               	movf	i2printf@width+1,w,c
 10647  0009C0  581B               	subwfb	i2printf@len+1,w,c
 10648  0009C2  B0D8               	btfsc	status,0,c
 10649  0009C4  D005               	goto	i2l3255
 10650                           
 10651                           ;doprnt.c: 758: width -= len;
 10652  0009C6  501A               	movf	i2printf@len,w,c
 10653  0009C8  5E20               	subwf	i2printf@width,f,c
 10654  0009CA  501B               	movf	i2printf@len+1,w,c
 10655  0009CC  5A21               	subwfb	i2printf@width+1,f,c
 10656  0009CE  D008               	goto	i2l3259
 10657  0009D0                     i2l3255:
 10658                           
 10659                           ;doprnt.c: 759: else
 10660                           ;doprnt.c: 760: width = 0;
 10661  0009D0  0E00               	movlw	0
 10662  0009D2  6E21               	movwf	i2printf@width+1,c
 10663  0009D4  0E00               	movlw	0
 10664  0009D6  6E20               	movwf	i2printf@width,c
 10665                           
 10666                           ;doprnt.c: 764: while(width--)
 10667  0009D8  D003               	goto	i2l3259
 10668  0009DA                     i2l3257:
 10669                           
 10670                           ;doprnt.c: 765: (putch(' ') );
 10671  0009DA  0E20               	movlw	32
 10672  0009DC  EC4D  F013         	call	i2_putch
 10673  0009E0                     i2l3259:
 10674  0009E0  0620               	decf	i2printf@width,f,c
 10675  0009E2  A0D8               	btfss	status,0,c
 10676  0009E4  0621               	decf	i2printf@width+1,f,c
 10677  0009E6  2820               	incf	i2printf@width,w,c
 10678  0009E8  E1F8               	bnz	i2l3257
 10679  0009EA  2821               	incf	i2printf@width+1,w,c
 10680  0009EC  B4D8               	btfsc	status,2,c
 10681  0009EE  D00A               	goto	i2l3265
 10682  0009F0  D7F4               	goto	i2l3257
 10683  0009F2                     i2l3261:
 10684                           
 10685                           ;doprnt.c: 768: (putch(*cp++) );
 10686  0009F2  C015  FFD9         	movff	i2printf@cp,fsr2l
 10687  0009F6  C016  FFDA         	movff	i2printf@cp+1,fsr2h
 10688  0009FA  50DF               	movf	indf2,w,c
 10689  0009FC  EC4D  F013         	call	i2_putch
 10690  000A00  4A15               	infsnz	i2printf@cp,f,c
 10691  000A02  2A16               	incf	i2printf@cp+1,f,c
 10692  000A04                     i2l3265:
 10693  000A04  061A               	decf	i2printf@len,f,c
 10694  000A06  A0D8               	btfss	status,0,c
 10695  000A08  061B               	decf	i2printf@len+1,f,c
 10696  000A0A  281A               	incf	i2printf@len,w,c
 10697  000A0C  E1F2               	bnz	i2l3261
 10698  000A0E  281B               	incf	i2printf@len+1,w,c
 10699  000A10  B4D8               	btfsc	status,2,c
 10700  000A12  D134               	goto	i2l3375
 10701  000A14  D7EE               	goto	i2l3261
 10702  000A16                     i2l3267:
 10703                           
 10704                           ;doprnt.c: 805: cp = (char *)&c;
 10705  000A16  0E22               	movlw	low i2printf@c
 10706  000A18  6E15               	movwf	i2printf@cp,c
 10707  000A1A  0E00               	movlw	high i2printf@c
 10708  000A1C  6E16               	movwf	i2printf@cp+1,c
 10709                           
 10710                           ;doprnt.c: 806: len = 1;
 10711  000A1E  0E00               	movlw	0
 10712  000A20  6E1B               	movwf	i2printf@len+1,c
 10713  000A22  0E01               	movlw	1
 10714  000A24  6E1A               	movwf	i2printf@len,c
 10715                           
 10716                           ;doprnt.c: 807: goto dostring;
 10717  000A26  D7C9               	goto	i2l3251
 10718  000A28                     i2l3271:
 10719                           
 10720                           ;doprnt.c: 818: flag |= 0xC0;
 10721  000A28  0EC0               	movlw	192
 10722  000A2A  121F               	iorwf	i2printf@flag,f,c
 10723                           
 10724                           ;doprnt.c: 822: }
 10725                           
 10726                           ;doprnt.c: 819: break;
 10727  000A2C  D01A               	goto	i2l3277
 10728  000A2E                     i2l3275:
 10729  000A2E  C00D  FFF6         	movff	i2printf@f,tblptrl
 10730  000A32  C00E  FFF7         	movff	i2printf@f+1,tblptrh
 10731  000A36  4A0D               	infsnz	i2printf@f,f,c
 10732  000A38  2A0E               	incf	i2printf@f+1,f,c
 10733  000A3A                     	if	0	;tblptru may be non-zero
 10734  000A3A                     	endif
 10735  000A3A                     	if	0	;tblptru may be non-zero
 10736  000A3A                     	endif
 10737  000A3A  0008               	tblrd		*
 10738  000A3C  CFF5 F022          	movff	tablat,i2printf@c
 10739  000A40  5022               	movf	i2printf@c,w,c
 10740                           
 10741                           ; Switch size 1, requested type "space"
 10742                           ; Number of cases is 5, Range of values is 0 to 120
 10743                           ; switch strategies available:
 10744                           ; Name         Instructions Cycles
 10745                           ; simple_byte           16     9 (average)
 10746                           ;	Chosen strategy is simple_byte
 10747  000A42  0A00               	xorlw	0	; case 0
 10748  000A44  B4D8               	btfsc	status,2,c
 10749  000A46  0012               	return	
 10750  000A48  0A64               	xorlw	100	; case 100
 10751  000A4A  B4D8               	btfsc	status,2,c
 10752  000A4C  D00A               	goto	i2l3277
 10753  000A4E  0A0D               	xorlw	13	; case 105
 10754  000A50  B4D8               	btfsc	status,2,c
 10755  000A52  D007               	goto	i2l3277
 10756  000A54  0A1C               	xorlw	28	; case 117
 10757  000A56  B4D8               	btfsc	status,2,c
 10758  000A58  D7E7               	goto	i2l3271
 10759  000A5A  0A0D               	xorlw	13	; case 120
 10760  000A5C  B4D8               	btfsc	status,2,c
 10761  000A5E  D7AB               	goto	i2l3249
 10762  000A60  D7DA               	goto	i2l3267
 10763  000A62                     i2l3277:
 10764                           
 10765                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 10766  000A62  C01F  F011         	movff	i2printf@flag,??i2_printf
 10767  000A66  0EC0               	movlw	192
 10768  000A68  1611               	andwf	??i2_printf,f,c
 10769  000A6A  A4D8               	btfss	status,2,c
 10770  000A6C  D015               	goto	i2l3289
 10771                           
 10772                           ;doprnt.c: 1253: {
 10773                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 10774  000A6E  C018  FFD9         	movff	i2printf@ap,fsr2l
 10775  000A72  C019  FFDA         	movff	i2printf@ap+1,fsr2h
 10776  000A76  CFDE F01D          	movff	postinc2,i2printf@val
 10777  000A7A  CFDD F01E          	movff	postdec2,i2printf@val+1
 10778  000A7E  0E02               	movlw	2
 10779  000A80  2618               	addwf	i2printf@ap,f,c
 10780  000A82  0E00               	movlw	0
 10781  000A84  2219               	addwfc	i2printf@ap+1,f,c
 10782                           
 10783                           ;doprnt.c: 1261: if((int)val < 0) {
 10784  000A86  AE1E               	btfss	i2printf@val+1,7,c
 10785  000A88  D044               	goto	i2l3323
 10786                           
 10787                           ;doprnt.c: 1262: flag |= 0x03;
 10788  000A8A  0E03               	movlw	3
 10789  000A8C  121F               	iorwf	i2printf@flag,f,c
 10790                           
 10791                           ;doprnt.c: 1263: val = -val;
 10792  000A8E  6C1D               	negf	i2printf@val,c
 10793  000A90  1E1E               	comf	i2printf@val+1,f,c
 10794  000A92  B0D8               	btfsc	status,0,c
 10795  000A94  2A1E               	incf	i2printf@val+1,f,c
 10796                           
 10797                           ;doprnt.c: 1264: }
 10798                           ;doprnt.c: 1266: }
 10799  000A96  D03D               	goto	i2l3323
 10800  000A98                     i2l3289:
 10801                           
 10802                           ;doprnt.c: 1268: else
 10803                           ;doprnt.c: 1273: {
 10804                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 10805  000A98  C018  FFD9         	movff	i2printf@ap,fsr2l
 10806  000A9C  C019  FFDA         	movff	i2printf@ap+1,fsr2h
 10807  000AA0  CFDE F01D          	movff	postinc2,i2printf@val
 10808  000AA4  CFDD F01E          	movff	postdec2,i2printf@val+1
 10809  000AA8  0E02               	movlw	2
 10810  000AAA  2618               	addwf	i2printf@ap,f,c
 10811  000AAC  0E00               	movlw	0
 10812  000AAE  2219               	addwfc	i2printf@ap+1,f,c
 10813                           
 10814                           ;doprnt.c: 1287: }
 10815                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 10816  000AB0  D030               	goto	i2l3323
 10817  000AB2                     i2l3293:
 10818                           
 10819                           ;doprnt.c: 1302: case 0xC0:
 10820                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10821  000AB2  0E01               	movlw	1
 10822  000AB4  6E22               	movwf	i2printf@c,c
 10823  000AB6                     i2l3295:
 10824  000AB6  0E05               	movlw	5
 10825  000AB8  1822               	xorwf	i2printf@c,w,c
 10826  000ABA  B4D8               	btfsc	status,2,c
 10827  000ABC  D035               	goto	i2l3325
 10828                           
 10829                           ;doprnt.c: 1306: if(val < dpowers[c])
 10830  000ABE  5022               	movf	i2printf@c,w,c
 10831  000AC0  0D02               	mullw	2
 10832  000AC2  0EC1               	movlw	low _dpowers
 10833  000AC4  24F3               	addwf	prodl,w,c
 10834  000AC6  6EF6               	movwf	tblptrl,c
 10835  000AC8  0EFD               	movlw	high _dpowers
 10836  000ACA  20F4               	addwfc	prodh,w,c
 10837  000ACC  6EF7               	movwf	tblptrh,c
 10838  000ACE                     	if	0	;There are less than 3 active tblptr bytes
 10839  000ACE                     	endif
 10840  000ACE  0009               	tblrd		*+
 10841  000AD0  50F5               	movf	tablat,w,c
 10842  000AD2  5C1D               	subwf	i2printf@val,w,c
 10843  000AD4  0009               	tblrd		*+
 10844  000AD6  50F5               	movf	tablat,w,c
 10845  000AD8  581E               	subwfb	i2printf@val+1,w,c
 10846  000ADA  A0D8               	btfss	status,0,c
 10847  000ADC  D025               	goto	i2l3325
 10848                           
 10849                           ;doprnt.c: 1307: break;
 10850  000ADE  2A22               	incf	i2printf@c,f,c
 10851  000AE0  D7EA               	goto	i2l3295
 10852  000AE2                     i2l3307:
 10853                           
 10854                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 10855  000AE2  0E01               	movlw	1
 10856  000AE4  6E22               	movwf	i2printf@c,c
 10857  000AE6                     i2l3309:
 10858  000AE6  0E04               	movlw	4
 10859  000AE8  1822               	xorwf	i2printf@c,w,c
 10860  000AEA  B4D8               	btfsc	status,2,c
 10861  000AEC  D01D               	goto	i2l3325
 10862                           
 10863                           ;doprnt.c: 1317: if(val < hexpowers[c])
 10864  000AEE  5022               	movf	i2printf@c,w,c
 10865  000AF0  0D02               	mullw	2
 10866  000AF2  0ECB               	movlw	low _hexpowers
 10867  000AF4  24F3               	addwf	prodl,w,c
 10868  000AF6  6EF6               	movwf	tblptrl,c
 10869  000AF8  0EFD               	movlw	high _hexpowers
 10870  000AFA  20F4               	addwfc	prodh,w,c
 10871  000AFC  6EF7               	movwf	tblptrh,c
 10872  000AFE                     	if	0	;There are less than 3 active tblptr bytes
 10873  000AFE                     	endif
 10874  000AFE  0009               	tblrd		*+
 10875  000B00  50F5               	movf	tablat,w,c
 10876  000B02  5C1D               	subwf	i2printf@val,w,c
 10877  000B04  0009               	tblrd		*+
 10878  000B06  50F5               	movf	tablat,w,c
 10879  000B08  581E               	subwfb	i2printf@val+1,w,c
 10880  000B0A  A0D8               	btfss	status,0,c
 10881  000B0C  D00D               	goto	i2l3325
 10882                           
 10883                           ;doprnt.c: 1318: break;
 10884  000B0E  2A22               	incf	i2printf@c,f,c
 10885  000B10  D7EA               	goto	i2l3309
 10886  000B12                     i2l3323:
 10887  000B12  501F               	movf	i2printf@flag,w,c
 10888  000B14  0BC0               	andlw	192
 10889                           
 10890                           ; Switch size 1, requested type "space"
 10891                           ; Number of cases is 3, Range of values is 0 to 192
 10892                           ; switch strategies available:
 10893                           ; Name         Instructions Cycles
 10894                           ; simple_byte           10     6 (average)
 10895                           ;	Chosen strategy is simple_byte
 10896  000B16  0A00               	xorlw	0	; case 0
 10897  000B18  B4D8               	btfsc	status,2,c
 10898  000B1A  D7CB               	goto	i2l3293
 10899  000B1C  0A80               	xorlw	128	; case 128
 10900  000B1E  B4D8               	btfsc	status,2,c
 10901  000B20  D7E0               	goto	i2l3307
 10902  000B22  0A40               	xorlw	64	; case 192
 10903  000B24  B4D8               	btfsc	status,2,c
 10904  000B26  D7C5               	goto	i2l3293
 10905  000B28                     i2l3325:
 10906                           
 10907                           ;doprnt.c: 1345: if(width && flag & 0x03)
 10908  000B28  5020               	movf	i2printf@width,w,c
 10909  000B2A  1021               	iorwf	i2printf@width+1,w,c
 10910  000B2C  B4D8               	btfsc	status,2,c
 10911  000B2E  D009               	goto	i2l3331
 10912  000B30  C01F  F011         	movff	i2printf@flag,??i2_printf
 10913  000B34  0E03               	movlw	3
 10914  000B36  1611               	andwf	??i2_printf,f,c
 10915  000B38  B4D8               	btfsc	status,2,c
 10916  000B3A  D003               	goto	i2l3331
 10917                           
 10918                           ;doprnt.c: 1346: width--;
 10919  000B3C  0620               	decf	i2printf@width,f,c
 10920  000B3E  A0D8               	btfss	status,0,c
 10921  000B40  0621               	decf	i2printf@width+1,f,c
 10922  000B42                     i2l3331:
 10923                           
 10924                           ;doprnt.c: 1381: if(width > c)
 10925  000B42  0E80               	movlw	128
 10926  000B44  BE22               	btfsc	i2printf@c,7,c
 10927  000B46  0E7F               	movlw	127
 10928  000B48  6E11               	movwf	??i2_printf& (0+255),c
 10929  000B4A  5020               	movf	i2printf@width,w,c
 10930  000B4C  5C22               	subwf	i2printf@c,w,c
 10931  000B4E  5021               	movf	i2printf@width+1,w,c
 10932  000B50  0A80               	xorlw	128
 10933  000B52  5811               	subwfb	??i2_printf& (0+255),w,c
 10934  000B54  B0D8               	btfsc	status,0,c
 10935  000B56  D007               	goto	i2l3335
 10936                           
 10937                           ;doprnt.c: 1382: width -= c;
 10938  000B58  5022               	movf	i2printf@c,w,c
 10939  000B5A  5E20               	subwf	i2printf@width,f,c
 10940  000B5C  0E00               	movlw	0
 10941  000B5E  BE22               	btfsc	i2printf@c,7,c
 10942  000B60  0EFF               	movlw	255
 10943  000B62  5A21               	subwfb	i2printf@width+1,f,c
 10944  000B64  D004               	goto	i2l3337
 10945  000B66                     i2l3335:
 10946                           
 10947                           ;doprnt.c: 1383: else
 10948                           ;doprnt.c: 1384: width = 0;
 10949  000B66  0E00               	movlw	0
 10950  000B68  6E21               	movwf	i2printf@width+1,c
 10951  000B6A  0E00               	movlw	0
 10952  000B6C  6E20               	movwf	i2printf@width,c
 10953  000B6E                     i2l3337:
 10954                           
 10955                           ;doprnt.c: 1387: if(flag & 0x04) {
 10956  000B6E  A41F               	btfss	i2printf@flag,2,c
 10957  000B70  D014               	goto	i2l3349
 10958                           
 10959                           ;doprnt.c: 1392: if(flag & 0x03)
 10960  000B72  C01F  F011         	movff	i2printf@flag,??i2_printf
 10961  000B76  0E03               	movlw	3
 10962  000B78  1611               	andwf	??i2_printf,f,c
 10963  000B7A  B4D8               	btfsc	status,2,c
 10964  000B7C  D003               	goto	i2l3343
 10965                           
 10966                           ;doprnt.c: 1393: (putch('-') );
 10967  000B7E  0E2D               	movlw	45
 10968  000B80  EC4D  F013         	call	i2_putch
 10969  000B84                     i2l3343:
 10970                           
 10971                           ;doprnt.c: 1415: if(width)
 10972  000B84  5020               	movf	i2printf@width,w,c
 10973  000B86  1021               	iorwf	i2printf@width+1,w,c
 10974  000B88  B4D8               	btfsc	status,2,c
 10975  000B8A  D01E               	goto	i2l3359
 10976                           
 10977                           ;doprnt.c: 1417: (putch('0') );
 10978                           
 10979                           ;doprnt.c: 1416: do
 10980  000B8C  0E30               	movlw	48
 10981  000B8E  EC4D  F013         	call	i2_putch
 10982                           
 10983                           ;doprnt.c: 1418: while(--width);
 10984  000B92  0620               	decf	i2printf@width,f,c
 10985  000B94  A0D8               	btfss	status,0,c
 10986  000B96  0621               	decf	i2printf@width+1,f,c
 10987  000B98  D7F5               	goto	i2l3343
 10988  000B9A                     i2l3349:
 10989                           
 10990                           ;doprnt.c: 1422: {
 10991                           ;doprnt.c: 1424: if(width
 10992                           ;doprnt.c: 1428: )
 10993  000B9A  5020               	movf	i2printf@width,w,c
 10994  000B9C  1021               	iorwf	i2printf@width+1,w,c
 10995  000B9E  B4D8               	btfsc	status,2,c
 10996  000BA0  D00A               	goto	i2l3355
 10997  000BA2                     i2l3351:
 10998                           
 10999                           ;doprnt.c: 1430: (putch(' ') );
 11000  000BA2  0E20               	movlw	32
 11001  000BA4  EC4D  F013         	call	i2_putch
 11002                           
 11003                           ;doprnt.c: 1431: while(--width);
 11004  000BA8  0620               	decf	i2printf@width,f,c
 11005  000BAA  A0D8               	btfss	status,0,c
 11006  000BAC  0621               	decf	i2printf@width+1,f,c
 11007  000BAE  5020               	movf	i2printf@width,w,c
 11008  000BB0  1021               	iorwf	i2printf@width+1,w,c
 11009  000BB2  A4D8               	btfss	status,2,c
 11010  000BB4  D7F6               	goto	i2l3351
 11011  000BB6                     i2l3355:
 11012                           
 11013                           ;doprnt.c: 1438: if(flag & 0x03)
 11014  000BB6  C01F  F011         	movff	i2printf@flag,??i2_printf
 11015  000BBA  0E03               	movlw	3
 11016  000BBC  1611               	andwf	??i2_printf,f,c
 11017  000BBE  B4D8               	btfsc	status,2,c
 11018  000BC0  D003               	goto	i2l3359
 11019                           
 11020                           ;doprnt.c: 1439: (putch('-') );
 11021  000BC2  0E2D               	movlw	45
 11022  000BC4  EC4D  F013         	call	i2_putch
 11023  000BC8                     i2l3359:
 11024                           
 11025                           ;doprnt.c: 1469: }
 11026                           ;doprnt.c: 1472: prec = c;
 11027  000BC8  C022  F01C         	movff	i2printf@c,i2printf@prec
 11028                           
 11029                           ;doprnt.c: 1474: while(prec--) {
 11030  000BCC  D053               	goto	i2l3373
 11031  000BCE                     i2l3361:
 11032                           
 11033                           ;doprnt.c: 1486: case 0xC0:
 11034                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 11035  000BCE  501C               	movf	i2printf@prec,w,c
 11036  000BD0  0D02               	mullw	2
 11037  000BD2  0EC1               	movlw	low _dpowers
 11038  000BD4  24F3               	addwf	prodl,w,c
 11039  000BD6  6EF6               	movwf	tblptrl,c
 11040  000BD8  0EFD               	movlw	high _dpowers
 11041  000BDA  20F4               	addwfc	prodh,w,c
 11042  000BDC  6EF7               	movwf	tblptrh,c
 11043  000BDE                     	if	0	;There are less than 3 active tblptr bytes
 11044  000BDE                     	endif
 11045  000BDE  0009               	tblrd		*+
 11046  000BE0  CFF5 F003          	movff	tablat,i2___lwdiv@divisor
 11047  000BE4  000A               	tblrd		*-
 11048  000BE6  CFF5 F004          	movff	tablat,i2___lwdiv@divisor+1
 11049  000BEA  C01D  F001         	movff	i2printf@val,i2___lwdiv@dividend
 11050  000BEE  C01E  F002         	movff	i2printf@val+1,i2___lwdiv@dividend+1
 11051  000BF2  ECFA  F010         	call	i2___lwdiv	;wreg free
 11052  000BF6  C001  F008         	movff	?i2___lwdiv,i2___lwmod@dividend
 11053  000BFA  C002  F009         	movff	?i2___lwdiv+1,i2___lwmod@dividend+1
 11054  000BFE  0E00               	movlw	0
 11055  000C00  6E0B               	movwf	i2___lwmod@divisor+1,c
 11056  000C02  0E0A               	movlw	10
 11057  000C04  6E0A               	movwf	i2___lwmod@divisor,c
 11058  000C06  ECB4  F011         	call	i2___lwmod	;wreg free
 11059  000C0A  5008               	movf	?i2___lwmod,w,c
 11060  000C0C  0F30               	addlw	48
 11061  000C0E  6E22               	movwf	i2printf@c,c
 11062                           
 11063                           ;doprnt.c: 1491: break;
 11064  000C10  D02E               	goto	i2l3371
 11065  000C12                     i2l3363:
 11066                           
 11067                           ;doprnt.c: 1499: {
 11068                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 11069  000C12  C01D  F001         	movff	i2printf@val,i2___lwdiv@dividend
 11070  000C16  C01E  F002         	movff	i2printf@val+1,i2___lwdiv@dividend+1
 11071  000C1A  501C               	movf	i2printf@prec,w,c
 11072  000C1C  0D02               	mullw	2
 11073  000C1E  0ECB               	movlw	low _hexpowers
 11074  000C20  24F3               	addwf	prodl,w,c
 11075  000C22  6EF6               	movwf	tblptrl,c
 11076  000C24  0EFD               	movlw	high _hexpowers
 11077  000C26  20F4               	addwfc	prodh,w,c
 11078  000C28  6EF7               	movwf	tblptrh,c
 11079  000C2A                     	if	0	;There are less than 3 active tblptr bytes
 11080  000C2A                     	endif
 11081  000C2A  0009               	tblrd		*+
 11082  000C2C  CFF5 F003          	movff	tablat,i2___lwdiv@divisor
 11083  000C30  000A               	tblrd		*-
 11084  000C32  CFF5 F004          	movff	tablat,i2___lwdiv@divisor+1
 11085  000C36  ECFA  F010         	call	i2___lwdiv	;wreg free
 11086  000C3A  5001               	movf	?i2___lwdiv,w,c
 11087  000C3C  0B0F               	andlw	15
 11088  000C3E  6E17               	movwf	i2printf@idx,c
 11089                           
 11090                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
 11091  000C40  5017               	movf	i2printf@idx,w,c
 11092  000C42  0D01               	mullw	1
 11093  000C44  0E9D               	movlw	low STR_47
 11094  000C46  24F3               	addwf	prodl,w,c
 11095  000C48  6EF6               	movwf	tblptrl,c
 11096  000C4A  0EFF               	movlw	high STR_47
 11097  000C4C  20F4               	addwfc	prodh,w,c
 11098  000C4E  6EF7               	movwf	tblptrh,c
 11099  000C50                     	if	0	;There are less than 3 active tblptr bytes
 11100  000C50                     	endif
 11101  000C50  0008               	tblrd		*
 11102  000C52  CFF5 F022          	movff	tablat,i2printf@c
 11103                           
 11104                           ;doprnt.c: 1523: }
 11105                           
 11106                           ;doprnt.c: 1508: }
 11107                           ;doprnt.c: 1510: break;
 11108  000C56  D00B               	goto	i2l3371
 11109  000C58                     i2l3369:
 11110  000C58  501F               	movf	i2printf@flag,w,c
 11111  000C5A  0BC0               	andlw	192
 11112                           
 11113                           ; Switch size 1, requested type "space"
 11114                           ; Number of cases is 3, Range of values is 0 to 192
 11115                           ; switch strategies available:
 11116                           ; Name         Instructions Cycles
 11117                           ; simple_byte           10     6 (average)
 11118                           ;	Chosen strategy is simple_byte
 11119  000C5C  0A00               	xorlw	0	; case 0
 11120  000C5E  B4D8               	btfsc	status,2,c
 11121  000C60  D7B6               	goto	i2l3361
 11122  000C62  0A80               	xorlw	128	; case 128
 11123  000C64  B4D8               	btfsc	status,2,c
 11124  000C66  D7D5               	goto	i2l3363
 11125  000C68  0A40               	xorlw	64	; case 192
 11126  000C6A  B4D8               	btfsc	status,2,c
 11127  000C6C  D7B0               	goto	i2l3361
 11128  000C6E                     i2l3371:
 11129                           
 11130                           ;doprnt.c: 1524: (putch(c) );
 11131  000C6E  5022               	movf	i2printf@c,w,c
 11132  000C70  EC4D  F013         	call	i2_putch
 11133  000C74                     i2l3373:
 11134  000C74  061C               	decf	i2printf@prec,f,c
 11135  000C76  281C               	incf	i2printf@prec,w,c
 11136  000C78  A4D8               	btfss	status,2,c
 11137  000C7A  D7EE               	goto	i2l3369
 11138  000C7C                     i2l3375:
 11139  000C7C  C00D  FFF6         	movff	i2printf@f,tblptrl
 11140  000C80  C00E  FFF7         	movff	i2printf@f+1,tblptrh
 11141  000C84  4A0D               	infsnz	i2printf@f,f,c
 11142  000C86  2A0E               	incf	i2printf@f+1,f,c
 11143  000C88                     	if	0	;tblptru may be non-zero
 11144  000C88                     	endif
 11145  000C88                     	if	0	;tblptru may be non-zero
 11146  000C88                     	endif
 11147  000C88  0008               	tblrd		*
 11148  000C8A  CFF5 F022          	movff	tablat,i2printf@c
 11149  000C8E  5022               	movf	i2printf@c,w,c
 11150  000C90  B4D8               	btfsc	status,2,c
 11151  000C92  0012               	return	
 11152  000C94  D638               	goto	i2l3225
 11153  000C96                     __end_ofi2_printf:
 11154                           	opt stack 0
 11155                           pclatu	equ	0xFFB
 11156                           pclath	equ	0xFFA
 11157                           tblptru	equ	0xFF8
 11158                           tblptrh	equ	0xFF7
 11159                           tblptrl	equ	0xFF6
 11160                           tablat	equ	0xFF5
 11161                           prodh	equ	0xFF4
 11162                           prodl	equ	0xFF3
 11163                           intcon	equ	0xFF2
 11164                           intcon2	equ	0xFF1
 11165                           intcon3	equ	0xFF0
 11166                           postinc0	equ	0xFEE
 11167                           fsr0h	equ	0xFEA
 11168                           fsr0l	equ	0xFE9
 11169                           wreg	equ	0xFE8
 11170                           postdec1	equ	0xFE5
 11171                           plusw1	equ	0xFE3
 11172                           fsr1h	equ	0xFE2
 11173                           fsr1l	equ	0xFE1
 11174                           indf2	equ	0xFDF
 11175                           postinc2	equ	0xFDE
 11176                           postdec2	equ	0xFDD
 11177                           plusw2	equ	0xFDB
 11178                           fsr2h	equ	0xFDA
 11179                           fsr2l	equ	0xFD9
 11180                           status	equ	0xFD8
 11181                           
 11182 ;; *************** function i2_putch *****************
 11183 ;; Defined at:
 11184 ;;		line 25 in file "lcd.c"
 11185 ;; Parameters:    Size  Location     Type
 11186 ;;  data            1    wreg     unsigned char 
 11187 ;; Auto vars:     Size  Location     Type
 11188 ;;  data            1    2[COMRAM] unsigned char 
 11189 ;; Return value:  Size  Location     Type
 11190 ;;                  1    wreg      void 
 11191 ;; Registers used:
 11192 ;;		wreg, status,2, status,0, cstack
 11193 ;; Tracked objects:
 11194 ;;		On entry : 0/0
 11195 ;;		On exit  : 0/0
 11196 ;;		Unchanged: 0/0
 11197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11199 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11201 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11202 ;;Total ram usage:        1 bytes
 11203 ;; Hardware stack levels used:    1
 11204 ;; Hardware stack levels required when called:    1
 11205 ;; This function calls:
 11206 ;;		i2_lcdNibble
 11207 ;; This function is called by:
 11208 ;;		i2_printf
 11209 ;; This function uses a non-reentrant model
 11210 ;;
 11211                           
 11212                           	psect	text54
 11213  00269A                     __ptext54:
 11214                           	opt stack 0
 11215  00269A                     i2_putch:
 11216                           	opt stack 22
 11217                           
 11218                           ;incstack = 0
 11219                           ;i2putch@data stored from wreg
 11220  00269A  6E03               	movwf	i2putch@data,c
 11221                           
 11222                           ;lcd.c: 26: LATDbits.LATD2 = 1;
 11223  00269C  848C               	bsf	3980,2,c	;volatile
 11224                           
 11225                           ;lcd.c: 27: lcdNibble(data);
 11226  00269E  5003               	movf	i2putch@data,w,c
 11227  0026A0  ECCF  F010         	call	i2_lcdNibble
 11228  0026A4  0012               	return		;funcret
 11229  0026A6                     __end_ofi2_putch:
 11230                           	opt stack 0
 11231                           pclatu	equ	0xFFB
 11232                           pclath	equ	0xFFA
 11233                           tblptru	equ	0xFF8
 11234                           tblptrh	equ	0xFF7
 11235                           tblptrl	equ	0xFF6
 11236                           tablat	equ	0xFF5
 11237                           prodh	equ	0xFF4
 11238                           prodl	equ	0xFF3
 11239                           intcon	equ	0xFF2
 11240                           intcon2	equ	0xFF1
 11241                           intcon3	equ	0xFF0
 11242                           postinc0	equ	0xFEE
 11243                           fsr0h	equ	0xFEA
 11244                           fsr0l	equ	0xFE9
 11245                           wreg	equ	0xFE8
 11246                           postdec1	equ	0xFE5
 11247                           plusw1	equ	0xFE3
 11248                           fsr1h	equ	0xFE2
 11249                           fsr1l	equ	0xFE1
 11250                           indf2	equ	0xFDF
 11251                           postinc2	equ	0xFDE
 11252                           postdec2	equ	0xFDD
 11253                           plusw2	equ	0xFDB
 11254                           fsr2h	equ	0xFDA
 11255                           fsr2l	equ	0xFD9
 11256                           status	equ	0xFD8
 11257                           
 11258 ;; *************** function i2_isdigit *****************
 11259 ;; Defined at:
 11260 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\isdigit.c"
 11261 ;; Parameters:    Size  Location     Type
 11262 ;;  c               1    wreg     unsigned char 
 11263 ;; Auto vars:     Size  Location     Type
 11264 ;;  c               1    2[COMRAM] unsigned char 
 11265 ;; Return value:  Size  Location     Type
 11266 ;;		None               void
 11267 ;; Registers used:
 11268 ;;		wreg, status,2, status,0
 11269 ;; Tracked objects:
 11270 ;;		On entry : 0/0
 11271 ;;		On exit  : 0/0
 11272 ;;		Unchanged: 0/0
 11273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11275 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11276 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11277 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11278 ;;Total ram usage:        3 bytes
 11279 ;; Hardware stack levels used:    1
 11280 ;; This function calls:
 11281 ;;		Nothing
 11282 ;; This function is called by:
 11283 ;;		i2_printf
 11284 ;; This function uses a non-reentrant model
 11285 ;;
 11286                           
 11287                           	psect	text55
 11288  0025CE                     __ptext55:
 11289                           	opt stack 0
 11290  0025CE                     i2_isdigit:
 11291                           	opt stack 23
 11292                           
 11293                           ;incstack = 0
 11294                           ;i2isdigit@c stored from wreg
 11295  0025CE  6E03               	movwf	i2isdigit@c,c
 11296  0025D0  0E00               	movlw	0
 11297  0025D2  6E02               	movwf	i2_isdigit$1079,c
 11298  0025D4  0E3A               	movlw	58
 11299  0025D6  6003               	cpfslt	i2isdigit@c,c
 11300  0025D8  D005               	goto	i2l3023
 11301  0025DA  0E2F               	movlw	47
 11302  0025DC  6403               	cpfsgt	i2isdigit@c,c
 11303  0025DE  D002               	goto	i2l3023
 11304  0025E0  0E01               	movlw	1
 11305  0025E2  6E02               	movwf	i2_isdigit$1079,c
 11306  0025E4                     i2l3023:
 11307  0025E4  C002  F001         	movff	i2_isdigit$1079,??i2_isdigit
 11308  0025E8  3001               	rrcf	??i2_isdigit,w,c
 11309  0025EA  0012               	return	
 11310  0025EC                     __end_ofi2_isdigit:
 11311                           	opt stack 0
 11312                           pclatu	equ	0xFFB
 11313                           pclath	equ	0xFFA
 11314                           tblptru	equ	0xFF8
 11315                           tblptrh	equ	0xFF7
 11316                           tblptrl	equ	0xFF6
 11317                           tablat	equ	0xFF5
 11318                           prodh	equ	0xFF4
 11319                           prodl	equ	0xFF3
 11320                           intcon	equ	0xFF2
 11321                           intcon2	equ	0xFF1
 11322                           intcon3	equ	0xFF0
 11323                           postinc0	equ	0xFEE
 11324                           fsr0h	equ	0xFEA
 11325                           fsr0l	equ	0xFE9
 11326                           wreg	equ	0xFE8
 11327                           postdec1	equ	0xFE5
 11328                           plusw1	equ	0xFE3
 11329                           fsr1h	equ	0xFE2
 11330                           fsr1l	equ	0xFE1
 11331                           indf2	equ	0xFDF
 11332                           postinc2	equ	0xFDE
 11333                           postdec2	equ	0xFDD
 11334                           plusw2	equ	0xFDB
 11335                           fsr2h	equ	0xFDA
 11336                           fsr2l	equ	0xFD9
 11337                           status	equ	0xFD8
 11338                           
 11339 ;; *************** function i2___wmul *****************
 11340 ;; Defined at:
 11341 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
 11342 ;; Parameters:    Size  Location     Type
 11343 ;;  multiplier      2    0[COMRAM] unsigned int 
 11344 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11345 ;; Auto vars:     Size  Location     Type
 11346 ;;  __wmul          2    4[COMRAM] unsigned int 
 11347 ;; Return value:  Size  Location     Type
 11348 ;;                  2    0[COMRAM] unsigned int 
 11349 ;; Registers used:
 11350 ;;		wreg, status,2, status,0, prodl, prodh
 11351 ;; Tracked objects:
 11352 ;;		On entry : 0/0
 11353 ;;		On exit  : 0/0
 11354 ;;		Unchanged: 0/0
 11355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11356 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11357 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11359 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11360 ;;Total ram usage:        6 bytes
 11361 ;; Hardware stack levels used:    1
 11362 ;; This function calls:
 11363 ;;		Nothing
 11364 ;; This function is called by:
 11365 ;;		_simulate
 11366 ;;		_HexDecToDec2
 11367 ;;		_WriteRun
 11368 ;;		i2_printf
 11369 ;; This function uses a non-reentrant model
 11370 ;;
 11371                           
 11372                           	psect	text56
 11373  002546                     __ptext56:
 11374                           	opt stack 0
 11375  002546                     i2___wmul:
 11376                           	opt stack 23
 11377                           
 11378                           ;incstack = 0
 11379  002546  5001               	movf	i2___wmul@multiplier,w,c
 11380  002548  0203               	mulwf	i2___wmul@multiplicand,c
 11381  00254A  CFF3 F005          	movff	prodl,i2___wmul@product
 11382  00254E  CFF4 F006          	movff	prodh,i2___wmul@product+1
 11383  002552  5001               	movf	i2___wmul@multiplier,w,c
 11384  002554  0204               	mulwf	i2___wmul@multiplicand+1,c
 11385  002556  50F3               	movf	prodl,w,c
 11386  002558  2606               	addwf	i2___wmul@product+1,f,c
 11387  00255A  5002               	movf	i2___wmul@multiplier+1,w,c
 11388  00255C  0203               	mulwf	i2___wmul@multiplicand,c
 11389  00255E  50F3               	movf	prodl,w,c
 11390  002560  2606               	addwf	i2___wmul@product+1,f,c
 11391  002562  C005  F001         	movff	i2___wmul@product,?i2___wmul
 11392  002566  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 11393  00256A  0012               	return	
 11394  00256C                     __end_ofi2___wmul:
 11395                           	opt stack 0
 11396                           pclatu	equ	0xFFB
 11397                           pclath	equ	0xFFA
 11398                           tblptru	equ	0xFF8
 11399                           tblptrh	equ	0xFF7
 11400                           tblptrl	equ	0xFF6
 11401                           tablat	equ	0xFF5
 11402                           prodh	equ	0xFF4
 11403                           prodl	equ	0xFF3
 11404                           intcon	equ	0xFF2
 11405                           intcon2	equ	0xFF1
 11406                           intcon3	equ	0xFF0
 11407                           postinc0	equ	0xFEE
 11408                           fsr0h	equ	0xFEA
 11409                           fsr0l	equ	0xFE9
 11410                           wreg	equ	0xFE8
 11411                           postdec1	equ	0xFE5
 11412                           plusw1	equ	0xFE3
 11413                           fsr1h	equ	0xFE2
 11414                           fsr1l	equ	0xFE1
 11415                           indf2	equ	0xFDF
 11416                           postinc2	equ	0xFDE
 11417                           postdec2	equ	0xFDD
 11418                           plusw2	equ	0xFDB
 11419                           fsr2h	equ	0xFDA
 11420                           fsr2l	equ	0xFD9
 11421                           status	equ	0xFD8
 11422                           
 11423 ;; *************** function i2___lwmod *****************
 11424 ;; Defined at:
 11425 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
 11426 ;; Parameters:    Size  Location     Type
 11427 ;;  dividend        2    7[COMRAM] unsigned int 
 11428 ;;  divisor         2    9[COMRAM] unsigned int 
 11429 ;; Auto vars:     Size  Location     Type
 11430 ;;  __lwmod         1   11[COMRAM] unsigned char 
 11431 ;; Return value:  Size  Location     Type
 11432 ;;                  2    7[COMRAM] unsigned int 
 11433 ;; Registers used:
 11434 ;;		wreg, status,2, status,0
 11435 ;; Tracked objects:
 11436 ;;		On entry : 0/0
 11437 ;;		On exit  : 0/0
 11438 ;;		Unchanged: 0/0
 11439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11440 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11441 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11443 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11444 ;;Total ram usage:        5 bytes
 11445 ;; Hardware stack levels used:    1
 11446 ;; This function calls:
 11447 ;;		Nothing
 11448 ;; This function is called by:
 11449 ;;		i2_printf
 11450 ;; This function uses a non-reentrant model
 11451 ;;
 11452                           
 11453                           	psect	text57
 11454  002368                     __ptext57:
 11455                           	opt stack 0
 11456  002368                     i2___lwmod:
 11457                           	opt stack 23
 11458                           
 11459                           ;incstack = 0
 11460  002368  500A               	movf	i2___lwmod@divisor,w,c
 11461  00236A  100B               	iorwf	i2___lwmod@divisor+1,w,c
 11462  00236C  B4D8               	btfsc	status,2,c
 11463  00236E  D018               	goto	i2l984
 11464  002370  0E01               	movlw	1
 11465  002372  6E0C               	movwf	i2___lwmod@counter,c
 11466  002374  D004               	goto	i2l3055
 11467  002376                     i2l3053:
 11468  002376  90D8               	bcf	status,0,c
 11469  002378  360A               	rlcf	i2___lwmod@divisor,f,c
 11470  00237A  360B               	rlcf	i2___lwmod@divisor+1,f,c
 11471  00237C  2A0C               	incf	i2___lwmod@counter,f,c
 11472  00237E                     i2l3055:
 11473  00237E  AE0B               	btfss	i2___lwmod@divisor+1,7,c
 11474  002380  D7FA               	goto	i2l3053
 11475  002382                     i2l3057:
 11476  002382  500A               	movf	i2___lwmod@divisor,w,c
 11477  002384  5C08               	subwf	i2___lwmod@dividend,w,c
 11478  002386  500B               	movf	i2___lwmod@divisor+1,w,c
 11479  002388  5809               	subwfb	i2___lwmod@dividend+1,w,c
 11480  00238A  A0D8               	btfss	status,0,c
 11481  00238C  D004               	goto	i2l3061
 11482  00238E  500A               	movf	i2___lwmod@divisor,w,c
 11483  002390  5E08               	subwf	i2___lwmod@dividend,f,c
 11484  002392  500B               	movf	i2___lwmod@divisor+1,w,c
 11485  002394  5A09               	subwfb	i2___lwmod@dividend+1,f,c
 11486  002396                     i2l3061:
 11487  002396  90D8               	bcf	status,0,c
 11488  002398  320B               	rrcf	i2___lwmod@divisor+1,f,c
 11489  00239A  320A               	rrcf	i2___lwmod@divisor,f,c
 11490  00239C  2E0C               	decfsz	i2___lwmod@counter,f,c
 11491  00239E  D7F1               	goto	i2l3057
 11492  0023A0                     i2l984:
 11493  0023A0  C008  F008         	movff	i2___lwmod@dividend,?i2___lwmod
 11494  0023A4  C009  F009         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
 11495  0023A8  0012               	return		;funcret
 11496  0023AA                     __end_ofi2___lwmod:
 11497                           	opt stack 0
 11498                           pclatu	equ	0xFFB
 11499                           pclath	equ	0xFFA
 11500                           tblptru	equ	0xFF8
 11501                           tblptrh	equ	0xFF7
 11502                           tblptrl	equ	0xFF6
 11503                           tablat	equ	0xFF5
 11504                           prodh	equ	0xFF4
 11505                           prodl	equ	0xFF3
 11506                           intcon	equ	0xFF2
 11507                           intcon2	equ	0xFF1
 11508                           intcon3	equ	0xFF0
 11509                           postinc0	equ	0xFEE
 11510                           fsr0h	equ	0xFEA
 11511                           fsr0l	equ	0xFE9
 11512                           wreg	equ	0xFE8
 11513                           postdec1	equ	0xFE5
 11514                           plusw1	equ	0xFE3
 11515                           fsr1h	equ	0xFE2
 11516                           fsr1l	equ	0xFE1
 11517                           indf2	equ	0xFDF
 11518                           postinc2	equ	0xFDE
 11519                           postdec2	equ	0xFDD
 11520                           plusw2	equ	0xFDB
 11521                           fsr2h	equ	0xFDA
 11522                           fsr2l	equ	0xFD9
 11523                           status	equ	0xFD8
 11524                           
 11525 ;; *************** function i2___lwdiv *****************
 11526 ;; Defined at:
 11527 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
 11528 ;; Parameters:    Size  Location     Type
 11529 ;;  dividend        2    0[COMRAM] unsigned int 
 11530 ;;  divisor         2    2[COMRAM] unsigned int 
 11531 ;; Auto vars:     Size  Location     Type
 11532 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 11533 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 11534 ;; Return value:  Size  Location     Type
 11535 ;;                  2    0[COMRAM] unsigned int 
 11536 ;; Registers used:
 11537 ;;		wreg, status,2, status,0
 11538 ;; Tracked objects:
 11539 ;;		On entry : 0/0
 11540 ;;		On exit  : 0/0
 11541 ;;		Unchanged: 0/0
 11542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11543 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11544 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11546 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11547 ;;Total ram usage:        7 bytes
 11548 ;; Hardware stack levels used:    1
 11549 ;; This function calls:
 11550 ;;		Nothing
 11551 ;; This function is called by:
 11552 ;;		i2_printf
 11553 ;; This function uses a non-reentrant model
 11554 ;;
 11555                           
 11556                           	psect	text58
 11557  0021F4                     __ptext58:
 11558                           	opt stack 0
 11559  0021F4                     i2___lwdiv:
 11560                           	opt stack 23
 11561                           
 11562                           ;incstack = 0
 11563  0021F4  0E00               	movlw	0
 11564  0021F6  6E06               	movwf	i2___lwdiv@quotient+1,c
 11565  0021F8  0E00               	movlw	0
 11566  0021FA  6E05               	movwf	i2___lwdiv@quotient,c
 11567  0021FC  5003               	movf	i2___lwdiv@divisor,w,c
 11568  0021FE  1004               	iorwf	i2___lwdiv@divisor+1,w,c
 11569  002200  B4D8               	btfsc	status,2,c
 11570  002202  D01C               	goto	i2l974
 11571  002204  0E01               	movlw	1
 11572  002206  6E07               	movwf	i2___lwdiv@counter,c
 11573  002208  D004               	goto	i2l3035
 11574  00220A                     i2l3033:
 11575  00220A  90D8               	bcf	status,0,c
 11576  00220C  3603               	rlcf	i2___lwdiv@divisor,f,c
 11577  00220E  3604               	rlcf	i2___lwdiv@divisor+1,f,c
 11578  002210  2A07               	incf	i2___lwdiv@counter,f,c
 11579  002212                     i2l3035:
 11580  002212  AE04               	btfss	i2___lwdiv@divisor+1,7,c
 11581  002214  D7FA               	goto	i2l3033
 11582  002216                     i2l3037:
 11583  002216  90D8               	bcf	status,0,c
 11584  002218  3605               	rlcf	i2___lwdiv@quotient,f,c
 11585  00221A  3606               	rlcf	i2___lwdiv@quotient+1,f,c
 11586  00221C  5003               	movf	i2___lwdiv@divisor,w,c
 11587  00221E  5C01               	subwf	i2___lwdiv@dividend,w,c
 11588  002220  5004               	movf	i2___lwdiv@divisor+1,w,c
 11589  002222  5802               	subwfb	i2___lwdiv@dividend+1,w,c
 11590  002224  A0D8               	btfss	status,0,c
 11591  002226  D005               	goto	i2l3045
 11592  002228  5003               	movf	i2___lwdiv@divisor,w,c
 11593  00222A  5E01               	subwf	i2___lwdiv@dividend,f,c
 11594  00222C  5004               	movf	i2___lwdiv@divisor+1,w,c
 11595  00222E  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
 11596  002230  8005               	bsf	i2___lwdiv@quotient,0,c
 11597  002232                     i2l3045:
 11598  002232  90D8               	bcf	status,0,c
 11599  002234  3204               	rrcf	i2___lwdiv@divisor+1,f,c
 11600  002236  3203               	rrcf	i2___lwdiv@divisor,f,c
 11601  002238  2E07               	decfsz	i2___lwdiv@counter,f,c
 11602  00223A  D7ED               	goto	i2l3037
 11603  00223C                     i2l974:
 11604  00223C  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
 11605  002240  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 11606  002244  0012               	return		;funcret
 11607  002246                     __end_ofi2___lwdiv:
 11608                           	opt stack 0
 11609                           pclatu	equ	0xFFB
 11610                           pclath	equ	0xFFA
 11611                           tblptru	equ	0xFF8
 11612                           tblptrh	equ	0xFF7
 11613                           tblptrl	equ	0xFF6
 11614                           tablat	equ	0xFF5
 11615                           prodh	equ	0xFF4
 11616                           prodl	equ	0xFF3
 11617                           intcon	equ	0xFF2
 11618                           intcon2	equ	0xFF1
 11619                           intcon3	equ	0xFF0
 11620                           postinc0	equ	0xFEE
 11621                           fsr0h	equ	0xFEA
 11622                           fsr0l	equ	0xFE9
 11623                           wreg	equ	0xFE8
 11624                           postdec1	equ	0xFE5
 11625                           plusw1	equ	0xFE3
 11626                           fsr1h	equ	0xFE2
 11627                           fsr1l	equ	0xFE1
 11628                           indf2	equ	0xFDF
 11629                           postinc2	equ	0xFDE
 11630                           postdec2	equ	0xFDD
 11631                           plusw2	equ	0xFDB
 11632                           fsr2h	equ	0xFDA
 11633                           fsr2l	equ	0xFD9
 11634                           status	equ	0xFD8
 11635                           
 11636 ;; *************** function i2_lcdInst *****************
 11637 ;; Defined at:
 11638 ;;		line 20 in file "lcd.c"
 11639 ;; Parameters:    Size  Location     Type
 11640 ;;  data            1    wreg     unsigned char 
 11641 ;; Auto vars:     Size  Location     Type
 11642 ;;  data            1    2[COMRAM] unsigned char 
 11643 ;; Return value:  Size  Location     Type
 11644 ;;                  1    wreg      void 
 11645 ;; Registers used:
 11646 ;;		wreg, status,2, status,0, cstack
 11647 ;; Tracked objects:
 11648 ;;		On entry : 0/0
 11649 ;;		On exit  : 0/0
 11650 ;;		Unchanged: 0/0
 11651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11653 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11655 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11656 ;;Total ram usage:        1 bytes
 11657 ;; Hardware stack levels used:    1
 11658 ;; Hardware stack levels required when called:    1
 11659 ;; This function calls:
 11660 ;;		i2_lcdNibble
 11661 ;; This function is called by:
 11662 ;;		_mainloop
 11663 ;;		_simulate
 11664 ;;		_intrpt
 11665 ;;		_showInfo
 11666 ;;		_stopMoving
 11667 ;;		_PermLog
 11668 ;; This function uses a non-reentrant model
 11669 ;;
 11670                           
 11671                           	psect	text59
 11672  0026A6                     __ptext59:
 11673                           	opt stack 0
 11674  0026A6                     i2_lcdInst:
 11675                           	opt stack 24
 11676                           
 11677                           ;incstack = 0
 11678                           ;i2lcdInst@data stored from wreg
 11679  0026A6  6E03               	movwf	i2lcdInst@data,c
 11680                           
 11681                           ;lcd.c: 21: LATDbits.LATD2 = 0;
 11682  0026A8  948C               	bcf	3980,2,c	;volatile
 11683                           
 11684                           ;lcd.c: 22: lcdNibble(data);
 11685  0026AA  5003               	movf	i2lcdInst@data,w,c
 11686  0026AC  ECCF  F010         	call	i2_lcdNibble
 11687  0026B0  0012               	return		;funcret
 11688  0026B2                     __end_ofi2_lcdInst:
 11689                           	opt stack 0
 11690                           pclatu	equ	0xFFB
 11691                           pclath	equ	0xFFA
 11692                           tblptru	equ	0xFF8
 11693                           tblptrh	equ	0xFF7
 11694                           tblptrl	equ	0xFF6
 11695                           tablat	equ	0xFF5
 11696                           prodh	equ	0xFF4
 11697                           prodl	equ	0xFF3
 11698                           intcon	equ	0xFF2
 11699                           intcon2	equ	0xFF1
 11700                           intcon3	equ	0xFF0
 11701                           postinc0	equ	0xFEE
 11702                           fsr0h	equ	0xFEA
 11703                           fsr0l	equ	0xFE9
 11704                           wreg	equ	0xFE8
 11705                           postdec1	equ	0xFE5
 11706                           plusw1	equ	0xFE3
 11707                           fsr1h	equ	0xFE2
 11708                           fsr1l	equ	0xFE1
 11709                           indf2	equ	0xFDF
 11710                           postinc2	equ	0xFDE
 11711                           postdec2	equ	0xFDD
 11712                           plusw2	equ	0xFDB
 11713                           fsr2h	equ	0xFDA
 11714                           fsr2l	equ	0xFD9
 11715                           status	equ	0xFD8
 11716                           
 11717 ;; *************** function i2_lcdNibble *****************
 11718 ;; Defined at:
 11719 ;;		line 30 in file "lcd.c"
 11720 ;; Parameters:    Size  Location     Type
 11721 ;;  data            1    wreg     unsigned char 
 11722 ;; Auto vars:     Size  Location     Type
 11723 ;;  data            1    1[COMRAM] unsigned char 
 11724 ;;  lcdNibble       1    0[COMRAM] unsigned char 
 11725 ;; Return value:  Size  Location     Type
 11726 ;;                  1    wreg      void 
 11727 ;; Registers used:
 11728 ;;		wreg, status,2, status,0
 11729 ;; Tracked objects:
 11730 ;;		On entry : 0/0
 11731 ;;		On exit  : 0/0
 11732 ;;		Unchanged: 0/0
 11733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11735 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11737 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11738 ;;Total ram usage:        2 bytes
 11739 ;; Hardware stack levels used:    1
 11740 ;; This function calls:
 11741 ;;		Nothing
 11742 ;; This function is called by:
 11743 ;;		i2_lcdInst
 11744 ;;		i2_putch
 11745 ;; This function uses a non-reentrant model
 11746 ;;
 11747                           
 11748                           	psect	text60
 11749  00219E                     __ptext60:
 11750                           	opt stack 0
 11751  00219E                     i2_lcdNibble:
 11752                           	opt stack 24
 11753                           
 11754                           ;incstack = 0
 11755                           ;i2lcdNibble@data stored from wreg
 11756  00219E  6E02               	movwf	i2lcdNibble@data,c
 11757                           
 11758                           ;lcd.c: 32: char temp = data & 0xF0;
 11759  0021A0  5002               	movf	i2lcdNibble@data,w,c
 11760  0021A2  0BF0               	andlw	240
 11761  0021A4  6E01               	movwf	i2lcdNibble@temp,c
 11762                           
 11763                           ;lcd.c: 33: LATD = LATD & 0x0F;
 11764  0021A6  508C               	movf	3980,w,c	;volatile
 11765  0021A8  0B0F               	andlw	15
 11766  0021AA  6E8C               	movwf	3980,c	;volatile
 11767                           
 11768                           ;lcd.c: 34: LATD = temp | LATD;
 11769  0021AC  5001               	movf	i2lcdNibble@temp,w,c
 11770  0021AE  108C               	iorwf	3980,w,c	;volatile
 11771  0021B0  6E8C               	movwf	3980,c	;volatile
 11772                           
 11773                           ;lcd.c: 36: LATDbits.LATD3 = 0;
 11774  0021B2  968C               	bcf	3980,3,c	;volatile
 11775                           
 11776                           ;lcd.c: 37: _delay((unsigned long)((25)*(8000000/4000000.0)));
 11777  0021B4  0E10               	movlw	16
 11778  0021B6                     i2u383_47:
 11779  0021B6  2EE8               	decfsz	wreg,f,c
 11780  0021B8  D7FE               	bra	i2u383_47
 11781  0021BA  D000               	nop2	
 11782                           
 11783                           ;lcd.c: 38: LATDbits.LATD3 = 1;
 11784  0021BC  868C               	bsf	3980,3,c	;volatile
 11785                           
 11786                           ;lcd.c: 39: _delay((unsigned long)((25)*(8000000/4000000.0)));
 11787  0021BE  0E10               	movlw	16
 11788  0021C0                     i2u384_47:
 11789  0021C0  2EE8               	decfsz	wreg,f,c
 11790  0021C2  D7FE               	bra	i2u384_47
 11791  0021C4  D000               	nop2	
 11792                           
 11793                           ;lcd.c: 41: data = data << 4;
 11794  0021C6  3802               	swapf	i2lcdNibble@data,w,c
 11795  0021C8  0BF0               	andlw	240
 11796  0021CA  6E02               	movwf	i2lcdNibble@data,c
 11797                           
 11798                           ;lcd.c: 43: temp = data & 0xF0;
 11799  0021CC  5002               	movf	i2lcdNibble@data,w,c
 11800  0021CE  0BF0               	andlw	240
 11801  0021D0  6E01               	movwf	i2lcdNibble@temp,c
 11802                           
 11803                           ;lcd.c: 44: LATD = LATD & 0x0F;
 11804  0021D2  508C               	movf	3980,w,c	;volatile
 11805  0021D4  0B0F               	andlw	15
 11806  0021D6  6E8C               	movwf	3980,c	;volatile
 11807                           
 11808                           ;lcd.c: 45: LATD = temp | LATD;
 11809  0021D8  5001               	movf	i2lcdNibble@temp,w,c
 11810  0021DA  108C               	iorwf	3980,w,c	;volatile
 11811  0021DC  6E8C               	movwf	3980,c	;volatile
 11812                           
 11813                           ;lcd.c: 47: LATDbits.LATD3 = 0;
 11814  0021DE  968C               	bcf	3980,3,c	;volatile
 11815                           
 11816                           ;lcd.c: 48: _delay((unsigned long)((25)*(8000000/4000000.0)));
 11817  0021E0  0E10               	movlw	16
 11818  0021E2                     i2u385_47:
 11819  0021E2  2EE8               	decfsz	wreg,f,c
 11820  0021E4  D7FE               	bra	i2u385_47
 11821  0021E6  D000               	nop2	
 11822                           
 11823                           ;lcd.c: 49: LATDbits.LATD3 = 1;
 11824  0021E8  868C               	bsf	3980,3,c	;volatile
 11825                           
 11826                           ;lcd.c: 50: _delay((unsigned long)((25)*(8000000/4000000.0)));
 11827  0021EA  0E10               	movlw	16
 11828  0021EC                     i2u386_47:
 11829  0021EC  2EE8               	decfsz	wreg,f,c
 11830  0021EE  D7FE               	bra	i2u386_47
 11831  0021F0  D000               	nop2	
 11832  0021F2  0012               	return		;funcret
 11833  0021F4                     __end_ofi2_lcdNibble:
 11834                           	opt stack 0
 11835                           pclatu	equ	0xFFB
 11836                           pclath	equ	0xFFA
 11837                           tblptru	equ	0xFF8
 11838                           tblptrh	equ	0xFF7
 11839                           tblptrl	equ	0xFF6
 11840                           tablat	equ	0xFF5
 11841                           prodh	equ	0xFF4
 11842                           prodl	equ	0xFF3
 11843                           intcon	equ	0xFF2
 11844                           intcon2	equ	0xFF1
 11845                           intcon3	equ	0xFF0
 11846                           postinc0	equ	0xFEE
 11847                           fsr0h	equ	0xFEA
 11848                           fsr0l	equ	0xFE9
 11849                           wreg	equ	0xFE8
 11850                           postdec1	equ	0xFE5
 11851                           plusw1	equ	0xFE3
 11852                           fsr1h	equ	0xFE2
 11853                           fsr1l	equ	0xFE1
 11854                           indf2	equ	0xFDF
 11855                           postinc2	equ	0xFDE
 11856                           postdec2	equ	0xFDD
 11857                           plusw2	equ	0xFDB
 11858                           fsr2h	equ	0xFDA
 11859                           fsr2l	equ	0xFD9
 11860                           status	equ	0xFD8
 11861                           
 11862 ;; *************** function _captureKeypad *****************
 11863 ;; Defined at:
 11864 ;;		line 13 in file "modules.c"
 11865 ;; Parameters:    Size  Location     Type
 11866 ;;		None
 11867 ;; Auto vars:     Size  Location     Type
 11868 ;;  keypress        1    2[COMRAM] unsigned char 
 11869 ;; Return value:  Size  Location     Type
 11870 ;;                  2    0[COMRAM] unsigned int 
 11871 ;; Registers used:
 11872 ;;		wreg, status,2, status,0
 11873 ;; Tracked objects:
 11874 ;;		On entry : 0/0
 11875 ;;		On exit  : 0/0
 11876 ;;		Unchanged: 0/0
 11877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11878 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11879 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11881 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11882 ;;Total ram usage:        3 bytes
 11883 ;; Hardware stack levels used:    1
 11884 ;; This function calls:
 11885 ;;		Nothing
 11886 ;; This function is called by:
 11887 ;;		_showInfo
 11888 ;;		_PermLog
 11889 ;; This function uses a non-reentrant model
 11890 ;;
 11891                           
 11892                           	psect	text61
 11893  0025EC                     __ptext61:
 11894                           	opt stack 0
 11895  0025EC                     _captureKeypad:
 11896                           	opt stack 23
 11897                           
 11898                           ;modules.c: 14: (INTCONbits.GIE = 0);
 11899                           
 11900                           ;incstack = 0
 11901  0025EC  9EF2               	bcf	intcon,7,c	;volatile
 11902  0025EE                     i2l241:
 11903  0025EE  A281               	btfss	3969,1,c	;volatile
 11904  0025F0  D7FE               	goto	i2l241
 11905                           
 11906                           ;modules.c: 16: unsigned char keypress = (PORTB & 0xF0) >> 4;
 11907  0025F2  3881               	swapf	3969,w,c	;volatile
 11908  0025F4  0B0F               	andlw	15
 11909  0025F6  0B0F               	andlw	15
 11910  0025F8  6E03               	movwf	captureKeypad@keypress,c
 11911  0025FA                     i2l244:
 11912  0025FA  B281               	btfsc	3969,1,c	;volatile
 11913  0025FC  D7FE               	goto	i2l244
 11914                           
 11915                           ;modules.c: 18: INT1IF = 0;
 11916  0025FE  90F0               	bcf	intcon3,0,c	;volatile
 11917                           
 11918                           ;modules.c: 19: (INTCONbits.GIE = 1);
 11919  002600  8EF2               	bsf	intcon,7,c	;volatile
 11920                           
 11921                           ;modules.c: 20: return keypress;
 11922  002602  C003  F001         	movff	captureKeypad@keypress,?_captureKeypad
 11923  002606  6A02               	clrf	?_captureKeypad+1,c
 11924  002608  0012               	return		;funcret
 11925  00260A                     __end_of_captureKeypad:
 11926                           	opt stack 0
 11927                           pclatu	equ	0xFFB
 11928                           pclath	equ	0xFFA
 11929                           tblptru	equ	0xFF8
 11930                           tblptrh	equ	0xFF7
 11931                           tblptrl	equ	0xFF6
 11932                           tablat	equ	0xFF5
 11933                           prodh	equ	0xFF4
 11934                           prodl	equ	0xFF3
 11935                           intcon	equ	0xFF2
 11936                           intcon2	equ	0xFF1
 11937                           intcon3	equ	0xFF0
 11938                           postinc0	equ	0xFEE
 11939                           fsr0h	equ	0xFEA
 11940                           fsr0l	equ	0xFE9
 11941                           wreg	equ	0xFE8
 11942                           postdec1	equ	0xFE5
 11943                           plusw1	equ	0xFE3
 11944                           fsr1h	equ	0xFE2
 11945                           fsr1l	equ	0xFE1
 11946                           indf2	equ	0xFDF
 11947                           postinc2	equ	0xFDE
 11948                           postdec2	equ	0xFDD
 11949                           plusw2	equ	0xFDB
 11950                           fsr2h	equ	0xFDA
 11951                           fsr2l	equ	0xFD9
 11952                           status	equ	0xFD8
 11953                           
 11954 ;; *************** function _ReadRun *****************
 11955 ;; Defined at:
 11956 ;;		line 66 in file "eeprom.c"
 11957 ;; Parameters:    Size  Location     Type
 11958 ;;  backruns        1    wreg     unsigned char 
 11959 ;;  sorted          2    2[COMRAM] PTR unsigned char 
 11960 ;;		 -> PermLog@sorted(4), 
 11961 ;;  time            2    4[COMRAM] PTR unsigned int 
 11962 ;;		 -> PermLog@time(2), 
 11963 ;; Auto vars:     Size  Location     Type
 11964 ;;  backruns        1   10[COMRAM] unsigned char 
 11965 ;;  add             2   11[COMRAM] unsigned int 
 11966 ;; Return value:  Size  Location     Type
 11967 ;;                  1    wreg      void 
 11968 ;; Registers used:
 11969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11970 ;; Tracked objects:
 11971 ;;		On entry : 0/0
 11972 ;;		On exit  : 0/0
 11973 ;;		Unchanged: 0/0
 11974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11975 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11976 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11977 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11978 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11979 ;;Total ram usage:       11 bytes
 11980 ;; Hardware stack levels used:    1
 11981 ;; Hardware stack levels required when called:    1
 11982 ;; This function calls:
 11983 ;;		_back
 11984 ;;		i2_ReadEE
 11985 ;; This function is called by:
 11986 ;;		_PermLog
 11987 ;; This function uses a non-reentrant model
 11988 ;;
 11989                           
 11990                           	psect	text62
 11991  001442                     __ptext62:
 11992                           	opt stack 0
 11993  001442                     _ReadRun:
 11994                           	opt stack 23
 11995                           
 11996                           ;incstack = 0
 11997                           ;ReadRun@backruns stored from wreg
 11998  001442  6E0B               	movwf	ReadRun@backruns,c
 11999                           
 12000                           ;eeprom.c: 67: unsigned int add = back(backruns) * 5;
 12001  001444  500B               	movf	ReadRun@backruns,w,c
 12002  001446  EC05  F013         	call	_back
 12003  00144A  6E07               	movwf	??_ReadRun& (0+255),c
 12004  00144C  5007               	movf	??_ReadRun,w,c
 12005  00144E  0D05               	mullw	5
 12006  001450  CFF3 F00C          	movff	prodl,ReadRun@add
 12007  001454  CFF4 F00D          	movff	prodh,ReadRun@add+1
 12008                           
 12009                           ;eeprom.c: 68: *time = ReadEE(add++ *8);
 12010  001458  C00C  F007         	movff	ReadRun@add,??_ReadRun
 12011  00145C  C00D  F008         	movff	ReadRun@add+1,??_ReadRun+1
 12012  001460  90D8               	bcf	status,0,c
 12013  001462  3607               	rlcf	??_ReadRun,f,c
 12014  001464  3608               	rlcf	??_ReadRun+1,f,c
 12015  001466  90D8               	bcf	status,0,c
 12016  001468  3607               	rlcf	??_ReadRun,f,c
 12017  00146A  3608               	rlcf	??_ReadRun+1,f,c
 12018  00146C  90D8               	bcf	status,0,c
 12019  00146E  3607               	rlcf	??_ReadRun,f,c
 12020  001470  3608               	rlcf	??_ReadRun+1,f,c
 12021  001472  C007  F001         	movff	??_ReadRun,i2ReadEE@address
 12022  001476  C008  F002         	movff	??_ReadRun+1,i2ReadEE@address+1
 12023  00147A  EC1F  F013         	call	i2_ReadEE	;wreg free
 12024  00147E  6E09               	movwf	(??_ReadRun+2)& (0+255),c
 12025  001480  6A0A               	clrf	(??_ReadRun+3)& (0+255),c
 12026  001482  C005  FFD9         	movff	ReadRun@time,fsr2l
 12027  001486  C006  FFDA         	movff	ReadRun@time+1,fsr2h
 12028  00148A  C009  FFDE         	movff	??_ReadRun+2,postinc2
 12029  00148E  C00A  FFDD         	movff	??_ReadRun+3,postdec2
 12030  001492  4A0C               	infsnz	ReadRun@add,f,c
 12031  001494  2A0D               	incf	ReadRun@add+1,f,c
 12032                           
 12033                           ;eeprom.c: 69: sorted[0] = ReadEE(add++ *8);
 12034  001496  C00C  F007         	movff	ReadRun@add,??_ReadRun
 12035  00149A  C00D  F008         	movff	ReadRun@add+1,??_ReadRun+1
 12036  00149E  90D8               	bcf	status,0,c
 12037  0014A0  3607               	rlcf	??_ReadRun,f,c
 12038  0014A2  3608               	rlcf	??_ReadRun+1,f,c
 12039  0014A4  90D8               	bcf	status,0,c
 12040  0014A6  3607               	rlcf	??_ReadRun,f,c
 12041  0014A8  3608               	rlcf	??_ReadRun+1,f,c
 12042  0014AA  90D8               	bcf	status,0,c
 12043  0014AC  3607               	rlcf	??_ReadRun,f,c
 12044  0014AE  3608               	rlcf	??_ReadRun+1,f,c
 12045  0014B0  C007  F001         	movff	??_ReadRun,i2ReadEE@address
 12046  0014B4  C008  F002         	movff	??_ReadRun+1,i2ReadEE@address+1
 12047  0014B8  EC1F  F013         	call	i2_ReadEE	;wreg free
 12048  0014BC  C003  FFD9         	movff	ReadRun@sorted,fsr2l
 12049  0014C0  C004  FFDA         	movff	ReadRun@sorted+1,fsr2h
 12050  0014C4  6EDF               	movwf	indf2,c
 12051  0014C6  4A0C               	infsnz	ReadRun@add,f,c
 12052  0014C8  2A0D               	incf	ReadRun@add+1,f,c
 12053                           
 12054                           ;eeprom.c: 70: sorted[1] = ReadEE(add++ *8);
 12055  0014CA  EE20 F001          	lfsr	2,1
 12056  0014CE  5003               	movf	ReadRun@sorted,w,c
 12057  0014D0  26D9               	addwf	fsr2l,f,c
 12058  0014D2  5004               	movf	ReadRun@sorted+1,w,c
 12059  0014D4  22DA               	addwfc	fsr2h,f,c
 12060  0014D6  C00C  F007         	movff	ReadRun@add,??_ReadRun
 12061  0014DA  C00D  F008         	movff	ReadRun@add+1,??_ReadRun+1
 12062  0014DE  90D8               	bcf	status,0,c
 12063  0014E0  3607               	rlcf	??_ReadRun,f,c
 12064  0014E2  3608               	rlcf	??_ReadRun+1,f,c
 12065  0014E4  90D8               	bcf	status,0,c
 12066  0014E6  3607               	rlcf	??_ReadRun,f,c
 12067  0014E8  3608               	rlcf	??_ReadRun+1,f,c
 12068  0014EA  90D8               	bcf	status,0,c
 12069  0014EC  3607               	rlcf	??_ReadRun,f,c
 12070  0014EE  3608               	rlcf	??_ReadRun+1,f,c
 12071  0014F0  C007  F001         	movff	??_ReadRun,i2ReadEE@address
 12072  0014F4  C008  F002         	movff	??_ReadRun+1,i2ReadEE@address+1
 12073  0014F8  EC1F  F013         	call	i2_ReadEE	;wreg free
 12074  0014FC  6EDF               	movwf	indf2,c
 12075  0014FE  4A0C               	infsnz	ReadRun@add,f,c
 12076  001500  2A0D               	incf	ReadRun@add+1,f,c
 12077                           
 12078                           ;eeprom.c: 71: sorted[2] = ReadEE(add++ *8);
 12079  001502  EE20 F002          	lfsr	2,2
 12080  001506  5003               	movf	ReadRun@sorted,w,c
 12081  001508  26D9               	addwf	fsr2l,f,c
 12082  00150A  5004               	movf	ReadRun@sorted+1,w,c
 12083  00150C  22DA               	addwfc	fsr2h,f,c
 12084  00150E  C00C  F007         	movff	ReadRun@add,??_ReadRun
 12085  001512  C00D  F008         	movff	ReadRun@add+1,??_ReadRun+1
 12086  001516  90D8               	bcf	status,0,c
 12087  001518  3607               	rlcf	??_ReadRun,f,c
 12088  00151A  3608               	rlcf	??_ReadRun+1,f,c
 12089  00151C  90D8               	bcf	status,0,c
 12090  00151E  3607               	rlcf	??_ReadRun,f,c
 12091  001520  3608               	rlcf	??_ReadRun+1,f,c
 12092  001522  90D8               	bcf	status,0,c
 12093  001524  3607               	rlcf	??_ReadRun,f,c
 12094  001526  3608               	rlcf	??_ReadRun+1,f,c
 12095  001528  C007  F001         	movff	??_ReadRun,i2ReadEE@address
 12096  00152C  C008  F002         	movff	??_ReadRun+1,i2ReadEE@address+1
 12097  001530  EC1F  F013         	call	i2_ReadEE	;wreg free
 12098  001534  6EDF               	movwf	indf2,c
 12099  001536  4A0C               	infsnz	ReadRun@add,f,c
 12100  001538  2A0D               	incf	ReadRun@add+1,f,c
 12101                           
 12102                           ;eeprom.c: 72: sorted[3] = ReadEE(add++ *8);
 12103  00153A  EE20 F003          	lfsr	2,3
 12104  00153E  5003               	movf	ReadRun@sorted,w,c
 12105  001540  26D9               	addwf	fsr2l,f,c
 12106  001542  5004               	movf	ReadRun@sorted+1,w,c
 12107  001544  22DA               	addwfc	fsr2h,f,c
 12108  001546  C00C  F007         	movff	ReadRun@add,??_ReadRun
 12109  00154A  C00D  F008         	movff	ReadRun@add+1,??_ReadRun+1
 12110  00154E  90D8               	bcf	status,0,c
 12111  001550  3607               	rlcf	??_ReadRun,f,c
 12112  001552  3608               	rlcf	??_ReadRun+1,f,c
 12113  001554  90D8               	bcf	status,0,c
 12114  001556  3607               	rlcf	??_ReadRun,f,c
 12115  001558  3608               	rlcf	??_ReadRun+1,f,c
 12116  00155A  90D8               	bcf	status,0,c
 12117  00155C  3607               	rlcf	??_ReadRun,f,c
 12118  00155E  3608               	rlcf	??_ReadRun+1,f,c
 12119  001560  C007  F001         	movff	??_ReadRun,i2ReadEE@address
 12120  001564  C008  F002         	movff	??_ReadRun+1,i2ReadEE@address+1
 12121  001568  EC1F  F013         	call	i2_ReadEE	;wreg free
 12122  00156C  6EDF               	movwf	indf2,c
 12123  00156E  4A0C               	infsnz	ReadRun@add,f,c
 12124  001570  2A0D               	incf	ReadRun@add+1,f,c
 12125  001572  0012               	return		;funcret
 12126  001574                     __end_of_ReadRun:
 12127                           	opt stack 0
 12128                           pclatu	equ	0xFFB
 12129                           pclath	equ	0xFFA
 12130                           tblptru	equ	0xFF8
 12131                           tblptrh	equ	0xFF7
 12132                           tblptrl	equ	0xFF6
 12133                           tablat	equ	0xFF5
 12134                           prodh	equ	0xFF4
 12135                           prodl	equ	0xFF3
 12136                           intcon	equ	0xFF2
 12137                           intcon2	equ	0xFF1
 12138                           intcon3	equ	0xFF0
 12139                           postinc0	equ	0xFEE
 12140                           fsr0h	equ	0xFEA
 12141                           fsr0l	equ	0xFE9
 12142                           wreg	equ	0xFE8
 12143                           postdec1	equ	0xFE5
 12144                           plusw1	equ	0xFE3
 12145                           fsr1h	equ	0xFE2
 12146                           fsr1l	equ	0xFE1
 12147                           indf2	equ	0xFDF
 12148                           postinc2	equ	0xFDE
 12149                           postdec2	equ	0xFDD
 12150                           plusw2	equ	0xFDB
 12151                           fsr2h	equ	0xFDA
 12152                           fsr2l	equ	0xFD9
 12153                           status	equ	0xFD8
 12154                           
 12155 ;; *************** function i2_ReadEE *****************
 12156 ;; Defined at:
 12157 ;;		line 16 in file "eeprom.c"
 12158 ;; Parameters:    Size  Location     Type
 12159 ;;  address         2    0[COMRAM] unsigned int 
 12160 ;; Auto vars:     Size  Location     Type
 12161 ;;		None
 12162 ;; Return value:  Size  Location     Type
 12163 ;;                  1    wreg      unsigned char 
 12164 ;; Registers used:
 12165 ;;		wreg, status,2
 12166 ;; Tracked objects:
 12167 ;;		On entry : 0/0
 12168 ;;		On exit  : 0/0
 12169 ;;		Unchanged: 0/0
 12170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12171 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12174 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12175 ;;Total ram usage:        2 bytes
 12176 ;; Hardware stack levels used:    1
 12177 ;; This function calls:
 12178 ;;		Nothing
 12179 ;; This function is called by:
 12180 ;;		_ReadRun
 12181 ;; This function uses a non-reentrant model
 12182 ;;
 12183                           
 12184                           	psect	text63
 12185  00263E                     __ptext63:
 12186                           	opt stack 0
 12187  00263E                     i2_ReadEE:
 12188                           	opt stack 23
 12189                           
 12190                           ;eeprom.c: 19: EEADRH = (unsigned char) (address >> 8);
 12191                           
 12192                           ;incstack = 0
 12193  00263E  5002               	movf	i2ReadEE@address+1,w,c
 12194  002640  6EAA               	movwf	4010,c	;volatile
 12195                           
 12196                           ;eeprom.c: 20: EEADR = (unsigned char) address;
 12197  002642  C001  FFA9         	movff	i2ReadEE@address,4009	;volatile
 12198                           
 12199                           ;eeprom.c: 22: EECON1bits.EEPGD = 0;
 12200  002646  9EA6               	bcf	4006,7,c	;volatile
 12201                           
 12202                           ;eeprom.c: 23: EECON1bits.CFGS = 0;
 12203  002648  9CA6               	bcf	4006,6,c	;volatile
 12204                           
 12205                           ;eeprom.c: 24: EECON1bits.RD = 1;
 12206  00264A  80A6               	bsf	4006,0,c	;volatile
 12207  00264C                     i2l455:
 12208  00264C  B0A6               	btfsc	4006,0,c	;volatile
 12209  00264E  D7FE               	goto	i2l455
 12210                           
 12211                           ;eeprom.c: 30: return EEDATA;
 12212  002650  50A8               	movf	4008,w,c	;volatile
 12213  002652  0012               	return	
 12214  002654                     __end_ofi2_ReadEE:
 12215                           	opt stack 0
 12216                           pclatu	equ	0xFFB
 12217                           pclath	equ	0xFFA
 12218                           tblptru	equ	0xFF8
 12219                           tblptrh	equ	0xFF7
 12220                           tblptrl	equ	0xFF6
 12221                           tablat	equ	0xFF5
 12222                           prodh	equ	0xFF4
 12223                           prodl	equ	0xFF3
 12224                           intcon	equ	0xFF2
 12225                           intcon2	equ	0xFF1
 12226                           intcon3	equ	0xFF0
 12227                           postinc0	equ	0xFEE
 12228                           fsr0h	equ	0xFEA
 12229                           fsr0l	equ	0xFE9
 12230                           wreg	equ	0xFE8
 12231                           postdec1	equ	0xFE5
 12232                           plusw1	equ	0xFE3
 12233                           fsr1h	equ	0xFE2
 12234                           fsr1l	equ	0xFE1
 12235                           indf2	equ	0xFDF
 12236                           postinc2	equ	0xFDE
 12237                           postdec2	equ	0xFDD
 12238                           plusw2	equ	0xFDB
 12239                           fsr2h	equ	0xFDA
 12240                           fsr2l	equ	0xFD9
 12241                           status	equ	0xFD8
 12242                           
 12243 ;; *************** function _back *****************
 12244 ;; Defined at:
 12245 ;;		line 57 in file "eeprom.c"
 12246 ;; Parameters:    Size  Location     Type
 12247 ;;  runs            1    wreg     unsigned char 
 12248 ;; Auto vars:     Size  Location     Type
 12249 ;;  runs            1    0[COMRAM] unsigned char 
 12250 ;;  result          1    1[COMRAM] unsigned char 
 12251 ;; Return value:  Size  Location     Type
 12252 ;;                  1    wreg      unsigned char 
 12253 ;; Registers used:
 12254 ;;		wreg, status,2, status,0
 12255 ;; Tracked objects:
 12256 ;;		On entry : 0/0
 12257 ;;		On exit  : 0/0
 12258 ;;		Unchanged: 0/0
 12259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12261 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12263 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12264 ;;Total ram usage:        2 bytes
 12265 ;; Hardware stack levels used:    1
 12266 ;; This function calls:
 12267 ;;		Nothing
 12268 ;; This function is called by:
 12269 ;;		_ReadRun
 12270 ;; This function uses a non-reentrant model
 12271 ;;
 12272                           
 12273                           	psect	text64
 12274  00260A                     __ptext64:
 12275                           	opt stack 0
 12276  00260A                     _back:
 12277                           	opt stack 23
 12278                           
 12279                           ;incstack = 0
 12280                           ;back@runs stored from wreg
 12281  00260A  6E01               	movwf	back@runs,c
 12282                           
 12283                           ;eeprom.c: 59: unsigned char result = Latest + 4 - runs;
 12284  00260C  5001               	movf	back@runs,w,c
 12285  00260E  0800               	sublw	0
 12286  002610  0100               	movlb	0	; () banked
 12287  002612  25A8               	addwf	_Latest& (0+255),w,b
 12288  002614  0F04               	addlw	4
 12289  002616  6E02               	movwf	back@result,c
 12290                           
 12291                           ;eeprom.c: 60: if (result > 4) {
 12292  002618  0E04               	movlw	4
 12293  00261A  6402               	cpfsgt	back@result,c
 12294  00261C  D002               	goto	i2l3527
 12295                           
 12296                           ; BSR set to: 0
 12297                           ;eeprom.c: 61: result -= 4;
 12298  00261E  0E04               	movlw	4
 12299  002620  5E02               	subwf	back@result,f,c
 12300  002622                     i2l3527:
 12301                           
 12302                           ; BSR set to: 0
 12303                           ;eeprom.c: 62: }
 12304                           ;eeprom.c: 63: return result;
 12305  002622  5002               	movf	back@result,w,c
 12306  002624  0012               	return	
 12307  002626                     __end_of_back:
 12308                           	opt stack 0
 12309                           pclatu	equ	0xFFB
 12310                           pclath	equ	0xFFA
 12311                           tblptru	equ	0xFF8
 12312                           tblptrh	equ	0xFF7
 12313                           tblptrl	equ	0xFF6
 12314                           tablat	equ	0xFF5
 12315                           prodh	equ	0xFF4
 12316                           prodl	equ	0xFF3
 12317                           intcon	equ	0xFF2
 12318                           intcon2	equ	0xFF1
 12319                           intcon3	equ	0xFF0
 12320                           postinc0	equ	0xFEE
 12321                           fsr0h	equ	0xFEA
 12322                           fsr0l	equ	0xFE9
 12323                           wreg	equ	0xFE8
 12324                           postdec1	equ	0xFE5
 12325                           plusw1	equ	0xFE3
 12326                           fsr1h	equ	0xFE2
 12327                           fsr1l	equ	0xFE1
 12328                           indf2	equ	0xFDF
 12329                           postinc2	equ	0xFDE
 12330                           postdec2	equ	0xFDD
 12331                           plusw2	equ	0xFDB
 12332                           fsr2h	equ	0xFDA
 12333                           fsr2l	equ	0xFD9
 12334                           status	equ	0xFD8
 12335                           pclatu	equ	0xFFB
 12336                           pclath	equ	0xFFA
 12337                           tblptru	equ	0xFF8
 12338                           tblptrh	equ	0xFF7
 12339                           tblptrl	equ	0xFF6
 12340                           tablat	equ	0xFF5
 12341                           prodh	equ	0xFF4
 12342                           prodl	equ	0xFF3
 12343                           intcon	equ	0xFF2
 12344                           intcon2	equ	0xFF1
 12345                           intcon3	equ	0xFF0
 12346                           postinc0	equ	0xFEE
 12347                           fsr0h	equ	0xFEA
 12348                           fsr0l	equ	0xFE9
 12349                           wreg	equ	0xFE8
 12350                           postdec1	equ	0xFE5
 12351                           plusw1	equ	0xFE3
 12352                           fsr1h	equ	0xFE2
 12353                           fsr1l	equ	0xFE1
 12354                           indf2	equ	0xFDF
 12355                           postinc2	equ	0xFDE
 12356                           postdec2	equ	0xFDD
 12357                           plusw2	equ	0xFDB
 12358                           fsr2h	equ	0xFDA
 12359                           fsr2l	equ	0xFD9
 12360                           status	equ	0xFD8
 12361                           
 12362                           	psect	rparam
 12363  0000                     pclatu	equ	0xFFB
 12364                           pclath	equ	0xFFA
 12365                           tblptru	equ	0xFF8
 12366                           tblptrh	equ	0xFF7
 12367                           tblptrl	equ	0xFF6
 12368                           tablat	equ	0xFF5
 12369                           prodh	equ	0xFF4
 12370                           prodl	equ	0xFF3
 12371                           intcon	equ	0xFF2
 12372                           intcon2	equ	0xFF1
 12373                           intcon3	equ	0xFF0
 12374                           postinc0	equ	0xFEE
 12375                           fsr0h	equ	0xFEA
 12376                           fsr0l	equ	0xFE9
 12377                           wreg	equ	0xFE8
 12378                           postdec1	equ	0xFE5
 12379                           plusw1	equ	0xFE3
 12380                           fsr1h	equ	0xFE2
 12381                           fsr1l	equ	0xFE1
 12382                           indf2	equ	0xFDF
 12383                           postinc2	equ	0xFDE
 12384                           postdec2	equ	0xFDD
 12385                           plusw2	equ	0xFDB
 12386                           fsr2h	equ	0xFDA
 12387                           fsr2l	equ	0xFD9
 12388                           status	equ	0xFD8
 12389                           
 12390                           	psect	temp
 12391  00007D                     btemp:
 12392                           	opt stack 0
 12393  00007D                     	ds	1
 12394  0000                     int$flags	set	btemp
 12395                           pclatu	equ	0xFFB
 12396                           pclath	equ	0xFFA
 12397                           tblptru	equ	0xFF8
 12398                           tblptrh	equ	0xFF7
 12399                           tblptrl	equ	0xFF6
 12400                           tablat	equ	0xFF5
 12401                           prodh	equ	0xFF4
 12402                           prodl	equ	0xFF3
 12403                           intcon	equ	0xFF2
 12404                           intcon2	equ	0xFF1
 12405                           intcon3	equ	0xFF0
 12406                           postinc0	equ	0xFEE
 12407                           fsr0h	equ	0xFEA
 12408                           fsr0l	equ	0xFE9
 12409                           wreg	equ	0xFE8
 12410                           postdec1	equ	0xFE5
 12411                           plusw1	equ	0xFE3
 12412                           fsr1h	equ	0xFE2
 12413                           fsr1l	equ	0xFE1
 12414                           indf2	equ	0xFDF
 12415                           postinc2	equ	0xFDE
 12416                           postdec2	equ	0xFDD
 12417                           plusw2	equ	0xFDB
 12418                           fsr2h	equ	0xFDA
 12419                           fsr2l	equ	0xFD9
 12420                           status	equ	0xFD8


Data Sizes:
    Strings     556
    Constant    18
    Data        10
    BSS         54
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    118     124
    BANK0           128     42     100
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> printf@c(BANK0[1]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_46(CODE[17]), STR_45(CODE[17]), STR_44(CODE[18]), STR_43(CODE[22]), 
		 -> STR_42(CODE[4]), STR_41(CODE[3]), STR_40(CODE[4]), STR_39(CODE[5]), 
		 -> STR_38(CODE[4]), STR_37(CODE[18]), STR_36(CODE[20]), STR_35(CODE[16]), 
		 -> STR_34(CODE[21]), STR_33(CODE[16]), STR_32(CODE[22]), STR_31(CODE[16]), 
		 -> STR_30(CODE[21]), STR_29(CODE[16]), STR_28(CODE[22]), STR_27(CODE[23]), 
		 -> STR_26(CODE[24]), STR_25(CODE[21]), STR_24(CODE[24]), STR_23(CODE[24]), 
		 -> STR_22(CODE[22]), STR_21(CODE[19]), STR_20(CODE[18]), STR_19(CODE[25]), 
		 -> STR_18(CODE[25]), STR_17(CODE[27]), STR_16(CODE[3]), STR_15(CODE[3]), 
		 -> STR_14(CODE[3]), STR_13(CODE[5]), STR_12(CODE[3]), STR_11(CODE[3]), 
		 -> STR_10(CODE[3]), STR_9(CODE[4]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[4]), STR_4(CODE[5]), STR_3(CODE[21]), 
		 -> STR_2(CODE[27]), STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(COMRAM[2]), ?_printf(BANK0[2]), 

    WriteRun@sorted	PTR unsigned char  size(2) Largest target is 4
		 -> simulate@sorted(COMRAM[4]), mainloop@sorted(COMRAM[4]), 

    ReadRun@sorted	PTR unsigned char  size(2) Largest target is 4
		 -> PermLog@sorted(COMRAM[4]), 

    ReadRun@time	PTR unsigned int  size(2) Largest target is 2
		 -> PermLog@time(COMRAM[2]), 

    check9@sorted	PTR unsigned char  size(2) Largest target is 4
		 -> simulate@sorted(COMRAM[4]), 

    checkC@sorted	PTR unsigned char  size(2) Largest target is 4
		 -> simulate@sorted(COMRAM[4]), 

    checkAA@sorted	PTR unsigned char  size(2) Largest target is 4
		 -> simulate@sorted(COMRAM[4]), 

    stopMoving$577	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_37(CODE[18]), STR_36(CODE[20]), 

    CCW90@port	PTR int  size(2) Largest target is 6
		 -> simulate@portCCW(COMRAM[6]), mainloop@portCW(COMRAM[6]), 

    CW90@port	PTR int  size(2) Largest target is 6
		 -> simulate@portCW(COMRAM[6]), mainloop@portCW(COMRAM[6]), 

    PWMC@port	PTR int  size(2) Largest target is 6
		 -> intrpt@port(COMRAM[6]), simulate@portShake(COMRAM[6]), simulate@portCCW(COMRAM[6]), simulate@portCW(COMRAM[6]), 
		 -> mainloop@portCW(COMRAM[6]), 

    getTime@time	PTR unsigned char  size(2) Largest target is 7
		 -> time(BANK0[7]), 

    showInfo@sorted	PTR unsigned char  size(2) Largest target is 4
		 -> PermLog@sorted(COMRAM[4]), simulate@sorted(COMRAM[4]), mainloop@sorted(COMRAM[4]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _intrpt in COMRAM

    _intrpt->_simulate
    _simulate->_check9
    _simulate->_checkAA
    _simulate->_checkC
    i2_getTime->i2_I2C_Master_Read
    i2_getTime->i2_I2C_Master_Write
    i2_I2C_Master_Write->i2_I2C_Master_Wait
    i2_I2C_Master_Stop->i2_I2C_Master_Wait
    i2_I2C_Master_Start->i2_I2C_Master_Wait
    i2_I2C_Master_Read->i2_I2C_Master_Wait
    _checkC->_checkV
    _checkAA->_checkV
    _check9->_checkV
    _printV->i2_printf
    _checkV->___ftge
    ___ftmul->___awtoft
    ___ftge->___ftmul
    ___awtoft->___ftpack
    _HexDecToDec2->i2___wmul
    _mainloop->_showInfo
    _stopMoving->i2_printf
    _WriteRun->i2___wmul
    _CW90->_PWMC
    _CCW90->_PWMC
    _PWMC->___awdiv
    _PermLog->_showInfo
    _showInfo->i2_printf
    i2_printf->i2___lwmod
    i2_putch->i2_lcdNibble
    i2___lwmod->i2___lwdiv
    i2_lcdInst->i2_lcdNibble
    _ReadRun->_back
    _ReadRun->i2_ReadEE

Critical Paths under _main in BANK0

    _main->_showRTC
    _showRTC->_printf
    _printf->___lwmod
    _putch->_lcdNibble
    ___lwmod->___lwdiv
    _getTime->_I2C_Master_Read
    _getTime->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _initialize->_I2C_Master_Init
    _initLatest->_ReadEE
    _initLCD->_lcdInst
    _lcdInst->_lcdNibble
    _I2C_Master_Init->___lldiv

Critical Paths under _intrpt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _intrpt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _intrpt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _intrpt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _intrpt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _intrpt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _intrpt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _intrpt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _intrpt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _intrpt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _intrpt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _intrpt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _intrpt in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _intrpt in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _intrpt in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _intrpt in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   10483
                                             40 BANK0      2     2      0
                         _initialize
                            _lcdInst
                             _printf
                            _showRTC
 ---------------------------------------------------------------------------------
 (1) _showRTC                                              2     2      0    5006
                                             38 BANK0      2     2      0
                            _getTime
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              30    22      8    4398
                                             12 BANK0     26    18      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0     135
                                              2 BANK0      1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     517
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     287
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     418
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _getTime                                              3     1      2     473
                                              3 BANK0      3     1      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     214
                                              1 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      2     2      0      45
                                              1 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0     944
                    _I2C_Master_Init
                            _initLCD
                         _initLatest
                            _lcdInst
 ---------------------------------------------------------------------------------
 (2) _initLatest                                           0     0      0     298
                             _ReadEE
 ---------------------------------------------------------------------------------
 (3) _ReadEE                                               2     0      2     298
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              1     1      0     135
                                              3 BANK0      1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (2) _lcdInst                                              1     1      0     135
                                              2 BANK0      1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (4) _lcdNibble                                            2     2      0     113
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     376
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     290
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _intrpt                                              23    23      0  106937
                                             95 COMRAM    23    23      0
                               _PWMC
                            _PermLog
                           _mainloop
                           _simulate
                         _stopMoving
                          i2_lcdInst
 ---------------------------------------------------------------------------------
 (6) _simulate                                            44    44      0   67131
                                             51 COMRAM    44    44      0
                              _CCW90
                               _CW90
                       _HexDecToDec2
                               _PWMC
                           _WriteRun
                             _check9
                            _checkAA
                             _checkC
                          _closeGate
                           _openGate
                           _showInfo
                         _stopMoving
                           i2___wmul
                          i2_getTime
                          i2_lcdInst
                           i2_printf
 ---------------------------------------------------------------------------------
 (7) i2_getTime                                            3     1      2     283
                                              3 COMRAM     3     1      2
                  i2_I2C_Master_Read
                 i2_I2C_Master_Start
                  i2_I2C_Master_Stop
                 i2_I2C_Master_Write
 ---------------------------------------------------------------------------------
 (8) i2_I2C_Master_Write                                   2     0      2     100
                                              1 COMRAM     2     0      2
                  i2_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (8) i2_I2C_Master_Stop                                    0     0      0       0
                  i2_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (8) i2_I2C_Master_Start                                   0     0      0       0
                  i2_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (8) i2_I2C_Master_Read                                    2     2      0      45
                                              1 COMRAM     2     2      0
                  i2_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (9) i2_I2C_Master_Wait                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _checkC                                               6     4      2   12386
                                             45 COMRAM     6     4      2
                             _checkV
                             _printV
                           i2_printf
 ---------------------------------------------------------------------------------
 (7) _checkAA                                              6     4      2   12386
                                             45 COMRAM     6     4      2
                             _checkV
                             _printV
                           i2_printf
 ---------------------------------------------------------------------------------
 (7) _check9                                               6     4      2   12386
                                             45 COMRAM     6     4      2
                             _checkV
                             _printV
                           i2_printf
 ---------------------------------------------------------------------------------
 (8) _printV                                               2     0      2    3504
                                             34 COMRAM     2     0      2
                           i2_printf
 ---------------------------------------------------------------------------------
 (8) _checkV                                               9     7      2    5439
                                             36 COMRAM     9     7      2
                                 _AD
                           ___awtoft
                             ___ftge
                            ___ftmul
 ---------------------------------------------------------------------------------
 (9) ___ftmul                                             15     9      6    2548
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___ftge                                               9     3      6     264
                                             27 COMRAM     9     3      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (9) ___awtoft                                             4     1      3    2211
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (10) ___ftpack                                            8     3      5    1992
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (9) _AD                                                   5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (7) _HexDecToDec2                                         9     7      2     711
                                              6 COMRAM     9     7      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (6) _mainloop                                            16    16      0   22929
                                             47 COMRAM    16    16      0
                              _CCW90
                               _CW90
                           _WriteRun
                          _closeGate
                           _openGate
                           _showInfo
                         _stopMoving
                          i2_lcdInst
                           i2_printf
 ---------------------------------------------------------------------------------
 (6) _stopMoving                                           3     3      0    3471
                                             34 COMRAM     3     3      0
                          i2_lcdInst
                           i2_printf
 ---------------------------------------------------------------------------------
 (7) _openGate                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _closeGate                                            2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _WriteRun                                             8     4      4    1749
                                              6 COMRAM     8     4      4
                            _WriteEE
                           i2___wmul
 ---------------------------------------------------------------------------------
 (8) _WriteEE                                              3     0      3     834
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (7) _CW90                                                 8     6      2    4981
                                             21 COMRAM     8     6      2
                               _PWMC
 ---------------------------------------------------------------------------------
 (7) _CCW90                                                8     6      2    5045
                                             21 COMRAM     8     6      2
                               _PWMC
 ---------------------------------------------------------------------------------
 (7) _PWMC                                                40    34      6    4743
                                              8 COMRAM    13     7      6
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     428
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _PermLog                                             11    11      0    8320
                                             47 COMRAM    11    11      0
                            _ReadRun
                      _captureKeypad
                           _showInfo
                          i2_lcdInst
                           i2_printf
 ---------------------------------------------------------------------------------
 (7) _showInfo                                            13     9      4    4056
                                             34 COMRAM    13     9      4
                      _captureKeypad
                          i2_lcdInst
                           i2_printf
 ---------------------------------------------------------------------------------
 (7) i2_printf                                            26    22      4    3268
                                             12 COMRAM    22    18      4
                          i2___lwdiv
                          i2___lwmod
                           i2___wmul
                          i2_isdigit
                            i2_putch
 ---------------------------------------------------------------------------------
 (8) i2_putch                                              1     1      0     135
                                              2 COMRAM     1     1      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (8) i2_isdigit                                            3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (8) i2___wmul                                             6     2      4     365
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) i2___lwmod                                            5     1      4     211
                                              7 COMRAM     5     1      4
                          i2___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) i2___lwdiv                                            7     3      4     266
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (6) i2_lcdInst                                            1     1      0     135
                                              2 COMRAM     1     1      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (7) i2_lcdNibble                                          2     2      0     113
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) _captureKeypad                                        3     1      2      23
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (7) _ReadRun                                             11     7      4     618
                                              2 COMRAM    11     7      4
                               _back
                           i2_ReadEE
 ---------------------------------------------------------------------------------
 (8) i2_ReadEE                                             2     0      2     174
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _back                                                 2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize
     _I2C_Master_Init
       ___lldiv
     _initLCD
       _lcdInst
         _lcdNibble
     _initLatest
       _ReadEE
     _lcdInst
       _lcdNibble
   _lcdInst
     _lcdNibble
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
     _putch
       _lcdNibble
   _showRTC
     _getTime
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble

 _intrpt (ROOT)
   _PWMC
     ___awdiv
   _PermLog
     _ReadRun
       _back
       i2_ReadEE
     _captureKeypad
     _showInfo
       _captureKeypad
       i2_lcdInst
         i2_lcdNibble
       i2_printf
         i2___lwdiv
         i2___lwmod
           i2___lwdiv (ARG)
         i2___wmul
         i2_isdigit
         i2_putch
           i2_lcdNibble
     i2_lcdInst
       i2_lcdNibble
     i2_printf
       i2___lwdiv
       i2___lwmod
         i2___lwdiv (ARG)
       i2___wmul
       i2_isdigit
       i2_putch
         i2_lcdNibble
   _mainloop
     _CCW90
       _PWMC
         ___awdiv
     _CW90
       _PWMC
         ___awdiv
     _WriteRun
       _WriteEE
       i2___wmul
     _closeGate
     _openGate
     _showInfo
       _captureKeypad
       i2_lcdInst
         i2_lcdNibble
       i2_printf
         i2___lwdiv
         i2___lwmod
           i2___lwdiv (ARG)
         i2___wmul
         i2_isdigit
         i2_putch
           i2_lcdNibble
     _stopMoving
       i2_lcdInst
         i2_lcdNibble
       i2_printf
         i2___lwdiv
         i2___lwmod
           i2___lwdiv (ARG)
         i2___wmul
         i2_isdigit
         i2_putch
           i2_lcdNibble
     i2_lcdInst
       i2_lcdNibble
     i2_printf
       i2___lwdiv
       i2___lwmod
         i2___lwdiv (ARG)
       i2___wmul
       i2_isdigit
       i2_putch
         i2_lcdNibble
   _simulate
     _CCW90
       _PWMC
         ___awdiv
     _CW90
       _PWMC
         ___awdiv
     _HexDecToDec2
       i2___wmul
     _PWMC
       ___awdiv
     _WriteRun
       _WriteEE
       i2___wmul
     _check9
       _checkV
         _AD
         ___awtoft
           ___ftpack
         ___ftge
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       _printV
         i2_printf
           i2___lwdiv
           i2___lwmod
             i2___lwdiv (ARG)
           i2___wmul
           i2_isdigit
           i2_putch
             i2_lcdNibble
       i2_printf
         i2___lwdiv
         i2___lwmod
           i2___lwdiv (ARG)
         i2___wmul
         i2_isdigit
         i2_putch
           i2_lcdNibble
     _checkAA
       _checkV
         _AD
         ___awtoft
           ___ftpack
         ___ftge
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       _printV
         i2_printf
           i2___lwdiv
           i2___lwmod
             i2___lwdiv (ARG)
           i2___wmul
           i2_isdigit
           i2_putch
             i2_lcdNibble
       i2_printf
         i2___lwdiv
         i2___lwmod
           i2___lwdiv (ARG)
         i2___wmul
         i2_isdigit
         i2_putch
           i2_lcdNibble
     _checkC
       _checkV
         _AD
         ___awtoft
           ___ftpack
         ___ftge
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       _printV
         i2_printf
           i2___lwdiv
           i2___lwmod
             i2___lwdiv (ARG)
           i2___wmul
           i2_isdigit
           i2_putch
             i2_lcdNibble
       i2_printf
         i2___lwdiv
         i2___lwmod
           i2___lwdiv (ARG)
         i2___wmul
         i2_isdigit
         i2_putch
           i2_lcdNibble
     _closeGate
     _openGate
     _showInfo
       _captureKeypad
       i2_lcdInst
         i2_lcdNibble
       i2_printf
         i2___lwdiv
         i2___lwmod
           i2___lwdiv (ARG)
         i2___wmul
         i2_isdigit
         i2_putch
           i2_lcdNibble
     _stopMoving
       i2_lcdInst
         i2_lcdNibble
       i2_printf
         i2___lwdiv
         i2___lwmod
           i2___lwdiv (ARG)
         i2___wmul
         i2_isdigit
         i2_putch
           i2_lcdNibble
     i2___wmul
     i2_getTime
       i2_I2C_Master_Read
         i2_I2C_Master_Wait
       i2_I2C_Master_Start
         i2_I2C_Master_Wait
       i2_I2C_Master_Stop
         i2_I2C_Master_Wait
       i2_I2C_Master_Write
         i2_I2C_Master_Wait
     i2_lcdInst
       i2_lcdNibble
     i2_printf
       i2___lwdiv
       i2___lwmod
         i2___lwdiv (ARG)
       i2___wmul
       i2_isdigit
       i2_putch
         i2_lcdNibble
   _stopMoving
     i2_lcdInst
       i2_lcdNibble
     i2_printf
       i2___lwdiv
       i2___lwmod
         i2___lwdiv (ARG)
       i2___wmul
       i2_isdigit
       i2_putch
         i2_lcdNibble
   i2_lcdInst
     i2_lcdNibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     2A      64       5       78.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     76      7C       1       98.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E0      34        0.0%
DATA                 0      0      E0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Apr 12 13:48:36 2017

         i2_I2C_Master_Start 26E8           i2_I2C_Master_Write 26C6                           _AD 24A8  
               ___awdiv@sign 0006          ___wmul@multiplicand 00B2           i2___lwdiv@dividend 0001  
                __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000  
               __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000                  __CFG_OSC$HS 000000  
                        ?_AD 0001                          l407 2654                          l455 2636  
                        l921 19D0                          l974 1E3A                          l984 20D8  
               __CFG_CPB$OFF 000000                          _PEN 007E2A                 __CFG_CPD$OFF 000000  
                        _SEN 007E28          ?i2_I2C_Master_Start 0001          ?i2_I2C_Master_Write 0002  
                        wreg 000FE8                         ??_AD 0003                 __CFG_LVP$OFF 000000  
               __CFG_WDT$OFF 000000                         l4015 1BE8                         l4025 1C16  
                       l4019 1BF2                         l3601 20A6                         l3605 20CA  
                       l3457 2476                         l3801 07BC                         l3713 05A4  
                       l4505 228C                         l3555 1954                         l3539 249E  
                       l3723 05E2                         l3715 05B0                         l3707 0578  
                       l3557 1964                         l3581 1DFC                         l3821 0864  
                       l3813 07FE                         l3725 05FA                         l3717 05B6  
                       l3709 057E                         l3733 061A                         l3567 19BE  
                       l3559 196A                         l3831 08D2                         l3807 07D8  
                       l3751 06AE                         l3719 05CE                         l3735 0652  
                       l3577 1DEA                         l3809 07E4                         l3817 0812  
                       l3753 06B4                         l3729 0612                         l3833 08DE  
                       l3579 1DF6                         l3819 0818                         l3827 08B2  
                       l3747 0692                         l3683 04A0                         l3589 1E2C  
                       l3597 2094                         l3829 08CA                         l3765 06EA  
                       l3781 0726                         l3693 04D0                         l3599 20A0  
                       l3767 06F0                         l3783 073E                         l3687 04B4  
                       l3793 0798                         l3689 04C6                         l3795 07A2  
                       l3699 0500                         l3789 0760                         _ADFM 007E07  
                       _ADON 007E10                         _CW90 1C34                         STR_1 FF16  
                       STR_2 FDD3                         STR_3 FF2B                         STR_4 FFDB  
                       STR_5 FFF2                         STR_6 FFF6                         STR_7 FFF9  
                       STR_8 FFFC                         STR_9 FFEE                         _LATA 000F89  
                       _LATB 000F8A                         _LATC 000F8B                         _LATD 000F8C  
                       _LATE 000F8D                         u2560 2474                         u3607 2042  
                       u3617 206E                         u3627 2078                         u3557 226E  
                       u3567 1B9A                         u3577 232A                         u2795 2112  
                       u3587 235E                         _RCEN 007E2B                         u3597 2038  
                       _PWMC 1668                checkAA@sorted 002E                         _back 260A  
                       _main 2246                 ___ftpack@arg 0001                         _mode 007B  
               ___ftpack@exp 0004                         _time 00A9                         fsr0h 000FEA  
                       fsr1h 000FE2           i2___lwdiv@quotient 0005                         fsr2h 000FDA  
                       fsr0l 000FE9                         indf2 000FDF                         fsr1l 000FE1  
                       fsr2l 000FD9                         btemp 007D         ??i2_I2C_Master_Start 0002  
       ??i2_I2C_Master_Write 0004                         prodh 000FF4                         prodl 000FF3  
            ReadRun@backruns 000B                         start 000E                __CFG_IESO$OFF 000000  
       __end_of_HexDecToDec2 22DC                   ReadRun@add 000C              __end_ofi2_putch 26A6  
              __CFG_MCLRE$ON 000000                 ___ftmul@cntr 001A                 ___param_bank 000000  
               ___ftmul@sign 001B                   i2getTime@i 0006                  i2_lcdNibble 219E  
            __end_of_ReadRun 1574              __end_of_PermLog 1926                        ?_CW90 0016  
           ?_I2C_Master_Init 00BD             ?_I2C_Master_Read 0001                        ?_PWMC 0009  
           ?_I2C_Master_Wait 0001             ?_I2C_Master_Stop 0001                        ?_back 0001  
                      ?_main 0001                        _ACKEN 007E2C                        _ACKDT 007E2D  
                      _CCW90 1CBE              __end_of___awdiv 1DCC                        _EEADR 000FA9  
                      STR_10 FFF6                        STR_11 FFF9                        STR_12 FFFC  
                      STR_20 FF8B                        STR_13 FFE5                        STR_21 FF54  
                      STR_14 FFF9                        STR_30 FED7                        STR_22 FEC1  
                      STR_31 FFD0                        STR_15 FFF6                        STR_23 FE50  
                      STR_16 FFFC                        STR_40 FFE6                        STR_32 FEAB  
                      STR_24 FE20                        STR_33 FFD0                        STR_17 FDD3  
                      STR_41 FFEF                        STR_25 FF01                        STR_42 FFF2  
                      STR_34 FEEC                        STR_26 FE38                        STR_18 FDEE  
                      STR_35 FFD0                        STR_43 FE7F                        STR_27 FE68  
                      STR_19 FE07                        STR_44 FF67                        STR_36 FF40  
                      STR_28 FE95                        STR_29 FFD0                        STR_45 FFAE  
                      STR_37 FF79                        STR_38 FFEA                        STR_46 FFBF  
                      STR_39 FFE0                        STR_47 FF9D              __end_of_WriteEE 2546  
            __end_of___lldiv 19E2              __end_of___ftmul 1668              ___awdiv@divisor 0003  
                      _LATC0 007C58                        _LATB2 007C52                        _LATC1 007C59  
                      _LATC2 007C5A                        _LATC5 007C5D                        _LATC6 007C5E  
                      _LATC7 007C5F              __end_of___lwdiv 1E44              __end_of___lwmod 20E2  
                      i2l108 11EE                        i2l109 1278                        i2l133 01DA  
                      i2l241 25EE                        i2l129 0186                        i2l314 2418  
                      i2l154 0EA0                        i2l171 0EEE                        i2l244 25FA  
                      i2l340 24B6                        i2l157 0CF2                        i2l166 0D7C  
                      i2l407 2668                        i2l167 0D88                        i2l168 0DA8  
                      i2l177 0EEC                        i2l290 16A0                        i2l362 200E  
                      i2l461 253C                        i2l349 1796                        i2l455 264C  
                      i2l375 1F6E                        i2l376 1F9C                        i2l368 1EF8  
                      i2l369 1F26                        i2l478 191E                        i2l791 1A70  
            ___awdiv@counter 0005                        i2l974 223C                        i2l984 23A0  
            __end_of_checkAA 2018                        _PORTB 000F81                        _TRISA 000F92  
                      _TRISB 000F93                        _TRISC 000F94                        _TRISD 000F95  
                      _TRISE 000F96                __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000  
              __CFG_WRT1$OFF 000000                simulate@F3110 0077                simulate@F3112 00A4  
              simulate@F3114 00A0                simulate@F3123 0092                simulate@F3125 008C  
              simulate@F3127 0086                __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000  
            __end_of_lcdInst 269A               __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000  
            __end_of_getTime 1C34               __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000  
             __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000  
              __CFG_WRTD$OFF 000000              __end_of_initLCD 2368               __CFG_EBTRB$OFF 000000  
                 i2isdigit@c 0003                ___awtoft@sign 000C              __end_of_dpowers FDCB  
           __end_ofi2_ReadEE 2654              __end_of_isdigit 24A8                ___ftpack@sign 0005  
                      _putch 267A                        pclath 000FFA              __end_of_showRTC 1BAA  
                      tablat 000FF5             __end_ofi2___wmul 256C                        plusw1 000FE3  
                      plusw2 000FDB                        status 000FD8                simulate@start 003C  
             __CFG_PBADEN$ON 000000                i2printf@width 0020             __end_ofi2_printf 0C96  
         __size_ofi2___lwdiv 0052                 __end_of_CW90 1CBE           __size_ofi2___lwmod 0042  
                ReadRun@time 0005                 __end_of_PWMC 175A              __initialization 22DC  
               __end_of_back 2626           __size_ofi2_lcdInst 000C                 __end_of_main 2294  
         __size_ofi2_getTime 0076                   i2printf@ap 0018                   i2printf@cp 0015  
              ReadEE@address 00B0                       ??_CW90 0018           __size_ofi2_isdigit 001E  
                     ??_PWMC 000F               mainloop@period 003C               mainloop@portCW 0036  
                     ??_back 0001               mainloop@sorted 0032                       ??_main 00D8  
                     ?_CCW90 0016                __activetblptr 000002                checkV@channel 002B  
          ?_I2C_Master_Start 0001            ?_I2C_Master_Write 00B1                    CCW90@port 0016  
         ??_I2C_Master_Start 00B1                       _ADCON0 000FC2                       _ADCON1 000FC1  
         ??_I2C_Master_Write 00B3                       _ADRESH 000FC4                       _EEADRH 000FAA  
                     _ADRESL 000FC3                       _EEDATA 000FA8                       _EECON2 000FA7  
           ___awdiv@dividend 0001              i2lcdNibble@data 0002             __end_of___awtoft 23E2  
                     ?_putch 0001             __end_of___ftpack 1A90              i2lcdNibble@temp 0001  
                     _INT1IE 007F83                       _INT1IF 007F80             __end_of_WriteRun 1442  
                     _INT2IE 007F84                       _INT2IF 007F81                       _CVRCON 000FB5  
                     i2l3023 25E4                       i2l3103 159C                       i2l3033 220A  
                     i2l4001 1FE0                       i2l3035 2212                       i2l3123 15F6  
                     i2l4003 1FF0                       i2l3045 2232                       i2l3037 2216  
                     i2l3061 2396                       i2l3053 2376                       i2l3205 1AC0  
                     i2l3133 161E                       i2l3109 15C4                       i2l3055 237E  
                     i2l3231 0924                       i2l3215 1B1C                       i2l3127 1606  
                     i2l3057 2382                       i2l3241 0958                       i2l3225 0906  
                     i2l3153 1D5C                       i2l3209 1AF0                       i2l3137 162E  
                     i2l3331 0B42                       i2l3307 0AE2                       i2l3323 0B12  
                     i2l3251 09BA                       i2l3235 092A                       i2l3309 0AE6  
                     i2l3325 0B28                       i2l3261 09F2                       i2l3229 0916  
                     i2l3165 1D82                       i2l3181 1DB4                       i2l3421 1742  
                     i2l4221 0100                       i2l4205 0094                       i2l3351 0BA2  
                     i2l3343 0B84                       i2l3335 0B66                       i2l3271 0A28  
                     i2l3255 09D0                       i2l3167 1D8A                       i2l3159 1D6C  
                     i2l3415 172A                       i2l3407 16FA                       i2l4223 0104  
                     i2l3361 0BCE                       i2l3337 0B6E                       i2l3265 0A04  
                     i2l3257 09DA                       i2l3249 09B6                       i2l3185 1DC2  
                     i2l3177 1DAA                       i2l3169 1D8E                       i2l3425 1752  
                     i2l3417 1734                       i2l4065 1E7A                       i2l3363 0C12  
                     i2l3371 0C6E                       i2l3355 0BB6                       i2l3267 0A16  
                     i2l3259 09E0                       i2l3275 0A2E                       i2l4075 1E9E  
                     i2l4323 0412                       i2l3373 0C74                       i2l3349 0B9A  
                     i2l3293 0AB2                       i2l3277 0A62                       i2l3197 23BE  
                     i2l4069 1E82                       i2l4309 0362                       i2l4261 01CE  
                     i2l4245 0174                       i2l4405 0D3A                       i2l3527 2622  
                     i2l3359 0BC8                       i2l3295 0AB6                       i2l3375 0C7C  
                     i2l4255 01B0                       i2l4247 017A                       i2l4239 0158  
                     i2l3369 0C58                       i2l3289 0A98                       i2l4361 184E  
                     i2l3633 251A                       i2l4329 0422                       i2l4441 0E36  
                     i2l4433 0E26                       i2l3387 1692                       i2l3467 177A  
                     i2l4275 0222                       i2l4427 0E10                       i2l4419 0DC8  
                     i2l4451 0E48                       i2l4373 1896                       i2l3485 1840  
                     i2l3469 1780                       i2l3493 24E4                       i2l4277 022E  
                     i2l4269 0204                       i2l3399 16CA                       i2l3479 17E2  
                     i2l4471 0ED4                       i2l4447 0E44                       i2l4455 0E88  
                     i2l4297 02F8                       i2l4465 0EC4                       i2l3931 101A  
                     i2l3925 0F9A                       i2l3917 0F5E                       i2l4389 191A  
                     i2l2981 1A28                       i2l2973 19F2                       i2l3943 108E  
                     i2l3919 0F6C                       i2l3863 23FE                       i2l4399 0CF8  
                     i2l3937 1052                       i2l2985 1A3E                       i2l2977 1A00  
                     i2l3955 1106                       i2l3883 1302                       i2l2987 1A5C  
                     i2l2979 1A0A                       i2l3971 1F60                       i2l3949 10CA  
                     i2l3957 1110                       i2l2989 1A66                       i2l3973 1F7E  
                     i2l3959 1148                       i2l3985 1EEA                       i2l3987 1F08  
                     i2l3999 1FD6                       u197_41 1584                       u199_41 15AC  
                  ??i2_putch 0003                       _SSPADD 000FC8                       _TRISC3 007CA3  
                     _TRISC4 007CA4                       _SSPBUF 000FC9                    AD@channel 0005  
              checkV@voltage 002C                    ??_ReadRun 0007                       _ReadEE 2626  
                  ??_PermLog 0030                       _Latest 00A8               __CFG_XINST$OFF 000000  
      __end_of_captureKeypad 260A                       ___ftge 1A90                       ___wmul 241A  
                     _check9 1F30                       _checkC 1EBA                    ??___awdiv 0005  
                     _checkV 175A               __CFG_STVREN$ON 000000                    ??_WriteEE 0004  
                  ??___lldiv 00B8                    ??___ftmul 0013             __end_of_mainloop 12E0  
                  ??___lwdiv 00B4                    ??___lwmod 00BB                    ??_checkAA 0030  
                     clear_0 2302             ___awdiv@quotient 0007                       _intrpt 0008  
                     _printV 24D2                    ??_lcdInst 00B2                       _printf 0492  
                  ??_getTime 00B5             __end_of_openGate 25AE        ___ftmul@f3_as_product 0017  
                PermLog@time 0037                    ??_initLCD 00B3                    ??_isdigit 00B0  
           __end_of_showInfo 1152            __end_ofi2___lwdiv 2246                 __mediumconst FDC0  
          __end_ofi2___lwmod 23AA                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8             __end_of_simulate 0492                    ??_showRTC 00D6  
          __end_ofi2_lcdInst 26B2            __end_ofi2_getTime 1EBA               simulate@period 0058  
             simulate@portCW 0048               simulate@notyet 0040        __size_of_HexDecToDec2 0048  
          __end_ofi2_isdigit 25EC               simulate@sorted 005C                   __accesstop 0080  
    __end_of__initialization 2314                   ___ftge@ff1 001C                   ___ftge@ff2 001F  
              __end_of_CCW90 1D48                ___rparam_used 000001                   ___awtoft@c 0009  
                 ___ftmul@f1 000D                   ___ftmul@f2 0010           i2___lwmod@dividend 0008  
             __pcstackCOMRAM 0001                 __pidataBANK0 26B2                    ?i2_ReadEE 0001  
              __end_of_putch 268A                  i2printf@idx 0017                  i2printf@len 001A  
                i2printf@val 001D                   __end_of_AD 24D2                      ??_CCW90 0018  
                  ?i2___wmul 0001           __size_of_lcdNibble 0068                  i2putch@data 0003  
               _HexDecToDec2 2294           __size_of_closeGate 0020            HexDecToDec2@digit 000E  
                  ?i2_printf 000D            HexDecToDec2@tenth 000C                  intrpt@F3137 0080  
                    ??_putch 00B2                   back@result 0002                   __pbssBANK0 0080  
                    ?_ReadEE 00B0                 stopMoving@em 0025                      ?___ftge 001C  
               WriteRun@time 0009                 ?i2_lcdNibble 0001                      ?___wmul 00B0  
                    ?_check9 002E                      ?_checkC 002E                      ?_checkV 0025  
                 ??i2_ReadEE 0003                      ?_intrpt 0001                    ?___awtoft 0009  
                  ?___ftpack 0001                      ?_printV 0023                      ?_printf 00BC  
                  ?_WriteRun 0007                   ??i2___wmul 0005               WriteRun@sorted 0007  
                    _INTEDG2 007F8C                   ??i2_printf 0011                      _SSPCON1 000FC6  
                    _SSPCON2 000FC5                      _SSPSTAT 000FC7                  testAD@F3144 009C  
                  ?_mainloop 0001                      i2_putch 269A               _stopMoving$577 0023  
__size_ofi2_I2C_Master_Start 0008            __end_of_lcdNibble 2080                      _ReadRun 1442  
__size_ofi2_I2C_Master_Write 000A                    ?_openGate 0001                      _PermLog 184A  
                    __Hparam 0000              __size_of_ReadEE 0018                      __Lparam 0000  
          __end_of_closeGate 25CE                   _initLatest 256C                    ?_showInfo 0023  
            __size_of___ftge 0090                    ?_simulate 0001                      ___awdiv 1D48  
                    _WriteEE 2520                      ___lldiv 1926              __size_of___wmul 0036  
                    ___ftmul 1574              __size_of_check9 0076              __size_of_checkC 0076  
            __size_of_checkV 00F0                      ___lwdiv 1DCC                      ___lwmod 2080  
                    _checkAA 1FA6                      __pcinit 22DC                   ??___awtoft 000C  
                 ??___ftpack 0006                      __ramtop 1000                   _initialize 2142  
            __size_of_intrpt 0F22                      _lcdInst 268A                   ??_WriteRun 000B  
                    __ptext0 2246                      __ptext1 1B20                      __ptext2 0492  
                    __ptext3 267A                      _getTime 1BAA                      __ptext4 247E  
                    __ptext5 241A                      __ptext6 2080                      __ptext7 1DCC  
                    __ptext8 1BAA                      __ptext9 26BC              __size_of_printV 0028  
               PermLog@F3082 0098              __size_of_printf 046A                      check9@V 0032  
                    checkC@V 0032                      _initLCD 2322            __end_of_hexpowers FDD3  
                    _dpowers FDC1                      _isdigit 247E     __size_of_I2C_Master_Init 0060  
   __size_of_I2C_Master_Read 002E                      _showRTC 1B20     __size_of_I2C_Master_Wait 0014  
   __size_of_I2C_Master_Stop 0008               __pintcode_body 0C96         end_of_initialization 2314  
                 ??_mainloop 0030                __Lmediumconst FDC0                      int_func 0C96  
        i2___wmul@multiplier 0001    __size_of_I2C_Master_Start 0008                   ??_openGate 0001  
  __size_of_I2C_Master_Write 000A              ___lldiv@divisor 00B4              ___lldiv@counter 00BC  
                  _PWMC$1423 0011                    _PWMC$1424 0012                    _PWMC$1425 0013  
                 ??_showInfo 0027                      printf@c 00D5                      printf@f 00BC  
           I2C_Master_Init@c 00BD             I2C_Master_Read@a 00B1                      postdec1 000FE5  
                    postdec2 000FDD                   ??_simulate 0034                      postinc0 000FEE  
                    postinc2 000FDE             checkV@threshhold 0025                    _PORTBbits 000F81  
            simulate@shakeCW 0047                  PWMC@widthus 0009              simulate@portCCW 004E  
          i2_I2C_Master_Read 24FA            i2_I2C_Master_Wait 2668            i2_I2C_Master_Stop 26E0  
          i2___lwdiv@divisor 0003                    i2___lwdiv 21F4                    i2___lwmod 2368  
          i2___lwdiv@counter 0007           ?i2_I2C_Master_Read 0001           ?i2_I2C_Master_Wait 0001  
         ?i2_I2C_Master_Stop 0001                    i2_lcdInst 26A6                    i2_getTime 1E44  
                printf@width 00D3              PermLog@backruns 0039                   _stopMoving 23E2  
        ??i2_I2C_Master_Read 0002                    i2_isdigit 25CE          ??i2_I2C_Master_Wait 0001  
        ??i2_I2C_Master_Stop 0002                ReadRun@sorted 0003                  simulate@now 0038  
               check9@sorted 002E                  ___ftmul@exp 0016               __end_of_ReadEE 263E  
                ?_initLatest 0001               __end_of___ftge 1B20               __end_of___wmul 2450  
             __end_of_check9 1FA6               __end_of_checkC 1F30               __end_of_checkV 184A  
       __size_ofi2_lcdNibble 0056                mainloop@F3101 00DA                mainloop@F3096 00E0  
                ?_initialize 0001                i2lcdInst@data 0003                 checkC@sorted 002E  
          __size_ofi2_ReadEE 0016               __end_of_intrpt 0F2A             i2___wmul@product 0005  
             __end_of_printV 24FA               __end_of_printf 08FC                 i2printf@flag 001F  
            i2ReadEE@address 0001    __end_ofi2_I2C_Master_Read 2520    __end_ofi2_I2C_Master_Wait 267A  
               i2printf@prec 001C          start_initialization 22DC    __end_ofi2_I2C_Master_Stop 26E8  
          __size_ofi2___wmul 0026                    i2printf@c 0022                    i2printf@f 000D  
     __size_of_captureKeypad 001E        i2I2C_Master_Read@temp 0003                i2getTime@time 0004  
                 ?i2___lwdiv 0001                   ?i2___lwmod 0008            __size_ofi2_printf 039A  
          ??_I2C_Master_Init 00C1            ??_I2C_Master_Read 00B1            ??_I2C_Master_Wait 00B0  
                 ?i2_lcdInst 0001            ??_I2C_Master_Stop 00B1                   ?i2_getTime 0004  
                 ?i2_isdigit 0001                     ??_ReadEE 00B2                     CW90@port 0016  
                   ??___ftge 0022                     ??___wmul 00B4                     ??_check9 0030  
                   ??_checkC 0030                     ??_checkV 0027                  __pdataBANK0 00DA  
           __CFG_LPT1OSC$OFF 000000                     ??_intrpt 0060                     ??_printV 0025  
                   ??_printf 00C4                  WriteEE@data 0003            __size_of___awtoft 0038  
          __size_of___ftpack 00AE            __size_of_WriteRun 0162                  __pbssCOMRAM 0077  
              __pcstackBANK0 00B0            i2___lwmod@divisor 000A            i2___lwmod@counter 000C  
               _isdigit$1079 00B1          __size_of_initLatest 0022                     ?i2_putch 0001  
             intrpt@keypress 0070          __size_of_initialize 005C            __size_of_mainloop 018E  
                ?_stopMoving 0001             _I2C_Master_Start 26D8                     ?_ReadRun 0003  
        i2I2C_Master_Write@d 0002             _I2C_Master_Write 26BC                     ?_PermLog 0001  
           ___lwdiv@dividend 00B0            __CFG_CCP2MX$PORTC 000000                   intrpt@port 0071  
                WriteRun@add 000D                _captureKeypad 25EC                    __pintcode 0008  
          __size_of_openGate 0020                __pmediumconst FDC0                    _lcdNibble 2018  
                   ?___awdiv 0001                     ?_WriteEE 0001                     ?___lldiv 00B0  
                   ?___ftmul 000D                     ?___lwdiv 00B0                     ?___lwmod 00B7  
          __size_of_showInfo 0228                     ?_checkAA 002E                    _closeGate 25AE  
          __size_of_simulate 0480                     ?_lcdInst 0001                     ?_getTime 00B3  
                   PWMC@port 000D               __size_of_CCW90 008A                     ?_initLCD 0001  
                   ?_isdigit 0001   __size_ofi2_I2C_Master_Read 0026   __size_ofi2_I2C_Master_Wait 0012  
 __size_ofi2_I2C_Master_Stop 0008                    checkV@tmp 0029                     ?_showRTC 0001  
                  _hexpowers FDCB             ___lwdiv@quotient 00B4                  ??i2___lwdiv 0005  
                ??i2___lwmod 000C               __size_of_putch 0010                  __size_of_AD 002A  
 __end_ofi2_I2C_Master_Start 26F0   __end_ofi2_I2C_Master_Write 26D0                  ??i2_lcdInst 0003  
                ??i2_getTime 0006               ___wmul@product 00B4                     _LATDbits 000F8C  
                ??i2_isdigit 0001                     i2u311_40 12F6                     i2u320_40 1278  
                   i2u250_45 1732                     i2u250_46 1734                     i2u315_45 22A0  
                   i2u332_41 0252                     i2u324_41 010E                     i2u244_45 16D2  
                   i2u244_46 16D4                     i2u341_40 040A                     i2u333_40 026C  
                   i2u325_41 0120                     i2u334_40 026E                     i2u350_40 0D84  
                   i2u318_41 11C2                     i2u335_40 0284                     i2u247_45 1702  
                   i2u247_46 1704                     i2u336_40 0286                     i2u337_40 029C  
                   i2u338_40 029E                     i2u370_47 1786               ?_captureKeypad 0001  
                   _PIR2bits 000FA1                     i2u371_47 17A4                     i2u363_47 0D96  
                   i2u276_40 2518                     i2u348_41 0CE0                     i2u380_47 25BC  
                   i2u372_47 118C                     i2u364_47 0DB6                     i2u381_47 1744  
                   i2u373_47 11AA                     i2u365_47 0EB0                     i2u382_47 18F6  
                   i2u374_47 11FA                     i2u366_47 007C                     i2u383_47 21B6  
                   i2u375_47 1212                     i2u367_47 02EA                     i2u384_47 21C0  
                   i2u376_47 1238                     i2u368_47 033A                     i2u385_47 21E2  
                   i2u377_47 1250                     i2u369_47 0466                     i2u386_47 21EC  
                   i2u378_47 12B4                     i2u379_47 259C             __CFG_WDTPS$32768 000000  
                 PWMC@cycles 000B                   ?_lcdNibble 0001                     i2_ReadEE 263E  
                 ?_closeGate 0001                   _ADCON0bits 000FC2            ___wmul@multiplier 00B0  
                   i2___wmul 2546                lcdNibble@data 00B1                   printf@flag 00D2  
              lcdNibble@temp 00B0                   printf@prec 00CF                   simulate@AA 005A  
        __size_of_stopMoving 0038                   simulate@V9 0056                     i2_printf 08FC  
      captureKeypad@keypress 0003          I2C_Master_Read@temp 00B2                    copy_data0 22F0  
                  mainloop@i 003E             __size_ofi2_putch 000C                   _EECON1bits 000FA6  
             showInfo@sorted 0025                     __Hrparam 0000             __size_of_ReadRun 0132  
                   __Lrparam 0000             __size_of_PermLog 00DC                 ??_initLatest 00B2  
         __CFG_BOREN$SBORDIS 000000             __size_of___awdiv 0084        i2___wmul@multiplicand 0003  
           __size_of_WriteEE 0026             __size_of___lldiv 00BC             __size_of___ftmul 00F4  
           __size_of___lwdiv 0078             __size_of___lwmod 0062                 ??_initialize 00C5  
                   ___awtoft 23AA                     ___ftpack 19E2             __size_of_checkAA 0072  
                   _WriteRun 12E0           i2I2C_Master_Read@a 0002             __size_of_lcdInst 0010  
           __size_of_getTime 008A              HexDecToDec2@hex 0007              _I2C_Master_Init 20E2  
            _I2C_Master_Read 2450             __size_of_initLCD 0046                     back@runs 0001  
              ?_HexDecToDec2 0007              _I2C_Master_Wait 2654              _I2C_Master_Stop 26D0  
           __size_of_isdigit 002A              ___lwdiv@divisor 00B2              ___lwdiv@counter 00B6  
                   __ptext10 26D0                     __ptext11 26D8                     __ptext20 20E2  
                   __ptext12 2450                     __ptext21 1926                     __ptext13 2654  
                   __ptext30 1EBA                     __ptext14 2142                     __ptext31 1FA6  
                   __ptext23 0012                     __ptext15 256C                     __ptext40 2294  
                   __ptext32 1F30                     __ptext24 1E44                     __ptext16 2626  
                   __ptext41 1152                     __ptext33 24D2                     __ptext25 26C6  
                   __ptext17 2322                     __ptext50 1D48                     __ptext42 23E2  
                   __ptext34 175A                     __ptext26 26E0                     __ptext18 268A  
                   __ptext51 184A                     __ptext43 258E                     __ptext35 1574  
                   __ptext27 26E8                     __ptext19 2018                     __ptext60 219E  
                   __ptext52 0F2A                     __ptext44 25AE                     __ptext36 1A90  
                   __ptext28 24FA                     __ptext61 25EC                     __ptext53 08FC  
                   __ptext45 12E0                     __ptext37 23AA                     __ptext29 2668  
                   __ptext62 1442                     __ptext54 269A                     __ptext46 2520  
                   __ptext38 19E2                     __ptext63 263E                     __ptext55 25CE  
                   __ptext47 1C34                     __ptext39 24A8                     __ptext64 260A  
                   __ptext56 2546                     __ptext48 1CBE                     __ptext57 2368  
                   __ptext49 1668                     __ptext58 21F4                     __ptext59 26A6  
           __size_of_showRTC 008A           __end_of_initLatest 258E                     checkAA@V 0032  
              __size_of_CW90 008A                __size_of_PWMC 00F2               i2_isdigit$1079 0002  
                   _mainloop 1152                __size_of_back 001C                __size_of_main 004E  
         __end_of_initialize 219E              ??_captureKeypad 0003                     _openGate 258E  
                   _showInfo 0F2A                ??i2_lcdNibble 0001                  ??_lcdNibble 00B0  
                   getTime@i 00B5                     _simulate 0012                     int$flags 007D  
                ??_closeGate 0001                    printf@idx 00CA                    printf@len 00CD  
                  printf@val 00D0                    simulate@C 0054                PermLog@goback 0036  
             ??_HexDecToDec2 0009                    putch@data 00B2     __end_of_I2C_Master_Start 26E0  
   __end_of_I2C_Master_Write 26C6                   _INTCONbits 000FF2                PermLog@sorted 0032  
              PWMC@countdown 0014                     isdigit@c 00B2                _simulate$1521 0036  
                   intlevel2 0000             ___lwmod@dividend 00B7             ___lldiv@dividend 00B0  
               ??_stopMoving 0023                     printf@ap 00CB                     printf@cp 00C8  
    __end_of_I2C_Master_Init 2142      __end_of_I2C_Master_Read 247E      __end_of_I2C_Master_Wait 2668  
    __end_of_I2C_Master_Stop 26D8                  lcdInst@data 00B2                 showInfo@time 0023  
               showInfo@stop 002E                 showInfo@type 002C          __end_ofi2_lcdNibble 21F4  
           ___lldiv@quotient 00B8            I2C_Master_Write@d 00B1              ___lwmod@divisor 00B9  
            ___lwmod@counter 00BB           __end_of_stopMoving 241A               WriteEE@address 0001  
          simulate@portShake 0041                  getTime@time 00B3                printV@charged 0023  

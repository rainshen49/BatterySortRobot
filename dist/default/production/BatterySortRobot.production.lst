

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Feb 23 23:51:31 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    33  0000                     
    34                           ; Version 1.41
    35                           ; Generated 25/01/2017 GMT
    36                           ; 
    37                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F4620 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     
    69                           	psect	mediumconst
    70  00FD88                     __pmediumconst:
    71                           	opt stack 0
    72  00FD88  00                 	db	0
    73  00FD89                     _dpowers:
    74                           	opt stack 0
    75  00FD89  0001               	dw	1
    76  00FD8B  000A               	dw	10
    77  00FD8D  0064               	dw	100
    78  00FD8F  03E8               	dw	1000
    79  00FD91  2710               	dw	10000
    80  00FD93                     __end_of_dpowers:
    81                           	opt stack 0
    82  0000                     _ADRESL	set	4035
    83  0000                     _ADRESH	set	4036
    84  0000                     _ADCON0bits	set	4034
    85  0000                     _PORTC	set	3970
    86  0000                     _PORTB	set	3969
    87  0000                     _PORTBbits	set	3969
    88  0000                     _LATDbits	set	3980
    89  0000                     _INTCONbits	set	4082
    90  0000                     _CVRCON	set	4021
    91  0000                     _ADCON1	set	4033
    92  0000                     _ADCON0	set	4034
    93  0000                     _LATE	set	3981
    94  0000                     _LATD	set	3980
    95  0000                     _LATC	set	3979
    96  0000                     _LATB	set	3978
    97  0000                     _LATA	set	3977
    98  0000                     _TRISE	set	3990
    99  0000                     _TRISD	set	3989
   100  0000                     _TRISC	set	3988
   101  0000                     _TRISB	set	3987
   102  0000                     _TRISA	set	3986
   103  0000                     _ADON	set	32272
   104  0000                     _LATC3	set	31835
   105  0000                     _LATC2	set	31834
   106  0000                     _LATC1	set	31833
   107  0000                     _INT1IF	set	32640
   108  0000                     _INT1IE	set	32643
   109  0000                     _ADFM	set	32263
   110  0000                     _LATC0	set	31832
   111  00FD93  53                 	db	83	;'S'
   112  00FD94  6F                 	db	111	;'o'
   113  00FD95  72                 	db	114	;'r'
   114  00FD96  74                 	db	116	;'t'
   115  00FD97  69                 	db	105	;'i'
   116  00FD98  6E                 	db	110	;'n'
   117  00FD99  67                 	db	103	;'g'
   118  00FD9A  20                 	db	32
   119  00FD9B  43                 	db	67	;'C'
   120  00FD9C  6F                 	db	111	;'o'
   121  00FD9D  6D                 	db	109	;'m'
   122  00FD9E  70                 	db	112	;'p'
   123  00FD9F  6C                 	db	108	;'l'
   124  00FDA0  65                 	db	101	;'e'
   125  00FDA1  74                 	db	116	;'t'
   126  00FDA2  65                 	db	101	;'e'
   127  00FDA3  20                 	db	32
   128  00FDA4  20                 	db	32
   129  00FDA5  20                 	db	32
   130  00FDA6  20                 	db	32
   131  00FDA7  20                 	db	32
   132  00FDA8  20                 	db	32
   133  00FDA9  20                 	db	32
   134  00FDAA  20                 	db	32
   135  00FDAB  20                 	db	32
   136  00FDAC  20                 	db	32
   137  00FDAD  00                 	db	0
   138  00FDAE  50                 	db	80	;'P'
   139  00FDAF  72                 	db	114	;'r'
   140  00FDB0  65                 	db	101	;'e'
   141  00FDB1  73                 	db	115	;'s'
   142  00FDB2  73                 	db	115	;'s'
   143  00FDB3  20                 	db	32
   144  00FDB4  61                 	db	97	;'a'
   145  00FDB5  20                 	db	32
   146  00FDB6  6E                 	db	110	;'n'
   147  00FDB7  75                 	db	117	;'u'
   148  00FDB8  6D                 	db	109	;'m'
   149  00FDB9  62                 	db	98	;'b'
   150  00FDBA  65                 	db	101	;'e'
   151  00FDBB  72                 	db	114	;'r'
   152  00FDBC  20                 	db	32
   153  00FDBD  20                 	db	32
   154  00FDBE  20                 	db	32
   155  00FDBF  20                 	db	32
   156  00FDC0  20                 	db	32
   157  00FDC1  20                 	db	32
   158  00FDC2  20                 	db	32
   159  00FDC3  20                 	db	32
   160  00FDC4  20                 	db	32
   161  00FDC5  20                 	db	32
   162  00FDC6  00                 	db	0
   163  00FDC7  54                 	db	84	;'T'
   164  00FDC8  69                 	db	105	;'i'
   165  00FDC9  6D                 	db	109	;'m'
   166  00FDCA  65                 	db	101	;'e'
   167  00FDCB  20                 	db	32
   168  00FDCC  45                 	db	69	;'E'
   169  00FDCD  6C                 	db	108	;'l'
   170  00FDCE  61                 	db	97	;'a'
   171  00FDCF  70                 	db	112	;'p'
   172  00FDD0  73                 	db	115	;'s'
   173  00FDD1  65                 	db	101	;'e'
   174  00FDD2  64                 	db	100	;'d'
   175  00FDD3  3A                 	db	58	;':'
   176  00FDD4  20                 	db	32
   177  00FDD5  20                 	db	32
   178  00FDD6  20                 	db	32
   179  00FDD7  20                 	db	32
   180  00FDD8  20                 	db	32
   181  00FDD9  20                 	db	32
   182  00FDDA  20                 	db	32
   183  00FDDB  20                 	db	32
   184  00FDDC  20                 	db	32
   185  00FDDD  20                 	db	32
   186  00FDDE  00                 	db	0
   187  00FDDF  54                 	db	84	;'T'
   188  00FDE0  6F                 	db	111	;'o'
   189  00FDE1  74                 	db	116	;'t'
   190  00FDE2  61                 	db	97	;'a'
   191  00FDE3  6C                 	db	108	;'l'
   192  00FDE4  20                 	db	32
   193  00FDE5  53                 	db	83	;'S'
   194  00FDE6  6F                 	db	111	;'o'
   195  00FDE7  72                 	db	114	;'r'
   196  00FDE8  74                 	db	116	;'t'
   197  00FDE9  65                 	db	101	;'e'
   198  00FDEA  64                 	db	100	;'d'
   199  00FDEB  3A                 	db	58	;':'
   200  00FDEC  20                 	db	32
   201  00FDED  20                 	db	32
   202  00FDEE  20                 	db	32
   203  00FDEF  20                 	db	32
   204  00FDF0  20                 	db	32
   205  00FDF1  20                 	db	32
   206  00FDF2  20                 	db	32
   207  00FDF3  20                 	db	32
   208  00FDF4  20                 	db	32
   209  00FDF5  20                 	db	32
   210  00FDF6  00                 	db	0
   211  00FDF7  46                 	db	70	;'F'
   212  00FDF8  6F                 	db	111	;'o'
   213  00FDF9  72                 	db	114	;'r'
   214  00FDFA  20                 	db	32
   215  00FDFB  6D                 	db	109	;'m'
   216  00FDFC  6F                 	db	111	;'o'
   217  00FDFD  72                 	db	114	;'r'
   218  00FDFE  65                 	db	101	;'e'
   219  00FDFF  20                 	db	32
   220  00FE00  69                 	db	105	;'i'
   221  00FE01  6E                 	db	110	;'n'
   222  00FE02  66                 	db	102	;'f'
   223  00FE03  6F                 	db	111	;'o'
   224  00FE04  20                 	db	32
   225  00FE05  20                 	db	32
   226  00FE06  20                 	db	32
   227  00FE07  20                 	db	32
   228  00FE08  20                 	db	32
   229  00FE09  20                 	db	32
   230  00FE0A  20                 	db	32
   231  00FE0B  20                 	db	32
   232  00FE0C  20                 	db	32
   233  00FE0D  20                 	db	32
   234  00FE0E  00                 	db	0
   235  00FE0F                     STR_33:
   236  00FE0F  75                 	db	117	;'u'
   237  00FE10  6E                 	db	110	;'n'
   238  00FE11  63                 	db	99	;'c'
   239  00FE12  68                 	db	104	;'h'
   240  00FE13  61                 	db	97	;'a'
   241  00FE14  72                 	db	114	;'r'
   242  00FE15  67                 	db	103	;'g'
   243  00FE16  65                 	db	101	;'e'
   244  00FE17  64                 	db	100	;'d'
   245  00FE18  20                 	db	32
   246  00FE19  41                 	db	65	;'A'
   247  00FE1A  41                 	db	65	;'A'
   248  00FE1B  20                 	db	32
   249  00FE1C  20                 	db	32
   250  00FE1D  20                 	db	32
   251  00FE1E  20                 	db	32
   252  00FE1F  20                 	db	32
   253  00FE20  20                 	db	32
   254  00FE21  20                 	db	32
   255  00FE22  20                 	db	32
   256  00FE23  20                 	db	32
   257  00FE24  20                 	db	32
   258  00FE25  00                 	db	0
   259  00FE26                     STR_39:
   260  00FE26  75                 	db	117	;'u'
   261  00FE27  6E                 	db	110	;'n'
   262  00FE28  63                 	db	99	;'c'
   263  00FE29  68                 	db	104	;'h'
   264  00FE2A  61                 	db	97	;'a'
   265  00FE2B  72                 	db	114	;'r'
   266  00FE2C  67                 	db	103	;'g'
   267  00FE2D  65                 	db	101	;'e'
   268  00FE2E  64                 	db	100	;'d'
   269  00FE2F  20                 	db	32
   270  00FE30  39                 	db	57	;'9'
   271  00FE31  56                 	db	86	;'V'
   272  00FE32  20                 	db	32
   273  00FE33  20                 	db	32
   274  00FE34  20                 	db	32
   275  00FE35  20                 	db	32
   276  00FE36  20                 	db	32
   277  00FE37  20                 	db	32
   278  00FE38  20                 	db	32
   279  00FE39  20                 	db	32
   280  00FE3A  20                 	db	32
   281  00FE3B  20                 	db	32
   282  00FE3C  00                 	db	0
   283  00FE3D  73                 	db	115	;'s'
   284  00FE3E  6D                 	db	109	;'m'
   285  00FE3F  61                 	db	97	;'a'
   286  00FE40  6C                 	db	108	;'l'
   287  00FE41  6C                 	db	108	;'l'
   288  00FE42  4E                 	db	78	;'N'
   289  00FE43  6F                 	db	111	;'o'
   290  00FE44  73                 	db	115	;'s'
   291  00FE45  65                 	db	101	;'e'
   292  00FE46  20                 	db	32
   293  00FE47  74                 	db	116	;'t'
   294  00FE48  6F                 	db	111	;'o'
   295  00FE49  20                 	db	32
   296  00FE4A  20                 	db	32
   297  00FE4B  20                 	db	32
   298  00FE4C  20                 	db	32
   299  00FE4D  20                 	db	32
   300  00FE4E  20                 	db	32
   301  00FE4F  20                 	db	32
   302  00FE50  20                 	db	32
   303  00FE51  20                 	db	32
   304  00FE52  20                 	db	32
   305  00FE53  00                 	db	0
   306  00FE54  25                 	db	37
   307  00FE55  64                 	db	100	;'d'
   308  00FE56  20                 	db	32
   309  00FE57  62                 	db	98	;'b'
   310  00FE58  61                 	db	97	;'a'
   311  00FE59  74                 	db	116	;'t'
   312  00FE5A  74                 	db	116	;'t'
   313  00FE5B  65                 	db	101	;'e'
   314  00FE5C  72                 	db	114	;'r'
   315  00FE5D  69                 	db	105	;'i'
   316  00FE5E  65                 	db	101	;'e'
   317  00FE5F  73                 	db	115	;'s'
   318  00FE60  20                 	db	32
   319  00FE61  20                 	db	32
   320  00FE62  20                 	db	32
   321  00FE63  20                 	db	32
   322  00FE64  20                 	db	32
   323  00FE65  20                 	db	32
   324  00FE66  20                 	db	32
   325  00FE67  20                 	db	32
   326  00FE68  20                 	db	32
   327  00FE69  20                 	db	32
   328  00FE6A  00                 	db	0
   329  00FE6B                     STR_42:
   330  00FE6B  75                 	db	117	;'u'
   331  00FE6C  6E                 	db	110	;'n'
   332  00FE6D  63                 	db	99	;'c'
   333  00FE6E  68                 	db	104	;'h'
   334  00FE6F  61                 	db	97	;'a'
   335  00FE70  72                 	db	114	;'r'
   336  00FE71  67                 	db	103	;'g'
   337  00FE72  65                 	db	101	;'e'
   338  00FE73  64                 	db	100	;'d'
   339  00FE74  20                 	db	32
   340  00FE75  43                 	db	67	;'C'
   341  00FE76  20                 	db	32
   342  00FE77  20                 	db	32
   343  00FE78  20                 	db	32
   344  00FE79  20                 	db	32
   345  00FE7A  20                 	db	32
   346  00FE7B  20                 	db	32
   347  00FE7C  20                 	db	32
   348  00FE7D  20                 	db	32
   349  00FE7E  20                 	db	32
   350  00FE7F  20                 	db	32
   351  00FE80  00                 	db	0
   352  00FE81  52                 	db	82	;'R'
   353  00FE82  6F                 	db	111	;'o'
   354  00FE83  74                 	db	116	;'t'
   355  00FE84  61                 	db	97	;'a'
   356  00FE85  74                 	db	116	;'t'
   357  00FE86  69                 	db	105	;'i'
   358  00FE87  6E                 	db	110	;'n'
   359  00FE88  67                 	db	103	;'g'
   360  00FE89  20                 	db	32
   361  00FE8A  58                 	db	88	;'X'
   362  00FE8B  73                 	db	115	;'s'
   363  00FE8C  20                 	db	32
   364  00FE8D  20                 	db	32
   365  00FE8E  20                 	db	32
   366  00FE8F  20                 	db	32
   367  00FE90  20                 	db	32
   368  00FE91  20                 	db	32
   369  00FE92  20                 	db	32
   370  00FE93  20                 	db	32
   371  00FE94  20                 	db	32
   372  00FE95  20                 	db	32
   373  00FE96  00                 	db	0
   374  00FE97                     STR_3:
   375  00FE97  50                 	db	80	;'P'
   376  00FE98  72                 	db	114	;'r'
   377  00FE99  65                 	db	101	;'e'
   378  00FE9A  73                 	db	115	;'s'
   379  00FE9B  73                 	db	115	;'s'
   380  00FE9C  20                 	db	32
   381  00FE9D  53                 	db	83	;'S'
   382  00FE9E  74                 	db	116	;'t'
   383  00FE9F  61                 	db	97	;'a'
   384  00FEA0  72                 	db	114	;'r'
   385  00FEA1  74                 	db	116	;'t'
   386  00FEA2  20                 	db	32
   387  00FEA3  20                 	db	32
   388  00FEA4  20                 	db	32
   389  00FEA5  20                 	db	32
   390  00FEA6  20                 	db	32
   391  00FEA7  20                 	db	32
   392  00FEA8  20                 	db	32
   393  00FEA9  20                 	db	32
   394  00FEAA  20                 	db	32
   395  00FEAB  20                 	db	32
   396  00FEAC  00                 	db	0
   397  00FEAD  62                 	db	98	;'b'
   398  00FEAE  69                 	db	105	;'i'
   399  00FEAF  67                 	db	103	;'g'
   400  00FEB0  4E                 	db	78	;'N'
   401  00FEB1  6F                 	db	111	;'o'
   402  00FEB2  73                 	db	115	;'s'
   403  00FEB3  65                 	db	101	;'e'
   404  00FEB4  20                 	db	32
   405  00FEB5  74                 	db	116	;'t'
   406  00FEB6  6F                 	db	111	;'o'
   407  00FEB7  20                 	db	32
   408  00FEB8  20                 	db	32
   409  00FEB9  20                 	db	32
   410  00FEBA  20                 	db	32
   411  00FEBB  20                 	db	32
   412  00FEBC  20                 	db	32
   413  00FEBD  20                 	db	32
   414  00FEBE  20                 	db	32
   415  00FEBF  20                 	db	32
   416  00FEC0  20                 	db	32
   417  00FEC1  00                 	db	0
   418  00FEC2  55                 	db	85	;'U'
   419  00FEC3  6E                 	db	110	;'n'
   420  00FEC4  63                 	db	99	;'c'
   421  00FEC5  68                 	db	104	;'h'
   422  00FEC6  61                 	db	97	;'a'
   423  00FEC7  72                 	db	114	;'r'
   424  00FEC8  67                 	db	103	;'g'
   425  00FEC9  65                 	db	101	;'e'
   426  00FECA  64                 	db	100	;'d'
   427  00FECB  3A                 	db	58	;':'
   428  00FECC  20                 	db	32
   429  00FECD  20                 	db	32
   430  00FECE  20                 	db	32
   431  00FECF  20                 	db	32
   432  00FED0  20                 	db	32
   433  00FED1  20                 	db	32
   434  00FED2  20                 	db	32
   435  00FED3  20                 	db	32
   436  00FED4  20                 	db	32
   437  00FED5  20                 	db	32
   438  00FED6  00                 	db	0
   439  00FED7  41                 	db	65	;'A'
   440  00FED8  41                 	db	65	;'A'
   441  00FED9  20                 	db	32
   442  00FEDA  53                 	db	83	;'S'
   443  00FEDB  6F                 	db	111	;'o'
   444  00FEDC  72                 	db	114	;'r'
   445  00FEDD  74                 	db	116	;'t'
   446  00FEDE  65                 	db	101	;'e'
   447  00FEDF  64                 	db	100	;'d'
   448  00FEE0  3A                 	db	58	;':'
   449  00FEE1  20                 	db	32
   450  00FEE2  20                 	db	32
   451  00FEE3  20                 	db	32
   452  00FEE4  20                 	db	32
   453  00FEE5  20                 	db	32
   454  00FEE6  20                 	db	32
   455  00FEE7  20                 	db	32
   456  00FEE8  20                 	db	32
   457  00FEE9  20                 	db	32
   458  00FEEA  20                 	db	32
   459  00FEEB  00                 	db	0
   460  00FEEC  39                 	db	57	;'9'
   461  00FEED  56                 	db	86	;'V'
   462  00FEEE  20                 	db	32
   463  00FEEF  53                 	db	83	;'S'
   464  00FEF0  6F                 	db	111	;'o'
   465  00FEF1  72                 	db	114	;'r'
   466  00FEF2  74                 	db	116	;'t'
   467  00FEF3  65                 	db	101	;'e'
   468  00FEF4  64                 	db	100	;'d'
   469  00FEF5  3A                 	db	58	;':'
   470  00FEF6  20                 	db	32
   471  00FEF7  20                 	db	32
   472  00FEF8  20                 	db	32
   473  00FEF9  20                 	db	32
   474  00FEFA  20                 	db	32
   475  00FEFB  20                 	db	32
   476  00FEFC  20                 	db	32
   477  00FEFD  20                 	db	32
   478  00FEFE  20                 	db	32
   479  00FEFF  20                 	db	32
   480  00FF00  00                 	db	0
   481  00FF01  25                 	db	37
   482  00FF02  64                 	db	100	;'d'
   483  00FF03  20                 	db	32
   484  00FF04  73                 	db	115	;'s'
   485  00FF05  65                 	db	101	;'e'
   486  00FF06  63                 	db	99	;'c'
   487  00FF07  6F                 	db	111	;'o'
   488  00FF08  6E                 	db	110	;'n'
   489  00FF09  64                 	db	100	;'d'
   490  00FF0A  73                 	db	115	;'s'
   491  00FF0B  20                 	db	32
   492  00FF0C  20                 	db	32
   493  00FF0D  20                 	db	32
   494  00FF0E  20                 	db	32
   495  00FF0F  20                 	db	32
   496  00FF10  20                 	db	32
   497  00FF11  20                 	db	32
   498  00FF12  20                 	db	32
   499  00FF13  20                 	db	32
   500  00FF14  20                 	db	32
   501  00FF15  00                 	db	0
   502  00FF16  53                 	db	83	;'S'
   503  00FF17  6F                 	db	111	;'o'
   504  00FF18  72                 	db	114	;'r'
   505  00FF19  74                 	db	116	;'t'
   506  00FF1A  69                 	db	105	;'i'
   507  00FF1B  6E                 	db	110	;'n'
   508  00FF1C  67                 	db	103	;'g'
   509  00FF1D  2E                 	db	46
   510  00FF1E  2E                 	db	46
   511  00FF1F  2E                 	db	46
   512  00FF20  20                 	db	32
   513  00FF21  20                 	db	32
   514  00FF22  20                 	db	32
   515  00FF23  20                 	db	32
   516  00FF24  20                 	db	32
   517  00FF25  20                 	db	32
   518  00FF26  20                 	db	32
   519  00FF27  20                 	db	32
   520  00FF28  20                 	db	32
   521  00FF29  20                 	db	32
   522  00FF2A  00                 	db	0
   523  00FF2B                     STR_22:
   524  00FF2B  75                 	db	117	;'u'
   525  00FF2C  6E                 	db	110	;'n'
   526  00FF2D  63                 	db	99	;'c'
   527  00FF2E  68                 	db	104	;'h'
   528  00FF2F  61                 	db	97	;'a'
   529  00FF30  72                 	db	114	;'r'
   530  00FF31  67                 	db	103	;'g'
   531  00FF32  65                 	db	101	;'e'
   532  00FF33  64                 	db	100	;'d'
   533  00FF34  20                 	db	32
   534  00FF35  20                 	db	32
   535  00FF36  20                 	db	32
   536  00FF37  20                 	db	32
   537  00FF38  20                 	db	32
   538  00FF39  20                 	db	32
   539  00FF3A  20                 	db	32
   540  00FF3B  20                 	db	32
   541  00FF3C  20                 	db	32
   542  00FF3D  20                 	db	32
   543  00FF3E  00                 	db	0
   544  00FF3F  43                 	db	67	;'C'
   545  00FF40  20                 	db	32
   546  00FF41  53                 	db	83	;'S'
   547  00FF42  6F                 	db	111	;'o'
   548  00FF43  72                 	db	114	;'r'
   549  00FF44  74                 	db	116	;'t'
   550  00FF45  65                 	db	101	;'e'
   551  00FF46  64                 	db	100	;'d'
   552  00FF47  3A                 	db	58	;':'
   553  00FF48  20                 	db	32
   554  00FF49  20                 	db	32
   555  00FF4A  20                 	db	32
   556  00FF4B  20                 	db	32
   557  00FF4C  20                 	db	32
   558  00FF4D  20                 	db	32
   559  00FF4E  20                 	db	32
   560  00FF4F  20                 	db	32
   561  00FF50  20                 	db	32
   562  00FF51  20                 	db	32
   563  00FF52  00                 	db	0
   564  00FF53                     STR_4:
   565  00FF53  45                 	db	69	;'E'
   566  00FF54  6D                 	db	109	;'m'
   567  00FF55  65                 	db	101	;'e'
   568  00FF56  72                 	db	114	;'r'
   569  00FF57  67                 	db	103	;'g'
   570  00FF58  65                 	db	101	;'e'
   571  00FF59  6E                 	db	110	;'n'
   572  00FF5A  63                 	db	99	;'c'
   573  00FF5B  79                 	db	121	;'y'
   574  00FF5C  20                 	db	32
   575  00FF5D  20                 	db	32
   576  00FF5E  20                 	db	32
   577  00FF5F  20                 	db	32
   578  00FF60  20                 	db	32
   579  00FF61  20                 	db	32
   580  00FF62  20                 	db	32
   581  00FF63  20                 	db	32
   582  00FF64  20                 	db	32
   583  00FF65  20                 	db	32
   584  00FF66  00                 	db	0
   585  00FF67                     STR_2:
   586  00FF67  57                 	db	87	;'W'
   587  00FF68  65                 	db	101	;'e'
   588  00FF69  6C                 	db	108	;'l'
   589  00FF6A  63                 	db	99	;'c'
   590  00FF6B  6F                 	db	111	;'o'
   591  00FF6C  6D                 	db	109	;'m'
   592  00FF6D  65                 	db	101	;'e'
   593  00FF6E  21                 	db	33
   594  00FF6F  20                 	db	32
   595  00FF70  20                 	db	32
   596  00FF71  20                 	db	32
   597  00FF72  20                 	db	32
   598  00FF73  20                 	db	32
   599  00FF74  20                 	db	32
   600  00FF75  20                 	db	32
   601  00FF76  20                 	db	32
   602  00FF77  20                 	db	32
   603  00FF78  20                 	db	32
   604  00FF79  00                 	db	0
   605  00FF7A                     STR_29:
   606  00FF7A  53                 	db	83	;'S'
   607  00FF7B  74                 	db	116	;'t'
   608  00FF7C  6F                 	db	111	;'o'
   609  00FF7D  70                 	db	112	;'p'
   610  00FF7E  70                 	db	112	;'p'
   611  00FF7F  65                 	db	101	;'e'
   612  00FF80  64                 	db	100	;'d'
   613  00FF81  20                 	db	32
   614  00FF82  20                 	db	32
   615  00FF83  20                 	db	32
   616  00FF84  20                 	db	32
   617  00FF85  20                 	db	32
   618  00FF86  20                 	db	32
   619  00FF87  20                 	db	32
   620  00FF88  20                 	db	32
   621  00FF89  20                 	db	32
   622  00FF8A  20                 	db	32
   623  00FF8B  00                 	db	0
   624  00FF8C  6E                 	db	110	;'n'
   625  00FF8D  6F                 	db	111	;'o'
   626  00FF8E  20                 	db	32
   627  00FF8F  41                 	db	65	;'A'
   628  00FF90  41                 	db	65	;'A'
   629  00FF91  20                 	db	32
   630  00FF92  20                 	db	32
   631  00FF93  20                 	db	32
   632  00FF94  20                 	db	32
   633  00FF95  20                 	db	32
   634  00FF96  20                 	db	32
   635  00FF97  20                 	db	32
   636  00FF98  20                 	db	32
   637  00FF99  20                 	db	32
   638  00FF9A  20                 	db	32
   639  00FF9B  00                 	db	0
   640  00FF9C  25                 	db	37
   641  00FF9D  64                 	db	100	;'d'
   642  00FF9E  20                 	db	32
   643  00FF9F  72                 	db	114	;'r'
   644  00FFA0  65                 	db	101	;'e'
   645  00FFA1  63                 	db	99	;'c'
   646  00FFA2  65                 	db	101	;'e'
   647  00FFA3  69                 	db	105	;'i'
   648  00FFA4  76                 	db	118	;'v'
   649  00FFA5  65                 	db	101	;'e'
   650  00FFA6  64                 	db	100	;'d'
   651  00FFA7  20                 	db	32
   652  00FFA8  20                 	db	32
   653  00FFA9  20                 	db	32
   654  00FFAA  20                 	db	32
   655  00FFAB  00                 	db	0
   656  00FFAC  6E                 	db	110	;'n'
   657  00FFAD  6F                 	db	111	;'o'
   658  00FFAE  20                 	db	32
   659  00FFAF  39                 	db	57	;'9'
   660  00FFB0  20                 	db	32
   661  00FFB1  20                 	db	32
   662  00FFB2  20                 	db	32
   663  00FFB3  20                 	db	32
   664  00FFB4  20                 	db	32
   665  00FFB5  20                 	db	32
   666  00FFB6  20                 	db	32
   667  00FFB7  20                 	db	32
   668  00FFB8  20                 	db	32
   669  00FFB9  20                 	db	32
   670  00FFBA  00                 	db	0
   671  00FFBB  41                 	db	65	;'A'
   672  00FFBC  41                 	db	65	;'A'
   673  00FFBD  3A                 	db	58	;':'
   674  00FFBE  20                 	db	32
   675  00FFBF  20                 	db	32
   676  00FFC0  20                 	db	32
   677  00FFC1  20                 	db	32
   678  00FFC2  20                 	db	32
   679  00FFC3  20                 	db	32
   680  00FFC4  20                 	db	32
   681  00FFC5  20                 	db	32
   682  00FFC6  20                 	db	32
   683  00FFC7  20                 	db	32
   684  00FFC8  00                 	db	0
   685  00FFC9  63                 	db	99	;'c'
   686  00FFCA  68                 	db	104	;'h'
   687  00FFCB  61                 	db	97	;'a'
   688  00FFCC  6E                 	db	110	;'n'
   689  00FFCD  6E                 	db	110	;'n'
   690  00FFCE  65                 	db	101	;'e'
   691  00FFCF  6C                 	db	108	;'l'
   692  00FFD0  20                 	db	32
   693  00FFD1  25                 	db	37
   694  00FFD2  64                 	db	100	;'d'
   695  00FFD3  20                 	db	32
   696  00FFD4  20                 	db	32
   697  00FFD5  20                 	db	32
   698  00FFD6  00                 	db	0
   699  00FFD7  56                 	db	86	;'V'
   700  00FFD8  33                 	db	51	;'3'
   701  00FFD9  20                 	db	32
   702  00FFDA  20                 	db	32
   703  00FFDB  20                 	db	32
   704  00FFDC  20                 	db	32
   705  00FFDD  20                 	db	32
   706  00FFDE  20                 	db	32
   707  00FFDF  20                 	db	32
   708  00FFE0  20                 	db	32
   709  00FFE1  20                 	db	32
   710  00FFE2  20                 	db	32
   711  00FFE3  00                 	db	0
   712  00FFE4  39                 	db	57	;'9'
   713  00FFE5  3A                 	db	58	;':'
   714  00FFE6  20                 	db	32
   715  00FFE7  20                 	db	32
   716  00FFE8  20                 	db	32
   717  00FFE9  20                 	db	32
   718  00FFEA  20                 	db	32
   719  00FFEB  20                 	db	32
   720  00FFEC  20                 	db	32
   721  00FFED  20                 	db	32
   722  00FFEE  20                 	db	32
   723  00FFEF  20                 	db	32
   724  00FFF0  00                 	db	0
   725  00FFF1                     STR_13:
   726  00FFF1  25                 	db	37
   727  00FFF2  64                 	db	100	;'d'
   728  00FFF3  20                 	db	32
   729  00FFF4  20                 	db	32
   730  00FFF5  20                 	db	32
   731  00FFF6  20                 	db	32
   732  00FFF7  20                 	db	32
   733  00FFF8  20                 	db	32
   734  00FFF9  20                 	db	32
   735  00FFFA  20                 	db	32
   736  00FFFB  20                 	db	32
   737  00FFFC  20                 	db	32
   738  00FFFD  00                 	db	0
   739  0000                     
   740                           ; #config settings
   741  00FFFE  00                 	db	0	; dummy byte at the end
   742  0000                     
   743                           	psect	cinit
   744  000638                     __pcinit:
   745                           	opt stack 0
   746  000638                     start_initialization:
   747                           	opt stack 0
   748  000638                     __initialization:
   749                           	opt stack 0
   750                           
   751                           ; Clear objects allocated to COMRAM (8 bytes)
   752  000638  EE00  F043         	lfsr	0,__pbssCOMRAM
   753  00063C  0E08               	movlw	8
   754  00063E                     clear_0:
   755  00063E  6AEE               	clrf	postinc0,c
   756  000640  06E8               	decf	wreg,f,c
   757  000642  E1FD               	bnz	clear_0
   758  000644                     end_of_initialization:
   759                           	opt stack 0
   760  000644                     __end_of__initialization:
   761                           	opt stack 0
   762  000644  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   763  000646  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   764  000648  0E00               	movlw	low (__Lmediumconst shr (0+16))
   765  00064A  6EF8               	movwf	tblptru,c
   766  00064C  0100               	movlb	0
   767  00064E  EF09  F003         	goto	_main	;jump to C main() function
   768                           tblptru	equ	0xFF8
   769                           postinc0	equ	0xFEE
   770                           wreg	equ	0xFE8
   771                           
   772                           	psect	bssCOMRAM
   773  000043                     __pbssCOMRAM:
   774                           	opt stack 0
   775  000043                     mainloop@F3211:
   776                           	opt stack 0
   777  000043                     	ds	8
   778                           tblptru	equ	0xFF8
   779                           postinc0	equ	0xFEE
   780                           wreg	equ	0xFE8
   781                           
   782                           	psect	cstackCOMRAM
   783  000001                     __pcstackCOMRAM:
   784                           	opt stack 0
   785  000001                     ?i2___lwdiv:
   786                           	opt stack 0
   787  000001                     i2lcdNibble@temp:
   788                           	opt stack 0
   789  000001                     i2___lwdiv@dividend:
   790                           	opt stack 0
   791                           
   792                           ; 2 bytes @ 0x0
   793  000001                     	ds	1
   794  000002                     i2lcdNibble@data:
   795                           	opt stack 0
   796                           
   797                           ; 1 bytes @ 0x1
   798  000002                     	ds	1
   799  000003                     i2lcdInst@data:
   800                           	opt stack 0
   801  000003                     i2putch@data:
   802                           	opt stack 0
   803  000003                     i2___lwdiv@divisor:
   804                           	opt stack 0
   805                           
   806                           ; 2 bytes @ 0x2
   807  000003                     	ds	2
   808  000005                     i2___lwdiv@quotient:
   809                           	opt stack 0
   810                           
   811                           ; 2 bytes @ 0x4
   812  000005                     	ds	2
   813  000007                     i2___lwdiv@counter:
   814                           	opt stack 0
   815                           
   816                           ; 1 bytes @ 0x6
   817  000007                     	ds	1
   818  000008                     ?i2___lwmod:
   819                           	opt stack 0
   820  000008                     i2___lwmod@dividend:
   821                           	opt stack 0
   822                           
   823                           ; 2 bytes @ 0x7
   824  000008                     	ds	2
   825  00000A                     i2___lwmod@divisor:
   826                           	opt stack 0
   827                           
   828                           ; 2 bytes @ 0x9
   829  00000A                     	ds	2
   830  00000C                     i2___lwmod@counter:
   831                           	opt stack 0
   832                           
   833                           ; 1 bytes @ 0xB
   834  00000C                     	ds	1
   835  00000D                     ?i2_printf:
   836                           	opt stack 0
   837  00000D                     i2printf@f:
   838                           	opt stack 0
   839                           
   840                           ; 2 bytes @ 0xC
   841  00000D                     	ds	2
   842  00000F                     ??i2_printf:
   843                           
   844                           ; 1 bytes @ 0xE
   845  00000F                     	ds	1
   846  000010                     i2printf@ap:
   847                           	opt stack 0
   848                           
   849                           ; 2 bytes @ 0xF
   850  000010                     	ds	2
   851  000012                     i2printf@flag:
   852                           	opt stack 0
   853                           
   854                           ; 1 bytes @ 0x11
   855  000012                     	ds	1
   856  000013                     i2printf@prec:
   857                           	opt stack 0
   858                           
   859                           ; 1 bytes @ 0x12
   860  000013                     	ds	1
   861  000014                     i2printf@val:
   862                           	opt stack 0
   863                           
   864                           ; 2 bytes @ 0x13
   865  000014                     	ds	2
   866  000016                     i2printf@c:
   867                           	opt stack 0
   868                           
   869                           ; 1 bytes @ 0x15
   870  000016                     	ds	1
   871  000017                     ??_keypressed:
   872                           
   873                           ; 1 bytes @ 0x16
   874  000017                     	ds	14
   875  000025                     keypressed@keypress:
   876                           	opt stack 0
   877                           
   878                           ; 1 bytes @ 0x24
   879  000025                     	ds	1
   880  000026                     ?_captureKeypad:
   881                           	opt stack 0
   882  000026                     ?___lwdiv:
   883                           	opt stack 0
   884  000026                     lcdNibble@temp:
   885                           	opt stack 0
   886  000026                     PWMC0@us:
   887                           	opt stack 0
   888  000026                     ___lwdiv@dividend:
   889                           	opt stack 0
   890                           
   891                           ; 2 bytes @ 0x25
   892  000026                     	ds	1
   893  000027                     lcdNibble@data:
   894                           	opt stack 0
   895                           
   896                           ; 1 bytes @ 0x26
   897  000027                     	ds	1
   898  000028                     lcdInst@data:
   899                           	opt stack 0
   900  000028                     putch@data:
   901                           	opt stack 0
   902  000028                     captureKeypad@keypress:
   903                           	opt stack 0
   904  000028                     PWMC0@cycle:
   905                           	opt stack 0
   906  000028                     ___lwdiv@divisor:
   907                           	opt stack 0
   908                           
   909                           ; 2 bytes @ 0x27
   910  000028                     	ds	1
   911  000029                     ??_initLCD:
   912                           
   913                           ; 1 bytes @ 0x28
   914  000029                     	ds	1
   915  00002A                     ??_PWMC0:
   916  00002A                     ___lwdiv@quotient:
   917                           	opt stack 0
   918                           
   919                           ; 2 bytes @ 0x29
   920  00002A                     	ds	2
   921  00002C                     ___lwdiv@counter:
   922                           	opt stack 0
   923                           
   924                           ; 1 bytes @ 0x2B
   925  00002C                     	ds	1
   926  00002D                     ?___lwmod:
   927                           	opt stack 0
   928  00002D                     PWMC0@i:
   929                           	opt stack 0
   930  00002D                     ___lwmod@dividend:
   931                           	opt stack 0
   932                           
   933                           ; 2 bytes @ 0x2C
   934  00002D                     	ds	2
   935  00002F                     simulate@i:
   936                           	opt stack 0
   937  00002F                     ___lwmod@divisor:
   938                           	opt stack 0
   939                           
   940                           ; 2 bytes @ 0x2E
   941  00002F                     	ds	2
   942  000031                     ___lwmod@counter:
   943                           	opt stack 0
   944                           
   945                           ; 1 bytes @ 0x30
   946  000031                     	ds	1
   947  000032                     ?_printf:
   948                           	opt stack 0
   949  000032                     printf@f:
   950                           	opt stack 0
   951                           
   952                           ; 2 bytes @ 0x31
   953  000032                     	ds	4
   954  000036                     ??_printf:
   955                           
   956                           ; 1 bytes @ 0x35
   957  000036                     	ds	1
   958  000037                     printf@ap:
   959                           	opt stack 0
   960                           
   961                           ; 2 bytes @ 0x36
   962  000037                     	ds	2
   963  000039                     printf@flag:
   964                           	opt stack 0
   965                           
   966                           ; 1 bytes @ 0x38
   967  000039                     	ds	1
   968  00003A                     printf@prec:
   969                           	opt stack 0
   970                           
   971                           ; 1 bytes @ 0x39
   972  00003A                     	ds	1
   973  00003B                     printf@val:
   974                           	opt stack 0
   975                           
   976                           ; 2 bytes @ 0x3A
   977  00003B                     	ds	2
   978  00003D                     printf@c:
   979                           	opt stack 0
   980                           
   981                           ; 1 bytes @ 0x3C
   982  00003D                     	ds	1
   983  00003E                     
   984                           ; 2 bytes @ 0x3D
   985  00003E                     	ds	2
   986  000040                     
   987                           ; 3 bytes @ 0x3F
   988  000040                     	ds	3
   989  000043                     tblptru	equ	0xFF8
   990                           postinc0	equ	0xFEE
   991                           wreg	equ	0xFE8
   992                           
   993                           ; 1 bytes @ 0x42
   994 ;;
   995 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   996 ;;
   997 ;; *************** function _main *****************
   998 ;; Defined at:
   999 ;;		line 155 in file "main.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;  argc            2   61[COMRAM] int 
  1002 ;;  argv            3   63[COMRAM] PTR PTR unsigned char 
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;		None
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  2   61[COMRAM] int 
  1007 ;; Registers used:
  1008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1014 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1017 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1018 ;;Total ram usage:        5 bytes
  1019 ;; Hardware stack levels required when called:    9
  1020 ;; This function calls:
  1021 ;;		_initialize
  1022 ;;		_printf
  1023 ;;		_simulate
  1024 ;; This function is called by:
  1025 ;;		Startup code after reset
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           	psect	text0
  1030  000612                     __ptext0:
  1031                           	opt stack 0
  1032  000612                     _main:
  1033                           	opt stack 22
  1034                           
  1035                           ;main.c: 156: initialize();
  1036                           
  1037                           ;incstack = 0
  1038  000612  ECCD  F002         	call	_initialize	;wreg free
  1039                           
  1040                           ;main.c: 159: printf((unsigned char *) "Welcome!          ");
  1041  000616  0E67               	movlw	low STR_2
  1042  000618  6E32               	movwf	printf@f,c
  1043  00061A  0EFF               	movlw	high STR_2
  1044  00061C  6E33               	movwf	printf@f+1,c
  1045  00061E  EC09  F000         	call	_printf	;wreg free
  1046                           
  1047                           ;main.c: 169: printf("Press Start          ");
  1048  000622  0E97               	movlw	low STR_3
  1049  000624  6E32               	movwf	printf@f,c
  1050  000626  0EFE               	movlw	high STR_3
  1051  000628  6E33               	movwf	printf@f+1,c
  1052  00062A  EC09  F000         	call	_printf	;wreg free
  1053                           
  1054                           ;main.c: 173: simulate();
  1055  00062E  ECEC  F002         	call	_simulate	;wreg free
  1056  000632  00FF               	reset		;# 
  1057  000634  EF07  F000         	goto	start
  1058  000638                     __end_of_main:
  1059                           	opt stack 0
  1060                           tblptru	equ	0xFF8
  1061                           postinc0	equ	0xFEE
  1062                           wreg	equ	0xFE8
  1063                           
  1064 ;; *************** function _simulate *****************
  1065 ;; Defined at:
  1066 ;;		line 73 in file "main.c"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;		None
  1069 ;; Auto vars:     Size  Location     Type
  1070 ;;  i               2   46[COMRAM] int 
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  1    wreg      void 
  1073 ;; Registers used:
  1074 ;;		wreg, status,2, status,0, cstack
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1081 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1083 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1084 ;;Total ram usage:        2 bytes
  1085 ;; Hardware stack levels used:    1
  1086 ;; Hardware stack levels required when called:    7
  1087 ;; This function calls:
  1088 ;;		_PWMC0
  1089 ;;		_captureKeypad
  1090 ;;		_lcdInst
  1091 ;; This function is called by:
  1092 ;;		_main
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           	psect	text1
  1097  0005D8                     __ptext1:
  1098                           	opt stack 0
  1099  0005D8                     _simulate:
  1100                           	opt stack 23
  1101  0005D8                     
  1102                           ;main.c: 146: captureKeypad();
  1103  0005D8  EC29  F003         	call	_captureKeypad	;wreg free
  1104                           
  1105                           ;main.c: 147: lcdInst(0b10000000);;
  1106  0005DC  0E80               	movlw	128
  1107  0005DE  EC47  F003         	call	_lcdInst
  1108                           
  1109                           ;main.c: 148: for (int i = 1; i < 8192; i*=2) {
  1110  0005E2  0E00               	movlw	0
  1111  0005E4  6E30               	movwf	simulate@i+1,c
  1112  0005E6  0E01               	movlw	1
  1113  0005E8  6E2F               	movwf	simulate@i,c
  1114  0005EA                     l1930:
  1115  0005EA  BE30               	btfsc	simulate@i+1,7,c
  1116  0005EC  D004               	goto	l1934
  1117  0005EE  0E20               	movlw	32
  1118  0005F0  5C30               	subwf	simulate@i+1,w,c
  1119  0005F2  B0D8               	btfsc	status,0,c
  1120  0005F4  D7F1               	goto	l1926
  1121  0005F6                     l1934:
  1122                           
  1123                           ;main.c: 150: PWMC0(i, 16384);
  1124  0005F6  C02F  F026         	movff	simulate@i,PWMC0@us
  1125  0005FA  C030  F027         	movff	simulate@i+1,PWMC0@us+1
  1126  0005FE  0E40               	movlw	64
  1127  000600  6E29               	movwf	PWMC0@cycle+1,c
  1128  000602  0E00               	movlw	0
  1129  000604  6E28               	movwf	PWMC0@cycle,c
  1130  000606  EC7B  F001         	call	_PWMC0	;wreg free
  1131  00060A  90D8               	bcf	status,0,c
  1132  00060C  362F               	rlcf	simulate@i,f,c
  1133  00060E  3630               	rlcf	simulate@i+1,f,c
  1134  000610  D7EC               	goto	l1930
  1135  000612                     __end_of_simulate:
  1136                           	opt stack 0
  1137                           tblptru	equ	0xFF8
  1138                           postinc0	equ	0xFEE
  1139                           wreg	equ	0xFE8
  1140                           status	equ	0xFD8
  1141                           
  1142 ;; *************** function _captureKeypad *****************
  1143 ;; Defined at:
  1144 ;;		line 3 in file "modules.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;		None
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;  keypress        1   39[COMRAM] unsigned char 
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  2   37[COMRAM] unsigned int 
  1151 ;; Registers used:
  1152 ;;		wreg, status,2, status,0
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1158 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1159 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1161 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1162 ;;Total ram usage:        3 bytes
  1163 ;; Hardware stack levels used:    1
  1164 ;; Hardware stack levels required when called:    5
  1165 ;; This function calls:
  1166 ;;		Nothing
  1167 ;; This function is called by:
  1168 ;;		_simulate
  1169 ;;		_showInfo
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           	psect	text2
  1174  000652                     __ptext2:
  1175                           	opt stack 0
  1176  000652                     _captureKeypad:
  1177                           	opt stack 24
  1178  000652                     l136:
  1179  000652  A281               	btfss	3969,1,c	;volatile
  1180  000654  D7FE               	goto	l136
  1181                           
  1182                           ;modules.c: 5: unsigned char keypress = (PORTB & 0xF0) >> 4;
  1183  000656  3881               	swapf	3969,w,c	;volatile
  1184  000658  0B0F               	andlw	15
  1185  00065A  0B0F               	andlw	15
  1186  00065C  6E28               	movwf	captureKeypad@keypress,c
  1187  00065E                     l139:
  1188  00065E  B281               	btfsc	3969,1,c	;volatile
  1189  000660  D7FE               	goto	l139
  1190                           
  1191                           ;modules.c: 7: INT1IF = 0;
  1192  000662  90F0               	bcf	intcon3,0,c	;volatile
  1193                           
  1194                           ;modules.c: 9: return keypress;
  1195  000664  C028  F026         	movff	captureKeypad@keypress,?_captureKeypad
  1196  000668  6A27               	clrf	?_captureKeypad+1,c
  1197  00066A  0012               	return		;funcret
  1198  00066C                     __end_of_captureKeypad:
  1199                           	opt stack 0
  1200                           tblptru	equ	0xFF8
  1201                           intcon3	equ	0xFF0
  1202                           postinc0	equ	0xFEE
  1203                           wreg	equ	0xFE8
  1204                           status	equ	0xFD8
  1205                           
  1206 ;; *************** function _PWMC0 *****************
  1207 ;; Defined at:
  1208 ;;		line 3 in file "motors.c"
  1209 ;; Parameters:    Size  Location     Type
  1210 ;;  us              2   37[COMRAM] int 
  1211 ;;  cycle           2   39[COMRAM] int 
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;  i               2   44[COMRAM] int 
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  1    wreg      void 
  1216 ;; Registers used:
  1217 ;;		wreg, status,2, status,0
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1223 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1224 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1225 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1226 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1227 ;;Total ram usage:        9 bytes
  1228 ;; Hardware stack levels used:    1
  1229 ;; Hardware stack levels required when called:    5
  1230 ;; This function calls:
  1231 ;;		Nothing
  1232 ;; This function is called by:
  1233 ;;		_simulate
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           	psect	text3
  1238  0002F6                     __ptext3:
  1239                           	opt stack 0
  1240  0002F6                     _PWMC0:
  1241                           	opt stack 24
  1242                           
  1243                           ;motors.c: 4: us-=2;
  1244                           
  1245                           ;incstack = 0
  1246  0002F6  0EFE               	movlw	254
  1247  0002F8  2626               	addwf	PWMC0@us,f,c
  1248  0002FA  0EFF               	movlw	255
  1249  0002FC  2227               	addwfc	PWMC0@us+1,f,c
  1250                           
  1251                           ;motors.c: 5: int i = 0;
  1252  0002FE  0E00               	movlw	0
  1253  000300  6E2E               	movwf	PWMC0@i+1,c
  1254  000302  0E00               	movlw	0
  1255  000304  6E2D               	movwf	PWMC0@i,c
  1256                           
  1257                           ;motors.c: 6: LATC0 = 1 ^ LATC0;
  1258  000306  B08B               	btfsc	3979,0,c	;volatile
  1259  000308  D002               	goto	u710
  1260  00030A  808B               	bsf	3979,0,c	;volatile
  1261  00030C  D001               	goto	l1758
  1262  00030E                     u710:
  1263  00030E  908B               	bcf	3979,0,c	;volatile
  1264  000310                     l1758:
  1265                           
  1266                           ;motors.c: 7: for (i = 0; i < us; i++) {
  1267  000310  0E00               	movlw	0
  1268  000312  6E2E               	movwf	PWMC0@i+1,c
  1269  000314  0E00               	movlw	0
  1270  000316  6E2D               	movwf	PWMC0@i,c
  1271  000318  D002               	goto	l1762
  1272  00031A                     l1760:
  1273  00031A  4A2D               	infsnz	PWMC0@i,f,c
  1274  00031C  2A2E               	incf	PWMC0@i+1,f,c
  1275  00031E                     l1762:
  1276  00031E  5026               	movf	PWMC0@us,w,c
  1277  000320  5C2D               	subwf	PWMC0@i,w,c
  1278  000322  502E               	movf	PWMC0@i+1,w,c
  1279  000324  0A80               	xorlw	128
  1280  000326  6E2A               	movwf	??_PWMC0& (0+255),c
  1281  000328  5027               	movf	PWMC0@us+1,w,c
  1282  00032A  0A80               	xorlw	128
  1283  00032C  582A               	subwfb	??_PWMC0& (0+255),w,c
  1284  00032E  A0D8               	btfss	status,0,c
  1285  000330  D7F4               	goto	l1760
  1286                           
  1287                           ;motors.c: 9: }
  1288                           ;motors.c: 10: us -= 2;
  1289  000332  0EFE               	movlw	254
  1290  000334  2626               	addwf	PWMC0@us,f,c
  1291  000336  0EFF               	movlw	255
  1292  000338  2227               	addwfc	PWMC0@us+1,f,c
  1293                           
  1294                           ;motors.c: 11: LATC0 = 1 ^ LATC0;
  1295  00033A  B08B               	btfsc	3979,0,c	;volatile
  1296  00033C  D002               	goto	u740
  1297  00033E  808B               	bsf	3979,0,c	;volatile
  1298  000340  D001               	goto	l1768
  1299  000342                     u740:
  1300  000342  908B               	bcf	3979,0,c	;volatile
  1301  000344                     l1768:
  1302                           
  1303                           ;motors.c: 12: for (i = 0; i < cycle - us; i++) {
  1304  000344  0E00               	movlw	0
  1305  000346  6E2E               	movwf	PWMC0@i+1,c
  1306  000348  0E00               	movlw	0
  1307  00034A  6E2D               	movwf	PWMC0@i,c
  1308  00034C  D002               	goto	l1772
  1309  00034E                     l1770:
  1310  00034E  4A2D               	infsnz	PWMC0@i,f,c
  1311  000350  2A2E               	incf	PWMC0@i+1,f,c
  1312  000352                     l1772:
  1313  000352  C026  F02A         	movff	PWMC0@us,??_PWMC0
  1314  000356  C027  F02B         	movff	PWMC0@us+1,??_PWMC0+1
  1315  00035A  1E2A               	comf	??_PWMC0,f,c
  1316  00035C  1E2B               	comf	??_PWMC0+1,f,c
  1317  00035E  4A2A               	infsnz	??_PWMC0,f,c
  1318  000360  2A2B               	incf	??_PWMC0+1,f,c
  1319  000362  5028               	movf	PWMC0@cycle,w,c
  1320  000364  262A               	addwf	??_PWMC0,f,c
  1321  000366  5029               	movf	PWMC0@cycle+1,w,c
  1322  000368  222B               	addwfc	??_PWMC0+1,f,c
  1323  00036A  502A               	movf	??_PWMC0,w,c
  1324  00036C  5C2D               	subwf	PWMC0@i,w,c
  1325  00036E  502E               	movf	PWMC0@i+1,w,c
  1326  000370  0A80               	xorlw	128
  1327  000372  6E2C               	movwf	(??_PWMC0+2)& (0+255),c
  1328  000374  502B               	movf	??_PWMC0+1,w,c
  1329  000376  0A80               	xorlw	128
  1330  000378  582C               	subwfb	(??_PWMC0+2)& (0+255),w,c
  1331  00037A  B0D8               	btfsc	status,0,c
  1332  00037C  0012               	return	
  1333  00037E  D7E7               	goto	l1770
  1334  000380                     __end_of_PWMC0:
  1335                           	opt stack 0
  1336                           tblptru	equ	0xFF8
  1337                           intcon3	equ	0xFF0
  1338                           postinc0	equ	0xFEE
  1339                           wreg	equ	0xFE8
  1340                           status	equ	0xFD8
  1341                           
  1342 ;; *************** function _printf *****************
  1343 ;; Defined at:
  1344 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;  f               2   49[COMRAM] PTR const unsigned char 
  1347 ;;		 -> STR_42(22), STR_41(20), STR_40(15), STR_39(23), 
  1348 ;;		 -> STR_38(21), STR_37(14), STR_36(13), STR_35(13), 
  1349 ;;		 -> STR_34(16), STR_33(23), STR_32(21), STR_31(14), 
  1350 ;;		 -> STR_30(16), STR_29(18), STR_28(20), STR_27(13), 
  1351 ;;		 -> STR_26(23), STR_25(20), STR_24(13), STR_23(12), 
  1352 ;;		 -> STR_22(20), STR_21(21), STR_20(22), STR_19(13), 
  1353 ;;		 -> STR_18(21), STR_17(13), STR_16(21), STR_15(13), 
  1354 ;;		 -> STR_14(20), STR_13(13), STR_12(21), STR_11(23), 
  1355 ;;		 -> STR_10(24), STR_9(21), STR_8(24), STR_7(24), 
  1356 ;;		 -> STR_6(25), STR_5(27), STR_4(20), STR_3(22), 
  1357 ;;		 -> STR_2(19), STR_1(21), 
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;  tmpval          4    0        struct .
  1360 ;;  cp              3    0        PTR const unsigned char 
  1361 ;;  val             2   58[COMRAM] unsigned int 
  1362 ;;  ap              2   54[COMRAM] PTR void [1]
  1363 ;;		 -> ?i2_printf(2), ?_printf(2), 
  1364 ;;  len             2    0        unsigned int 
  1365 ;;  c               1   60[COMRAM] char 
  1366 ;;  prec            1   57[COMRAM] char 
  1367 ;;  flag            1   56[COMRAM] unsigned char 
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  2   49[COMRAM] int 
  1370 ;; Registers used:
  1371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1377 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1378 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1379 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1380 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1381 ;;Total ram usage:       12 bytes
  1382 ;; Hardware stack levels used:    1
  1383 ;; Hardware stack levels required when called:    7
  1384 ;; This function calls:
  1385 ;;		___lwdiv
  1386 ;;		___lwmod
  1387 ;;		_putch
  1388 ;; This function is called by:
  1389 ;;		_main
  1390 ;;		_mainloop
  1391 ;;		_showInfo
  1392 ;;		_moveXMotors
  1393 ;;		_moveBigNose
  1394 ;;		_moveSmallNose
  1395 ;;		_checkV
  1396 ;;		_checkAA
  1397 ;;		_checkC9V
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           	psect	text4
  1402  000012                     __ptext4:
  1403                           	opt stack 0
  1404  000012                     _printf:
  1405                           	opt stack 23
  1406                           
  1407                           ;doprnt.c: 466: va_list ap;
  1408                           ;doprnt.c: 499: signed char c;
  1409                           ;doprnt.c: 506: signed char prec;
  1410                           ;doprnt.c: 508: unsigned char flag;
  1411                           ;doprnt.c: 523: union {
  1412                           ;doprnt.c: 524: unsigned long vd;
  1413                           ;doprnt.c: 525: double integ;
  1414                           ;doprnt.c: 526: } tmpval;
  1415                           ;doprnt.c: 528: unsigned int val;
  1416                           ;doprnt.c: 529: unsigned len;
  1417                           ;doprnt.c: 530: const char * cp;
  1418                           ;doprnt.c: 533: *ap = __va_start();
  1419                           
  1420                           ;incstack = 0
  1421  000012  0E34               	movlw	low (?_printf+2)
  1422  000014  6E37               	movwf	printf@ap,c
  1423  000016  0E00               	movlw	high (?_printf+2)
  1424  000018  6E38               	movwf	printf@ap+1,c
  1425                           
  1426                           ;doprnt.c: 536: while(c = *f++) {
  1427  00001A  D082               	goto	l1918
  1428  00001C                     l1870:
  1429                           
  1430                           ;doprnt.c: 538: if(c != '%')
  1431  00001C  0E25               	movlw	37
  1432  00001E  183D               	xorwf	printf@c,w,c
  1433  000020  B4D8               	btfsc	status,2,c
  1434  000022  D004               	goto	l1874
  1435                           
  1436                           ;doprnt.c: 540: {
  1437                           ;doprnt.c: 541: (putch(c) );
  1438  000024  503D               	movf	printf@c,w,c
  1439  000026  EC41  F003         	call	_putch
  1440                           
  1441                           ;doprnt.c: 542: continue;
  1442  00002A  D07A               	goto	l1918
  1443  00002C                     l1874:
  1444                           
  1445                           ;doprnt.c: 543: }
  1446                           ;doprnt.c: 548: flag = 0;
  1447  00002C  0E00               	movlw	0
  1448  00002E  6E39               	movwf	printf@flag,c
  1449                           
  1450                           ;doprnt.c: 635: switch(c = *f++) {
  1451  000030  D004               	goto	l1880
  1452  000032                     l1876:
  1453                           
  1454                           ;doprnt.c: 809: (putch(c) );
  1455  000032  503D               	movf	printf@c,w,c
  1456  000034  EC41  F003         	call	_putch
  1457                           
  1458                           ;doprnt.c: 810: continue;
  1459  000038  D073               	goto	l1918
  1460  00003A                     l1880:
  1461  00003A  C032  FFF6         	movff	printf@f,tblptrl
  1462  00003E  C033  FFF7         	movff	printf@f+1,tblptrh
  1463  000042  4A32               	infsnz	printf@f,f,c
  1464  000044  2A33               	incf	printf@f+1,f,c
  1465  000046                     	if	0	;tblptru may be non-zero
  1466  000046                     	endif
  1467  000046                     	if	0	;tblptru may be non-zero
  1468  000046                     	endif
  1469  000046  0008               	tblrd		*
  1470  000048  CFF5 F03D          	movff	tablat,printf@c
  1471  00004C  503D               	movf	printf@c,w,c
  1472                           
  1473                           ; Switch size 1, requested type "space"
  1474                           ; Number of cases is 3, Range of values is 0 to 105
  1475                           ; switch strategies available:
  1476                           ; Name         Instructions Cycles
  1477                           ; simple_byte           10     6 (average)
  1478                           ;	Chosen strategy is simple_byte
  1479  00004E  0A00               	xorlw	0	; case 0
  1480  000050  B4D8               	btfsc	status,2,c
  1481  000052  0012               	return	
  1482  000054  0A64               	xorlw	100	; case 100
  1483  000056  B4D8               	btfsc	status,2,c
  1484  000058  D003               	goto	l1882
  1485  00005A  0A0D               	xorlw	13	; case 105
  1486  00005C  A4D8               	btfss	status,2,c
  1487  00005E  D7E9               	goto	l1876
  1488  000060                     l1882:
  1489                           
  1490                           ;doprnt.c: 1253: {
  1491                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1492  000060  C037  FFD9         	movff	printf@ap,fsr2l
  1493  000064  C038  FFDA         	movff	printf@ap+1,fsr2h
  1494  000068  CFDE F03B          	movff	postinc2,printf@val
  1495  00006C  CFDD F03C          	movff	postdec2,printf@val+1
  1496  000070  0E02               	movlw	2
  1497  000072  2637               	addwf	printf@ap,f,c
  1498  000074  0E00               	movlw	0
  1499  000076  2238               	addwfc	printf@ap+1,f,c
  1500                           
  1501                           ;doprnt.c: 1261: if((int)val < 0) {
  1502  000078  AE3C               	btfss	printf@val+1,7,c
  1503  00007A  D006               	goto	l1892
  1504                           
  1505                           ;doprnt.c: 1262: flag |= 0x03;
  1506  00007C  0E03               	movlw	3
  1507  00007E  1239               	iorwf	printf@flag,f,c
  1508                           
  1509                           ;doprnt.c: 1263: val = -val;
  1510  000080  6C3B               	negf	printf@val,c
  1511  000082  1E3C               	comf	printf@val+1,f,c
  1512  000084  B0D8               	btfsc	status,0,c
  1513  000086  2A3C               	incf	printf@val+1,f,c
  1514  000088                     l1892:
  1515                           
  1516                           ;doprnt.c: 1264: }
  1517                           ;doprnt.c: 1266: }
  1518                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1519  000088  0E01               	movlw	1
  1520  00008A  6E3D               	movwf	printf@c,c
  1521  00008C                     l1894:
  1522  00008C  0E05               	movlw	5
  1523  00008E  183D               	xorwf	printf@c,w,c
  1524  000090  B4D8               	btfsc	status,2,c
  1525  000092  D012               	goto	l1906
  1526                           
  1527                           ;doprnt.c: 1306: if(val < dpowers[c])
  1528  000094  503D               	movf	printf@c,w,c
  1529  000096  0D02               	mullw	2
  1530  000098  0E89               	movlw	low _dpowers
  1531  00009A  24F3               	addwf	prodl,w,c
  1532  00009C  6EF6               	movwf	tblptrl,c
  1533  00009E  0EFD               	movlw	high _dpowers
  1534  0000A0  20F4               	addwfc	prodh,w,c
  1535  0000A2  6EF7               	movwf	tblptrh,c
  1536  0000A4                     	if	0	;There are less than 3 active tblptr bytes
  1537  0000A4                     	endif
  1538  0000A4  0009               	tblrd		*+
  1539  0000A6  50F5               	movf	tablat,w,c
  1540  0000A8  5C3B               	subwf	printf@val,w,c
  1541  0000AA  0009               	tblrd		*+
  1542  0000AC  50F5               	movf	tablat,w,c
  1543  0000AE  583C               	subwfb	printf@val+1,w,c
  1544  0000B0  A0D8               	btfss	status,0,c
  1545  0000B2  D002               	goto	l1906
  1546                           
  1547                           ;doprnt.c: 1307: break;
  1548  0000B4  2A3D               	incf	printf@c,f,c
  1549  0000B6  D7EA               	goto	l1894
  1550  0000B8                     l1906:
  1551                           
  1552                           ;doprnt.c: 1422: {
  1553                           ;doprnt.c: 1438: if(flag & 0x03)
  1554  0000B8  C039  F036         	movff	printf@flag,??_printf
  1555  0000BC  0E03               	movlw	3
  1556  0000BE  1636               	andwf	??_printf,f,c
  1557  0000C0  B4D8               	btfsc	status,2,c
  1558  0000C2  D003               	goto	l1910
  1559                           
  1560                           ;doprnt.c: 1439: (putch('-') );
  1561  0000C4  0E2D               	movlw	45
  1562  0000C6  EC41  F003         	call	_putch
  1563  0000CA                     l1910:
  1564                           
  1565                           ;doprnt.c: 1469: }
  1566                           ;doprnt.c: 1472: prec = c;
  1567  0000CA  C03D  F03A         	movff	printf@c,printf@prec
  1568                           
  1569                           ;doprnt.c: 1474: while(prec--) {
  1570  0000CE  D024               	goto	l1916
  1571  0000D0                     l1912:
  1572                           
  1573                           ;doprnt.c: 1478: {
  1574                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1575  0000D0  503A               	movf	printf@prec,w,c
  1576  0000D2  0D02               	mullw	2
  1577  0000D4  0E89               	movlw	low _dpowers
  1578  0000D6  24F3               	addwf	prodl,w,c
  1579  0000D8  6EF6               	movwf	tblptrl,c
  1580  0000DA  0EFD               	movlw	high _dpowers
  1581  0000DC  20F4               	addwfc	prodh,w,c
  1582  0000DE  6EF7               	movwf	tblptrh,c
  1583  0000E0                     	if	0	;There are less than 3 active tblptr bytes
  1584  0000E0                     	endif
  1585  0000E0  0009               	tblrd		*+
  1586  0000E2  CFF5 F028          	movff	tablat,___lwdiv@divisor
  1587  0000E6  000A               	tblrd		*-
  1588  0000E8  CFF5 F029          	movff	tablat,___lwdiv@divisor+1
  1589  0000EC  C03B  F026         	movff	printf@val,___lwdiv@dividend
  1590  0000F0  C03C  F027         	movff	printf@val+1,___lwdiv@dividend+1
  1591  0000F4  EC16  F002         	call	___lwdiv	;wreg free
  1592  0000F8  C026  F02D         	movff	?___lwdiv,___lwmod@dividend
  1593  0000FC  C027  F02E         	movff	?___lwdiv+1,___lwmod@dividend+1
  1594  000100  0E00               	movlw	0
  1595  000102  6E30               	movwf	___lwmod@divisor+1,c
  1596  000104  0E0A               	movlw	10
  1597  000106  6E2F               	movwf	___lwmod@divisor,c
  1598  000108  EC8B  F002         	call	___lwmod	;wreg free
  1599  00010C  502D               	movf	?___lwmod,w,c
  1600  00010E  0F30               	addlw	48
  1601  000110  6E3D               	movwf	printf@c,c
  1602                           
  1603                           ;doprnt.c: 1523: }
  1604                           ;doprnt.c: 1524: (putch(c) );
  1605  000112  503D               	movf	printf@c,w,c
  1606  000114  EC41  F003         	call	_putch
  1607  000118                     l1916:
  1608  000118  063A               	decf	printf@prec,f,c
  1609  00011A  283A               	incf	printf@prec,w,c
  1610  00011C  A4D8               	btfss	status,2,c
  1611  00011E  D7D8               	goto	l1912
  1612  000120                     l1918:
  1613  000120  C032  FFF6         	movff	printf@f,tblptrl
  1614  000124  C033  FFF7         	movff	printf@f+1,tblptrh
  1615  000128  4A32               	infsnz	printf@f,f,c
  1616  00012A  2A33               	incf	printf@f+1,f,c
  1617  00012C                     	if	0	;tblptru may be non-zero
  1618  00012C                     	endif
  1619  00012C                     	if	0	;tblptru may be non-zero
  1620  00012C                     	endif
  1621  00012C  0008               	tblrd		*
  1622  00012E  CFF5 F03D          	movff	tablat,printf@c
  1623  000132  503D               	movf	printf@c,w,c
  1624  000134  B4D8               	btfsc	status,2,c
  1625  000136  0012               	return	
  1626  000138  D771               	goto	l1870
  1627  00013A                     __end_of_printf:
  1628                           	opt stack 0
  1629                           tblptru	equ	0xFF8
  1630                           tblptrh	equ	0xFF7
  1631                           tblptrl	equ	0xFF6
  1632                           tablat	equ	0xFF5
  1633                           prodh	equ	0xFF4
  1634                           prodl	equ	0xFF3
  1635                           intcon3	equ	0xFF0
  1636                           postinc0	equ	0xFEE
  1637                           wreg	equ	0xFE8
  1638                           postinc2	equ	0xFDE
  1639                           postdec2	equ	0xFDD
  1640                           fsr2h	equ	0xFDA
  1641                           fsr2l	equ	0xFD9
  1642                           status	equ	0xFD8
  1643                           
  1644 ;; *************** function _putch *****************
  1645 ;; Defined at:
  1646 ;;		line 26 in file "lcd.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;  data            1    wreg     unsigned char 
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;  data            1   39[COMRAM] unsigned char 
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  1    wreg      void 
  1653 ;; Registers used:
  1654 ;;		wreg, status,2, status,0, cstack
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1661 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1663 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1664 ;;Total ram usage:        1 bytes
  1665 ;; Hardware stack levels used:    1
  1666 ;; Hardware stack levels required when called:    6
  1667 ;; This function calls:
  1668 ;;		_lcdNibble
  1669 ;; This function is called by:
  1670 ;;		_printf
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           	psect	text5
  1675  000682                     __ptext5:
  1676                           	opt stack 0
  1677  000682                     _putch:
  1678                           	opt stack 23
  1679                           
  1680                           ;incstack = 0
  1681                           ;putch@data stored from wreg
  1682  000682  6E28               	movwf	putch@data,c
  1683                           
  1684                           ;lcd.c: 27: LATDbits.LATD2 = 1;
  1685  000684  848C               	bsf	3980,2,c	;volatile
  1686                           
  1687                           ;lcd.c: 28: lcdNibble(data);
  1688  000686  5028               	movf	putch@data,w,c
  1689  000688  ECC0  F001         	call	_lcdNibble
  1690  00068C  0012               	return		;funcret
  1691  00068E                     __end_of_putch:
  1692                           	opt stack 0
  1693                           tblptru	equ	0xFF8
  1694                           tblptrh	equ	0xFF7
  1695                           tblptrl	equ	0xFF6
  1696                           tablat	equ	0xFF5
  1697                           prodh	equ	0xFF4
  1698                           prodl	equ	0xFF3
  1699                           intcon3	equ	0xFF0
  1700                           postinc0	equ	0xFEE
  1701                           wreg	equ	0xFE8
  1702                           postinc2	equ	0xFDE
  1703                           postdec2	equ	0xFDD
  1704                           fsr2h	equ	0xFDA
  1705                           fsr2l	equ	0xFD9
  1706                           status	equ	0xFD8
  1707                           
  1708 ;; *************** function ___lwmod *****************
  1709 ;; Defined at:
  1710 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;  dividend        2   44[COMRAM] unsigned int 
  1713 ;;  divisor         2   46[COMRAM] unsigned int 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  counter         1   48[COMRAM] unsigned char 
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  2   44[COMRAM] unsigned int 
  1718 ;; Registers used:
  1719 ;;		wreg, status,2, status,0
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1725 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1726 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1728 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1729 ;;Total ram usage:        5 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; Hardware stack levels required when called:    5
  1732 ;; This function calls:
  1733 ;;		Nothing
  1734 ;; This function is called by:
  1735 ;;		_printf
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           	psect	text6
  1740  000516                     __ptext6:
  1741                           	opt stack 0
  1742  000516                     ___lwmod:
  1743                           	opt stack 24
  1744                           
  1745                           ;incstack = 0
  1746  000516  502F               	movf	___lwmod@divisor,w,c
  1747  000518  1030               	iorwf	___lwmod@divisor+1,w,c
  1748  00051A  B4D8               	btfsc	status,2,c
  1749  00051C  D018               	goto	l755
  1750  00051E  0E01               	movlw	1
  1751  000520  6E31               	movwf	___lwmod@counter,c
  1752  000522  D004               	goto	l1802
  1753  000524                     l1800:
  1754  000524  90D8               	bcf	status,0,c
  1755  000526  362F               	rlcf	___lwmod@divisor,f,c
  1756  000528  3630               	rlcf	___lwmod@divisor+1,f,c
  1757  00052A  2A31               	incf	___lwmod@counter,f,c
  1758  00052C                     l1802:
  1759  00052C  AE30               	btfss	___lwmod@divisor+1,7,c
  1760  00052E  D7FA               	goto	l1800
  1761  000530                     l1804:
  1762  000530  502F               	movf	___lwmod@divisor,w,c
  1763  000532  5C2D               	subwf	___lwmod@dividend,w,c
  1764  000534  5030               	movf	___lwmod@divisor+1,w,c
  1765  000536  582E               	subwfb	___lwmod@dividend+1,w,c
  1766  000538  A0D8               	btfss	status,0,c
  1767  00053A  D004               	goto	l1808
  1768  00053C  502F               	movf	___lwmod@divisor,w,c
  1769  00053E  5E2D               	subwf	___lwmod@dividend,f,c
  1770  000540  5030               	movf	___lwmod@divisor+1,w,c
  1771  000542  5A2E               	subwfb	___lwmod@dividend+1,f,c
  1772  000544                     l1808:
  1773  000544  90D8               	bcf	status,0,c
  1774  000546  3230               	rrcf	___lwmod@divisor+1,f,c
  1775  000548  322F               	rrcf	___lwmod@divisor,f,c
  1776  00054A  2E31               	decfsz	___lwmod@counter,f,c
  1777  00054C  D7F1               	goto	l1804
  1778  00054E                     l755:
  1779  00054E  C02D  F02D         	movff	___lwmod@dividend,?___lwmod
  1780  000552  C02E  F02E         	movff	___lwmod@dividend+1,?___lwmod+1
  1781  000556  0012               	return		;funcret
  1782  000558                     __end_of___lwmod:
  1783                           	opt stack 0
  1784                           tblptru	equ	0xFF8
  1785                           tblptrh	equ	0xFF7
  1786                           tblptrl	equ	0xFF6
  1787                           tablat	equ	0xFF5
  1788                           prodh	equ	0xFF4
  1789                           prodl	equ	0xFF3
  1790                           intcon3	equ	0xFF0
  1791                           postinc0	equ	0xFEE
  1792                           wreg	equ	0xFE8
  1793                           postinc2	equ	0xFDE
  1794                           postdec2	equ	0xFDD
  1795                           fsr2h	equ	0xFDA
  1796                           fsr2l	equ	0xFD9
  1797                           status	equ	0xFD8
  1798                           
  1799 ;; *************** function ___lwdiv *****************
  1800 ;; Defined at:
  1801 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;  dividend        2   37[COMRAM] unsigned int 
  1804 ;;  divisor         2   39[COMRAM] unsigned int 
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;  quotient        2   41[COMRAM] unsigned int 
  1807 ;;  counter         1   43[COMRAM] unsigned char 
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  2   37[COMRAM] unsigned int 
  1810 ;; Registers used:
  1811 ;;		wreg, status,2, status,0
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1817 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1818 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1820 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;Total ram usage:        7 bytes
  1822 ;; Hardware stack levels used:    1
  1823 ;; Hardware stack levels required when called:    5
  1824 ;; This function calls:
  1825 ;;		Nothing
  1826 ;; This function is called by:
  1827 ;;		_printf
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text7
  1832  00042C                     __ptext7:
  1833                           	opt stack 0
  1834  00042C                     ___lwdiv:
  1835                           	opt stack 24
  1836                           
  1837                           ;incstack = 0
  1838  00042C  0E00               	movlw	0
  1839  00042E  6E2B               	movwf	___lwdiv@quotient+1,c
  1840  000430  0E00               	movlw	0
  1841  000432  6E2A               	movwf	___lwdiv@quotient,c
  1842  000434  5028               	movf	___lwdiv@divisor,w,c
  1843  000436  1029               	iorwf	___lwdiv@divisor+1,w,c
  1844  000438  B4D8               	btfsc	status,2,c
  1845  00043A  D01C               	goto	l745
  1846  00043C  0E01               	movlw	1
  1847  00043E  6E2C               	movwf	___lwdiv@counter,c
  1848  000440  D004               	goto	l1782
  1849  000442                     l1780:
  1850  000442  90D8               	bcf	status,0,c
  1851  000444  3628               	rlcf	___lwdiv@divisor,f,c
  1852  000446  3629               	rlcf	___lwdiv@divisor+1,f,c
  1853  000448  2A2C               	incf	___lwdiv@counter,f,c
  1854  00044A                     l1782:
  1855  00044A  AE29               	btfss	___lwdiv@divisor+1,7,c
  1856  00044C  D7FA               	goto	l1780
  1857  00044E                     l1784:
  1858  00044E  90D8               	bcf	status,0,c
  1859  000450  362A               	rlcf	___lwdiv@quotient,f,c
  1860  000452  362B               	rlcf	___lwdiv@quotient+1,f,c
  1861  000454  5028               	movf	___lwdiv@divisor,w,c
  1862  000456  5C26               	subwf	___lwdiv@dividend,w,c
  1863  000458  5029               	movf	___lwdiv@divisor+1,w,c
  1864  00045A  5827               	subwfb	___lwdiv@dividend+1,w,c
  1865  00045C  A0D8               	btfss	status,0,c
  1866  00045E  D005               	goto	l1792
  1867  000460  5028               	movf	___lwdiv@divisor,w,c
  1868  000462  5E26               	subwf	___lwdiv@dividend,f,c
  1869  000464  5029               	movf	___lwdiv@divisor+1,w,c
  1870  000466  5A27               	subwfb	___lwdiv@dividend+1,f,c
  1871  000468  802A               	bsf	___lwdiv@quotient,0,c
  1872  00046A                     l1792:
  1873  00046A  90D8               	bcf	status,0,c
  1874  00046C  3229               	rrcf	___lwdiv@divisor+1,f,c
  1875  00046E  3228               	rrcf	___lwdiv@divisor,f,c
  1876  000470  2E2C               	decfsz	___lwdiv@counter,f,c
  1877  000472  D7ED               	goto	l1784
  1878  000474                     l745:
  1879  000474  C02A  F026         	movff	___lwdiv@quotient,?___lwdiv
  1880  000478  C02B  F027         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1881  00047C  0012               	return		;funcret
  1882  00047E                     __end_of___lwdiv:
  1883                           	opt stack 0
  1884                           tblptru	equ	0xFF8
  1885                           tblptrh	equ	0xFF7
  1886                           tblptrl	equ	0xFF6
  1887                           tablat	equ	0xFF5
  1888                           prodh	equ	0xFF4
  1889                           prodl	equ	0xFF3
  1890                           intcon3	equ	0xFF0
  1891                           postinc0	equ	0xFEE
  1892                           wreg	equ	0xFE8
  1893                           postinc2	equ	0xFDE
  1894                           postdec2	equ	0xFDD
  1895                           fsr2h	equ	0xFDA
  1896                           fsr2l	equ	0xFD9
  1897                           status	equ	0xFD8
  1898                           
  1899 ;; *************** function _initialize *****************
  1900 ;; Defined at:
  1901 ;;		line 15 in file "main.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;		None
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;		None
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  1    wreg      void 
  1908 ;; Registers used:
  1909 ;;		wreg, status,2, status,0, cstack
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1919 ;;Total ram usage:        0 bytes
  1920 ;; Hardware stack levels used:    1
  1921 ;; Hardware stack levels required when called:    8
  1922 ;; This function calls:
  1923 ;;		_initLCD
  1924 ;;		_lcdInst
  1925 ;; This function is called by:
  1926 ;;		_main
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           	psect	text8
  1931  00059A                     __ptext8:
  1932                           	opt stack 0
  1933  00059A                     _initialize:
  1934                           	opt stack 22
  1935                           
  1936                           ;main.c: 16: TRISA = 0xFF;
  1937                           
  1938                           ;incstack = 0
  1939  00059A  6892               	setf	3986,c	;volatile
  1940                           
  1941                           ;main.c: 17: TRISB = 0xFF;
  1942  00059C  6893               	setf	3987,c	;volatile
  1943                           
  1944                           ;main.c: 18: TRISC = 0x00;
  1945  00059E  0E00               	movlw	0
  1946  0005A0  6E94               	movwf	3988,c	;volatile
  1947                           
  1948                           ;main.c: 19: TRISD = 0x00;
  1949  0005A2  0E00               	movlw	0
  1950  0005A4  6E95               	movwf	3989,c	;volatile
  1951                           
  1952                           ;main.c: 20: TRISE = 0x00;
  1953  0005A6  0E00               	movlw	0
  1954  0005A8  6E96               	movwf	3990,c	;volatile
  1955                           
  1956                           ;main.c: 22: LATA = 0x00;
  1957  0005AA  0E00               	movlw	0
  1958  0005AC  6E89               	movwf	3977,c	;volatile
  1959                           
  1960                           ;main.c: 23: LATB = 0x00;
  1961  0005AE  0E00               	movlw	0
  1962  0005B0  6E8A               	movwf	3978,c	;volatile
  1963                           
  1964                           ;main.c: 24: LATC = 0x00;
  1965  0005B2  0E00               	movlw	0
  1966  0005B4  6E8B               	movwf	3979,c	;volatile
  1967                           
  1968                           ;main.c: 25: LATD = 0x00;
  1969  0005B6  0E00               	movlw	0
  1970  0005B8  6E8C               	movwf	3980,c	;volatile
  1971                           
  1972                           ;main.c: 26: LATE = 0x00;
  1973  0005BA  0E00               	movlw	0
  1974  0005BC  6E8D               	movwf	3981,c	;volatile
  1975                           
  1976                           ;main.c: 29: ADCON0 = 0x00;
  1977  0005BE  0E00               	movlw	0
  1978  0005C0  6EC2               	movwf	4034,c	;volatile
  1979                           
  1980                           ;main.c: 30: ADCON1 = 0x0B;
  1981  0005C2  0E0B               	movlw	11
  1982  0005C4  6EC1               	movwf	4033,c	;volatile
  1983                           
  1984                           ;main.c: 31: CVRCON = 0x00;
  1985  0005C6  0E00               	movlw	0
  1986  0005C8  6EB5               	movwf	4021,c	;volatile
  1987                           
  1988                           ;main.c: 32: ADFM = 1;
  1989  0005CA  8EC0               	bsf	4032,7,c	;volatile
  1990                           
  1991                           ;main.c: 34: initLCD();
  1992  0005CC  EC68  F002         	call	_initLCD	;wreg free
  1993                           
  1994                           ;main.c: 36: lcdInst(0b10000000);;
  1995  0005D0  0E80               	movlw	128
  1996  0005D2  EC47  F003         	call	_lcdInst
  1997  0005D6  0012               	return		;funcret
  1998  0005D8                     __end_of_initialize:
  1999                           	opt stack 0
  2000                           tblptru	equ	0xFF8
  2001                           tblptrh	equ	0xFF7
  2002                           tblptrl	equ	0xFF6
  2003                           tablat	equ	0xFF5
  2004                           prodh	equ	0xFF4
  2005                           prodl	equ	0xFF3
  2006                           intcon3	equ	0xFF0
  2007                           postinc0	equ	0xFEE
  2008                           wreg	equ	0xFE8
  2009                           postinc2	equ	0xFDE
  2010                           postdec2	equ	0xFDD
  2011                           fsr2h	equ	0xFDA
  2012                           fsr2l	equ	0xFD9
  2013                           status	equ	0xFD8
  2014                           
  2015 ;; *************** function _initLCD *****************
  2016 ;; Defined at:
  2017 ;;		line 10 in file "lcd.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;		None
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;		None
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  1    wreg      void 
  2024 ;; Registers used:
  2025 ;;		wreg, status,2, status,0, cstack
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2034 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2035 ;;Total ram usage:        1 bytes
  2036 ;; Hardware stack levels used:    1
  2037 ;; Hardware stack levels required when called:    7
  2038 ;; This function calls:
  2039 ;;		_lcdInst
  2040 ;; This function is called by:
  2041 ;;		_initialize
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           	psect	text9
  2046  0004D0                     __ptext9:
  2047                           	opt stack 0
  2048  0004D0                     _initLCD:
  2049                           	opt stack 22
  2050                           
  2051                           ;lcd.c: 11: _delay((unsigned long)((15)*(8000000/4000.0)));
  2052                           
  2053                           ;incstack = 0
  2054  0004D0  0E27               	movlw	39
  2055  0004D2  6E29               	movwf	??_initLCD& (0+255),c
  2056  0004D4  0EF5               	movlw	245
  2057  0004D6                     u1227:
  2058  0004D6  2EE8               	decfsz	wreg,f,c
  2059  0004D8  D7FE               	bra	u1227
  2060  0004DA  2E29               	decfsz	??_initLCD& (0+255),f,c
  2061  0004DC  D7FC               	bra	u1227
  2062  0004DE  F000               	nop	
  2063                           
  2064                           ;lcd.c: 12: lcdInst(0b00110011);
  2065  0004E0  0E33               	movlw	51
  2066  0004E2  EC47  F003         	call	_lcdInst
  2067                           
  2068                           ;lcd.c: 13: lcdInst(0b00110010);
  2069  0004E6  0E32               	movlw	50
  2070  0004E8  EC47  F003         	call	_lcdInst
  2071                           
  2072                           ;lcd.c: 14: lcdInst(0b00101000);
  2073  0004EC  0E28               	movlw	40
  2074  0004EE  EC47  F003         	call	_lcdInst
  2075                           
  2076                           ;lcd.c: 15: lcdInst(0b00001111);
  2077  0004F2  0E0F               	movlw	15
  2078  0004F4  EC47  F003         	call	_lcdInst
  2079                           
  2080                           ;lcd.c: 16: lcdInst(0b00000110);
  2081  0004F8  0E06               	movlw	6
  2082  0004FA  EC47  F003         	call	_lcdInst
  2083                           
  2084                           ;lcd.c: 17: lcdInst(0b00000001);
  2085  0004FE  0E01               	movlw	1
  2086  000500  EC47  F003         	call	_lcdInst
  2087                           
  2088                           ;lcd.c: 18: _delay((unsigned long)((15)*(8000000/4000.0)));
  2089  000504  0E27               	movlw	39
  2090  000506  6E29               	movwf	??_initLCD& (0+255),c
  2091  000508  0EF5               	movlw	245
  2092  00050A                     u1237:
  2093  00050A  2EE8               	decfsz	wreg,f,c
  2094  00050C  D7FE               	bra	u1237
  2095  00050E  2E29               	decfsz	??_initLCD& (0+255),f,c
  2096  000510  D7FC               	bra	u1237
  2097  000512  F000               	nop	
  2098  000514  0012               	return		;funcret
  2099  000516                     __end_of_initLCD:
  2100                           	opt stack 0
  2101                           tblptru	equ	0xFF8
  2102                           tblptrh	equ	0xFF7
  2103                           tblptrl	equ	0xFF6
  2104                           tablat	equ	0xFF5
  2105                           prodh	equ	0xFF4
  2106                           prodl	equ	0xFF3
  2107                           intcon3	equ	0xFF0
  2108                           postinc0	equ	0xFEE
  2109                           wreg	equ	0xFE8
  2110                           postinc2	equ	0xFDE
  2111                           postdec2	equ	0xFDD
  2112                           fsr2h	equ	0xFDA
  2113                           fsr2l	equ	0xFD9
  2114                           status	equ	0xFD8
  2115                           
  2116 ;; *************** function _lcdInst *****************
  2117 ;; Defined at:
  2118 ;;		line 21 in file "lcd.c"
  2119 ;; Parameters:    Size  Location     Type
  2120 ;;  data            1    wreg     unsigned char 
  2121 ;; Auto vars:     Size  Location     Type
  2122 ;;  data            1   39[COMRAM] unsigned char 
  2123 ;; Return value:  Size  Location     Type
  2124 ;;                  1    wreg      void 
  2125 ;; Registers used:
  2126 ;;		wreg, status,2, status,0, cstack
  2127 ;; Tracked objects:
  2128 ;;		On entry : 0/0
  2129 ;;		On exit  : 0/0
  2130 ;;		Unchanged: 0/0
  2131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2133 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2135 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2136 ;;Total ram usage:        1 bytes
  2137 ;; Hardware stack levels used:    1
  2138 ;; Hardware stack levels required when called:    6
  2139 ;; This function calls:
  2140 ;;		_lcdNibble
  2141 ;; This function is called by:
  2142 ;;		_initialize
  2143 ;;		_simulate
  2144 ;;		_initLCD
  2145 ;;		___lcd_newline
  2146 ;;		_showInfo
  2147 ;;		_moveXMotors
  2148 ;;		_moveBigNose
  2149 ;;		_moveSmallNose
  2150 ;;		_checkAA
  2151 ;;		_checkC9V
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           	psect	text10
  2156  00068E                     __ptext10:
  2157                           	opt stack 0
  2158  00068E                     _lcdInst:
  2159                           	opt stack 23
  2160                           
  2161                           ;incstack = 0
  2162                           ;lcdInst@data stored from wreg
  2163  00068E  6E28               	movwf	lcdInst@data,c
  2164                           
  2165                           ;lcd.c: 22: LATDbits.LATD2 = 0;
  2166  000690  948C               	bcf	3980,2,c	;volatile
  2167                           
  2168                           ;lcd.c: 23: lcdNibble(data);
  2169  000692  5028               	movf	lcdInst@data,w,c
  2170  000694  ECC0  F001         	call	_lcdNibble
  2171  000698  0012               	return		;funcret
  2172  00069A                     __end_of_lcdInst:
  2173                           	opt stack 0
  2174                           tblptru	equ	0xFF8
  2175                           tblptrh	equ	0xFF7
  2176                           tblptrl	equ	0xFF6
  2177                           tablat	equ	0xFF5
  2178                           prodh	equ	0xFF4
  2179                           prodl	equ	0xFF3
  2180                           intcon3	equ	0xFF0
  2181                           postinc0	equ	0xFEE
  2182                           wreg	equ	0xFE8
  2183                           postinc2	equ	0xFDE
  2184                           postdec2	equ	0xFDD
  2185                           fsr2h	equ	0xFDA
  2186                           fsr2l	equ	0xFD9
  2187                           status	equ	0xFD8
  2188                           
  2189 ;; *************** function _lcdNibble *****************
  2190 ;; Defined at:
  2191 ;;		line 31 in file "lcd.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;  data            1    wreg     unsigned char 
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;  data            1   38[COMRAM] unsigned char 
  2196 ;;  temp            1   37[COMRAM] unsigned char 
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg, status,2, status,0
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2209 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2210 ;;Total ram usage:        2 bytes
  2211 ;; Hardware stack levels used:    1
  2212 ;; Hardware stack levels required when called:    5
  2213 ;; This function calls:
  2214 ;;		Nothing
  2215 ;; This function is called by:
  2216 ;;		_lcdInst
  2217 ;;		_putch
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text11
  2222  000380                     __ptext11:
  2223                           	opt stack 0
  2224  000380                     _lcdNibble:
  2225                           	opt stack 23
  2226                           
  2227                           ;incstack = 0
  2228                           ;lcdNibble@data stored from wreg
  2229  000380  6E27               	movwf	lcdNibble@data,c
  2230                           
  2231                           ;lcd.c: 33: char temp = data & 0xF0;
  2232  000382  5027               	movf	lcdNibble@data,w,c
  2233  000384  0BF0               	andlw	240
  2234  000386  6E26               	movwf	lcdNibble@temp,c
  2235                           
  2236                           ;lcd.c: 34: LATD = LATD & 0x0F;
  2237  000388  508C               	movf	3980,w,c	;volatile
  2238  00038A  0B0F               	andlw	15
  2239  00038C  6E8C               	movwf	3980,c	;volatile
  2240                           
  2241                           ;lcd.c: 35: LATD = temp | LATD;
  2242  00038E  5026               	movf	lcdNibble@temp,w,c
  2243  000390  108C               	iorwf	3980,w,c	;volatile
  2244  000392  6E8C               	movwf	3980,c	;volatile
  2245                           
  2246                           ;lcd.c: 37: LATDbits.LATD3 = 0;
  2247  000394  968C               	bcf	3980,3,c	;volatile
  2248                           
  2249                           ;lcd.c: 38: _delay((unsigned long)((25)*(8000000/4000000.0)));
  2250  000396  0E10               	movlw	16
  2251  000398                     u1247:
  2252  000398  2EE8               	decfsz	wreg,f,c
  2253  00039A  D7FE               	bra	u1247
  2254  00039C  D000               	nop2	
  2255                           
  2256                           ;lcd.c: 39: LATDbits.LATD3 = 1;
  2257  00039E  868C               	bsf	3980,3,c	;volatile
  2258                           
  2259                           ;lcd.c: 40: _delay((unsigned long)((25)*(8000000/4000000.0)));
  2260  0003A0  0E10               	movlw	16
  2261  0003A2                     u1257:
  2262  0003A2  2EE8               	decfsz	wreg,f,c
  2263  0003A4  D7FE               	bra	u1257
  2264  0003A6  D000               	nop2	
  2265                           
  2266                           ;lcd.c: 42: data = data << 4;
  2267  0003A8  3827               	swapf	lcdNibble@data,w,c
  2268  0003AA  0BF0               	andlw	240
  2269  0003AC  6E27               	movwf	lcdNibble@data,c
  2270                           
  2271                           ;lcd.c: 44: temp = data & 0xF0;
  2272  0003AE  5027               	movf	lcdNibble@data,w,c
  2273  0003B0  0BF0               	andlw	240
  2274  0003B2  6E26               	movwf	lcdNibble@temp,c
  2275                           
  2276                           ;lcd.c: 45: LATD = LATD & 0x0F;
  2277  0003B4  508C               	movf	3980,w,c	;volatile
  2278  0003B6  0B0F               	andlw	15
  2279  0003B8  6E8C               	movwf	3980,c	;volatile
  2280                           
  2281                           ;lcd.c: 46: LATD = temp | LATD;
  2282  0003BA  5026               	movf	lcdNibble@temp,w,c
  2283  0003BC  108C               	iorwf	3980,w,c	;volatile
  2284  0003BE  6E8C               	movwf	3980,c	;volatile
  2285                           
  2286                           ;lcd.c: 48: LATDbits.LATD3 = 0;
  2287  0003C0  968C               	bcf	3980,3,c	;volatile
  2288                           
  2289                           ;lcd.c: 49: _delay((unsigned long)((25)*(8000000/4000000.0)));
  2290  0003C2  0E10               	movlw	16
  2291  0003C4                     u1267:
  2292  0003C4  2EE8               	decfsz	wreg,f,c
  2293  0003C6  D7FE               	bra	u1267
  2294  0003C8  D000               	nop2	
  2295                           
  2296                           ;lcd.c: 50: LATDbits.LATD3 = 1;
  2297  0003CA  868C               	bsf	3980,3,c	;volatile
  2298                           
  2299                           ;lcd.c: 51: _delay((unsigned long)((25)*(8000000/4000000.0)));
  2300  0003CC  0E10               	movlw	16
  2301  0003CE                     u1277:
  2302  0003CE  2EE8               	decfsz	wreg,f,c
  2303  0003D0  D7FE               	bra	u1277
  2304  0003D2  D000               	nop2	
  2305  0003D4  0012               	return		;funcret
  2306  0003D6                     __end_of_lcdNibble:
  2307                           	opt stack 0
  2308                           tblptru	equ	0xFF8
  2309                           tblptrh	equ	0xFF7
  2310                           tblptrl	equ	0xFF6
  2311                           tablat	equ	0xFF5
  2312                           prodh	equ	0xFF4
  2313                           prodl	equ	0xFF3
  2314                           intcon3	equ	0xFF0
  2315                           postinc0	equ	0xFEE
  2316                           wreg	equ	0xFE8
  2317                           postinc2	equ	0xFDE
  2318                           postdec2	equ	0xFDD
  2319                           fsr2h	equ	0xFDA
  2320                           fsr2l	equ	0xFD9
  2321                           status	equ	0xFD8
  2322                           
  2323 ;; *************** function _keypressed *****************
  2324 ;; Defined at:
  2325 ;;		line 12 in file "modules.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;		None
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;  keypress        1   36[COMRAM] unsigned char 
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2340 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2341 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2342 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2343 ;;Total ram usage:       15 bytes
  2344 ;; Hardware stack levels used:    1
  2345 ;; Hardware stack levels required when called:    4
  2346 ;; This function calls:
  2347 ;;		_stopMoving
  2348 ;;		i2_printf
  2349 ;; This function is called by:
  2350 ;;		Interrupt level 2
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           	psect	intcode
  2355  000008                     __pintcode:
  2356                           	opt stack 0
  2357  000008                     _keypressed:
  2358                           	opt stack 22
  2359                           
  2360                           ;incstack = 0
  2361  000008  824B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2362  00000A  ED31  F001         	call	int_func,f	;refresh shadow registers
  2363                           tblptru	equ	0xFF8
  2364                           tblptrh	equ	0xFF7
  2365                           tblptrl	equ	0xFF6
  2366                           tablat	equ	0xFF5
  2367                           prodh	equ	0xFF4
  2368                           prodl	equ	0xFF3
  2369                           intcon3	equ	0xFF0
  2370                           postinc0	equ	0xFEE
  2371                           wreg	equ	0xFE8
  2372                           postinc2	equ	0xFDE
  2373                           postdec2	equ	0xFDD
  2374                           fsr2h	equ	0xFDA
  2375                           fsr2l	equ	0xFD9
  2376                           status	equ	0xFD8
  2377                           
  2378                           	psect	intcode_body
  2379  000262                     __pintcode_body:
  2380                           	opt stack 22
  2381  000262                     int_func:
  2382                           	opt stack 22
  2383  000262  0006               	pop		; remove dummy address from shadow register refresh
  2384  000264  CFFA F017          	movff	pclath,??_keypressed
  2385  000268  CFFB F018          	movff	pclatu,??_keypressed+1
  2386  00026C  CFE9 F019          	movff	fsr0l,??_keypressed+2
  2387  000270  CFEA F01A          	movff	fsr0h,??_keypressed+3
  2388  000274  CFE1 F01B          	movff	fsr1l,??_keypressed+4
  2389  000278  CFE2 F01C          	movff	fsr1h,??_keypressed+5
  2390  00027C  CFD9 F01D          	movff	fsr2l,??_keypressed+6
  2391  000280  CFDA F01E          	movff	fsr2h,??_keypressed+7
  2392  000284  CFF3 F01F          	movff	prodl,??_keypressed+8
  2393  000288  CFF4 F020          	movff	prodh,??_keypressed+9
  2394  00028C  CFF6 F021          	movff	tblptrl,??_keypressed+10
  2395  000290  CFF7 F022          	movff	tblptrh,??_keypressed+11
  2396  000294  CFF8 F023          	movff	tblptru,??_keypressed+12
  2397  000298  CFF5 F024          	movff	tablat,??_keypressed+13
  2398                           
  2399                           ;modules.c: 14: if (INT1IF) {
  2400  00029C  A0F0               	btfss	intcon3,0,c	;volatile
  2401  00029E  D00D               	goto	i2l146
  2402                           
  2403                           ;modules.c: 16: unsigned char keypress = (PORTB & 0xF0) >> 4;
  2404  0002A0  3881               	swapf	3969,w,c	;volatile
  2405  0002A2  0B0F               	andlw	15
  2406  0002A4  0B0F               	andlw	15
  2407  0002A6  6E25               	movwf	keypressed@keypress,c
  2408                           
  2409                           ;modules.c: 17: INT1IF = 0;
  2410  0002A8  90F0               	bcf	intcon3,0,c	;volatile
  2411                           
  2412                           ;modules.c: 18: printf("Emergency          ");
  2413  0002AA  0E53               	movlw	low STR_4
  2414  0002AC  6E0D               	movwf	i2printf@f,c
  2415  0002AE  0EFF               	movlw	high STR_4
  2416  0002B0  6E0E               	movwf	i2printf@f+1,c
  2417  0002B2  EC9D  F000         	call	i2_printf	;wreg free
  2418                           
  2419                           ;modules.c: 19: stopMoving();
  2420  0002B6  EC36  F003         	call	_stopMoving	;wreg free
  2421  0002BA                     i2l146:
  2422  0002BA  C024  FFF5         	movff	??_keypressed+13,tablat
  2423  0002BE  C023  FFF8         	movff	??_keypressed+12,tblptru
  2424  0002C2  C022  FFF7         	movff	??_keypressed+11,tblptrh
  2425  0002C6  C021  FFF6         	movff	??_keypressed+10,tblptrl
  2426  0002CA  C020  FFF4         	movff	??_keypressed+9,prodh
  2427  0002CE  C01F  FFF3         	movff	??_keypressed+8,prodl
  2428  0002D2  C01E  FFDA         	movff	??_keypressed+7,fsr2h
  2429  0002D6  C01D  FFD9         	movff	??_keypressed+6,fsr2l
  2430  0002DA  C01C  FFE2         	movff	??_keypressed+5,fsr1h
  2431  0002DE  C01B  FFE1         	movff	??_keypressed+4,fsr1l
  2432  0002E2  C01A  FFEA         	movff	??_keypressed+3,fsr0h
  2433  0002E6  C019  FFE9         	movff	??_keypressed+2,fsr0l
  2434  0002EA  C018  FFFB         	movff	??_keypressed+1,pclatu
  2435  0002EE  C017  FFFA         	movff	??_keypressed,pclath
  2436  0002F2  924B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2437  0002F4  0011               	retfie		f
  2438  0002F6                     __end_of_keypressed:
  2439                           	opt stack 0
  2440                           pclatu	equ	0xFFB
  2441                           pclath	equ	0xFFA
  2442                           tblptru	equ	0xFF8
  2443                           tblptrh	equ	0xFF7
  2444                           tblptrl	equ	0xFF6
  2445                           tablat	equ	0xFF5
  2446                           prodh	equ	0xFF4
  2447                           prodl	equ	0xFF3
  2448                           intcon3	equ	0xFF0
  2449                           postinc0	equ	0xFEE
  2450                           fsr0h	equ	0xFEA
  2451                           fsr0l	equ	0xFE9
  2452                           wreg	equ	0xFE8
  2453                           fsr1h	equ	0xFE2
  2454                           fsr1l	equ	0xFE1
  2455                           postinc2	equ	0xFDE
  2456                           postdec2	equ	0xFDD
  2457                           fsr2h	equ	0xFDA
  2458                           fsr2l	equ	0xFD9
  2459                           status	equ	0xFD8
  2460                           
  2461 ;; *************** function _stopMoving *****************
  2462 ;; Defined at:
  2463 ;;		line 118 in file "motors.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;		None
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;		None
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  1    wreg      void 
  2470 ;; Registers used:
  2471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2481 ;;Total ram usage:        0 bytes
  2482 ;; Hardware stack levels used:    1
  2483 ;; Hardware stack levels required when called:    3
  2484 ;; This function calls:
  2485 ;;		i2_lcdInst
  2486 ;;		i2_printf
  2487 ;; This function is called by:
  2488 ;;		_keypressed
  2489 ;;		_mainloop
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493                           	psect	text13
  2494  00066C                     __ptext13:
  2495                           	opt stack 0
  2496  00066C                     _stopMoving:
  2497                           	opt stack 22
  2498                           
  2499                           ;motors.c: 119: (INTCONbits.GIE = 0);
  2500                           
  2501                           ;incstack = 0
  2502  00066C  9EF2               	bcf	intcon,7,c	;volatile
  2503                           
  2504                           ;motors.c: 120: lcdInst(0b10000000);;
  2505  00066E  0E80               	movlw	128
  2506  000670  EC53  F003         	call	i2_lcdInst
  2507                           
  2508                           ;motors.c: 121: printf("Stopped          ");
  2509  000674  0E7A               	movlw	low STR_29
  2510  000676  6E0D               	movwf	i2printf@f,c
  2511  000678  0EFF               	movlw	high STR_29
  2512  00067A  6E0E               	movwf	i2printf@f+1,c
  2513  00067C  EC9D  F000         	call	i2_printf	;wreg free
  2514  000680                     i2l244:
  2515  000680  D7FF               	goto	i2l244
  2516  000682                     __end_of_stopMoving:
  2517                           	opt stack 0
  2518                           pclatu	equ	0xFFB
  2519                           pclath	equ	0xFFA
  2520                           tblptru	equ	0xFF8
  2521                           tblptrh	equ	0xFF7
  2522                           tblptrl	equ	0xFF6
  2523                           tablat	equ	0xFF5
  2524                           prodh	equ	0xFF4
  2525                           prodl	equ	0xFF3
  2526                           intcon	equ	0xFF2
  2527                           intcon3	equ	0xFF0
  2528                           postinc0	equ	0xFEE
  2529                           fsr0h	equ	0xFEA
  2530                           fsr0l	equ	0xFE9
  2531                           wreg	equ	0xFE8
  2532                           fsr1h	equ	0xFE2
  2533                           fsr1l	equ	0xFE1
  2534                           postinc2	equ	0xFDE
  2535                           postdec2	equ	0xFDD
  2536                           fsr2h	equ	0xFDA
  2537                           fsr2l	equ	0xFD9
  2538                           status	equ	0xFD8
  2539                           
  2540 ;; *************** function i2_printf *****************
  2541 ;; Defined at:
  2542 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;  f               2   12[COMRAM] PTR const unsigned char 
  2545 ;;		 -> STR_42(22), STR_41(20), STR_40(15), STR_39(23), 
  2546 ;;		 -> STR_38(21), STR_37(14), STR_36(13), STR_35(13), 
  2547 ;;		 -> STR_34(16), STR_33(23), STR_32(21), STR_31(14), 
  2548 ;;		 -> STR_30(16), STR_29(18), STR_28(20), STR_27(13), 
  2549 ;;		 -> STR_26(23), STR_25(20), STR_24(13), STR_23(12), 
  2550 ;;		 -> STR_22(20), STR_21(21), STR_20(22), STR_19(13), 
  2551 ;;		 -> STR_18(21), STR_17(13), STR_16(21), STR_15(13), 
  2552 ;;		 -> STR_14(20), STR_13(13), STR_12(21), STR_11(23), 
  2553 ;;		 -> STR_10(24), STR_9(21), STR_8(24), STR_7(24), 
  2554 ;;		 -> STR_6(25), STR_5(27), STR_4(20), STR_3(22), 
  2555 ;;		 -> STR_2(19), STR_1(21), 
  2556 ;; Auto vars:     Size  Location     Type
  2557 ;;  printf          4    0        struct .
  2558 ;;  printf          3    0        PTR const unsigned char 
  2559 ;;  printf          2   19[COMRAM] unsigned int 
  2560 ;;  printf          2   15[COMRAM] PTR void [1]
  2561 ;;		 -> ?i2_printf(2), ?_printf(2), 
  2562 ;;  printf          2    0        unsigned int 
  2563 ;;  printf          1   21[COMRAM] char 
  2564 ;;  printf          1   18[COMRAM] char 
  2565 ;;  printf          1   17[COMRAM] unsigned char 
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  2   12[COMRAM] int 
  2568 ;; Registers used:
  2569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2576 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2577 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;Total ram usage:       10 bytes
  2580 ;; Hardware stack levels used:    1
  2581 ;; Hardware stack levels required when called:    2
  2582 ;; This function calls:
  2583 ;;		i2___lwdiv
  2584 ;;		i2___lwmod
  2585 ;;		i2_putch
  2586 ;; This function is called by:
  2587 ;;		_keypressed
  2588 ;;		_stopMoving
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592                           	psect	text14
  2593  00013A                     __ptext14:
  2594                           	opt stack 0
  2595  00013A                     i2_printf:
  2596                           	opt stack 23
  2597                           
  2598                           ;doprnt.c: 466: va_list ap;
  2599                           ;doprnt.c: 499: signed char c;
  2600                           ;doprnt.c: 506: signed char prec;
  2601                           ;doprnt.c: 508: unsigned char flag;
  2602                           ;doprnt.c: 523: union {
  2603                           ;doprnt.c: 524: unsigned long vd;
  2604                           ;doprnt.c: 525: double integ;
  2605                           ;doprnt.c: 526: } tmpval;
  2606                           ;doprnt.c: 528: unsigned int val;
  2607                           ;doprnt.c: 529: unsigned len;
  2608                           ;doprnt.c: 530: const char * cp;
  2609                           ;doprnt.c: 533: *ap = __va_start();
  2610                           
  2611                           ;incstack = 0
  2612  00013A  0E0F               	movlw	low (?i2_printf+2)
  2613  00013C  6E10               	movwf	i2printf@ap,c
  2614  00013E  0E00               	movlw	high (?i2_printf+2)
  2615  000140  6E11               	movwf	i2printf@ap+1,c
  2616                           
  2617                           ;doprnt.c: 536: while(c = *f++) {
  2618  000142  D082               	goto	i2l1866
  2619  000144                     i2l1818:
  2620                           
  2621                           ;doprnt.c: 538: if(c != '%')
  2622  000144  0E25               	movlw	37
  2623  000146  1816               	xorwf	i2printf@c,w,c
  2624  000148  B4D8               	btfsc	status,2,c
  2625  00014A  D004               	goto	i2l1822
  2626                           
  2627                           ;doprnt.c: 540: {
  2628                           ;doprnt.c: 541: (putch(c) );
  2629  00014C  5016               	movf	i2printf@c,w,c
  2630  00014E  EC4D  F003         	call	i2_putch
  2631                           
  2632                           ;doprnt.c: 542: continue;
  2633  000152  D07A               	goto	i2l1866
  2634  000154                     i2l1822:
  2635                           
  2636                           ;doprnt.c: 543: }
  2637                           ;doprnt.c: 548: flag = 0;
  2638  000154  0E00               	movlw	0
  2639  000156  6E12               	movwf	i2printf@flag,c
  2640                           
  2641                           ;doprnt.c: 635: switch(c = *f++) {
  2642  000158  D004               	goto	i2l1828
  2643  00015A                     i2l1824:
  2644                           
  2645                           ;doprnt.c: 809: (putch(c) );
  2646  00015A  5016               	movf	i2printf@c,w,c
  2647  00015C  EC4D  F003         	call	i2_putch
  2648                           
  2649                           ;doprnt.c: 810: continue;
  2650  000160  D073               	goto	i2l1866
  2651  000162                     i2l1828:
  2652  000162  C00D  FFF6         	movff	i2printf@f,tblptrl
  2653  000166  C00E  FFF7         	movff	i2printf@f+1,tblptrh
  2654  00016A  4A0D               	infsnz	i2printf@f,f,c
  2655  00016C  2A0E               	incf	i2printf@f+1,f,c
  2656  00016E                     	if	0	;tblptru may be non-zero
  2657  00016E                     	endif
  2658  00016E                     	if	0	;tblptru may be non-zero
  2659  00016E                     	endif
  2660  00016E  0008               	tblrd		*
  2661  000170  CFF5 F016          	movff	tablat,i2printf@c
  2662  000174  5016               	movf	i2printf@c,w,c
  2663                           
  2664                           ; Switch size 1, requested type "space"
  2665                           ; Number of cases is 3, Range of values is 0 to 105
  2666                           ; switch strategies available:
  2667                           ; Name         Instructions Cycles
  2668                           ; simple_byte           10     6 (average)
  2669                           ;	Chosen strategy is simple_byte
  2670  000176  0A00               	xorlw	0	; case 0
  2671  000178  B4D8               	btfsc	status,2,c
  2672  00017A  0012               	return	
  2673  00017C  0A64               	xorlw	100	; case 100
  2674  00017E  B4D8               	btfsc	status,2,c
  2675  000180  D003               	goto	i2l1830
  2676  000182  0A0D               	xorlw	13	; case 105
  2677  000184  A4D8               	btfss	status,2,c
  2678  000186  D7E9               	goto	i2l1824
  2679  000188                     i2l1830:
  2680                           
  2681                           ;doprnt.c: 1253: {
  2682                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2683  000188  C010  FFD9         	movff	i2printf@ap,fsr2l
  2684  00018C  C011  FFDA         	movff	i2printf@ap+1,fsr2h
  2685  000190  CFDE F014          	movff	postinc2,i2printf@val
  2686  000194  CFDD F015          	movff	postdec2,i2printf@val+1
  2687  000198  0E02               	movlw	2
  2688  00019A  2610               	addwf	i2printf@ap,f,c
  2689  00019C  0E00               	movlw	0
  2690  00019E  2211               	addwfc	i2printf@ap+1,f,c
  2691                           
  2692                           ;doprnt.c: 1261: if((int)val < 0) {
  2693  0001A0  AE15               	btfss	i2printf@val+1,7,c
  2694  0001A2  D006               	goto	i2l1840
  2695                           
  2696                           ;doprnt.c: 1262: flag |= 0x03;
  2697  0001A4  0E03               	movlw	3
  2698  0001A6  1212               	iorwf	i2printf@flag,f,c
  2699                           
  2700                           ;doprnt.c: 1263: val = -val;
  2701  0001A8  6C14               	negf	i2printf@val,c
  2702  0001AA  1E15               	comf	i2printf@val+1,f,c
  2703  0001AC  B0D8               	btfsc	status,0,c
  2704  0001AE  2A15               	incf	i2printf@val+1,f,c
  2705  0001B0                     i2l1840:
  2706                           
  2707                           ;doprnt.c: 1264: }
  2708                           ;doprnt.c: 1266: }
  2709                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2710  0001B0  0E01               	movlw	1
  2711  0001B2  6E16               	movwf	i2printf@c,c
  2712  0001B4                     i2l1842:
  2713  0001B4  0E05               	movlw	5
  2714  0001B6  1816               	xorwf	i2printf@c,w,c
  2715  0001B8  B4D8               	btfsc	status,2,c
  2716  0001BA  D012               	goto	i2l1854
  2717                           
  2718                           ;doprnt.c: 1306: if(val < dpowers[c])
  2719  0001BC  5016               	movf	i2printf@c,w,c
  2720  0001BE  0D02               	mullw	2
  2721  0001C0  0E89               	movlw	low _dpowers
  2722  0001C2  24F3               	addwf	prodl,w,c
  2723  0001C4  6EF6               	movwf	tblptrl,c
  2724  0001C6  0EFD               	movlw	high _dpowers
  2725  0001C8  20F4               	addwfc	prodh,w,c
  2726  0001CA  6EF7               	movwf	tblptrh,c
  2727  0001CC                     	if	0	;There are less than 3 active tblptr bytes
  2728  0001CC                     	endif
  2729  0001CC  0009               	tblrd		*+
  2730  0001CE  50F5               	movf	tablat,w,c
  2731  0001D0  5C14               	subwf	i2printf@val,w,c
  2732  0001D2  0009               	tblrd		*+
  2733  0001D4  50F5               	movf	tablat,w,c
  2734  0001D6  5815               	subwfb	i2printf@val+1,w,c
  2735  0001D8  A0D8               	btfss	status,0,c
  2736  0001DA  D002               	goto	i2l1854
  2737                           
  2738                           ;doprnt.c: 1307: break;
  2739  0001DC  2A16               	incf	i2printf@c,f,c
  2740  0001DE  D7EA               	goto	i2l1842
  2741  0001E0                     i2l1854:
  2742                           
  2743                           ;doprnt.c: 1422: {
  2744                           ;doprnt.c: 1438: if(flag & 0x03)
  2745  0001E0  C012  F00F         	movff	i2printf@flag,??i2_printf
  2746  0001E4  0E03               	movlw	3
  2747  0001E6  160F               	andwf	??i2_printf,f,c
  2748  0001E8  B4D8               	btfsc	status,2,c
  2749  0001EA  D003               	goto	i2l1858
  2750                           
  2751                           ;doprnt.c: 1439: (putch('-') );
  2752  0001EC  0E2D               	movlw	45
  2753  0001EE  EC4D  F003         	call	i2_putch
  2754  0001F2                     i2l1858:
  2755                           
  2756                           ;doprnt.c: 1469: }
  2757                           ;doprnt.c: 1472: prec = c;
  2758  0001F2  C016  F013         	movff	i2printf@c,i2printf@prec
  2759                           
  2760                           ;doprnt.c: 1474: while(prec--) {
  2761  0001F6  D024               	goto	i2l1864
  2762  0001F8                     i2l1860:
  2763                           
  2764                           ;doprnt.c: 1478: {
  2765                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2766  0001F8  5013               	movf	i2printf@prec,w,c
  2767  0001FA  0D02               	mullw	2
  2768  0001FC  0E89               	movlw	low _dpowers
  2769  0001FE  24F3               	addwf	prodl,w,c
  2770  000200  6EF6               	movwf	tblptrl,c
  2771  000202  0EFD               	movlw	high _dpowers
  2772  000204  20F4               	addwfc	prodh,w,c
  2773  000206  6EF7               	movwf	tblptrh,c
  2774  000208                     	if	0	;There are less than 3 active tblptr bytes
  2775  000208                     	endif
  2776  000208  0009               	tblrd		*+
  2777  00020A  CFF5 F003          	movff	tablat,i2___lwdiv@divisor
  2778  00020E  000A               	tblrd		*-
  2779  000210  CFF5 F004          	movff	tablat,i2___lwdiv@divisor+1
  2780  000214  C014  F001         	movff	i2printf@val,i2___lwdiv@dividend
  2781  000218  C015  F002         	movff	i2printf@val+1,i2___lwdiv@dividend+1
  2782  00021C  EC3F  F002         	call	i2___lwdiv	;wreg free
  2783  000220  C001  F008         	movff	?i2___lwdiv,i2___lwmod@dividend
  2784  000224  C002  F009         	movff	?i2___lwdiv+1,i2___lwmod@dividend+1
  2785  000228  0E00               	movlw	0
  2786  00022A  6E0B               	movwf	i2___lwmod@divisor+1,c
  2787  00022C  0E0A               	movlw	10
  2788  00022E  6E0A               	movwf	i2___lwmod@divisor,c
  2789  000230  ECAC  F002         	call	i2___lwmod	;wreg free
  2790  000234  5008               	movf	?i2___lwmod,w,c
  2791  000236  0F30               	addlw	48
  2792  000238  6E16               	movwf	i2printf@c,c
  2793                           
  2794                           ;doprnt.c: 1523: }
  2795                           ;doprnt.c: 1524: (putch(c) );
  2796  00023A  5016               	movf	i2printf@c,w,c
  2797  00023C  EC4D  F003         	call	i2_putch
  2798  000240                     i2l1864:
  2799  000240  0613               	decf	i2printf@prec,f,c
  2800  000242  2813               	incf	i2printf@prec,w,c
  2801  000244  A4D8               	btfss	status,2,c
  2802  000246  D7D8               	goto	i2l1860
  2803  000248                     i2l1866:
  2804  000248  C00D  FFF6         	movff	i2printf@f,tblptrl
  2805  00024C  C00E  FFF7         	movff	i2printf@f+1,tblptrh
  2806  000250  4A0D               	infsnz	i2printf@f,f,c
  2807  000252  2A0E               	incf	i2printf@f+1,f,c
  2808  000254                     	if	0	;tblptru may be non-zero
  2809  000254                     	endif
  2810  000254                     	if	0	;tblptru may be non-zero
  2811  000254                     	endif
  2812  000254  0008               	tblrd		*
  2813  000256  CFF5 F016          	movff	tablat,i2printf@c
  2814  00025A  5016               	movf	i2printf@c,w,c
  2815  00025C  B4D8               	btfsc	status,2,c
  2816  00025E  0012               	return	
  2817  000260  D771               	goto	i2l1818
  2818  000262                     __end_ofi2_printf:
  2819                           	opt stack 0
  2820                           pclatu	equ	0xFFB
  2821                           pclath	equ	0xFFA
  2822                           tblptru	equ	0xFF8
  2823                           tblptrh	equ	0xFF7
  2824                           tblptrl	equ	0xFF6
  2825                           tablat	equ	0xFF5
  2826                           prodh	equ	0xFF4
  2827                           prodl	equ	0xFF3
  2828                           intcon	equ	0xFF2
  2829                           intcon3	equ	0xFF0
  2830                           postinc0	equ	0xFEE
  2831                           fsr0h	equ	0xFEA
  2832                           fsr0l	equ	0xFE9
  2833                           wreg	equ	0xFE8
  2834                           fsr1h	equ	0xFE2
  2835                           fsr1l	equ	0xFE1
  2836                           postinc2	equ	0xFDE
  2837                           postdec2	equ	0xFDD
  2838                           fsr2h	equ	0xFDA
  2839                           fsr2l	equ	0xFD9
  2840                           status	equ	0xFD8
  2841                           
  2842 ;; *************** function i2_putch *****************
  2843 ;; Defined at:
  2844 ;;		line 26 in file "lcd.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  data            1    wreg     unsigned char 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;  data            1    2[COMRAM] unsigned char 
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1    wreg      void 
  2851 ;; Registers used:
  2852 ;;		wreg, status,2, status,0, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2859 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2861 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2862 ;;Total ram usage:        1 bytes
  2863 ;; Hardware stack levels used:    1
  2864 ;; Hardware stack levels required when called:    1
  2865 ;; This function calls:
  2866 ;;		i2_lcdNibble
  2867 ;; This function is called by:
  2868 ;;		i2_printf
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           	psect	text15
  2873  00069A                     __ptext15:
  2874                           	opt stack 0
  2875  00069A                     i2_putch:
  2876                           	opt stack 23
  2877                           
  2878                           ;incstack = 0
  2879                           ;i2putch@data stored from wreg
  2880  00069A  6E03               	movwf	i2putch@data,c
  2881                           
  2882                           ;lcd.c: 27: LATDbits.LATD2 = 1;
  2883  00069C  848C               	bsf	3980,2,c	;volatile
  2884                           
  2885                           ;lcd.c: 28: lcdNibble(data);
  2886  00069E  5003               	movf	i2putch@data,w,c
  2887  0006A0  ECEB  F001         	call	i2_lcdNibble
  2888  0006A4  0012               	return		;funcret
  2889  0006A6                     __end_ofi2_putch:
  2890                           	opt stack 0
  2891                           pclatu	equ	0xFFB
  2892                           pclath	equ	0xFFA
  2893                           tblptru	equ	0xFF8
  2894                           tblptrh	equ	0xFF7
  2895                           tblptrl	equ	0xFF6
  2896                           tablat	equ	0xFF5
  2897                           prodh	equ	0xFF4
  2898                           prodl	equ	0xFF3
  2899                           intcon	equ	0xFF2
  2900                           intcon3	equ	0xFF0
  2901                           postinc0	equ	0xFEE
  2902                           fsr0h	equ	0xFEA
  2903                           fsr0l	equ	0xFE9
  2904                           wreg	equ	0xFE8
  2905                           fsr1h	equ	0xFE2
  2906                           fsr1l	equ	0xFE1
  2907                           postinc2	equ	0xFDE
  2908                           postdec2	equ	0xFDD
  2909                           fsr2h	equ	0xFDA
  2910                           fsr2l	equ	0xFD9
  2911                           status	equ	0xFD8
  2912                           
  2913 ;; *************** function i2___lwmod *****************
  2914 ;; Defined at:
  2915 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;  dividend        2    7[COMRAM] unsigned int 
  2918 ;;  divisor         2    9[COMRAM] unsigned int 
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;  __lwmod         1   11[COMRAM] unsigned char 
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  2    7[COMRAM] unsigned int 
  2923 ;; Registers used:
  2924 ;;		wreg, status,2, status,0
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2930 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2931 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2933 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2934 ;;Total ram usage:        5 bytes
  2935 ;; Hardware stack levels used:    1
  2936 ;; This function calls:
  2937 ;;		Nothing
  2938 ;; This function is called by:
  2939 ;;		i2_printf
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           	psect	text16
  2944  000558                     __ptext16:
  2945                           	opt stack 0
  2946  000558                     i2___lwmod:
  2947                           	opt stack 24
  2948                           
  2949                           ;incstack = 0
  2950  000558  500A               	movf	i2___lwmod@divisor,w,c
  2951  00055A  100B               	iorwf	i2___lwmod@divisor+1,w,c
  2952  00055C  B4D8               	btfsc	status,2,c
  2953  00055E  D018               	goto	i2l755
  2954  000560  0E01               	movlw	1
  2955  000562  6E0C               	movwf	i2___lwmod@counter,c
  2956  000564  D004               	goto	i2l1738
  2957  000566                     i2l1736:
  2958  000566  90D8               	bcf	status,0,c
  2959  000568  360A               	rlcf	i2___lwmod@divisor,f,c
  2960  00056A  360B               	rlcf	i2___lwmod@divisor+1,f,c
  2961  00056C  2A0C               	incf	i2___lwmod@counter,f,c
  2962  00056E                     i2l1738:
  2963  00056E  AE0B               	btfss	i2___lwmod@divisor+1,7,c
  2964  000570  D7FA               	goto	i2l1736
  2965  000572                     i2l1740:
  2966  000572  500A               	movf	i2___lwmod@divisor,w,c
  2967  000574  5C08               	subwf	i2___lwmod@dividend,w,c
  2968  000576  500B               	movf	i2___lwmod@divisor+1,w,c
  2969  000578  5809               	subwfb	i2___lwmod@dividend+1,w,c
  2970  00057A  A0D8               	btfss	status,0,c
  2971  00057C  D004               	goto	i2l1744
  2972  00057E  500A               	movf	i2___lwmod@divisor,w,c
  2973  000580  5E08               	subwf	i2___lwmod@dividend,f,c
  2974  000582  500B               	movf	i2___lwmod@divisor+1,w,c
  2975  000584  5A09               	subwfb	i2___lwmod@dividend+1,f,c
  2976  000586                     i2l1744:
  2977  000586  90D8               	bcf	status,0,c
  2978  000588  320B               	rrcf	i2___lwmod@divisor+1,f,c
  2979  00058A  320A               	rrcf	i2___lwmod@divisor,f,c
  2980  00058C  2E0C               	decfsz	i2___lwmod@counter,f,c
  2981  00058E  D7F1               	goto	i2l1740
  2982  000590                     i2l755:
  2983  000590  C008  F008         	movff	i2___lwmod@dividend,?i2___lwmod
  2984  000594  C009  F009         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  2985  000598  0012               	return		;funcret
  2986  00059A                     __end_ofi2___lwmod:
  2987                           	opt stack 0
  2988                           pclatu	equ	0xFFB
  2989                           pclath	equ	0xFFA
  2990                           tblptru	equ	0xFF8
  2991                           tblptrh	equ	0xFF7
  2992                           tblptrl	equ	0xFF6
  2993                           tablat	equ	0xFF5
  2994                           prodh	equ	0xFF4
  2995                           prodl	equ	0xFF3
  2996                           intcon	equ	0xFF2
  2997                           intcon3	equ	0xFF0
  2998                           postinc0	equ	0xFEE
  2999                           fsr0h	equ	0xFEA
  3000                           fsr0l	equ	0xFE9
  3001                           wreg	equ	0xFE8
  3002                           fsr1h	equ	0xFE2
  3003                           fsr1l	equ	0xFE1
  3004                           postinc2	equ	0xFDE
  3005                           postdec2	equ	0xFDD
  3006                           fsr2h	equ	0xFDA
  3007                           fsr2l	equ	0xFD9
  3008                           status	equ	0xFD8
  3009                           
  3010 ;; *************** function i2___lwdiv *****************
  3011 ;; Defined at:
  3012 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;  dividend        2    0[COMRAM] unsigned int 
  3015 ;;  divisor         2    2[COMRAM] unsigned int 
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  3018 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  2    0[COMRAM] unsigned int 
  3021 ;; Registers used:
  3022 ;;		wreg, status,2, status,0
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3028 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3029 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3031 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3032 ;;Total ram usage:        7 bytes
  3033 ;; Hardware stack levels used:    1
  3034 ;; This function calls:
  3035 ;;		Nothing
  3036 ;; This function is called by:
  3037 ;;		i2_printf
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041                           	psect	text17
  3042  00047E                     __ptext17:
  3043                           	opt stack 0
  3044  00047E                     i2___lwdiv:
  3045                           	opt stack 24
  3046                           
  3047                           ;incstack = 0
  3048  00047E  0E00               	movlw	0
  3049  000480  6E06               	movwf	i2___lwdiv@quotient+1,c
  3050  000482  0E00               	movlw	0
  3051  000484  6E05               	movwf	i2___lwdiv@quotient,c
  3052  000486  5003               	movf	i2___lwdiv@divisor,w,c
  3053  000488  1004               	iorwf	i2___lwdiv@divisor+1,w,c
  3054  00048A  B4D8               	btfsc	status,2,c
  3055  00048C  D01C               	goto	i2l745
  3056  00048E  0E01               	movlw	1
  3057  000490  6E07               	movwf	i2___lwdiv@counter,c
  3058  000492  D004               	goto	i2l1718
  3059  000494                     i2l1716:
  3060  000494  90D8               	bcf	status,0,c
  3061  000496  3603               	rlcf	i2___lwdiv@divisor,f,c
  3062  000498  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  3063  00049A  2A07               	incf	i2___lwdiv@counter,f,c
  3064  00049C                     i2l1718:
  3065  00049C  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  3066  00049E  D7FA               	goto	i2l1716
  3067  0004A0                     i2l1720:
  3068  0004A0  90D8               	bcf	status,0,c
  3069  0004A2  3605               	rlcf	i2___lwdiv@quotient,f,c
  3070  0004A4  3606               	rlcf	i2___lwdiv@quotient+1,f,c
  3071  0004A6  5003               	movf	i2___lwdiv@divisor,w,c
  3072  0004A8  5C01               	subwf	i2___lwdiv@dividend,w,c
  3073  0004AA  5004               	movf	i2___lwdiv@divisor+1,w,c
  3074  0004AC  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  3075  0004AE  A0D8               	btfss	status,0,c
  3076  0004B0  D005               	goto	i2l1728
  3077  0004B2  5003               	movf	i2___lwdiv@divisor,w,c
  3078  0004B4  5E01               	subwf	i2___lwdiv@dividend,f,c
  3079  0004B6  5004               	movf	i2___lwdiv@divisor+1,w,c
  3080  0004B8  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  3081  0004BA  8005               	bsf	i2___lwdiv@quotient,0,c
  3082  0004BC                     i2l1728:
  3083  0004BC  90D8               	bcf	status,0,c
  3084  0004BE  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  3085  0004C0  3203               	rrcf	i2___lwdiv@divisor,f,c
  3086  0004C2  2E07               	decfsz	i2___lwdiv@counter,f,c
  3087  0004C4  D7ED               	goto	i2l1720
  3088  0004C6                     i2l745:
  3089  0004C6  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  3090  0004CA  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  3091  0004CE  0012               	return		;funcret
  3092  0004D0                     __end_ofi2___lwdiv:
  3093                           	opt stack 0
  3094                           pclatu	equ	0xFFB
  3095                           pclath	equ	0xFFA
  3096                           tblptru	equ	0xFF8
  3097                           tblptrh	equ	0xFF7
  3098                           tblptrl	equ	0xFF6
  3099                           tablat	equ	0xFF5
  3100                           prodh	equ	0xFF4
  3101                           prodl	equ	0xFF3
  3102                           intcon	equ	0xFF2
  3103                           intcon3	equ	0xFF0
  3104                           postinc0	equ	0xFEE
  3105                           fsr0h	equ	0xFEA
  3106                           fsr0l	equ	0xFE9
  3107                           wreg	equ	0xFE8
  3108                           fsr1h	equ	0xFE2
  3109                           fsr1l	equ	0xFE1
  3110                           postinc2	equ	0xFDE
  3111                           postdec2	equ	0xFDD
  3112                           fsr2h	equ	0xFDA
  3113                           fsr2l	equ	0xFD9
  3114                           status	equ	0xFD8
  3115                           
  3116 ;; *************** function i2_lcdInst *****************
  3117 ;; Defined at:
  3118 ;;		line 21 in file "lcd.c"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;  data            1    wreg     unsigned char 
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;  data            1    2[COMRAM] unsigned char 
  3123 ;; Return value:  Size  Location     Type
  3124 ;;                  1    wreg      void 
  3125 ;; Registers used:
  3126 ;;		wreg, status,2, status,0, cstack
  3127 ;; Tracked objects:
  3128 ;;		On entry : 0/0
  3129 ;;		On exit  : 0/0
  3130 ;;		Unchanged: 0/0
  3131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3133 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3135 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3136 ;;Total ram usage:        1 bytes
  3137 ;; Hardware stack levels used:    1
  3138 ;; Hardware stack levels required when called:    1
  3139 ;; This function calls:
  3140 ;;		i2_lcdNibble
  3141 ;; This function is called by:
  3142 ;;		_stopMoving
  3143 ;; This function uses a non-reentrant model
  3144 ;;
  3145                           
  3146                           	psect	text18
  3147  0006A6                     __ptext18:
  3148                           	opt stack 0
  3149  0006A6                     i2_lcdInst:
  3150                           	opt stack 23
  3151                           
  3152                           ;incstack = 0
  3153                           ;i2lcdInst@data stored from wreg
  3154  0006A6  6E03               	movwf	i2lcdInst@data,c
  3155                           
  3156                           ;lcd.c: 22: LATDbits.LATD2 = 0;
  3157  0006A8  948C               	bcf	3980,2,c	;volatile
  3158                           
  3159                           ;lcd.c: 23: lcdNibble(data);
  3160  0006AA  5003               	movf	i2lcdInst@data,w,c
  3161  0006AC  ECEB  F001         	call	i2_lcdNibble
  3162  0006B0  0012               	return		;funcret
  3163  0006B2                     __end_ofi2_lcdInst:
  3164                           	opt stack 0
  3165                           pclatu	equ	0xFFB
  3166                           pclath	equ	0xFFA
  3167                           tblptru	equ	0xFF8
  3168                           tblptrh	equ	0xFF7
  3169                           tblptrl	equ	0xFF6
  3170                           tablat	equ	0xFF5
  3171                           prodh	equ	0xFF4
  3172                           prodl	equ	0xFF3
  3173                           intcon	equ	0xFF2
  3174                           intcon3	equ	0xFF0
  3175                           postinc0	equ	0xFEE
  3176                           fsr0h	equ	0xFEA
  3177                           fsr0l	equ	0xFE9
  3178                           wreg	equ	0xFE8
  3179                           fsr1h	equ	0xFE2
  3180                           fsr1l	equ	0xFE1
  3181                           postinc2	equ	0xFDE
  3182                           postdec2	equ	0xFDD
  3183                           fsr2h	equ	0xFDA
  3184                           fsr2l	equ	0xFD9
  3185                           status	equ	0xFD8
  3186                           
  3187 ;; *************** function i2_lcdNibble *****************
  3188 ;; Defined at:
  3189 ;;		line 31 in file "lcd.c"
  3190 ;; Parameters:    Size  Location     Type
  3191 ;;  data            1    wreg     unsigned char 
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;  data            1    1[COMRAM] unsigned char 
  3194 ;;  lcdNibble       1    0[COMRAM] unsigned char 
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  1    wreg      void 
  3197 ;; Registers used:
  3198 ;;		wreg, status,2, status,0
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3205 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3207 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3208 ;;Total ram usage:        2 bytes
  3209 ;; Hardware stack levels used:    1
  3210 ;; This function calls:
  3211 ;;		Nothing
  3212 ;; This function is called by:
  3213 ;;		i2_lcdInst
  3214 ;;		i2_putch
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           	psect	text19
  3219  0003D6                     __ptext19:
  3220                           	opt stack 0
  3221  0003D6                     i2_lcdNibble:
  3222                           	opt stack 23
  3223                           
  3224                           ;incstack = 0
  3225                           ;i2lcdNibble@data stored from wreg
  3226  0003D6  6E02               	movwf	i2lcdNibble@data,c
  3227                           
  3228                           ;lcd.c: 33: char temp = data & 0xF0;
  3229  0003D8  5002               	movf	i2lcdNibble@data,w,c
  3230  0003DA  0BF0               	andlw	240
  3231  0003DC  6E01               	movwf	i2lcdNibble@temp,c
  3232                           
  3233                           ;lcd.c: 34: LATD = LATD & 0x0F;
  3234  0003DE  508C               	movf	3980,w,c	;volatile
  3235  0003E0  0B0F               	andlw	15
  3236  0003E2  6E8C               	movwf	3980,c	;volatile
  3237                           
  3238                           ;lcd.c: 35: LATD = temp | LATD;
  3239  0003E4  5001               	movf	i2lcdNibble@temp,w,c
  3240  0003E6  108C               	iorwf	3980,w,c	;volatile
  3241  0003E8  6E8C               	movwf	3980,c	;volatile
  3242                           
  3243                           ;lcd.c: 37: LATDbits.LATD3 = 0;
  3244  0003EA  968C               	bcf	3980,3,c	;volatile
  3245                           
  3246                           ;lcd.c: 38: _delay((unsigned long)((25)*(8000000/4000000.0)));
  3247  0003EC  0E10               	movlw	16
  3248  0003EE                     i2u128_47:
  3249  0003EE  2EE8               	decfsz	wreg,f,c
  3250  0003F0  D7FE               	bra	i2u128_47
  3251  0003F2  D000               	nop2	
  3252                           
  3253                           ;lcd.c: 39: LATDbits.LATD3 = 1;
  3254  0003F4  868C               	bsf	3980,3,c	;volatile
  3255                           
  3256                           ;lcd.c: 40: _delay((unsigned long)((25)*(8000000/4000000.0)));
  3257  0003F6  0E10               	movlw	16
  3258  0003F8                     i2u129_47:
  3259  0003F8  2EE8               	decfsz	wreg,f,c
  3260  0003FA  D7FE               	bra	i2u129_47
  3261  0003FC  D000               	nop2	
  3262                           
  3263                           ;lcd.c: 42: data = data << 4;
  3264  0003FE  3802               	swapf	i2lcdNibble@data,w,c
  3265  000400  0BF0               	andlw	240
  3266  000402  6E02               	movwf	i2lcdNibble@data,c
  3267                           
  3268                           ;lcd.c: 44: temp = data & 0xF0;
  3269  000404  5002               	movf	i2lcdNibble@data,w,c
  3270  000406  0BF0               	andlw	240
  3271  000408  6E01               	movwf	i2lcdNibble@temp,c
  3272                           
  3273                           ;lcd.c: 45: LATD = LATD & 0x0F;
  3274  00040A  508C               	movf	3980,w,c	;volatile
  3275  00040C  0B0F               	andlw	15
  3276  00040E  6E8C               	movwf	3980,c	;volatile
  3277                           
  3278                           ;lcd.c: 46: LATD = temp | LATD;
  3279  000410  5001               	movf	i2lcdNibble@temp,w,c
  3280  000412  108C               	iorwf	3980,w,c	;volatile
  3281  000414  6E8C               	movwf	3980,c	;volatile
  3282                           
  3283                           ;lcd.c: 48: LATDbits.LATD3 = 0;
  3284  000416  968C               	bcf	3980,3,c	;volatile
  3285                           
  3286                           ;lcd.c: 49: _delay((unsigned long)((25)*(8000000/4000000.0)));
  3287  000418  0E10               	movlw	16
  3288  00041A                     i2u130_47:
  3289  00041A  2EE8               	decfsz	wreg,f,c
  3290  00041C  D7FE               	bra	i2u130_47
  3291  00041E  D000               	nop2	
  3292                           
  3293                           ;lcd.c: 50: LATDbits.LATD3 = 1;
  3294  000420  868C               	bsf	3980,3,c	;volatile
  3295                           
  3296                           ;lcd.c: 51: _delay((unsigned long)((25)*(8000000/4000000.0)));
  3297  000422  0E10               	movlw	16
  3298  000424                     i2u131_47:
  3299  000424  2EE8               	decfsz	wreg,f,c
  3300  000426  D7FE               	bra	i2u131_47
  3301  000428  D000               	nop2	
  3302  00042A  0012               	return		;funcret
  3303  00042C                     __end_ofi2_lcdNibble:
  3304                           	opt stack 0
  3305                           pclatu	equ	0xFFB
  3306                           pclath	equ	0xFFA
  3307                           tblptru	equ	0xFF8
  3308                           tblptrh	equ	0xFF7
  3309                           tblptrl	equ	0xFF6
  3310                           tablat	equ	0xFF5
  3311                           prodh	equ	0xFF4
  3312                           prodl	equ	0xFF3
  3313                           intcon	equ	0xFF2
  3314                           intcon3	equ	0xFF0
  3315                           postinc0	equ	0xFEE
  3316                           fsr0h	equ	0xFEA
  3317                           fsr0l	equ	0xFE9
  3318                           wreg	equ	0xFE8
  3319                           fsr1h	equ	0xFE2
  3320                           fsr1l	equ	0xFE1
  3321                           postinc2	equ	0xFDE
  3322                           postdec2	equ	0xFDD
  3323                           fsr2h	equ	0xFDA
  3324                           fsr2l	equ	0xFD9
  3325                           status	equ	0xFD8
  3326                           pclatu	equ	0xFFB
  3327                           pclath	equ	0xFFA
  3328                           tblptru	equ	0xFF8
  3329                           tblptrh	equ	0xFF7
  3330                           tblptrl	equ	0xFF6
  3331                           tablat	equ	0xFF5
  3332                           prodh	equ	0xFF4
  3333                           prodl	equ	0xFF3
  3334                           intcon	equ	0xFF2
  3335                           intcon3	equ	0xFF0
  3336                           postinc0	equ	0xFEE
  3337                           fsr0h	equ	0xFEA
  3338                           fsr0l	equ	0xFE9
  3339                           wreg	equ	0xFE8
  3340                           fsr1h	equ	0xFE2
  3341                           fsr1l	equ	0xFE1
  3342                           postinc2	equ	0xFDE
  3343                           postdec2	equ	0xFDD
  3344                           fsr2h	equ	0xFDA
  3345                           fsr2l	equ	0xFD9
  3346                           status	equ	0xFD8
  3347                           
  3348                           	psect	rparam
  3349  0000                     pclatu	equ	0xFFB
  3350                           pclath	equ	0xFFA
  3351                           tblptru	equ	0xFF8
  3352                           tblptrh	equ	0xFF7
  3353                           tblptrl	equ	0xFF6
  3354                           tablat	equ	0xFF5
  3355                           prodh	equ	0xFF4
  3356                           prodl	equ	0xFF3
  3357                           intcon	equ	0xFF2
  3358                           intcon3	equ	0xFF0
  3359                           postinc0	equ	0xFEE
  3360                           fsr0h	equ	0xFEA
  3361                           fsr0l	equ	0xFE9
  3362                           wreg	equ	0xFE8
  3363                           fsr1h	equ	0xFE2
  3364                           fsr1l	equ	0xFE1
  3365                           postinc2	equ	0xFDE
  3366                           postdec2	equ	0xFDD
  3367                           fsr2h	equ	0xFDA
  3368                           fsr2l	equ	0xFD9
  3369                           status	equ	0xFD8
  3370                           
  3371                           	psect	temp
  3372  00004B                     btemp:
  3373                           	opt stack 0
  3374  00004B                     	ds	1
  3375  0000                     int$flags	set	btemp
  3376                           pclatu	equ	0xFFB
  3377                           pclath	equ	0xFFA
  3378                           tblptru	equ	0xFF8
  3379                           tblptrh	equ	0xFF7
  3380                           tblptrl	equ	0xFF6
  3381                           tablat	equ	0xFF5
  3382                           prodh	equ	0xFF4
  3383                           prodl	equ	0xFF3
  3384                           intcon	equ	0xFF2
  3385                           intcon3	equ	0xFF0
  3386                           postinc0	equ	0xFEE
  3387                           fsr0h	equ	0xFEA
  3388                           fsr0l	equ	0xFE9
  3389                           wreg	equ	0xFE8
  3390                           fsr1h	equ	0xFE2
  3391                           fsr1l	equ	0xFE1
  3392                           postinc2	equ	0xFDE
  3393                           postdec2	equ	0xFDD
  3394                           fsr2h	equ	0xFDA
  3395                           fsr2l	equ	0xFD9
  3396                           status	equ	0xFD8


Data Sizes:
    Strings     619
    Constant    10
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     66      74
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_42(CODE[22]), STR_41(CODE[20]), STR_40(CODE[15]), STR_39(CODE[23]), 
		 -> STR_38(CODE[21]), STR_37(CODE[14]), STR_36(CODE[13]), STR_35(CODE[13]), 
		 -> STR_34(CODE[16]), STR_33(CODE[23]), STR_32(CODE[21]), STR_31(CODE[14]), 
		 -> STR_30(CODE[16]), STR_29(CODE[18]), STR_28(CODE[20]), STR_27(CODE[13]), 
		 -> STR_26(CODE[23]), STR_25(CODE[20]), STR_24(CODE[13]), STR_23(CODE[12]), 
		 -> STR_22(CODE[20]), STR_21(CODE[21]), STR_20(CODE[22]), STR_19(CODE[13]), 
		 -> STR_18(CODE[21]), STR_17(CODE[13]), STR_16(CODE[21]), STR_15(CODE[13]), 
		 -> STR_14(CODE[20]), STR_13(CODE[13]), STR_12(CODE[21]), STR_11(CODE[23]), 
		 -> STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[24]), STR_7(CODE[24]), 
		 -> STR_6(CODE[25]), STR_5(CODE[27]), STR_4(CODE[20]), STR_3(CODE[22]), 
		 -> STR_2(CODE[19]), STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(COMRAM[2]), ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _simulate->_PWMC0
    _printf->___lwmod
    _putch->_lcdNibble
    ___lwmod->___lwdiv
    _initialize->_initLCD
    _initLCD->_lcdInst
    _lcdInst->_lcdNibble

Critical Paths under _keypressed in COMRAM

    _keypressed->i2_printf
    _stopMoving->i2_printf
    i2_printf->i2___lwmod
    i2_putch->i2_lcdNibble
    i2___lwmod->i2___lwdiv
    i2_lcdInst->i2_lcdNibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _keypressed in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _keypressed in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _keypressed in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _keypressed in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _keypressed in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _keypressed in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _keypressed in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _keypressed in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _keypressed in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _keypressed in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _keypressed in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _keypressed in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _keypressed in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _keypressed in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _keypressed in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _keypressed in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5    4317
                                             61 COMRAM     5     0      5
                         _initialize
                             _printf
                           _simulate
 ---------------------------------------------------------------------------------
 (1) _simulate                                             2     2      0     426
                                             46 COMRAM     2     2      0
                              _PWMC0
                      _captureKeypad
                            _lcdInst
 ---------------------------------------------------------------------------------
 (2) _captureKeypad                                        3     1      2      23
                                             37 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _PWMC0                                                9     5      4     245
                                             37 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (1) _printf                                              21    17      4    3711
                                             49 COMRAM    12     8      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      90
                                             39 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     287
                                             44 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                             37 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0     180
                            _initLCD
                            _lcdInst
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              1     1      0      90
                                             40 COMRAM     1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (2) _lcdInst                                              1     1      0      90
                                             39 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _lcdNibble                                            2     2      0      75
                                             37 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _keypressed                                          15    15      0    2176
                                             22 COMRAM    15    15      0
                         _stopMoving
                           i2_printf
 ---------------------------------------------------------------------------------
 (6) _stopMoving                                           0     0      0    1155
                          i2_lcdInst
                           i2_printf
 ---------------------------------------------------------------------------------
 (6) i2_printf                                            19    17      2    1020
                                             12 COMRAM    10     8      2
                          i2___lwdiv
                          i2___lwmod
                            i2_putch
 ---------------------------------------------------------------------------------
 (7) i2_putch                                              1     1      0     135
                                              2 COMRAM     1     1      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (7) i2___lwmod                                            5     1      4     211
                                              7 COMRAM     5     1      4
                          i2___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) i2___lwdiv                                            7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) i2_lcdInst                                            1     1      0     135
                                              2 COMRAM     1     1      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (8) i2_lcdNibble                                          2     2      0     113
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize
     _initLCD
       _lcdInst
         _lcdNibble
     _lcdInst
       _lcdNibble
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _lcdNibble
   _simulate
     _PWMC0
     _captureKeypad
     _lcdInst
       _lcdNibble

 _keypressed (ROOT)
   _stopMoving
     i2_lcdInst
       i2_lcdNibble
     i2_printf
       i2___lwdiv
       i2___lwmod
         i2___lwdiv (ARG)
       i2_putch
         i2_lcdNibble
   i2_printf
     i2___lwdiv
     i2___lwmod
       i2___lwdiv (ARG)
     i2_putch
       i2_lcdNibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     42      4A       1       58.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4A      34        0.0%
DATA                 0      0      4A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Feb 23 23:51:31 2017

     i2___lwdiv@dividend 0001              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_OSC$HS 000000                      l136 0652                      l139 065E  
                    l745 0474                      l755 054E             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000                      u710 030E                      u740 0342  
                    wreg 000FE8             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   l1800 0524                     l1802 052C                     l1804 0530  
                   l1910 00CA                     l1808 0544                     l1912 00D0  
                   l1760 031A                     l1906 00B8                     l1770 034E  
                   l1762 031E                     l1930 05EA                     l1780 0442  
                   l1916 0118                     l1772 0352                     l1782 044A  
                   l1870 001C                     l1918 0120                     l1758 0310  
                   l1934 05F6                     l1926 05D8                     l1792 046A  
                   l1784 044E                     l1880 003A                     l1768 0344  
                   l1882 0060                     l1874 002C                     l1892 0088  
                   l1876 0032                     l1894 008C                     _ADFM 007E07  
                   _ADON 007E10                     STR_1 FF16                     STR_2 FF67  
                   STR_3 FE97                     STR_4 FF53                     STR_5 FD93  
                   STR_6 FDAE                     STR_7 FDF7                     STR_8 FDC7  
                   STR_9 FF01                     u1227 04D6                     u1237 050A  
                   _LATA 000F89                     _LATB 000F8A                     u1247 0398  
                   _LATC 000F8B                     _LATD 000F8C                     u1257 03A2  
                   _LATE 000F8D                     u1267 03C4                     u1277 03CE  
                   _main 0612                     fsr0h 000FEA                     fsr1h 000FE2  
     i2___lwdiv@quotient 0005                     fsr2h 000FDA                     fsr0l 000FE9  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 004B  
                   prodh 000FF4                     prodl 000FF3                     start 000E  
          __CFG_IESO$OFF 000000          __end_ofi2_putch 06A6            __CFG_MCLRE$ON 000000  
           ___param_bank 000000              i2_lcdNibble 03D6                    ?_main 003E  
                  STR_10 FDDF                    STR_11 FE54                    STR_12 FED7  
                  STR_20 FE81                    STR_13 FFF1                    STR_21 FEAD  
                  STR_30 FF9C                    STR_14 FF3F                    STR_22 FF2B  
                  STR_31 FFBB                    STR_40 FFAC                    STR_16 FEEC  
                  STR_33 FE0F                    STR_34 FF8C                    STR_18 FEC2  
                  STR_42 FE6B                    STR_26 FE3D                    STR_35 FFD7  
                  STR_36 FFE4                    STR_37 FFC9                    STR_29 FF7A  
                  STR_39 FE26                    _LATC0 007C58                    _LATC1 007C59  
                  _LATC2 007C5A                    _LATC3 007C5B          __end_of___lwdiv 047E  
        __end_of___lwmod 0558                    i2l146 02BA                    i2l244 0680  
                  i2l745 04C6                    i2l755 0590                    _PWMC0 02F6  
                  _PORTB 000F81                    _PORTC 000F82                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
        __end_of_lcdInst 069A           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
        __end_of_initLCD 0516           __CFG_EBTRB$OFF 000000          __end_of_dpowers FD93  
                  _putch 0682                    pclath 000FFA                    tablat 000FF5  
                  status 000FD8           __CFG_PBADEN$ON 000000         __end_ofi2_printf 0262  
     __size_ofi2___lwdiv 0052       __size_ofi2___lwmod 0042          __initialization 0638  
     __size_ofi2_lcdInst 000C             __end_of_main 0638               i2printf@ap 0010  
                 ??_main 0043            __activetblptr 000002                   ?_PWMC0 0026  
                 PWMC0@i 002D                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADRESH 000FC4                   _ADRESL 000FC3          i2lcdNibble@data 0002  
                 ?_putch 0001          i2lcdNibble@temp 0001                   _INT1IE 007F83  
                 _INT1IF 007F80                   _CVRCON 000FB5                   i2l1720 04A0  
                 i2l1716 0494                   i2l1740 0572                   i2l1718 049C  
                 i2l1830 0188                   i2l1822 0154                   i2l1728 04BC  
                 i2l1744 0586                   i2l1736 0566                   i2l1840 01B0  
                 i2l1824 015A                   i2l1738 056E                   i2l1842 01B4  
                 i2l1818 0144                   i2l1860 01F8                   i2l1828 0162  
                 i2l1854 01E0                   i2l1864 0240                   i2l1858 01F2  
                 i2l1866 0248                ??i2_putch 0003           __CFG_XINST$OFF 000000  
  __end_of_captureKeypad 066C           __CFG_STVREN$ON 000000                ??___lwdiv 002A  
              ??___lwmod 0031                   clear_0 063E                ??_lcdInst 0028  
                 _printf 0012                ??_initLCD 0029        __end_ofi2___lwdiv 04D0  
           __mediumconst FD88        __end_ofi2___lwmod 059A                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8         __end_of_simulate 0612  
      __end_ofi2_lcdInst 06B2               __accesstop 0080  __end_of__initialization 0644  
          ___rparam_used 000001            __end_of_PWMC0 0380       i2___lwmod@dividend 0008  
         __pcstackCOMRAM 0001            __end_of_putch 068E              i2printf@val 0014  
     __size_of_lcdNibble 0056                  ??_PWMC0 002A              i2putch@data 0003  
              ?i2_printf 000D                  ??_putch 0028                  PWMC0@us 0026  
           ?i2_lcdNibble 0001                  ?_printf 0032               ??i2_printf 000F  
                i2_putch 069A        __end_of_lcdNibble 03D6                  __Hparam 0000  
                __Lparam 0000                ?_simulate 0001                  ___lwdiv 042C  
                ___lwmod 0516                  __pcinit 0638                  __ramtop 1000  
             _initialize 059A                  _lcdInst 068E                  __ptext0 0612  
                __ptext1 05D8                  __ptext2 0652                  __ptext3 02F6  
                __ptext4 0012                  __ptext5 0682                  __ptext6 0516  
                __ptext7 042C                  __ptext8 059A                  __ptext9 04D0  
        __size_of_printf 0128                  _initLCD 04D0                  _dpowers FD89  
             _keypressed 0008           __pintcode_body 0262     end_of_initialization 0644  
          __Lmediumconst FD88                  int_func 0262                  printf@c 003D  
                printf@f 0032                  postdec2 000FDD               ??_simulate 002F  
                postinc0 000FEE                  postinc2 000FDE                _PORTBbits 000F81  
      i2___lwdiv@divisor 0003                i2___lwdiv 047E                i2___lwmod 0558  
      i2___lwdiv@counter 0007                i2_lcdInst 06A6               _stopMoving 066C  
   __size_ofi2_lcdNibble 0056            mainloop@F3211 0043              ?_initialize 0001  
          i2lcdInst@data 0003           __end_of_printf 013A             i2printf@flag 0012  
           i2printf@prec 0013      start_initialization 0638              ?_keypressed 0001  
              i2printf@c 0016                i2printf@f 000D   __size_of_captureKeypad 001A  
             ?i2___lwdiv 0001               ?i2___lwmod 0008        __size_ofi2_printf 0128  
             ?i2_lcdInst 0001         __CFG_LPT1OSC$OFF 000000                 ??_printf 0036  
            __pbssCOMRAM 0043        i2___lwmod@divisor 000A        i2___lwmod@counter 000C  
               ?i2_putch 0001      __size_of_initialize 003E              ?_stopMoving 0001  
       ___lwdiv@dividend 0026        __CFG_CCP2MX$PORTC 000000            _captureKeypad 0652  
    __size_of_keypressed 02EE                __pintcode 0008            __pmediumconst FD88  
              _lcdNibble 0380                 ?___lwdiv 0026                 ?___lwmod 002D  
      __size_of_simulate 003A                 ?_lcdInst 0001                 ?_initLCD 0001  
         __size_of_PWMC0 008A               PWMC0@cycle 0028         ___lwdiv@quotient 002A  
            ??i2___lwdiv 0005              ??i2___lwmod 000C           __size_of_putch 000C  
            ??i2_lcdInst 0003                 _LATDbits 000F8C                 i2u130_47 041A  
               i2u131_47 0424                 i2u128_47 03EE                 i2u129_47 03F8  
         ?_captureKeypad 0026         __CFG_WDTPS$32768 000000               ?_lcdNibble 0001  
             _ADCON0bits 000FC2            lcdNibble@data 0027               printf@flag 0039  
          lcdNibble@temp 0026               printf@prec 003A      __size_of_stopMoving 0016  
               i2_printf 013A    captureKeypad@keypress 0028         __size_ofi2_putch 000C  
     keypressed@keypress 0025                 __Hrparam 0000                 __Lrparam 0000  
     __CFG_BOREN$SBORDIS 000000         __size_of___lwdiv 0052         __size_of___lwmod 0042  
           ??_initialize 002A         __size_of_lcdInst 000C         __size_of_initLCD 0046  
           ??_keypressed 0017          ___lwdiv@divisor 0028          ___lwdiv@counter 002C  
               __ptext10 068E                 __ptext11 0380                 __ptext13 066C  
               __ptext14 013A                 __ptext15 069A                 __ptext16 0558  
               __ptext17 047E                 __ptext18 06A6                 __ptext19 03D6  
          __size_of_main 0026       __end_of_initialize 05D8          ??_captureKeypad 0028  
          ??i2_lcdNibble 0001              ??_lcdNibble 0026                 _simulate 05D8  
     __end_of_keypressed 02F6                 int$flags 004B                 main@argc 003E  
               main@argv 0040                printf@val 003B                simulate@i 002F  
              putch@data 0028               _INTCONbits 000FF2                 intlevel2 0000  
       ___lwmod@dividend 002D             ??_stopMoving 0017                 printf@ap 0037  
            lcdInst@data 0028      __end_ofi2_lcdNibble 042C          ___lwmod@divisor 002F  
        ___lwmod@counter 0031       __end_of_stopMoving 0682  
